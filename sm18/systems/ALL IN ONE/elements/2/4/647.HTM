<h1 id="nav_point_172">&#31532; 11 &#31456;&#12288;Web &#24320;&#21457;&#36827;&#38454;</h1><blockquote>
<p><strong>&#26412;&#31456;&#20869;&#23481;</strong></p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring MVC &#20013;&#23454;&#29616; AOP &#19982;&#24322;&#24120;&#22788;&#29702;&#30340;&#26041;&#24335;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring Boot &#20869;&#23884; Web &#23481;&#22120;&#30340;&#37197;&#32622;&#26041;&#27861;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20998;&#24067;&#24335; Session &#30340;&#23454;&#29616;&#26041;&#26696;&#19982; Spring Session &#30340;&#22522;&#26412;&#29992;&#27861;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">WebFlux &#21450; WebClient &#30340;&#22522;&#26412;&#29992;&#27861;</li>
</ul>
</blockquote><p>&#24320;&#21457; Web &#39033;&#30446;&#36807;&#31243;&#20013;&#38500;&#20102;&#23436;&#25104;&#22522;&#26412;&#30340;&#38656;&#27714;&#65292;&#24635;&#20250;&#26377;&#20123;&#38750;&#21151;&#33021;&#24615;&#30340;&#38656;&#27714;&#65292;&#20363;&#22914;&#65306;&#32479;&#19968;&#29992;&#26085;&#24535;&#35760;&#24405;&#25152;&#26377;&#30340;&#35831;&#27714;&#65307;&#20351;&#29992;&#19968;&#20010;&#38598;&#32676;&#23545;&#22806;&#25552;&#20379;&#26381;&#21153;&#26102;&#65292;&#35201;&#22312;&#38598;&#32676;&#20013;&#20445;&#25345;&#20250;&#35805;&#29366;&#24577;&#65307;&#20351;&#29992; HTTP/2 &#25552;&#20379;&#26356;&#23433;&#20840;&#39640;&#25928;&#30340;&#26381;&#21153;&#65292;&#31561;&#31561;&#12290;&#22522;&#20110; Spring &#25552;&#20379;&#30340;&#19968;&#31995;&#21015;&#26694;&#26550;&#33021;&#22815;&#28385;&#36275;&#25105;&#20204;&#39033;&#30446;&#20013;&#30340;&#21508;&#31181;&#38656;&#27714;&#21527;&#65311;&#22312;&#36825;&#19968;&#31456;&#37324;&#23601;&#35753;&#25105;&#20204;&#19968;&#36215;&#26469;&#20102;&#35299;&#19968;&#19979;&#12290;</p><h2 id="nav_point_173">11.1&#12288;&#22312; Spring MVC &#20013;&#23454;&#29616; AOP</h2><p>&#22312;&#31532; 3 &#31456;&#20013;&#65292;&#25105;&#20204;&#22823;&#33268;&#20102;&#35299;&#20102; AOP &#30456;&#20851;&#30340;&#30693;&#35782;&#65292;&#20197;&#21450;&#22914;&#20309;&#22312;&#22522;&#20110; Spring Framework &#30340;&#39033;&#30446;&#20013;&#24320;&#21457;&#33258;&#24049;&#30340; AOP &#20195;&#30721;&#65292;&#37027;&#20040;&#22312;&#19968;&#20010; Web &#39033;&#30446;&#37324;&#65292;&#21448;&#35813;&#24590;&#20040;&#36890;&#36807; AOP &#23454;&#29616;&#19968;&#20123;&#36890;&#29992;&#30340;&#21151;&#33021;&#21602;&#65311;&#26368;&#30452;&#35266;&#30340;&#20570;&#27861;&#26159;&#21442;&#32771;&#31532; 3 &#31456;&#20171;&#32461;&#30340;&#20869;&#23481;&#65292;&#30452;&#25509;&#25318;&#25130; <code>@Controller</code> &#31867;&#37324;&#30340;&#26041;&#27861;&#65292;&#20294;&#36825;&#26679;&#20570;&#21487;&#33021;&#20250;&#20002;&#22833; HTTP &#35831;&#27714;&#20013;&#30340;&#37096;&#20998;&#32454;&#33410;&#65288;&#27604;&#22914;&#65292;&#20551;&#35774;&#26041;&#27861;&#30340;&#21442;&#25968;&#37324;&#27809;&#26377; <code>HttpServletRequest</code>&#65292;&#23601;&#26080;&#27861;&#22312; AOP &#37324;&#25343;&#21040;&#35831;&#27714;&#65289;&#12290;Spring MVC &#33258;&#28982;&#20063;&#32771;&#34385;&#21040;&#20102; Web &#39033;&#30446;&#20013;&#23384;&#22312;&#31867;&#20284;&#30340;&#38656;&#27714;&#65292;&#25552;&#20379;&#20102;&#35299;&#20915;&#26041;&#26696;&#12290;</p><h3 id="nav_point_174">11.1.1&#12288;&#20351;&#29992; <code>HandlerInterceptor</code> &#23454;&#29616; AOP</h3><p>Spring MVC &#30340; <code>HandlerInterceptor</code> &#25509;&#21475;&#20026;&#25105;&#20204;&#23450;&#20041;&#20102;&#20960;&#20010;&#25318;&#25130;&#30340;&#20999;&#20837;&#28857;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>preHandle()</code>&#65292;&#22312;&#22788;&#29702;&#22120;&#24320;&#22987;&#22788;&#29702;&#21069;&#20171;&#20837;&#65292;&#31867;&#20284;&#20110;&#24102;&#26377; <code>@Before</code> &#27880;&#35299;&#30340;&#21069;&#32622;&#36890;&#30693;&#12290;&#36820;&#22238; <code>true</code> &#34920;&#31034;&#21487;&#20197;&#32487;&#32493;&#22788;&#29702;&#65292;&#36820;&#22238; <code>false</code> &#21017;&#20250;&#20013;&#26029;&#21518;&#32493;&#30340;&#22788;&#29702;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>postHandle()</code>&#65292;&#22312;&#22788;&#29702;&#22120;&#22788;&#29702;&#32467;&#26463;&#20294;&#23578;&#26410;&#36827;&#34892;&#35270;&#22270;&#21576;&#29616;&#26102;&#20171;&#20837;&#65292;&#21487;&#20197;&#20462;&#25913; <code>ModelMap</code> &#25110;&#32773; <code>ModelAndView</code> &#37324;&#30340;&#20869;&#23481;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>afterCompletion()</code>&#65292;&#22312;&#23436;&#25104;&#35270;&#22270;&#21576;&#29616;&#21518;&#20171;&#20837;&#65292;&#21487;&#20197;&#29992;&#26469;&#20570;&#20123;&#36164;&#28304;&#28165;&#29702;&#30340;&#24037;&#20316;&#12290;</li>
</ul><p>&#36825;&#20010;&#25509;&#21475;&#20174; 2003 &#24180;&#23601;&#20986;&#29616;&#22312; Spring MVC &#37324;&#20102;&#65292;&#19981;&#36807;&#38543;&#30528; Java &#29256;&#26412;&#30340;&#21457;&#23637;&#65292;&#25509;&#21475;&#30340;&#23450;&#20041;&#34429;&#28982;&#27809;&#26377;&#21464;&#21270;&#65292;&#20294;&#22686;&#21152;&#20102;&#40664;&#35748;&#23454;&#29616;&#65292;&#30465;&#21435;&#20102;&#23454;&#29616;&#31867;&#32487;&#25215; <code>HandlerInterceptorAdapter</code> &#30340;&#40635;&#28902;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface HandlerInterceptor {
    default boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
            throws Exception {
        return true;
    }

    default void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
        @Nullable ModelAndView modelAndView)throws Exception {
    }

    default void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,
        @Nullable Exception ex) throws Exception {
    }
}</code></pre><p>&#23545;&#20110; Servlet 3.0 &#21518;&#22686;&#21152;&#30340;&#24322;&#27493;&#35831;&#27714;&#65292;&#35831;&#27714;&#24320;&#22987;&#22788;&#29702;&#21518;&#23601;&#36820;&#22238;&#20102;&#65292;&#30495;&#27491;&#30340;&#22788;&#29702;&#36923;&#36753;&#22312;&#21478;&#19968;&#20010;&#32447;&#31243;&#37324;&#32487;&#32493;&#65292;&#25105;&#20204;&#36824;&#25343;&#19981;&#21040;&#32467;&#26524;&#65292;&#27491;&#22240;&#22914;&#27492;&#65292;<code>DispatcherServlet</code> &#24182;&#19981;&#20250;&#35843;&#29992; <code>postHandler()</code> &#21644; <code>afterCompletion()</code>&#12290;&#36825;&#26102;&#21487;&#20197;&#29992; <code>AsyncHandlerInterceptor</code>&#65292;&#21551;&#21160;&#22788;&#29702;&#21518;&#20250;&#35843;&#29992; <code>afterConcurrentHandlingStarted()</code>&#65292;&#24453;&#22788;&#29702;&#32467;&#26463;&#21448;&#20250;&#20998;&#21457;&#22238; Servlet &#23481;&#22120;&#37324;&#65292;&#35843;&#29992; <code>preHandle()</code>&#12289;<code>postHandle()</code> &#21644; <code>afterCompletion()</code>&#12290;&#22312;&#36825;&#20960;&#20010;&#26041;&#27861;&#37324;&#65292;&#25105;&#20204;&#35813;&#24590;&#20040;&#21306;&#20998;&#35831;&#27714;&#21040;&#24213;&#26159;&#21516;&#27493;&#30340;&#36824;&#26159;&#24322;&#27493;&#30340;&#21602;&#65311;Servlet 3.0 &#33258;&#28982;&#20063;&#25552;&#20379;&#20102;&#21028;&#26029;&#26041;&#27861;&#65306;&#35843;&#29992; <code>ServletRequest.getDispatcherType()</code>&#65292;&#26681;&#25454;&#36820;&#22238;&#30340;&#26522;&#20030;&#20540;&#21028;&#26029;&#12290;</p><p>&#26085;&#24535;&#25171;&#21360;&#12289;&#35748;&#35777;&#37492;&#26435;&#31561;&#21151;&#33021;&#26159; AOP &#30340;&#24120;&#35265;&#24212;&#29992;&#22330;&#26223;&#65292;&#36890;&#36807;&#36890;&#29992;&#30340;&#20999;&#38754;&#20026;&#20195;&#30721;&#22686;&#21152;&#29305;&#23450;&#33021;&#21147;&#65292;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#31995;&#32479;&#33258;&#28982;&#20063;&#26377;&#36825;&#26679;&#30340;&#38656;&#27714;&#65292;&#35753;&#25105;&#20204;&#26469;&#30475;&#30475;&#35813;&#22914;&#20309;&#23454;&#29616;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#27599;&#20010;&#39038;&#23458;&#22312;&#24215;&#37324;&#30475;&#20102;&#20160;&#20040;&#65292;&#20570;&#20102;&#20160;&#20040;&#65307;&#24215;&#21592;&#21448;&#30456;&#24212;&#22320;&#25191;&#34892;&#20102;&#21738;&#20123;&#25805;&#20316;&#8230;&#8230;&#32463;&#33829;&#38656;&#35201;&#20998;&#26512;&#24456;&#22810;&#23450;&#37327;&#20449;&#24687;&#26469;&#25913;&#36827;&#24215;&#38138;&#30340;&#36816;&#33829;&#24773;&#20917;&#12290;&#20439;&#35805;&#35828;&#65292;&#24039;&#22919;&#38590;&#20026;&#26080;&#31859;&#20043;&#28810;&#65292;&#27809;&#26377;&#25968;&#25454;&#22914;&#20309;&#25903;&#25745;&#21518;&#38754;&#30340;&#20998;&#26512;&#65311;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#31243;&#24207;&#33258;&#28982;&#20063;&#38656;&#35201;&#20855;&#22791;&#36825;&#20010;&#21151;&#33021;&#12290;&#21478;&#22806;&#65292;&#22914;&#26524;&#20197;&#21518;&#35201;&#19978;&#24066;&#65292;&#38500;&#20102;&#36130;&#21153;&#25253;&#34920;&#65292;&#24635;&#35201;&#26377;&#20123;&#33021;&#32473;&#22235;&#22823;&#20250;&#35745;&#20107;&#21153;&#25152;&#20570;&#23457;&#35745;&#30340;&#19996;&#35199;&#12290;</p>
</blockquote><p>&#26085;&#24535;&#26159;&#31243;&#24207;&#30340;&#37325;&#35201;&#32452;&#25104;&#37096;&#20998;&#65292;&#38500;&#20102;&#33021;&#24110;&#25105;&#20204;&#20102;&#35299;&#31243;&#24207;&#22312;&#20570;&#20160;&#20040;&#65292;&#26356;&#37325;&#35201;&#30340;&#26159;&#22312;&#29983;&#20135;&#31995;&#32479;&#20986;&#38382;&#39064;&#26102;&#33021;&#22815;&#36741;&#21161;&#25105;&#20204;&#23450;&#20301;&#21407;&#22240;&#65292;&#27605;&#31455;&#25105;&#20204;&#27809;&#26377;&#21150;&#27861;&#22312;&#32447;&#19978;&#36731;&#26494;&#22320;&#35843;&#35797;&#65292;&#25152;&#20197;&#26377;&#28165;&#26224;&#30340;&#26085;&#24535;&#26159;&#24456;&#26377;&#24517;&#35201;&#30340;&#12290;&#35201;&#23454;&#29616;&#19978;&#38754;&#25552;&#21040;&#30340;&#23457;&#35745;&#65292;&#21487;&#20197;&#22312;&#27599;&#20010;&#35831;&#27714;&#30340;&#22788;&#29702;&#36923;&#36753;&#37324;&#21152;&#19978;&#19968;&#27573;&#26085;&#24535;&#65292;&#20294;&#36825;&#26679;&#20570;&#26174;&#28982;&#36153;&#26102;&#36153;&#21147;&#65292;&#36824;&#23481;&#26131;&#36951;&#28431;&#20449;&#24687;&#65292;&#29992; AOP &#26469;&#20570;&#20877;&#21512;&#36866;&#19981;&#36807;&#20102;&#12290;</p><p>&#29992;&#26469;&#20570;&#23457;&#35745;&#30340;&#25688;&#35201;&#26085;&#24535;&#19968;&#33324;&#26368;&#22909;&#26159;&#32467;&#26500;&#21270;&#30340;&#65292;&#26041;&#20415;&#21518;&#32493;&#31243;&#24207;&#20570;&#22788;&#29702;&#12290;&#25105;&#20204;&#35201;&#35760;&#24405;&#19981;&#23569;&#20449;&#24687;&#65292;&#25152;&#20197;&#20889;&#19968;&#20010; <code>LogDetails</code> &#31867;&#26469;&#20445;&#23384;&#20855;&#20307;&#30340;&#20869;&#23481;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-1 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">1</span></p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">1</span>&#36825;&#20010;&#20363;&#23376;&#20301;&#20110; ch11/binarytea-interceptor &#39033;&#30446;&#20013;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-1</strong>&#12288;&#23384;&#20648;&#25688;&#35201;&#26085;&#24535;&#20855;&#20307;&#20449;&#24687;&#30340; <code>LogDetails</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
public class LogDetails {
    private long startTime; // &#24320;&#22987;&#22788;&#29702;&#30340;&#26102;&#38388;
    private long processTime; // &#32467;&#26463;&#22788;&#29702;&#30340;&#26102;&#38388;
    private long endTime; // &#23436;&#25104;&#35270;&#22270;&#21576;&#29616;&#30340;&#26102;&#38388;
    private int code; // &#36820;&#22238;&#30340;HTTP&#21709;&#24212;&#30721;
    private String handler; // &#20855;&#20307;&#30340;&#22788;&#29702;&#22120;
    private String method; // &#35831;&#27714;&#30340;HTTP&#26041;&#27861;
    private String uri; // &#35831;&#27714;&#30340;URI
    private String remoteAddr; // &#21457;&#36215;&#35831;&#27714;&#30340;&#23545;&#31471;&#22320;&#22336;
    private String exception; // &#21457;&#29983;&#30340;&#24322;&#24120;&#31867;
    private String user; // &#30331;&#24405;&#30340;&#29992;&#25143;&#20449;&#24687;
}</code></pre><p>&#36825;&#37324;&#26242;&#26102;&#21482;&#32771;&#34385;&#21516;&#27493;&#35831;&#27714;&#65292;&#25152;&#20197;&#25972;&#20010;&#35831;&#27714;&#30340;&#22788;&#29702;&#26159;&#22312;&#19968;&#20010;&#32447;&#31243;&#37324;&#23436;&#25104;&#30340;&#65292;&#21487;&#20197;&#36890;&#36807; <code>ThreadLocal</code> &#22312;&#26041;&#27861;&#38388;&#20256;&#36882; <code>LogDetails</code>&#12290;&#22312; <code>preHandle()</code> &#20013;&#23545; <code>ThreadLocal</code> &#30340;&#20869;&#23481;&#20570;&#20102;&#21021;&#22987;&#21270;&#65292;&#35760;&#24405;&#20102;&#24320;&#22987;&#26102;&#38388;&#12289;&#35831;&#27714;&#26469;&#28304;&#12289;&#35775;&#38382;&#30340; URI &#21644;&#26041;&#27861;&#65292;&#36824;&#26377;&#20855;&#20307;&#30340;&#22788;&#29702;&#22120;&#65292;&#22914;&#26524;&#26159; <code>HandlerMethod</code>&#65292;&#20877;&#25214;&#20986;&#35814;&#32454;&#30340;&#31867;&#21644;&#26041;&#27861;&#21517;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-2 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-2</strong>&#12288;&#26085;&#24535;&#25318;&#25130;&#22120;&#30340;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class LogHandlerInterceptor implements HandlerInterceptor {
    private ThreadLocal&lt;LogDetails&gt; logDetails = new ThreadLocal&lt;&gt;();

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response,
                             Object handler) throws Exception {
        LogDetails details = new LogDetails();
        logDetails.set(details);
        details.setStartTime(System.currentTimeMillis());
        details.setRemoteAddr(StringUtils.defaultIfBlank(request.getRemoteAddr(), "-"));
        details.setUri(StringUtils.defaultIfBlank(request.getRequestURI(), "-"));
        if (handler instanceof HandlerMethod) {
            HandlerMethod hm = (HandlerMethod) handler;
            details.setHandler(hm.getBeanType().getSimpleName() + "." + hm.getMethod().getName() + "()");
        } else {
            details.setHandler(handler.getClass().getSimpleName());
        }
        details.setMethod(request.getMethod());
        return true;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p><code>postHandle()</code> &#35760;&#24405;&#20102;&#26041;&#27861;&#22788;&#29702;&#23436;&#25104;&#30340;&#26102;&#38388;&#12290;<code>afterCompletion()</code> &#20013;&#35760;&#24405;&#35270;&#22270;&#21576;&#29616;&#23436;&#25104;&#30340;&#26102;&#38388;&#65292;&#22914;&#26524;&#22788;&#29702;&#36807;&#31243;&#20013;&#25243;&#20986;&#20102;&#24322;&#24120;&#65292;&#35760;&#24405;&#24322;&#24120;&#21517;&#65292;&#27492;&#22806;&#36824;&#26377;&#36820;&#22238;&#30340; HTTP &#21709;&#24212;&#30721;&#21644;&#24403;&#21069;&#30331;&#24405;&#30340;&#29992;&#25143;&#20449;&#24687;&#12290;&#26368;&#21518;&#65292;&#25171;&#21360;&#26085;&#24535;&#65292;&#36890;&#24120;&#25105;&#20204;&#37117;&#20250;&#36873;&#25321;&#23558;&#25688;&#35201;&#26085;&#24535;&#36755;&#20986;&#21040;&#21333;&#29420;&#30340;&#26085;&#24535;&#25991;&#20214;&#37324;&#65292;&#20855;&#20307;&#30340;&#37197;&#32622;&#26041;&#27861;&#21487;&#20197;&#21442;&#32771;&#23545;&#24212;&#26085;&#24535;&#26694;&#26550;&#30340;&#25991;&#26723;&#12290;&#36825;&#20004;&#20010;&#26041;&#27861;&#30340;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 11-3 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-3</strong>&#12288;<code>LogHandlerInterceptor</code> &#20013;&#30340; <code>postHandle()</code> &#21644; <code>afterCompletion()</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class LogHandlerInterceptor implements HandlerInterceptor {
    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response,
                           Object handler, ModelAndView modelAndView) throws Exception {
        LogDetails details = logDetails.get();
        if (details != null) {
            details.setProcessTime(System.currentTimeMillis());
        }
    }

    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response,
                                Object handler, Exception ex) throws Exception {
        LogDetails details = logDetails.get();
        if (details != null) {
            details.setEndTime(System.currentTimeMillis());
            details.setException(ex == null ? "-" : ex.getClass().getSimpleName());
            details.setCode(response.getStatus());
            details.setUser("-");
            if (isAuthenticated() &amp;&amp; isUser()) {
                Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
                User user = (User) authentication.getPrincipal();
                details.setUser(StringUtils.defaultIfBlank(user.getUsername(), "-"));
            }
            printLog(details);
        }
        logDetails.remove();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p>&#20195;&#30721;&#31034;&#20363; 11-3 &#21482;&#26159;&#25171;&#21360;&#26085;&#24535;&#30340;&#20027;&#36923;&#36753;&#65292;&#20854;&#20013;&#29992;&#21040;&#20102;&#22909;&#20960;&#20010;&#36741;&#21161;&#26041;&#27861;&#8212;&#8212;&#21028;&#26029;&#29992;&#25143;&#26159;&#21542;&#32463;&#36807;&#35748;&#35777;&#30340; <code>isAuthenticated()</code>&#65292;&#21028;&#26029;&#29992;&#25143;&#35748;&#35777;&#20449;&#24687;&#26159;&#21542;&#26159; <code>User</code> &#31867;&#22411;&#30340; <code>isUser()</code>&#65292;&#21482;&#26377; <code>User</code> &#31867;&#22411;&#30340;&#25165;&#21487;&#20197;&#25552;&#21462;&#20449;&#24687;&#65292;&#36824;&#26377;&#36890;&#36807; SLF4J &#30340; <code>Logger</code> &#25171;&#21360;&#26085;&#24535;&#30340; <code>printLog()</code>&#12290;&#36825;&#20960;&#20010;&#26041;&#27861;&#30340;&#23454;&#29616;&#22914;&#20195;&#30721;&#31034;&#20363; 11-4 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-4</strong>&#12288;<code>afterCompletion()</code> &#20013;&#29992;&#21040;&#30340;&#36741;&#21161;&#26041;&#27861;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class LogHandlerInterceptor implements HandlerInterceptor {
    private boolean isAuthenticated() {
        return SecurityContextHolder.getContext() != null &amp;&amp;
                SecurityContextHolder.getContext().getAuthentication() != null &amp;&amp;
                SecurityContextHolder.getContext().getAuthentication().isAuthenticated();
    }

    private boolean isUser() {
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        return authentication.getPrincipal() != null
             &amp;&amp; authentication.getPrincipal() instanceof User;
    }

    private void printLog(LogDetails details) {
        log.info("{},{},{},{},{},{},{},{}ms,{}ms",
            details.getRemoteAddr(), details.getMethod(), details.getUri(),
            details.getHandler(), details.getCode(), details.getException(), details.getUser(),
            details.getEndTime() - details.getStartTime(), // &#24635;&#26102;&#38388;
            details.getProcessTime() - details.getStartTime()); // &#22788;&#29702;&#26102;&#38388;
    }

    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p>&#23436;&#25104;&#20102;&#20195;&#30721;&#30340;&#24320;&#21457;&#65292;&#26368;&#21518;&#23601;&#26159;&#37197;&#32622; Spring MVC&#65292;&#35753;&#23427;&#30693;&#36947;&#23545;&#21738;&#20123;&#35831;&#27714;&#36827;&#34892;&#25318;&#25130;&#12290;&#27492;&#22788;&#38656;&#35201;&#35753;&#37197;&#32622;&#31867;&#23454;&#29616; <code>WebMvcConfigurer</code> &#25509;&#21475;&#65292;&#20294;&#19981;&#35201;&#22312;&#37197;&#32622;&#31867;&#19978;&#28155;&#21152; <code>@EnableWebMvc</code> &#27880;&#35299;&#65292;&#25105;&#20204;&#38656;&#35201;&#20445;&#30041; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#21482;&#38656;&#20687;&#20195;&#30721;&#31034;&#20363; 11-5 &#37027;&#26679;&#65292;&#31616;&#21333;&#20462;&#25913;&#19968;&#19979; <code>BinaryTeaApplication</code> &#23601;&#33021;&#23436;&#25104;&#37197;&#32622;&#20102;&#12290;&#28155;&#21152;&#23436;&#25318;&#25130;&#22120;&#21518;&#36890;&#36807; <code>addPathPatterns()</code> &#21644; <code>excludePathPatterns()</code> &#33021;&#26041;&#20415;&#22320;&#35774;&#32622;&#24819;&#35201;&#25318;&#25130;&#21644;&#25490;&#38500;&#30340;&#36335;&#24452;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-5</strong>&#12288;&#20462;&#25913;&#21518;&#30340; <code>BinaryTeaApplication</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
public class BinaryTeaApplication implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(logHandlerInterceptor())
                 .addPathPatterns("/**")
                 .excludePathPatterns("/static/**");
    }

    @Bean
    public LogHandlerInterceptor logHandlerInterceptor() {
        return new LogHandlerInterceptor();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p>&#22312;&#31243;&#24207;&#36816;&#34892;&#21518;&#65292;&#27599;&#25509;&#25910;&#19968;&#20010;&#35831;&#27714;&#65292;&#37117;&#33021;&#22312;&#26085;&#24535;&#37324;&#30475;&#21040;&#31867;&#20284;&#19979;&#38754;&#30340;&#20869;&#23481;&#65292;&#26681;&#25454;&#26085;&#24535;&#23601;&#33021;&#24471;&#30693;&#35841;&#22312;&#20855;&#20307;&#20570;&#20160;&#20040;&#12290;&#20363;&#22914;&#65292;&#19979;&#38754;&#36825;&#20010;&#35831;&#27714;&#23601;&#26159; <code>LiLei</code> &#22312;&#26412;&#22320;&#21457;&#36215;&#30340; <code>POST</code> &#35831;&#27714;&#65292;&#35775;&#38382; <code>/order</code>&#65292;&#20855;&#20307;&#30001; <code>OrderController</code> &#31867;&#30340; <code>createNewOrder()</code> &#26041;&#27861;&#22788;&#29702;&#65292;&#25104;&#21151;&#36820;&#22238;&#20102; <code>201 Created</code>&#65292;&#27809;&#26377;&#24322;&#24120;&#65292;&#25972;&#20010;&#22788;&#29702;&#36807;&#31243;&#32791;&#26102; 39 &#27627;&#31186;&#65292;&#26041;&#27861;&#22788;&#29702;&#26102;&#38388;&#20026; 38 &#27627;&#31186;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2022-03-17 21:50:13.801 INFO 65019 --- [nio-8080-exec-7] l.s.b.support.log.LogHandlerInterceptor :
127.0.0.1,POST,/order,OrderController.createNewOrder(),201,-,LiLei,39ms,38ms</code></pre><h3 id="nav_point_175">11.1.2&#12288;&#23436;&#21892;&#24322;&#24120;&#22788;&#29702;&#36923;&#36753;</h3><p>&#22312;&#27491;&#24120;&#30340;&#20195;&#30721;&#24320;&#21457;&#36807;&#31243;&#20013;&#65292;&#25105;&#20204;&#26080;&#26102;&#26080;&#21051;&#37117;&#20250;&#25552;&#37266;&#33258;&#24049;&#65292;&#35201;&#27880;&#24847;&#22788;&#29702;&#24322;&#24120;&#12290;&#26377;&#20123;&#29305;&#23450;&#30340;&#24322;&#24120;&#25105;&#20204;&#38656;&#35201;&#33258;&#24049;&#25429;&#33719;&#24182;&#20570;&#38024;&#23545;&#24615;&#30340;&#22788;&#29702;&#65292;&#32780;&#26377;&#20123;&#21017;&#35753;&#23427;&#25243;&#21040;&#19978;&#23618;&#65292;&#23558;&#36825;&#20123;&#24037;&#20316;&#20132;&#32473;&#19978;&#23618;&#12290;&#21040;&#20102;&#26368;&#22806;&#23618;&#65292;&#24314;&#35758;&#20877;&#25918;&#19968;&#20010; try-catch &#30340;&#20195;&#30721;&#22359;&#20828;&#24213;&#65292;&#20197;&#20813;&#26377;&#20160;&#20040;&#24847;&#26009;&#20043;&#22806;&#30340;&#24322;&#24120;&#12290;</p><p>&#22312; Spring MVC &#20013;&#65292;&#26694;&#26550;&#36824;&#25552;&#20379;&#20102;&#19987;&#38376;&#30340;&#24322;&#24120;&#22788;&#29702;&#22120;&#65292;&#26412;&#33410;&#23601;&#35753;&#25105;&#20204;&#19968;&#36215;&#26469;&#20102;&#35299;&#19968;&#19979; <code>@ExceptionHandler</code> &#30340;&#29992;&#27861;&#12290;</p><ol>
<li><p><strong>&#22312;&#21333;&#20010;&#25511;&#21046;&#22120;&#31867;&#20013;&#20351;&#29992; @ExceptionHandler</strong></p>
<p>&#22312; <code>@Controller</code> &#31867;&#20013;&#65292;&#21487;&#20197;&#23450;&#20041;&#19968;&#20010;&#24102;&#26377; <code>@ExceptionHandler</code> &#27880;&#35299;&#30340;&#26041;&#27861;&#65292;&#22788;&#29702;&#26412;&#31867;&#20013;&#20854;&#20182;&#30340;&#25511;&#21046;&#22120;&#26041;&#27861;&#25243;&#20986;&#30340;&#24322;&#24120;&#12290;&#20026;&#20102;&#33021;&#31934;&#20934;&#22320;&#21305;&#37197;&#24819;&#35201;&#22788;&#29702;&#30340;&#24322;&#24120;&#65292;&#21487;&#20197;&#23558;&#24322;&#24120;&#31867;&#23450;&#20041;&#22312;&#27880;&#35299;&#37324;&#65292;&#20063;&#21487;&#20197;&#23558;&#20854;&#23450;&#20041;&#22312;&#26041;&#27861;&#30340;&#21442;&#25968;&#21015;&#34920;&#37324;&#65292;&#23601;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@ExceptionHandler
public String handleExceptionA(IOException e) {
  ...
}

@ExceptionHandler({FileNotFoundException.class, EOFException.class})
public String handleExceptionB(IOException e) {
  ...
}</code></pre>
<p>&#36825;&#37324;&#30340;&#26041;&#27861;&#23450;&#20041;&#38750;&#24120;&#28789;&#27963;&#65292;&#19982; 9.2.2 &#33410;&#20013;&#30340;&#35831;&#27714;&#22788;&#29702;&#26041;&#27861;&#23450;&#20041;&#26377;&#24322;&#26354;&#21516;&#24037;&#20043;&#22788;&#12290;&#22312;&#21442;&#25968;&#26041;&#38754;&#65292;&#38500;&#20102;&#19978;&#38754;&#25552;&#21040;&#30340;&#21487;&#20197;&#20256;&#20837;&#20855;&#20307;&#25243;&#20986;&#30340;&#24322;&#24120;&#65292;&#36824;&#21487;&#20197;&#26377;&#20854;&#20182;&#30340;&#31867;&#22411;&#65292;&#20363;&#22914;&#34920; 11-1 &#37324;&#21015;&#20986;&#30340;&#20960;&#20010;&#12290;</p>
<p><strong>&#34920; 11-1&#12288;<code>@ExceptionHandler</code> &#26041;&#27861;&#21487;&#20197;&#25509;&#21463;&#30340;&#37096;&#20998;&#21442;&#25968;&#31867;&#22411;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#31867;&#22411;</th><th>&#35828;&#26126;</th></tr><tr><td><code>WebRequest</code>&#12289;<code>NativeWebRequest</code> &#19982; <code>ServletRequest</code></td><td>&#20855;&#20307;&#30340;&#35831;&#27714;&#20449;&#24687;</td></tr><tr><td><code>ServletResponse</code>&#12289;<code>OutputStream</code>&#12289;<code>Writer</code></td><td>&#35201;&#36820;&#22238;&#30340;&#24212;&#31572;&#20869;&#23481;&#65292;&#21518;&#20004;&#20010;&#21017;&#21487;&#20197;&#30452;&#25509;&#36755;&#20986;&#24212;&#31572;&#30340;&#27491;&#25991;</td></tr><tr><td><code>HttpSession</code></td><td>&#24403;&#21069;&#30340;&#20250;&#35805;&#20449;&#24687;</td></tr><tr><td><code>HandlerMethod</code></td><td>&#20855;&#20307;&#22788;&#29702;&#35831;&#27714;&#30340;&#22788;&#29702;&#22120;&#26041;&#27861;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 11-2 &#20013;&#30340;&#37027;&#26679;</td></tr><tr><td><code>HttpMethod</code></td><td>&#24403;&#21069;&#35831;&#27714;&#30340; HTTP &#26041;&#27861;</td></tr><tr><td><code>Principal</code></td><td>&#24403;&#21069;&#30331;&#24405;&#30340;&#29992;&#25143;&#20449;&#24687;</td></tr><tr><td><code>@SessionAttribute</code> &#19982; <code>@RequestAttribute</code></td><td>&#24102;&#20102;&#36825;&#20004;&#20010;&#27880;&#35299;&#30340;&#21442;&#25968;&#65292;&#20250;&#23545;&#24212;&#21040;&#20250;&#35805;&#25110;&#35831;&#27714;&#20013;&#30340;&#23646;&#24615;</td></tr><tr><td><code>Map</code>&#12289;<code>Model</code> &#19982; <code>ModelMap</code></td><td>&#22914;&#26524; <code>@ExceptionHandler</code> &#26041;&#27861;&#26368;&#21518;&#35201;&#21576;&#29616;&#20855;&#20307;&#30340;&#35270;&#22270;&#65292;&#21487;&#20197;&#29992;&#36825;&#20123;&#21442;&#25968;&#26469;&#20256;&#36882;&#35270;&#22270;&#25152;&#38656;&#30340;&#20449;&#24687;&#65288;&#27880;&#24847;&#36825;&#37324;&#19981;&#26159;&#35831;&#27714;&#22788;&#29702;&#26041;&#27861;&#30340;&#27169;&#22411;&#65289;</td></tr></table>
<p>&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#31867;&#22411;&#20063;&#26159;&#19968;&#26679;&#30340;&#65292;&#21487;&#20197;&#26377;&#22810;&#31181;&#31867;&#22411;&#36873;&#25321;&#65292;&#20363;&#22914;&#34920; 11-2 &#20013;&#30340;&#37027;&#20123;&#12290;</p>
<p><strong>&#34920; 11-2&#12288;<code>@ExceptionHandler</code> &#26041;&#27861;&#21487;&#20197;&#36820;&#22238;&#30340;&#37096;&#20998;&#31867;&#22411;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#36820;&#22238;&#20540;&#31867;&#22411;</th><th>&#35828;&#26126;</th></tr><tr><td><code>@ResponseBody</code></td><td>&#36820;&#22238;&#30340;&#23545;&#35937;&#30452;&#25509;&#30001; <code>HttpMessageConverter</code> &#36716;&#25442;&#20026;&#24212;&#31572;&#30340;&#27491;&#25991;</td></tr><tr><td><code>HttpEntity&lt;B&gt;</code> &#19982; <code>ResponseEntity&lt;B&gt;</code></td><td>&#36820;&#22238;&#23436;&#25972;&#30340;&#24212;&#31572;&#65292;&#20854;&#20013;&#21253;&#21547; HTTP &#22836;&#19982;&#27491;&#25991;&#65288;<code>B</code> &#31867;&#22411;&#30340;&#23545;&#35937;&#30001; <code>HttpMessageConverter</code> &#36716;&#25442;&#20026;&#27491;&#25991;&#65289;</td></tr><tr><td><code>String</code>&#12289;<code>View</code> &#19982; <code>ModelAndView</code></td><td>&#23383;&#31526;&#20018;&#26159;&#35270;&#22270;&#21517;&#65292;&#20063;&#21487;&#20197;&#30452;&#25509;&#36820;&#22238; View &#35270;&#22270;&#23545;&#35937;&#65292;<code>ModelAndView</code> &#20013;&#26082;&#21253;&#21547;&#21576;&#29616;&#35270;&#22270;&#29992;&#30340;&#27169;&#22411;&#65292;&#20063;&#26377;&#35270;&#22270;</td></tr><tr><td><code>Map</code> &#19982; <code>Model</code></td><td>&#21576;&#29616;&#35270;&#22270;&#25152;&#38656;&#35201;&#30340;&#27169;&#22411;&#65292;&#35270;&#22270;&#21517;&#20250;&#30001; <code>RequestToViewNameTranslator</code> &#26681;&#25454;&#35831;&#27714;&#36827;&#34892;&#25512;&#27979;</td></tr><tr><td>&#31354;</td><td>&#22914;&#26524;&#26041;&#27861;&#30340;&#21442;&#25968;&#20013;&#26377;&#24212;&#31572;&#30456;&#20851;&#30340;&#21442;&#25968;&#65292;&#25110;&#32773;&#25511;&#21046;&#22120;&#36890;&#36807;&#20102; <code>ETag</code> &#21644; <code>lastModified</code> &#26102;&#38388;&#25139;&#26657;&#39564;&#65292;&#31354;&#36820;&#22238;&#34920;&#31034;&#22312;&#26041;&#27861;&#37324;&#24050;&#32463;&#23436;&#25104;&#20102;&#24212;&#31572;&#30340;&#22788;&#29702;&#65307;&#21542;&#21017;&#31354;&#36820;&#22238;&#23601;&#20195;&#34920; <code>REST</code> &#35831;&#27714;&#26080;&#21709;&#24212;&#27491;&#25991;&#65292;<code>HTML</code> &#35831;&#27714;&#20351;&#29992;&#40664;&#35748;&#35270;&#22270;&#21517;</td></tr><tr><td>&#20854;&#20182;&#36820;&#22238;&#20540;</td><td>&#38750;&#22522;&#30784;&#31867;&#22411;&#30340;&#36820;&#22238;&#20540;&#20250;&#20316;&#20026;&#27169;&#22411;&#30340;&#19968;&#37096;&#20998;&#21152;&#20837;&#35270;&#22270;&#27169;&#22411;&#20013;</td></tr></table>
<p>&#22914;&#26524;&#19981;&#29992; <code>HttpEntity&lt;B&gt;</code> &#21644; <code>ResponseEntity&lt;B&gt;</code>&#65292;&#32473;&#26041;&#27861;&#21152;&#19978; <code>@ResponseStatus</code> &#27880;&#35299;&#65292;&#20063;&#21487;&#20197;&#30452;&#25509;&#25351;&#23450;&#35831;&#27714;&#36820;&#22238;&#26102;&#30340; HTTP &#21709;&#24212;&#30721;&#65292;&#40664;&#35748;&#30340;&#21709;&#24212;&#30721;&#26159; <code>500 Internal Server Error</code>&#12290;</p>
<p>&#25509;&#19979;&#26469;&#65292;&#35753;&#25105;&#20204;&#30475;&#30475;&#22914;&#20309;&#36890;&#36807;&#24322;&#24120;&#22788;&#29702;&#30340;&#21151;&#33021;&#20026;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#20248;&#21270;&#19968;&#19979;&#29992;&#25143;&#20307;&#39564;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#24215;&#38138;&#22312;&#27599;&#22825;&#24320;&#38376;&#21069;&#20250;&#20570;&#20934;&#22791;&#24037;&#20316;&#12290;&#22914;&#26524;&#22312;&#23578;&#26410;&#20934;&#22791;&#23601;&#32490;&#21069;&#65292;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#23458;&#25143;&#31471;&#23601;&#21457;&#26469;&#19979;&#21333;&#35831;&#27714;&#65292;&#37027;&#20250;&#35753;&#39038;&#23458;&#31561;&#24453;&#24456;&#20037;&#12290;&#25152;&#20197;&#22312;&#24320;&#38376;&#21069;&#24215;&#38138;&#19981;&#25509;&#21463;&#19979;&#21333;&#65292;&#35201;&#25298;&#32477;&#27492;&#26102;&#30340;&#21508;&#31181;&#35746;&#21333;&#31867;&#35831;&#27714;&#65292;&#32473;&#39038;&#23458;&#19968;&#20010;&#21451;&#22909;&#30340;&#35828;&#26126;&#12290;</p>
</blockquote>
<p>&#20808;&#26469;&#25286;&#35299;&#19968;&#19979;&#36825;&#20010;&#38656;&#27714;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#24215;&#37324;&#30340;&#20934;&#22791;&#24037;&#20316;&#27809;&#23436;&#25104;&#65292;&#19981;&#25509;&#21463;&#19979;&#21333;&#35831;&#27714;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#32473;&#39038;&#23458;&#19968;&#20010;&#21451;&#22909;&#30340;&#35828;&#26126;&#12290;</li>
</ul>
<p>&#23545;&#20110;&#31532;&#19968;&#20010;&#38656;&#27714;&#65292;&#25105;&#20204;&#21487;&#20197;&#37319;&#29992; 11.1.1 &#20013;&#20171;&#32461;&#30340;&#25318;&#25130;&#22120;&#26469;&#23454;&#29616;&#12290;&#30001;&#20110;&#21482;&#26159;&#25318;&#25130;&#23458;&#25143;&#31471;&#21457;&#26469;&#30340;&#35746;&#21333;&#35831;&#27714;&#65292;&#25152;&#20197;&#35201;&#20570;&#20123;&#31616;&#21333;&#30340;&#21028;&#26029;&#12290;&#21028;&#26029;&#20934;&#22791;&#24037;&#20316;&#26159;&#21542;&#23601;&#32490;&#23601;&#29992;&#37197;&#32622;&#25991;&#20214;&#20013;&#30340; <code>binarytea.ready</code> &#37197;&#32622;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-6 &#25152;&#31034;<span class="&#27880;&#37322;&#32534;&#21495;">2</span>&#12290;&#20854;&#20013;&#65292;&#27983;&#35272;&#22120;&#35775;&#38382;&#26102;&#20250;&#35201;&#27714;&#36820;&#22238; <code>text/html</code> &#26684;&#24335;&#30340;&#20869;&#23481;&#65292;&#25152;&#20197;&#38500;&#27492;&#20043;&#22806;&#30340;&#35831;&#27714;&#37117;&#35201;&#26816;&#26597; <code>binarytea.ready</code> &#26159;&#21542;&#20026; <code>true</code>&#65292;&#22914;&#26524;&#23578;&#26410;&#23601;&#32490;&#23601;&#25243;&#20986; <code>ShopNotReadyException</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-6</strong>&#12288;&#21028;&#26029;&#20934;&#22791;&#24037;&#20316;&#26159;&#21542;&#23601;&#32490;&#30340; <code>ReadyStateCheckHandlerInterceptor</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class ReadyStateCheckHandlerInterceptor implements HandlerInterceptor {
    @Autowired(required = false)
    private Optional&lt;BinaryTeaProperties&gt; binaryTeaProperties;

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response,
                             Object handler) throws Exception {
        if (!MediaType.TEXT_HTML_VALUE.equalsIgnoreCase(request.getHeader(HttpHeaders.ACCEPT))) {
            boolean isReady = binaryTeaProperties.orElse(new BinaryTeaProperties()).isReady();
            if (!isReady) {
                log.debug("Shop is NOT ready!");
                throw new ShopNotReadyException("NOT Ready");
            }
        }
        log.debug("Shop is ready, continue.");
        return true;
    }
}</code></pre>
<p>&#36825;&#20010;&#25318;&#25130;&#22120;&#21482;&#25318;&#25130; <code>/order</code> &#21450;&#20854;&#30446;&#24405;&#19979;&#30340;&#35831;&#27714;&#65292;&#25152;&#20197;&#22312;&#37197;&#32622; <code>InterceptorRegistry</code> &#26102;&#21482;&#38656;&#35201;&#36825;&#20010;&#36335;&#24452;&#23601;&#22909;&#20102;&#65292;&#31616;&#21333;&#20462;&#25913;&#19968;&#19979; <code>BinaryTeaApplication</code>&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-7 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-7</strong>&#12288;&#22686;&#21152;&#20102; <code>ReadyStateCheckHandlerInterceptor</code> &#30340;&#37197;&#32622;&#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
public class BinaryTeaApplication implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(logHandlerInterceptor())
                 .addPathPatterns("/**")
                 .excludePathPatterns("/static/**");
        registry.addInterceptor(readyStateCheckHandlerInterceptor())
                 .addPathPatterns("/order", "/order/**");
    }

    @Bean
    public ReadyStateCheckHandlerInterceptor readyStateCheckHandlerInterceptor() {
        return new ReadyStateCheckHandlerInterceptor();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#29616;&#22312;&#21482;&#35201; <code>application.properties</code> &#20013;&#30340; <code>binarytea.ready=false</code>&#65292;&#23458;&#25143;&#31471;&#35775;&#38382; <code>/order</code> &#26102;&#23601;&#20250;&#25243;&#20986;&#24322;&#24120;&#12290;&#37027;&#20040;&#22914;&#20309;&#36820;&#22238;&#21451;&#22909;&#30340;&#25552;&#31034;&#21602;&#65311;&#36825;&#26102;&#23601;&#35813; <code>@ExceptionHandler</code> &#20986;&#22330;&#20102;&#65292;&#22312; <code>OrderController</code> &#20013;&#22686;&#21152;&#19968;&#20010; <code>handleException()</code> &#26041;&#27861;&#65292;&#35753;&#23427;&#19987;&#38376;&#22788;&#29702; <code>ShopNotReadyException</code>&#65292;&#23558;&#36820;&#22238;&#30340; HTTP &#21709;&#24212;&#30721;&#35774;&#32622;&#20026; <code>403 Forbidden</code>&#65292;&#27491;&#25991;&#26159;&#19968;&#27573; JSON &#28040;&#24687;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 11-8 &#37027;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-8</strong>&#12288;<code>OrderController</code> &#20013;&#30340; <code>handleException()</code> &#26041;&#27861;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @ExceptionHandler
    public ResponseEntity&lt;Map&lt;String, String&gt;&gt; handleException(ShopNotReadyException e) {
        ResponseEntity&lt;Map&lt;String, String&gt;&gt; entity = ResponseEntity.status(HttpStatus.FORBIDDEN)
                .contentType(MediaType.APPLICATION_JSON)
                .body(Collections.singletonMap("message",
                        "Binarytea is NOT ready yet. Please come later."));
        log.warn("NOT ready yet! Can NOT accept requests.");
        return entity;
    }

    @GetMapping(produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public List&lt;Order&gt; listOrders() {
        return orderService.getAllOrders();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#31616;&#21333;&#29992; curl &#21629;&#20196;&#26469;&#20195;&#26367;&#23458;&#25143;&#31471;&#21457;&#36215;&#19968;&#20010;&#35831;&#27714;&#65292;&#21482;&#35201;&#23578;&#26410;&#20934;&#22791;&#23601;&#32490;&#23601;&#20250;&#30475;&#21040;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#30340;&#36755;&#20986;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; curl -v -H "Accept: application/json" -u LiLei:binarytea http://localhost:8080/order
&gt; &#30465;&#30053;&#20869;&#23481;
&gt;
&lt; HTTP/1.1 403
&lt; &#30465;&#30053;&#20869;&#23481;
{"message":"Binarytea is NOT ready yet. Please come later."}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#20840;&#23616;&#36866;&#29992;&#30340;@ExceptionHandler</strong></p>
<p>&#38024;&#23545;&#26377;&#20849;&#24615;&#30340;&#24322;&#24120;&#22788;&#29702;&#36923;&#36753;&#65292;&#22914;&#26524;&#22312;&#27599;&#20010; <code>@Controller</code> &#31867;&#37324;&#37117;&#35201;&#20889;&#19978;&#19968;&#20010; <code>handleException()</code> &#26041;&#27861;&#65292;&#21738;&#24597;&#26159;&#20869;&#37096;&#36923;&#36753;&#37117;&#21093;&#31163;&#21040;&#20844;&#20849;&#31867;&#37324;&#20063;&#26159;&#26080;&#27861;&#35753;&#20154;&#25509;&#21463;&#30340;&#12290;&#20854;&#23454;&#65292;&#25105;&#20204;&#23436;&#20840;&#21487;&#20197;&#23558;&#36825;&#20010;&#24102;&#26377; <code>@ExceptionHandler</code> &#30340;&#26041;&#27861;&#23436;&#25972;&#22320;&#25918;&#21040;&#19968;&#20010;&#20844;&#20849;&#30340;&#22320;&#26041;&#65292;&#35753;&#23427;&#23545;&#25105;&#20204;&#25152;&#26399;&#26395;&#30340;&#25511;&#21046;&#22120;&#37117;&#29983;&#25928;&#12290;<code>@ControllerAdvice</code> &#23601;&#26159;&#36215;&#36825;&#20010;&#20316;&#29992;&#30340; <span class="&#27880;&#37322;&#32534;&#21495;">3</span>&#65292;&#27491;&#22914;&#21517;&#23383;&#20013;&#30340; Advice &#25152;&#26263;&#31034;&#30340;&#65292;&#23427;&#30340;&#20316;&#29992;&#36319; AOP &#36890;&#30693;&#31867;&#20284;&#12290;&#22914;&#26524;&#26159;&#38024;&#23545; <code>REST</code> &#25509;&#21475;&#30340;&#65292;&#37027;&#21487;&#20197;&#20351;&#29992; <code>@RestControllerAdvice</code>&#65292;&#23427;&#32452;&#21512;&#20102; <code>@ResponseBody</code> &#21644; <code>@ControllerAdvice</code>&#12290;<code>@ControllerAdvice</code> &#27880;&#35299;&#21487;&#20197;&#25509;&#21463;&#22914;&#34920; 11-3 &#25152;&#31034;&#30340;&#19968;&#20123;&#21442;&#25968;&#12290;</p>
<p><strong>&#34920; 11-3&#12288;<code>@ControllerAdvice</code> &#20013;&#30340;&#21442;&#25968;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;</th><th>&#35828;&#26126;</th></tr><tr><td><code>basePackages</code> &#19982; <code>basePackageClasses</code></td><td>&#25318;&#25130;&#29305;&#23450;&#21253;&#19979;&#30340;&#25511;&#21046;&#22120;</td></tr><tr><td><code>assignableTypes</code></td><td>&#25318;&#25130;&#29305;&#23450;&#31867;&#22411;&#30340;&#25511;&#21046;&#22120;&#65292;&#36825;&#37324;&#21487;&#20197;&#25351;&#23450;&#29238;&#31867;&#25110;&#32773;&#25509;&#21475;</td></tr><tr><td><code>annotations</code></td><td>&#25318;&#25130;&#24102;&#26377;&#29305;&#23450;&#27880;&#35299;&#30340;&#25511;&#21046;&#22120;</td></tr></table>
<p>&#20551;&#35774;&#25105;&#20204;&#35201;&#25193;&#22823;&#19968;&#19979;&#21069;&#38754;&#25552;&#21040;&#30340;&#24215;&#38138;&#20934;&#22791;&#24037;&#20316;&#30340;&#25318;&#25130;&#33539;&#22260;&#65292;&#19981;&#20165;&#21253;&#25324;&#35746;&#21333;&#30456;&#20851;&#30340;&#35831;&#27714;&#65292;&#36830;&#33756;&#21333;&#30340;&#20063;&#35201;&#25318;&#19979;&#26469;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>registry.addInterceptor(readyStateCheckHandlerInterceptor())
         .addPathPatterns("/menu", "/menu/**", "/order", "/order/**");</code></pre>
<p>&#36825;&#26102;&#26368;&#22909;&#30340;&#20570;&#27861;&#19981;&#26159;&#22312; <code>MenuController</code> &#37324;&#22797;&#21046;&#19968;&#20010; <code>handleException()</code>&#65292;&#32780;&#26159;&#23558;&#23427;&#25277;&#21040;&#19968;&#20010;&#24102;&#26377; <code>@ControllerAdvice</code> &#30340;&#31867;&#37324;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 11-9 &#37027;&#26679;&#12290;&#36825;&#20010;&#31867;&#20165;&#20250;&#22788;&#29702; <code>learning.spring.binarytea.controller</code> &#21253;&#19979;&#30340;&#25511;&#21046;&#22120;&#65292;&#20854;&#20182;&#36923;&#36753;&#19982;&#20195;&#30721;&#31034;&#20363; 11-8 &#20013;&#30340;&#19968;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-9</strong>&#12288;&#29420;&#31435;&#20986;&#26469;&#30340; <code>ReadyStateControllerAdvice</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@ControllerAdvice("learning.spring.binarytea.controller")
@Slf4j
public class ReadyStateControllerAdvice {
    @ExceptionHandler
    public ResponseEntity&lt;Map&lt;String, String&gt;&gt; handleException(ShopNotReadyException e) {
        ResponseEntity&lt;Map&lt;String, String&gt;&gt; entity = ResponseEntity.status(HttpStatus.FORBIDDEN)
                .contentType(MediaType.APPLICATION_JSON)
                .body(Collections.singletonMap("message",
                        "Binarytea is NOT ready yet. Please come later."));
        log.warn("NOT ready yet! Can NOT accept requests.");
        return entity;
    }
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">2</span>11.1.2 &#33410;&#20013;&#30340;&#20195;&#30721;&#31034;&#20363;&#20840;&#22312; ch11/binarytea-controller-advice &#39033;&#30446;&#37324;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">3</span><code>@ControllerAdvice</code> &#27880;&#35299;&#30340;&#31867;&#37324;&#19981;&#20165;&#21487;&#20197;&#25918; <code>@ExceptionHandler</code>&#65292;&#36824;&#21487;&#20197;&#25918;&#25511;&#21046;&#22120;&#31867;&#37324;&#30340; <code>@InitBinder</code> &#21644; <code>@ModelAttribute</code>&#12290;</p><h2 id="nav_point_176">11.2&#12288;&#35843;&#25972; Web &#23481;&#22120;</h2><p>&#22312; 5.3 &#33410;&#20013;&#25105;&#20204;&#25552;&#21040;&#36807;&#65292;Spring Boot &#30340;&#31243;&#24207;&#36890;&#24120;&#20250;&#20351;&#29992;&#20869;&#23884; Web &#23481;&#22120;&#65292;&#19981;&#20687;&#20256;&#32479;&#30340; Web &#39033;&#30446;&#35201;&#36305;&#22312;&#22806;&#32622;&#23481;&#22120;&#37324;&#12290;&#40664;&#35748;&#24773;&#20917;&#19979;&#65292;Spring Boot &#33258;&#24102; Tomcat &#23481;&#22120;&#65292;&#24403;&#28982;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#26356;&#25442;&#23481;&#22120;&#12290;&#22312;&#36825;&#19968;&#33410;&#37324;&#65292;&#25105;&#20204;&#23558;&#30475;&#21040;&#22914;&#20309;&#22312; Spring Boot &#39033;&#30446;&#20013;&#26356;&#25442;&#19981;&#21516;&#30340;&#20869;&#32622;&#23481;&#22120;&#65292;&#22914;&#20309;&#24494;&#35843;&#23481;&#22120;&#30340;&#37197;&#32622;&#65292;&#26368;&#21518;&#20877;&#30475;&#30475;&#22914;&#20309;&#35753;&#31995;&#32479;&#20174;&#25903;&#25345; HTTP/1.1 &#21319;&#32423;&#21040;&#25903;&#25345; HTTP/2&#12290;</p><h3 id="nav_point_177">11.2.1&#12288;&#26356;&#25442;&#20869;&#23884; Web &#23481;&#22120;</h3><p>&#25105;&#20204;&#22312;&#39033;&#30446;&#20013;&#36890;&#36807;&#24341;&#20837; Spring Boot &#30340; spring-boot-starter-web &#36215;&#27493;&#20381;&#36182;&#24320;&#21551;&#20102;&#23545; Web &#24037;&#31243;&#30340;&#25903;&#25345;&#65292;&#36825;&#20010;&#20381;&#36182;&#20013;&#20854;&#23454;&#24050;&#32463;&#24102;&#19978;&#20102; spring-boot-starter-tomcat&#65292;&#22240;&#27492;&#22312; Spring Boot &#37324;&#40664;&#35748;&#20351;&#29992; Tomcat &#23601;&#26159;&#36825;&#20040;&#23454;&#29616;&#30340;&#12290;&#34920; 11-4 &#32599;&#21015;&#20102; Spring Boot &#33258;&#24102;&#30340; Web &#23481;&#22120;&#30456;&#20851;&#30340;&#36215;&#27493;&#20381;&#36182;&#12290;</p><p><strong>&#34920; 11-4&#12288;Spring Boot &#20869;&#32622;&#25903;&#25345;&#30340;&#20960;&#27454; Web &#23481;&#22120;&#36215;&#27493;&#20381;&#36182;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#36215;&#27493;&#20381;&#36182;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">spring-boot-starter-tomcat</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24341;&#20837; Apache Tomcat &#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#36825;&#26159; Spring Boot &#40664;&#35748;&#30340; Web &#23481;&#22120;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">spring-boot-starter-jetty</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24341;&#20837; Eclipse Jetty &#30456;&#20851;&#30340;&#20381;&#36182;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">spring-boot-starter-undertow</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24341;&#20837; JBoss Undertow &#30456;&#20851;&#30340;&#20381;&#36182;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">spring-boot-starter-reactor-netty</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24341;&#20837; Netty &#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#25552;&#20379;&#21709;&#24212;&#24335; Web &#26381;&#21153;&#30340;&#25903;&#25345;&#65292;&#21518;&#32493;&#22312;&#20171;&#32461; WebFlux &#26102;&#20250;&#29992;&#21040;</p></td>
</tr>
</tbody>
</table><p>&#21482;&#35201;&#27809;&#26377;&#29992;&#21040;&#20160;&#20040;&#23481;&#22120;&#29305;&#26377;&#30340;&#19996;&#35199;&#65292;Tomcat&#12289;Jetty &#21644; Undertow &#19977;&#32773;&#20043;&#38388;&#23601;&#21487;&#20197;&#23454;&#29616;&#28789;&#27963;&#20999;&#25442;&#65288;Reactor Netty &#20165;&#25552;&#20379;&#21709;&#24212;&#24335;&#30340;&#25903;&#25345;&#65292;&#19981;&#25903;&#25345;&#26222;&#36890;&#30340; Servlet&#65292;&#25152;&#20197;&#27809;&#31639;&#22312;&#20869;&#65289;&#65292;&#20197; Tomcat &#20999;&#25442; Jetty &#20026;&#20363;&#65292;&#22312; pom.xml &#30340; <code>&lt;dependencies /&gt;</code> &#20013;&#21482;&#38656;&#20004;&#27493;&#35843;&#25972;&#21363;&#21487;&#65306;</p><p>(1) &#20174; spring-boot-starter-web &#20013;&#36890;&#36807; <code>&lt;exclusions /&gt;</code> &#25490;&#38500; spring-boot-starter-tomcat &#20381;&#36182;&#65307;</p><p>(2) &#21152;&#20837; spring-boot-starter-jetty &#20381;&#36182;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-jetty&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p>&#35843;&#25972;&#23436;&#27605;&#21518;&#65292;&#36816;&#34892;&#31243;&#24207;&#65292;&#22914;&#26524;&#30475;&#21040;&#31867;&#20284;&#22914;&#19979;&#30340;&#36755;&#20986;&#65292;&#23601;&#35828;&#26126;&#24050;&#32463;&#20999;&#25442;&#21040;&#20102; Jetty &#23481;&#22120;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2021-02-17 10:39:45.388 INFO 30464 --- [main] o.s.b.w.e.j.JettyServletWebServerFactory : Server
initialized with port: 8080
2021-02-17 10:39:45.391 INFO 30464 --- [main] org.eclipse.jetty.server.Server : jetty-9.4.33.v20201020;
built: 2020-10-20T23:39:24.803Z; git: 1be68755656cef678b79a2ef1c2ebbca99e25420; jvm 11.0.8+10</code></pre><p>&#24819;&#35201;&#20999;&#25442; Undertow&#65292;&#26041;&#27861;&#26159;&#31867;&#20284;&#30340;&#65292;&#21482;&#38656;&#25226; spring-boot-starter-jetty &#36825;&#20010;&#36215;&#27493;&#20381;&#36182;&#25442;&#25104; spring- boot-starter-undertow &#21363;&#21487;&#12290;&#36816;&#34892;&#21518;&#30340;&#26085;&#24535;&#26159;&#31867;&#20284;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2021-02-17 10:50:51.158 INFO 30637 --- [main] io.undertow : starting server: Undertow - 2.1.4.Final
2021-02-17 10:50:51.161 INFO 30637 --- [main] org.xnio : XNIO version 3.8.0.Final
2021-02-17 10:50:51.165 INFO 30637 --- [main] org.xnio.nio : XNIO NIO Implementation Version 3.8.0.Final
2021-02-17 10:50:51.185 INFO 30637 --- [main] org.jboss.threads : JBoss Threads version 3.1.0.Final
2021-02-17 10:50:51.225 INFO 30637 --- [main] o.s.b.w.e.undertow.UndertowWebServer : Undertow started
on port(s) 8080 (http)</code></pre><blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#19981;&#21516;&#30340; Servlet &#29256;&#26412;&#19982;&#23545;&#24212;&#30340;&#23481;&#22120;</strong></p>
<p>Servlet &#33258;&#35806;&#29983;&#36215;&#24050;&#32463;&#32463;&#21382;&#20102;&#22909;&#20960;&#20010;&#22823;&#29256;&#26412;&#30340;&#21464;&#36801;&#12290;Servlet 3.0 &#26159;&#38543; Java EE 6 &#35268;&#33539;&#19968;&#21516;&#21457;&#24067;&#30340;&#65292;&#21487;&#25903;&#25345;&#24322;&#27493;&#22788;&#29702;&#12289;&#26032;&#22686;&#20102;&#19981;&#23569;&#27880;&#35299;&#65292;&#36824;&#22686;&#24378;&#20102;&#25554;&#20214;&#33021;&#21147;&#12290;Servlet 4.0 &#26159; Java EE 8 &#20013;&#26356;&#26032;&#30340;&#65292;&#20026; HTTP/2 &#30340;&#20840;&#38754;&#33853;&#22320;&#20570;&#22909;&#20102;&#20934;&#22791;&#65292;&#21487;&#25903;&#25345;&#26381;&#21153;&#22120;&#25512;&#36865;&#12290;Servlet 5.0 &#20027;&#35201;&#26159;&#38543; Jakarta EE 9<span class="&#27880;&#37322;&#32534;&#21495;">4</span> &#21457;&#24067;&#30340;&#65292;&#36825;&#20010;&#29256;&#26412;&#36319;&#21069;&#38754;&#30340;&#29256;&#26412;&#30456;&#27604;&#26368;&#22823;&#30340;&#21306;&#21035;&#26159;&#26356;&#25442;&#20102;&#21629;&#21517;&#31354;&#38388;&#65292;&#20174; <code>javax.\*</code> &#21464;&#25104;&#20102; <code>jakarta.\*</code>&#65292;<strong>&#36825;&#31181;&#19981;&#20860;&#23481;&#21319;&#32423;&#24102;&#26469;&#30340;&#24433;&#21709;&#26159;&#24040;&#22823;&#30340;</strong>&#65292;&#21319;&#32423;&#38656;&#35880;&#24910;&#12290;</p>
<p>&#22312;&#26412;&#20070;&#32534;&#20889;&#26102;&#65292;Spring Boot 2.6 &#38656;&#35201;&#36816;&#34892;&#22312; Servlet 3.1 &#21450;&#20197;&#19978;&#29256;&#26412;&#30340;&#23481;&#22120;&#37324;&#65292;&#33258;&#24102;&#30340; Web &#23481;&#22120;&#21487;&#20197;&#25903;&#25345; Servlet 4.0&#65292;&#32780; Spring Boot 3.0 &#20860;&#23481; Jakarta EE 9&#65292;&#21487;&#20197;&#25903;&#25345;&#21040; Servlet 5.0&#12290;</p>
<p>&#20197; Spring Boot 2.6.3 &#20026;&#20363;&#65292;&#20854;&#33258;&#24102;&#30340; Tomcat 9.0.56 &#21644; Undertow 2.2.14.Final &#26159;&#33021;&#22815;&#25903;&#25345; Servlet 4.0 &#30340;&#65292; &#32780; Jetty 9.0.52 &#26242;&#26102;&#21482;&#25903;&#25345; Servlet 3.1&#12290;Spring Boot 3.0.0-M2 &#33258;&#24102;&#30340; Tomcat 10.0.18 &#21644; Undertow 2.2.16.Final &#37117;&#25903;&#25345; Servlet 5.0&#65292;Jetty 11.0.8 &#26356;&#26159;&#25903;&#25345;&#21040;&#20102; Servlet 5.1&#12290;&#38656;&#35201;&#29305;&#21035;&#35828;&#26126;&#30340;&#26159;&#65292;&#30001;&#20110; Jakarta EE 9 &#26377;&#19981;&#23567;&#30340;&#25913;&#21160;&#65292;&#24456;&#22810;&#26694;&#26550;&#21644;&#35774;&#26045;&#20026;&#23427;&#20570;&#20102;&#36866;&#37197;&#65292;&#22312; Maven &#30340; ArtifactId &#20301;&#32622;&#37117;&#21152;&#19978;&#20102;-jakarta &#21518;&#32512;&#20197;&#31034;&#21306;&#21035;&#65292;Spring Boot 3.0.0-M2 &#37324;&#29992;&#21040;&#30340; Undertow &#20013;&#23601;&#26377; undertow-servlet-jakarta&#12290;</p>
</blockquote><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">4</span>Eclipse &#22522;&#37329;&#20250;&#22312;&#20174; Oracle &#25509;&#25163; Java EE &#21518;&#23601;&#23558;&#20854;&#25913;&#20026;&#20102; Jakarta EE&#65292;2019 &#24180; 9 &#26376; Jakarta EE 8 &#26159;&#20854;&#25509;&#25163;&#21518;&#21457;&#24067;&#30340;&#39318;&#20010;&#29256;&#26412;&#65292;&#21644; 2017 &#24180;&#21457;&#24067;&#30340; Java EE 8 &#27809;&#26377;&#21151;&#33021;&#19978;&#30340;&#24046;&#24322;&#12290;</p><h3 id="nav_point_178">11.2.2&#12288;&#35843;&#25972;&#20869;&#23884; Web &#23481;&#22120;&#37197;&#32622;</h3><p>&#20043;&#21069;&#22312;&#20351;&#29992;&#22806;&#32622; Web &#23481;&#22120;&#30340;&#26102;&#20505;&#65292;&#25105;&#20204;&#24635;&#20250;&#23545;&#37197;&#32622;&#25991;&#20214;&#20570;&#20123;&#35843;&#25972;&#65292;&#20363;&#22914;&#65292;&#20462;&#25913;&#40664;&#35748;&#30340;&#31471;&#21475;&#21495;&#65292;&#35843;&#25972;&#22788;&#29702;&#32447;&#31243;&#25968;&#65292;&#22914;&#26524;&#35201;&#29992; Web &#23481;&#22120;&#26469;&#22788;&#29702; <code>HTTPS</code> &#35831;&#27714;&#65292;&#37027;&#36824;&#35201;&#37197;&#32622;&#35777;&#20070;&#31561;&#12290;&#29616;&#22312;&#34429;&#28982;&#25442;&#25104;&#20102;&#20869;&#32622;&#23481;&#22120;&#65292;&#20294;&#36825;&#20123;&#37197;&#32622;&#24037;&#20316;&#36824;&#26159;&#35201;&#20570;&#30340;&#65292;&#27605;&#31455;&#40664;&#35748;&#37197;&#32622;&#22826;&#8220;&#22823;&#36335;&#36135;&#8221;&#20102;&#65292;&#27809;&#21150;&#27861;&#28385;&#36275;&#25105;&#20204;&#30340;&#20010;&#24615;&#21270;&#38656;&#27714;&#12290;Spring Boot &#20316;&#20026;&#19968;&#20010;&#22914;&#27492;&#28789;&#27963;&#30340;&#26694;&#26550;&#65292;&#24517;&#28982;&#22312;&#40664;&#35748;&#37197;&#32622;&#20043;&#22806;&#32473;&#25105;&#20204;&#24320;&#20102;&#25159;&#22823;&#38376;&#8212;&#8212;&#21487;&#20197;&#33258;&#24049;&#25163;&#21160;&#23545;&#23481;&#22120;&#36827;&#34892;&#21508;&#31181;&#35843;&#25972;&#65292;&#37197;&#32622;&#25991;&#20214;&#22914;&#26524;&#28385;&#36275;&#19981;&#20102;&#25105;&#20204;&#30340;&#35201;&#27714;&#65292;&#36824;&#21487;&#20197;&#29992;&#20195;&#30721;&#26469;&#37197;&#32622;&#12290;</p><ol>
<li><p><strong>&#31471;&#21475;&#37197;&#32622;</strong></p>
<p>&#40664;&#35748;&#24773;&#20917;&#19979;&#65292;Spring Boot &#30340;&#20869;&#32622; Tomcat &#20250;&#30417;&#21548; <code>8080</code> &#31471;&#21475;&#65292;&#21487;&#20197;&#36890;&#36807; <code>application.properties</code> &#20013;&#30340; <code>server.port</code> &#26469;&#25351;&#23450;&#35201;&#30417;&#21548;&#30340;&#31471;&#21475;&#21495;&#12290;&#26681;&#25454; 4.3.2 &#33410;&#20013;&#30340;&#20869;&#23481;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#23558;&#36825;&#20010;&#31471;&#21475;&#30340;&#37197;&#32622;&#25918;&#22312;&#25805;&#20316;&#31995;&#32479;&#30340;&#29615;&#22659;&#21464;&#37327;&#37324;&#65292;&#29992; <code>SERVER_PORT</code> &#21464;&#37327;&#26469;&#36827;&#34892;&#37197;&#32622;&#65292;&#20854;&#25928;&#26524;&#26159;&#19968;&#26679;&#30340;&#12290;&#34920; 11-5 &#21015;&#20986;&#20102;&#36825;&#20010;&#37197;&#32622;&#21487;&#20197;&#36873;&#25321;&#30340;&#20960;&#20010;&#21462;&#20540;&#12290;</p>
<p><strong>&#34920; 11-5&#12288;<code>server.port</code> &#30340;&#20960;&#31181;&#21487;&#33021;&#30340;&#21462;&#20540;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21462;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>0</code></td><td>&#20351;&#29992;&#38543;&#26426;&#30340;&#31471;&#21475;&#65292;&#30001;&#31995;&#32479;&#33258;&#34892;&#20915;&#23450;&#65292;&#38543;&#26426;&#31471;&#21475;&#21487;&#20197;&#36991;&#20813;&#31471;&#21475;&#20914;&#31361;&#12290;&#21487;&#20197;&#36890;&#36807;&#27880;&#20876;&#33258;&#24049;&#30340; <code>ApplicationListener</code> Bean &#26469;&#33719;&#21462;&#26368;&#32456;&#20351;&#29992;&#30340;&#31471;&#21475;&#21495;&#65307;&#22914;&#26524;&#26159;&#22312;&#21333;&#20803;&#27979;&#35797;&#20013;&#65292;&#21017;&#21487;&#20197;&#36890;&#36807;&#28155;&#21152; <code>@LocalServerPort int port;</code> &#25104;&#21592;&#26469;&#33719;&#24471;&#31471;&#21475;&#21495;</td></tr><tr><td><code>-1</code></td><td>&#20165;&#21551;&#21160; Web &#23481;&#22120;&#65292;&#20294;&#19981;&#30417;&#21548;&#20219;&#20309;&#31471;&#21475;&#65292;&#26356;&#22810;&#26159;&#29992;&#22312;&#21333;&#20803;&#27979;&#35797;&#20013;</td></tr><tr><td><code>1</code>~<code>1024</code></td><td>&#27491;&#24120;&#21487;&#29992;&#20110;&#30417;&#21548;&#30340;&#31471;&#21475;&#65292;&#20294;&#19981;&#24314;&#35758;&#30452;&#25509;&#20351;&#29992;&#65292;<b>&#22312; Linux &#20013;&#38750; root &#29992;&#25143;&#19981;&#33021;&#20351;&#29992; 1024 &#20197;&#19979;&#30340;&#31471;&#21475;</b></td></tr><tr><td><code>1025</code> &#21450;&#20197;&#19978;</td><td>&#27491;&#24120;&#21487;&#29992;&#20110;&#30417;&#21548;&#30340;&#31471;&#21475;&#65292;&#40664;&#35748;&#30340; <code>8080</code> &#23601;&#22312;&#36825;&#20010;&#33539;&#22260;&#37324;&#65292;&#20687; <code>8080</code>&#12289;<code>8081</code>&#12289;<code>8090</code> &#36825;&#20123;&#37117;&#31639;&#24120;&#29992;&#30340;&#31471;&#21475;&#21495;</td></tr></table>
<p>&#22914;&#26524;&#26381;&#21153;&#22120;&#32465;&#23450;&#20102;&#22810;&#20010;&#22320;&#22336;&#65292;&#20363;&#22914;&#26159;&#21452;&#32593;&#21345;&#30340;&#26426;&#22120;&#65292;&#36824;&#21487;&#20197;&#36890;&#36807; <code>server.address</code> &#26469;&#25351;&#23450;&#31243;&#24207;&#35201;&#32465;&#23450;&#30340;&#22320;&#22336;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#21387;&#32553;&#37197;&#32622;</strong></p>
<p>&#27983;&#35272;&#22120;&#22312;&#27983;&#35272;&#32593;&#39029;&#26102;&#19982;&#26381;&#21153;&#22120;&#30340; HTTP &#20132;&#20114;&#36890;&#24120;&#26159;&#25991;&#26412;&#24418;&#24335;&#30340;&#65292;&#25105;&#20204;&#30475;&#21040;&#30340; HTML&#12289;CSS&#12289;JavaScript &#31561;&#20869;&#23481;&#20854;&#23454;&#37117;&#26159;&#25991;&#26412;&#65292;&#21487;&#20197;&#36890;&#36807; GZIP &#31639;&#27861;&#23545;&#25991;&#26412;&#36827;&#34892;&#21387;&#32553;&#65292;&#33410;&#30465;&#20256;&#36755;&#30340;&#24102;&#23485;&#12290;&#34920; 11-6 &#32599;&#21015;&#20102; Spring Boot &#19982; HTTP &#24212;&#31572;&#21387;&#32553;&#26377;&#20851;&#30340;&#19968;&#20123;&#37197;&#32622;&#12290;</p>
<p><strong>&#34920; 11-6&#12288;HTTP &#24212;&#31572;&#21387;&#32553;&#30456;&#20851;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>server.compression.enabled</code></td><td><code>false</code></td><td>&#26159;&#21542;&#35201;&#24320;&#21551; HTTP &#24212;&#31572;&#21387;&#32553;</td></tr><tr><td><code>server.compression.min-response-size</code></td><td><code>2KB</code></td><td>&#35201;&#21387;&#32553;&#30340;&#24212;&#31572;&#25253;&#25991;&#30340;&#26368;&#23567;&#23610;&#23544;&#65292;&#22914;&#26524; <code>Content-Length</code> &#23567;&#20110;&#25351;&#23450;&#20540;&#23601;&#19981;&#21387;&#32553;</td></tr><tr><td><code>server.compression.mime-types</code></td><td>&#23545; HTML&#12289;XML&#12289;&#32431;&#25991;&#26412;&#12289;CSS&#12289;JavaScript &#21644; JSON &#20570;&#21387;&#32553;</td><td>&#35201;&#21387;&#32553;&#30340; MIME &#31867;&#22411;&#65292;&#29992;&#36887;&#21495;&#20998;&#38548;</td></tr><tr><td><code>server.compression.excluded-user-agents</code></td><td><code>null</code>&#65292;&#37117;&#20250;&#20570;&#21387;&#32553;</td><td>&#38024;&#23545;&#29305;&#23450;&#30340; <code>User-Agent</code> &#19981;&#20570;&#21387;&#32553;&#65292;&#29992;&#36887;&#21495;&#20998;&#38548;</td></tr></table>
<p>&#20551;&#35774;&#25105;&#20204;&#24076;&#26395;&#23545;&#22823;&#20110; 1KB &#30340;&#24212;&#31572;&#36827;&#34892;&#21387;&#32553;&#65292;&#23601;&#21487;&#20197;&#22312; <code>application.properties</code> &#37324;&#20570;&#22914;&#19979;&#35774;&#32622;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>server.compression.enabled=true
server.compression.min-response-size=1024</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>SSL &#37197;&#32622;</strong></p>
<p>&#29992;&#26126;&#25991;&#22312;&#32593;&#19978;&#20256;&#36755;&#20449;&#24687;&#24635;&#26159;&#19981;&#22826;&#23433;&#20840;&#65292;&#31867;&#20284;&#26032;&#38395;&#36825;&#26679;&#30340;&#26222;&#36890;&#20449;&#24687;&#20063;&#23601;&#32610;&#20102;&#65292;&#22914;&#26524;&#26159;&#37329;&#34701;&#25110;&#32773;&#28041;&#21450;&#25935;&#24863;&#20449;&#24687;&#30340;&#19996;&#35199;&#65292;&#23601;&#19981;&#21512;&#36866;&#20351;&#29992;&#26126;&#25991;&#65292;&#36825;&#26102;&#20351;&#29992; HTTPS &#26469;&#21462;&#20195; HTTP &#36827;&#34892;&#36890;&#20449;&#23601;&#26159;&#24517;&#38656;&#30340;&#12290;</p>
<p>&#25918;&#21040;&#20197;&#21069;&#65292;&#25105;&#20204;&#38656;&#35201;&#37197;&#32622; Tomcat &#30340; <code>&lt;Connector/&gt;</code> &#26631;&#31614;&#65292;&#35774;&#32622; <code>SSLEnabled</code>&#12289;<code>scheme</code>&#12289;<code>secure</code> &#21644; <code>sslProtocol</code> &#23646;&#24615;&#65292;&#20294;&#26377;&#20102; Spring Boot &#23601;&#23481;&#26131;&#22810;&#20102;&#65292;&#22312;&#37197;&#32622;&#25991;&#20214;&#37324;&#21152;&#20960;&#20010;&#37197;&#32622;&#23601;&#22909;&#20102;&#12290;<code>ServerProperties</code> &#20013;&#19982; SSL &#30456;&#20851;&#30340;&#37197;&#32622;&#26377;&#24456;&#22810;&#65292;&#20855;&#20307;&#37117;&#22312; <code>org.springframework.boot.web.server.Ssl</code> &#31867;&#37324;&#65292;&#34920; 11-7 &#20013;&#31616;&#21333;&#32599;&#21015;&#20102;&#20960;&#20010;&#65292;&#20854;&#20013;&#30340;&#37197;&#32622;&#39033;&#26377;&#24456;&#22810;&#20250;&#35774;&#32622;&#21040; Tomcat &#30340; <code>SSLHostConfig</code> &#37324;&#12290;</p>
<p><strong>&#34920; 11-7&#12288;<code>server.ssl.*</code> &#30340;&#19968;&#20123;&#24120;&#29992;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#35828;&#26126;</th></tr><tr><td><code>server.ssl.ciphers</code></td><td>&#35201;&#25903;&#25345;&#30340; SSL &#31639;&#27861;&#65292;&#21487;&#20197;&#25509;&#21463; OpenSSL &#25110; JSSE &#26684;&#24335;&#65292;&#19968;&#33324;&#19981;&#35774;&#65292;Tomcat &#40664;&#35748;&#29992; <code>HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!kRSA</code></td></tr><tr><td><code>server.ssl.enabled</code></td><td>&#26159;&#21542;&#24320;&#21551; SSL &#25903;&#25345;&#65292;&#40664;&#35748;&#20026; <code>true</code></td></tr><tr><td><code>server.ssl.enabled-protocols</code></td><td>&#35201;&#24320;&#21551;&#30340;&#21327;&#35758;&#21015;&#34920;&#65292;&#29992;&#65291;&#20195;&#34920;&#22686;&#21152;&#26576;&#31181;&#21327;&#35758;&#65292;&#65293;&#20195;&#34920;&#21435;&#38500;&#26576;&#31181;&#21327;&#35758; <sup><b>5</b></sup></td></tr><tr><td><code>server.ssl.protocol</code></td><td>SSL &#20351;&#29992;&#30340;&#21327;&#35758;&#65292;&#40664;&#35748;&#20026; <code>TLS</code></td></tr><tr><td><code>server.ssl.key-alias</code></td><td>&#23494;&#38053;&#24211;&#20013;&#23494;&#38053;&#30340;&#21035;&#21517;</td></tr><tr><td><code>server.ssl.key-password</code></td><td>&#29992;&#26469;&#35775;&#38382;&#23494;&#38053;&#30340;&#23494;&#30721;</td></tr><tr><td><code>server.ssl.key-store</code></td><td>&#20445;&#23384;&#20102; SSL &#35777;&#20070;&#30340;&#23494;&#38053;&#24211;&#36335;&#24452;&#65292;&#36890;&#24120;&#26159;&#19968;&#20010; JKS &#25991;&#20214;</td></tr><tr><td><code>server.ssl.key-store-password</code></td><td>&#23494;&#38053;&#24211;&#25991;&#20214;&#30340;&#23494;&#30721;</td></tr><tr><td><code>server.ssl.key-store-type</code></td><td>&#23494;&#38053;&#24211;&#30340;&#31867;&#22411;&#65292;&#20363;&#22914; PKCS12</td></tr></table>
<blockquote>
<p><sup><b>5</b></sup>&#36825;&#37324;&#30340;&#21327;&#35758;&#26159;&#20855;&#20307;&#30340; TLS&#12289;TLSv1.2 &#36825;&#26679;&#30340;&#21327;&#35758;&#65292;&#22914;&#26524;&#29992; all&#65292;&#30456;&#24403;&#20110;&#24320;&#21551;&#20102; <code>+SSLv2Hello+TLSv1+TLSv1.1+TLSv1.2+TLSv1.3</code>&#65292;&#19981;&#36807;&#30446;&#21069;&#24050;&#32463;&#19981;&#20877;&#25512;&#33616;&#20351;&#29992; 1.2 &#29256;&#26412;&#20197;&#19979;&#30340; TLS &#21327;&#35758;&#20102;&#65292;&#29983;&#20135;&#29615;&#22659;&#20013;&#21487;&#20197;&#32771;&#34385;&#31105;&#29992;&#12290;</p>
</blockquote>
<p>&#22312; SSL &#36234;&#26469;&#36234;&#26222;&#21450;&#30340;&#20170;&#22825;&#65292;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#24403;&#28982;&#20063;&#19981;&#33021;&#33853;&#20237;&#65292;&#26377;&#24517;&#35201;&#35753;&#25105;&#20204;&#30340;&#31995;&#32479;&#20063;&#25903;&#25345; SSL&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#29616;&#22312;&#23545;&#22806;&#25552;&#20379;&#26381;&#21153;&#20102;&#65292;&#34429;&#28982;&#33756;&#21333;&#26159;&#20844;&#24320;&#30340;&#65292;&#20294;&#26159;&#39038;&#23458;&#30340;&#35746;&#21333;&#23646;&#20110;&#20010;&#20154;&#38544;&#31169;&#65292;&#24212;&#35813;&#22312;&#32593;&#19978;&#21152;&#20197;&#20445;&#25252;&#65292;&#25152;&#20197;&#25105;&#20204;&#24076;&#26395;&#33021;&#21152;&#23494;&#23458;&#25143;&#31471;&#20256;&#36755;&#36807;&#26469;&#30340;&#35831;&#27714;&#19982;&#24212;&#31572;&#12290;&#20026;&#27492;&#65292;&#26381;&#21153;&#31471;&#19982;&#23458;&#25143;&#31471;&#37117;&#38656;&#35201;&#25903;&#25345; HTTPS&#65292;&#21518;&#32493;&#36824;&#35201;&#25903;&#25345; HTTP/2&#12290;</p>
</blockquote>
<p>&#19968;&#33324; HTTPS &#30417;&#21548;&#30340;&#31471;&#21475;&#26159; <code>443</code>&#65292;&#20294;&#36825;&#20010;&#31471;&#21475;&#36890;&#24120;&#26159;&#20026;&#36127;&#36733;&#22343;&#34913;&#20934;&#22791;&#30340;&#65292;&#32972;&#21518;&#30340;&#26381;&#21153;&#22120;&#21487;&#20197;&#29992; <code>8443</code> &#31471;&#21475;&#65292;<code>application.properties</code> &#37324;&#30340;&#37197;&#32622;&#22914;&#20195;&#30721;&#31034;&#20363; 11-10 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">6</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-10</strong>&#12288;&#24320;&#21551; HTTPS &#25903;&#25345;&#30340;&#37197;&#32622;&#25991;&#20214;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>server.port=8443
server.ssl.key-store=classpath:binarytea.p12
server.ssl.key-store-password=binarytea</code></pre>
<p>&#20551;&#35774;&#25105;&#20204;&#25226;&#23494;&#38053;&#24211;&#25991;&#20214; binarytea.p12 &#25918;&#22312; CLASSPATH &#37324;&#65292;&#20063;&#23601;&#26159; src/main/resources &#37324;&#65292;&#23545;&#24212;&#30340;&#23494;&#30721;&#26159; <code>binarytea</code>&#65292;&#37027;&#31243;&#24207;&#36816;&#34892;&#36215;&#26469;&#21518;&#23601;&#24212;&#35813;&#33021;&#25104;&#21151;&#30417;&#21548; <code>8443</code> &#31471;&#21475;&#12290;</p>
<p>&#22312;&#31532; 9 &#31456;&#30340;&#20195;&#30721;&#31034;&#20363; 9-37 &#21644;&#20195;&#30721;&#31034;&#20363; 9-38 &#20013;&#65292;&#25105;&#20204;&#20351;&#29992; HttpComponents &#20316;&#20026; <code>RestTemplate</code> &#30340;&#24213;&#23618; HTTP &#23458;&#25143;&#31471;&#65292;&#37197;&#32622;&#30340; <code>ClientHttpRequestFactory</code> &#20250;&#24573;&#30053;&#35777;&#20070;&#38169;&#35823;&#65292;&#21516;&#26102;&#20063;&#19981;&#20250;&#26657;&#39564;&#20027;&#26426;&#21517;&#65292;&#36866;&#29992;&#20110;&#33258;&#24049;&#31614;&#21457;&#20294;&#21448;&#27809;&#26377;&#23548;&#20837;&#20449;&#20219;&#35777;&#20070;&#21015;&#34920;&#30340;&#24773;&#20917;&#12290;&#24403;&#28982;&#65292;&#22914;&#26524;&#26159;&#26426;&#26500;&#31614;&#21457;&#30340;&#35777;&#20070;&#65292;&#20063;&#26159;&#36866;&#29992;&#30340;&#65292;&#23601;&#26159;&#20160;&#20040;&#19996;&#35199;&#37117;&#19981;&#26657;&#39564;&#20102;&#65292;&#20294;&#36825;&#26679;&#20570;&#19981;&#22826;&#23433;&#20840;&#65292;&#19981;&#24314;&#35758;&#29992;&#22312;&#29983;&#20135;&#29615;&#22659;&#37324;&#12290;</p>
<p>&#25152;&#20197;&#65292;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#29992; 10.4.2 &#33410;&#20013;&#30340;&#23458;&#25143;&#31471;&#26469;&#35775;&#38382; https://localhost:8443&#65292;&#23458;&#25143;&#31471;&#29992; customer-jwt-auth &#25110; customer-basic-auth&#65292;&#36825;&#37324;&#20351;&#29992;&#21069;&#32773;&#65292;&#23558; <code>application.properties</code> &#20013;&#30340; <code>binarytea.url</code> &#25913;&#25104;&#19979;&#38754;&#36825;&#26679;&#23601;&#21487;&#20197;&#36816;&#34892;&#31243;&#24207;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>binarytea.url=https://localhost:8443</code></pre>
<p>&#22914;&#26524;&#36825;&#27425;&#25105;&#20204;&#24076;&#26395;&#33021;&#22815;&#26657;&#39564;&#35777;&#20070;&#65292;&#21487;&#20197;&#35843;&#25972;&#19968;&#19979; <code>loadTrustMaterial()</code> &#26041;&#27861;&#30340;&#21442;&#25968;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-11 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">7</span> &#20027;&#35201;&#26159;&#27880;&#20837;&#20102;&#35777;&#20070;&#23384;&#20648;&#21644;&#23545;&#24212;&#30340;&#23494;&#30721;&#65292;&#38543;&#21518;&#23558;&#35777;&#20070;&#20449;&#24687;&#21152;&#36733;&#21040; <code>SSLContext</code> &#37324;&#65292;&#19981;&#20877;&#24573;&#30053;&#26657;&#39564;&#38169;&#35823;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-11</strong>&#12288;&#21152;&#36733;&#20102;&#35777;&#20070;&#30340;&#23458;&#25143;&#31471;&#37197;&#32622;&#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@Slf4j
public class CustomerApplication {
    @Value("${binarytea.ssl.key-store}")
    private Resource keyStore;
    @Value("${binarytea.ssl.key-store-password}")
    private String keyStorePassword;

    @Bean
    public ClientHttpRequestFactory requestFactory() {
        // &#30465;&#30053;&#37096;&#20998;&#20195;&#30721;
        SSLContext sslContext = null;
        try {
            sslContext = SSLContextBuilder.create()
                // &#21152;&#36733;&#35777;&#20070;
                .loadTrustMaterial(keyStore.getFile(),
                keyStorePassword.toCharArray())
                .build();
        } catch (Exception e) {
            log.error("Can NOT create SSLContext", e);
        }
        if (sslContext != null) {
            builder.setSSLContext(sslContext) // &#35774;&#32622;SSLContext
                    .setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE); // &#19981;&#26657;&#39564;&#20027;&#26426;&#21517;
        }

        return new HttpComponentsClientHttpRequestFactory(builder.build());
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#28982;&#21518;&#65292;&#22312; <code>application.properties</code> &#37324;&#22686;&#21152;&#35777;&#20070;&#30456;&#20851;&#30340;&#37197;&#32622;&#39033;&#23601;&#21487;&#20197;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>binarytea.ssl.key-store=classpath:binarytea.p12
binarytea.ssl.key-store-password=binarytea</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#22914;&#20309;&#33719;&#24471; HTTPS &#35777;&#20070;&#23494;&#38053;&#21644;&#35777;&#20070;</strong></p>
<p>&#20043;&#31867;&#30340;&#20449;&#24687;&#23545;&#20110;&#20225;&#19994;&#21644;&#20010;&#20154;&#26469;&#35828;&#37117;&#26159;&#38750;&#24120;&#37325;&#35201;&#30340;&#36164;&#20135;&#65292;&#38656;&#35201;&#37325;&#28857;&#20445;&#25252;&#12290;&#22312;&#19978;&#38754;&#30340;&#20363;&#23376;&#20013;&#65292;&#25105;&#20204;&#20351;&#29992;&#20102;&#19968;&#20010;&#21517;&#20026; binarytea.p12 &#30340;&#23494;&#38053;&#24211;&#65292;&#37324;&#38754;&#23601;&#23384;&#20648;&#30528;&#37197;&#32622; HTTPS &#35201;&#29992;&#21040;&#30340;&#23494;&#38053;&#12290;&#37027;&#36825;&#20010;&#23494;&#38053;&#24211;&#21448;&#26159;&#24590;&#20040;&#33719;&#24471;&#30340;&#21602;&#65311;</p>
<p>&#36890;&#24120;&#26377;&#20004;&#31181;&#26041;&#24335;&#65306;</p>
<ul>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#33258;&#24049;&#31614;&#21457;&#19968;&#20010;&#20165;&#20570;&#23398;&#20064;&#29992;&#36884;&#25110;&#32773;&#20869;&#37096;&#20351;&#29992;&#30340;&#35777;&#20070;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807;&#19987;&#38376;&#30340;&#26426;&#26500;&#30003;&#35831;&#33719;&#24471;&#35777;&#20070;&#65292;&#26377;&#20123;&#26426;&#26500;&#20063;&#20250;&#25552;&#20379;&#20813;&#36153;&#35777;&#20070;&#65292;&#20294;&#22823;&#37096;&#20998;&#26159;&#38656;&#35201;&#20184;&#36153;&#36141;&#20080;&#30340;&#12290;</li>
</ul>
<p>&#25105;&#20204;&#20808;&#26469;&#23581;&#35797;&#20351;&#29992; Java &#25552;&#20379;&#30340; keytool &#24037;&#20855;&#33258;&#24049;&#31614;&#21457;&#19968;&#20010;&#35777;&#20070;&#65292;&#20855;&#20307;&#30340;&#21629;&#20196;&#26684;&#24335;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>keytool -genkeypair -alias &#21035;&#21517;
         -storetype &#23494;&#38053;&#24211;&#31867;&#22411; -keyalg &#31639;&#27861; -keysize &#38271;&#24230;
         -keystore &#25991;&#20214;&#21517;
         -validity &#26377;&#25928;&#26399;</code></pre>
<p>&#20854;&#20013;&#65292;&#23494;&#38053;&#24211;&#31867;&#22411;&#21487;&#20197;&#36873;&#25321; JKS&#12289;JCEKS &#21644; PKCS12&#65292;&#31639;&#27861;&#21487;&#20197;&#26159; RSA &#25110;&#32773; DSA&#65292;&#23494;&#38053;&#30340;&#38271;&#24230;&#36234;&#38271;&#23433;&#20840;&#24615;&#36234;&#22909;&#65292;&#27604;&#22914;&#29992; 2048 &#20301;&#30340;&#65292;&#35777;&#20070;&#30340;&#26377;&#25928;&#26399;&#21333;&#20301;&#26159;&#22825;&#12290;&#25105;&#20204;&#20363;&#23376;&#20013;&#30340; binarytea.p12 &#25991;&#20214;&#29992;&#30340;&#21629;&#20196;&#23601;&#26159;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; keytool -genkeypair -alias binarytea -storetype pkcs12 -keyalg rsa \ -keysize 2048 -keystore
binarytea.p12 -validity 365</code></pre>
<p>&#36825;&#37324;&#29992;&#20102;&#20132;&#20114;&#24335;&#30340;&#26041;&#24335;&#65292;&#38656;&#35201;&#33258;&#24049;&#36755;&#20837;&#23494;&#38053;&#24211;&#30340;&#23494;&#30721;&#36824;&#26377;&#20854;&#20182;&#19968;&#20123;&#20449;&#24687;&#65292;&#25105;&#20204;&#20363;&#23376;&#37324;&#29992;&#30340;&#23494;&#30721;&#23601;&#26159; <code>binarytea</code>&#12290;</p>
<p>&#33258;&#24049;&#31614;&#21457;&#30340;&#35777;&#20070;&#30001;&#20110;&#26080;&#27861;&#36890;&#36807;&#27983;&#35272;&#22120;&#31561;&#20854;&#20182;&#24037;&#20855;&#30340;&#26657;&#39564;&#65292;&#20351;&#29992;&#26102;&#23384;&#22312;&#35832;&#22810;&#19981;&#20415;&#65292;&#32780;&#33258;&#24049;&#20889;&#31243;&#24207;&#25110;&#32773;&#20351;&#29992;&#24037;&#20855;&#26102;&#24573;&#30053;&#35777;&#20070;&#26657;&#39564;&#38169;&#35823;&#21448;&#23384;&#22312;&#23433;&#20840;&#38544;&#24739;&#65292;&#23481;&#26131;&#34987;&#20013;&#38388;&#20154;&#25915;&#20987;&#65292;&#25152;&#20197;&#19981;&#25512;&#33616;&#22312;&#29983;&#20135;&#20013;&#20351;&#29992;&#12290;&#27604;&#36739;&#21512;&#36866;&#30340;&#26041;&#24335;&#26159;&#20174;&#19987;&#38376;&#30340;&#25480;&#20449;&#26426;&#26500;&#33719;&#24471;&#35777;&#20070;&#12290;&#22269;&#20869;&#30340;&#20960;&#23478;&#22823;&#30340;&#20113;&#26381;&#21153;&#25552;&#20379;&#21830;&#65292;&#20363;&#22914;&#38463;&#37324;&#20113;&#21644;&#33150;&#35759;&#20113;&#65292;&#37117;&#26377;&#25552;&#20379; SSL &#35777;&#20070;&#30340;&#26381;&#21153;&#12290;&#26681;&#25454;&#35777;&#20070;&#30340;&#31867;&#22411;&#21644;&#29992;&#36884;&#65292;&#20250;&#26377;&#19981;&#21516;&#30340;&#20215;&#26684;&#12290;</p>
<p>&#24403;&#28982;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#36873;&#25321;&#20687; Let's Encrypt &#21644;&#20122;&#27954;&#35802;&#20449;&#36825;&#26679;&#30340;&#26426;&#26500; <span class="&#27880;&#37322;&#32534;&#21495;">8</span>&#12290;&#23427;&#20204;&#38024;&#23545;&#21333;&#22495;&#21517;&#25552;&#20379;&#20102;&#20813;&#36153;&#30340;&#35777;&#20070;&#65292;&#30446;&#21069;&#21069;&#32773;&#30340;&#20813;&#36153;&#35777;&#20070;&#26377;&#25928;&#26399;&#26159; 3 &#20010;&#26376;&#65292;&#21518;&#32773;&#30340;&#26377;&#25928;&#26399;&#26159; 1 &#24180;&#12290;&#20063;&#26377;&#31532;&#19977;&#26041;&#26381;&#21153;&#25552;&#20379;&#35777;&#20070;&#33258;&#21160;&#32493;&#31614;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>Tomcat &#23481;&#22120;&#29305;&#23450;&#37197;&#32622;</strong></p>
<p><code>server</code> &#25171;&#22836;&#30340;&#37197;&#32622;&#23545;&#24212;&#20102; Spring Boot &#30340; <code>ServerProperties</code> &#31867;&#65292;Web &#23481;&#22120;&#30456;&#20851;&#30340;&#37197;&#32622;&#22522;&#26412;&#22312;&#36825;&#37324;&#20102;&#65292;&#20854;&#20013;&#36824;&#26377;&#20960;&#20010;&#20869;&#37096;&#31867;&#65292;&#38024;&#23545;&#20102;&#19981;&#21516;&#30340; Web &#23481;&#22120;&#65292;&#20363;&#22914; <code>ServerProperties.Tomcat</code> &#26159;&#38024;&#23545; Tomcat &#30340;&#65292;<code>ServerProperties.Jetty</code> &#26159;&#38024;&#23545; Jetty &#30340;&#65292;&#32780; <code>ServerProperties.Undertow</code> &#21017;&#26159;&#38024;&#23545; Undertow &#30340;&#12290;&#22240;&#20026; Spring Boot &#40664;&#35748;&#20351;&#29992; Tomcat&#65292;&#25152;&#20197;&#36825;&#37324;&#25105;&#20204;&#26469;&#35814;&#32454;&#20102;&#35299;&#19979; Tomcat &#37117;&#26377;&#21738;&#20123;&#37197;&#32622;&#65292;&#20855;&#20307;&#22914;&#34920; 11-8 &#25152;&#31034;&#65292;&#20063;&#21487;&#20197;&#36890;&#36807; <code>ServerProperties</code> &#31867;&#30340;&#20195;&#30721;&#26469;&#26597;&#30475;&#12290;</p>
<p><strong>&#34920; 11-8&#12288;<code>server.tomcat</code> &#25171;&#22836;&#30340;&#20960;&#20010;&#24120;&#29992; Tomcat &#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>server.tomcat.threads.max</code></td><td><code>200</code></td><td>&#26368;&#22823;&#24037;&#20316;&#32447;&#31243;&#25968;</td></tr><tr><td><code>server.tomcat.threads.min-spare</code></td><td><code>10</code></td><td>&#26368;&#23567;&#24037;&#20316;&#32447;&#31243;&#25968;</td></tr><tr><td><code>server.tomcat.max-http-form-post-size</code></td><td><code>2MB</code></td><td>HTTP &#25552;&#20132;&#34920;&#21333;&#25152;&#33021;&#25509;&#21463;&#30340;&#26368;&#22823;&#25253;&#25991;&#22823;&#23567;</td></tr><tr><td><code>server.tomcat.max-swallow-size</code></td><td><code>2MB</code></td><td>&#33021;&#25509;&#21463;&#30340;&#26368;&#22823;&#35831;&#27714;&#25253;&#25991;&#22823;&#23567;</td></tr><tr><td><code>server.tomcat.max-connections</code></td><td><code>8192</code></td><td>&#33021;&#25509;&#21463;&#30340;&#26368;&#22823;&#36830;&#25509;&#25968;</td></tr><tr><td><code>server.tomcat.accept-count</code></td><td><code>100</code></td><td>&#24403;&#25152;&#26377;&#24037;&#20316;&#32447;&#31243;&#37117;&#22312;&#24037;&#20316;&#26102;&#65292;&#36824;&#33021;&#25509;&#21463;&#30340;&#35831;&#27714;&#25968;</td></tr><tr><td><code>server.tomcat.processor-cache</code></td><td><code>200</code></td><td>&#33021;&#34987;&#20445;&#30041;&#19979;&#26469;&#22788;&#29702;&#21518;&#32493;&#35831;&#27714;&#30340;&#31354;&#38386;&#22788;&#29702;&#22120;&#25968;&#37327;</td></tr><tr><td><code>server.tomcat.resource.allow-caching</code></td><td><code>true</code></td><td>&#26159;&#21542;&#24320;&#21551;&#38745;&#24577;&#36164;&#28304;&#32531;&#23384;</td></tr><tr><td><code>server.tomcat.resource.cache-ttl</code></td><td><code>5s</code></td><td>&#38745;&#24577;&#36164;&#28304;&#32531;&#23384;&#30340;&#36807;&#26399;&#26102;&#38388;&#65292;Spring Boot &#37324;&#27809;&#26377;&#32473;&#20986;&#40664;&#35748;&#20540;&#65292;&#20294; Tomcat &#30340; <code>Cache</code> &#37324;&#26377;&#20010;&#40664;&#35748;&#20540;&#20026; 5 &#31186;</td></tr><tr><td><code>server.tomcat.remoteip.host-header</code></td><td><code>X-Forwarded-Host</code></td><td>&#29992;&#26469;&#20256;&#36882;&#36828;&#31471;&#20027;&#26426;&#21517;&#30340; HTTP &#22836;&#65292;&#24403; Tomcat &#35774;&#32622;&#22312;&#36127;&#36733;&#22343;&#34913;&#20043;&#21518;&#26102;&#65292;&#21487;&#20197;&#36890;&#36807;&#23427;&#26469;&#33719;&#24471;&#36828;&#31471;&#20449;&#24687;</td></tr><tr><td><code>server.tomcat.remoteip.remote-ip-header</code></td><td><code>X-Forwarded-For</code></td><td>&#29992;&#26469;&#20256;&#36882;&#36828;&#31471; IP &#22320;&#22336;&#30340; HTTP &#22836;&#65292;&#24403; Tomcat &#35774;&#32622;&#22312;&#36127;&#36733;&#22343;&#34913;&#20043;&#21518;&#26102;&#65292;&#21487;&#20197;&#36890;&#36807;&#23427;&#26469;&#33719;&#24471;&#36828;&#31471;&#20449;&#24687;&#65292;Spring Boot &#37324;&#27809;&#26377;&#32473;&#20986;&#40664;&#35748;&#20540;&#65292;&#20294; Tomcat &#30340; <code>RemoteIpValve</code> &#37324;&#26377;&#40664;&#35748;&#20540;</td></tr></table>
<p>&#160;</p>
</li>
<li><p><strong>&#20854;&#20182;&#37197;&#32622;</strong></p>
<p>&#38500;&#20102;&#23481;&#22120;&#29305;&#23450;&#30340;&#37197;&#32622;&#22806;&#65292;&#22312; Spring Boot &#30340; <code>ServerProperties</code> &#37324;&#36824;&#26377;&#24456;&#22810;&#20854;&#20182;&#30340;&#37197;&#32622;&#39033;&#65292;&#34920; 11-9 &#37324;&#31616;&#21333;&#32599;&#21015;&#20102;&#19968;&#20123;&#65292;&#26356;&#22810;&#30340;&#20869;&#23481;&#21487;&#20197;&#30452;&#25509;&#26597;&#30475; <code>ServerProperties</code> &#30340;&#20195;&#30721;&#65292;&#25110;&#32773;&#26597;&#38405; Spring Boot &#25991;&#26723;&#30340;&#38468;&#24405;&#37096;&#20998;&#12290;</p>
<p><strong>&#34920; 11-9&#12288;ServerProperties &#20013;&#30340;&#19968;&#20123;&#20854;&#20182;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>server.max-http-header-size</code></td><td><code>8KB</code></td><td>&#33021;&#25509;&#21463;&#30340;&#26368;&#22823; HTTP &#25253;&#25991;&#22836;&#22823;&#23567;</td></tr><tr><td><code>server.servlet.context-path</code></td><td></td><td>&#24212;&#29992;&#30340;&#19978;&#19979;&#25991;&#36335;&#24452;</td></tr><tr><td><code>server.servlet.session.timeout</code></td><td><code>30m</code></td><td>&#20250;&#35805;&#36229;&#26102;&#26102;&#38388;&#65292;&#22914;&#26524;&#19981;&#24102;&#21518;&#32512;&#65292;&#40664;&#35748;&#21333;&#20301;&#26159;&#31186;</td></tr><tr><td><code>server.servlet.session.cookie.http-only</code></td><td><code>false</code></td><td>&#20250;&#35805; Cookie &#26159;&#21542;&#20351;&#29992; HttpOnly &#30340; Cookie</td></tr><tr><td><code>server.servlet.session.cookie.max-age</code></td><td></td><td>&#20250;&#35805; Cookie &#30340;&#26368;&#38271;&#26377;&#25928;&#26102;&#38388;&#65292;&#22914;&#26524;&#19981;&#24102;&#21518;&#32512;&#65292;&#40664;&#35748;&#21333;&#20301;&#26159;&#31186;&#12290;Spring Boot &#27809;&#26377;&#32473;&#20986;&#40664;&#35748;&#20540;&#65292;&#20294; Tomcat &#37324; Cookie &#30340; <code>maxAge</code> &#30340;&#40664;&#35748;&#20540;&#20026; <code>-1</code></td></tr><tr><td><code>server.error.include-exception</code></td><td><code>false</code></td><td>&#26159;&#21542;&#21253;&#21547; <code>exception</code> &#23646;&#24615;&#65292;&#19981;&#24314;&#35758;&#22312;&#29983;&#20135;&#29615;&#22659;&#37324;&#24320;&#21551;</td></tr><tr><td><code>server.error.include-stacktrace</code></td><td><code>never</code></td><td>&#20309;&#26102;&#35201;&#21253;&#21547; <code>trace</code> &#23646;&#24615;&#65292;&#37324;&#38754;&#26159;&#24322;&#24120;&#30340;&#36319;&#36394;&#26632;&#65292;&#19981;&#24314;&#35758;&#22312;&#29983;&#20135;&#29615;&#22659;&#37324;&#24320;&#21551;</td></tr><tr><td><code>server.error.path</code></td><td><code>/error</code></td><td>&#26174;&#31034;&#38169;&#35823;&#20449;&#24687;&#30340;&#25511;&#21046;&#22120;&#36335;&#24452;</td></tr><tr><td><code>server.error.whitelabel.enabled</code></td><td><code>true</code></td><td>&#21457;&#29983;&#38169;&#35823;&#26102;&#26159;&#21542;&#20351;&#29992;&#40664;&#35748;&#30340;&#38169;&#35823;&#39029; <sup><b>9</b></sup></td></tr></table>
<blockquote>
<p><sup><b>9</b></sup>White Label &#20013;&#25991;&#30452;&#35793;&#20026;&#30333;&#26631;&#65292;&#26368;&#26089;&#25351;&#19981;&#24102;&#33258;&#24049;&#30340;&#21697;&#29260;&#65292;&#19981;&#20570;&#21697;&#29260;&#23459;&#20256;&#12290;&#25918;&#22312;&#36825;&#37324;&#65292;Spring Boot &#30340;&#40664;&#35748;&#38169;&#35823;&#39029;&#38754;&#21483; White Label&#65292;&#22823;&#27010;&#20063;&#26159;&#22240;&#20026;&#19978;&#38754;&#27809;&#26377; Spring &#21644;&#31995;&#32479;&#30340; Logo &#19982;&#20449;&#24687;&#65292;&#21482;&#26377;&#22823;&#22823;&#30340; Whitelabel Error Page &#21644;&#38169;&#35823;&#20869;&#23481;&#12290;</p>
</blockquote>
<p>&#22914;&#26524;&#36890;&#36807;&#37197;&#32622;&#21442;&#25968;&#26080;&#27861;&#28385;&#36275;&#38656;&#27714;&#65292;Spring Boot &#36824;&#25552;&#20379;&#20102;&#19968;&#20010; <code>WebServerFactoryCustomizer&lt;T extends WebServerFactory&gt;</code> &#25509;&#21475;&#65292;<code>WebServerFactoryCustomizerBeanPostProcessor</code> &#36825;&#20010;&#21518;&#32622;&#22788;&#29702;&#22120;&#20250;&#23545;&#19978;&#19979;&#25991;&#37324;&#30340;&#27599;&#20010; <code>WebServerFactory</code> Bean &#25191;&#34892;&#21518;&#32622;&#22788;&#29702;&#65292;&#36827;&#34892;&#20010;&#24615;&#21270;&#37197;&#32622;&#12290;&#22312; Spring Boot &#37324;&#38024;&#23545;&#19981;&#21516;&#30340;&#23481;&#22120;&#25552;&#20379;&#20102;&#19981;&#21516;&#30340; <code>WebServerFactory</code>&#65292;&#20363;&#22914; <code>TomcatServletWebServerFactory</code>&#12289;<code>JettyServletWebServerFactory</code> &#21644; <code>UndertowServletWebServerFactory</code>&#65292;&#21709;&#24212;&#24335; Web &#23481;&#22120;&#20063;&#26377;&#23545;&#24212;&#30340;&#31867;&#12290;&#22914;&#26524;&#24819;&#23450;&#21046; Tomcat &#23481;&#22120;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
public class BinaryteaTomcatWebServerCustomizer
        implements WebServerFactoryCustomizer&lt;TomcatServletWebServerFactory&gt; {

    @Override
    public void customize(TomcatServletWebServerFactory factory) {
        // &#35843;&#29992;factory&#37324;&#30340;&#26041;&#27861;
        //&#20363;&#22914;addAdditionalTomcatConnectors()&#65292;&#21487;&#20197;&#22810;&#30417;&#21548;&#20960;&#20010;&#19981;&#21516;&#30340;&#31471;&#21475;
    }
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">6</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch11/binarytea-https &#39033;&#30446;&#37324;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">7</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch11/customer-https &#39033;&#30446;&#37324;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">8</span>&#22823;&#23478;&#20063;&#21487;&#20197;&#36890;&#36807;&#33150;&#35759;&#20113;&#21644;&#19971;&#29275;&#20113;&#30003;&#35831;&#20122;&#27954;&#35802;&#20449;&#30340;&#20813;&#36153;&#35777;&#20070;&#12290;</p><h3 id="nav_point_179">11.2.3&#12288;&#25903;&#25345; HTTP/2</h3><p>&#25105;&#20204;&#22312;&#26085;&#24120;&#27983;&#35272;&#32593;&#39029;&#26102;&#20351;&#29992;&#30340;&#21327;&#35758;&#22823;&#22810;&#26159; HTTP/1.1&#65292;&#20043;&#21069;&#30340;&#20363;&#23376;&#37324;&#20351;&#29992;&#30340;&#20063;&#26159;&#36825;&#20010;&#21327;&#35758;&#12290;HTTP/1.1 &#27491;&#24335;&#21457;&#24067;&#20110; 1999 &#24180;&#65292;&#33267;&#20170;&#24050;&#32463; 20 &#20313;&#24180;&#20102;&#12290;&#36825;&#26159;&#19968;&#20010;&#20248;&#31168;&#19988;&#20255;&#22823;&#30340;&#21327;&#35758;&#65292;&#32463;&#20303;&#20102;&#21382;&#21490;&#30340;&#32771;&#39564;&#12290;&#20294;&#23427;&#20063;&#19981;&#26159;&#23436;&#20840;&#27809;&#26377;&#38382;&#39064;&#65292;HTTP/1.1 &#30340;&#24615;&#33021;&#23601;&#19968;&#30452;&#34987;&#20154;&#35807;&#30149;&#65292;&#25152;&#20197;&#20986;&#29616;&#20102;&#24456;&#22810;&#30475;&#20284;&#19981;&#22826;&#21512;&#29702;&#30340;&#20248;&#21270;&#25163;&#27573;&#65292;&#20363;&#22914; CSS &#38634;&#30887;&#22270;&#65288;CSS Sprites&#65289;<span class="&#27880;&#37322;&#32534;&#21495;">10</span>&#12290;&#20026;&#20102;&#20248;&#21270; HTTP &#30340;&#24615;&#33021;&#65292;Google &#22312; 2012 &#24180;&#25512;&#20986;&#20102; SPDY&#65292;&#36825;&#20063;&#21487;&#20197;&#30475;&#25104;&#26159; HTTP/2 &#30340;&#21407;&#22411;&#65292;2016 &#24180;&#21518; Google &#23601;&#19981;&#20877;&#25903;&#25345; SPDY&#65292;&#36716;&#32780;&#25317;&#25265; HTTP/2 &#20102;&#12290;HTTP/2 &#22312;&#24615;&#33021;&#26041;&#38754;&#20570;&#20102;&#19981;&#23569;&#20248;&#21270;&#65292;&#20363;&#22914;&#65306;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">10</span>CSS &#38634;&#30887;&#22270;&#23601;&#26159;&#25226;&#24456;&#22810;&#23567;&#22270;&#26631;&#25972;&#21512;&#25104;&#19968;&#20010;&#22823;&#30340;&#22270;&#29255;&#25991;&#20214;&#65292;&#19981;&#29992;&#27983;&#35272;&#22120;&#21457;&#36215;&#22823;&#37327;&#23567;&#35831;&#27714;&#26469;&#33719;&#21462;&#22270;&#29255;&#65292;&#29992;&#19968;&#20010;&#19979;&#36733;&#22823;&#25991;&#20214;&#65288;&#20854;&#23454;&#20063;&#27809;&#37027;&#20040;&#22823;&#65289;&#30340;&#35831;&#27714;&#21462;&#32780;&#20195;&#20043;&#12290;&#22240;&#20026;&#22312; HTTP/1.1 &#37324;&#27983;&#35272;&#22120;&#38024;&#23545;&#19968;&#20010;&#22495;&#21517;&#21482;&#20250;&#24314;&#31435;&#23569;&#25968;&#36830;&#25509;&#65292;&#32780;&#27599;&#20010;&#36830;&#25509;&#19968;&#27425;&#21448;&#21482;&#20250;&#22788;&#29702;&#19968;&#20010;&#35831;&#27714;&#65292;&#22823;&#37327;&#30340;&#35831;&#27714;&#21183;&#24517;&#20250;&#36896;&#25104;&#31561;&#24453;&#65292;&#21363;&#20351;&#24320;&#21551;&#20102;&#38271;&#36830;&#25509;&#65292;&#24615;&#33021;&#20063;&#19968;&#33324;&#12290;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#22810;&#36335;&#22797;&#29992;&#65292;&#33021;&#22312;&#19968;&#20010;&#36830;&#25509;&#19978;&#21516;&#26102;&#21457;&#36215;&#22810;&#20010;&#35831;&#27714;&#65292;&#19981;&#20877;&#38656;&#35201;&#31561;&#19968;&#20010;&#32467;&#26463;&#21518;&#20877;&#21457;&#36215;&#19979;&#19968;&#20010;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#20108;&#36827;&#21046;&#20998;&#24103;&#65292;&#36890;&#36807;&#22312;&#24212;&#29992;&#23618;&#21644;&#20256;&#36755;&#23618;&#20043;&#38388;&#24341;&#20837;&#39069;&#22806;&#30340;&#19968;&#23618;&#65292;&#29992;&#20108;&#36827;&#21046;&#32534;&#30721;&#21518;&#30340;&#24103;&#26469;&#20943;&#23569;&#20256;&#36755;&#37327;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">HTTP &#22836;&#21387;&#32553;&#65292;&#20043;&#21069;&#30340;&#21387;&#32553;&#26159;&#38024;&#23545;&#25253;&#25991;&#27491;&#25991;&#30340;&#65292;&#32780;&#22312; HTTP/2 &#20013;&#25253;&#25991;&#22836;&#20063;&#21487;&#20197;&#29992; HPack &#31639;&#27861;&#21387;&#32553;&#20102;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#26381;&#21153;&#31471;&#25512;&#36865;&#65288;Server Push&#65289;&#65292;&#26381;&#21153;&#31471;&#33021;&#20027;&#21160;&#23558;&#20869;&#23481;&#25512;&#36865;&#32473;&#23458;&#25143;&#31471;&#12290;</li>
</ul><p>Spring Boot &#20869;&#32622;&#20102;&#22810;&#27454; Web &#23481;&#22120;&#65292;&#22522;&#26412;&#37117;&#25903;&#25345; HTTP/2&#65292;&#21482;&#38656;&#31616;&#21333;&#30340;&#37197;&#32622;&#23601;&#21487;&#20197;&#20102;&#12290;&#20294;&#22914;&#26524;&#26377;&#26465;&#20214;&#30340;&#35805;&#65292;&#36824;&#26159;&#24314;&#35758;&#22312;&#36127;&#36733;&#22343;&#34913;&#23618;&#38754;&#26469;&#22788;&#29702; HTTP/2 &#21644; TLS &#30340;&#24037;&#20316;&#65292;&#32780;&#19981;&#26159;&#22312;&#24212;&#29992;&#26381;&#21153;&#22120;&#19978;&#12290;</p><ol>
<li><p><strong>&#26381;&#21153;&#31471;&#25903;&#25345; HTTP/2</strong></p>
<p>&#22823;&#37096;&#20998;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#20351;&#29992;&#30340;&#26159; Tomcat&#65292;&#25152;&#20197;&#26469;&#30475;&#30475;&#22914;&#20309;&#24320;&#21551; Tomcat &#30340; HTTP/2 &#25903;&#25345;&#12290;&#22914;&#26524;&#22312;&#20351;&#29992; JDK 9 &#21450;&#20197;&#19978;&#30340;&#29256;&#26412;&#65288;&#20363;&#22914; LTS &#29256;&#26412; 11 &#21644; 17&#65289;&#65292;&#37027; Spring Boot &#33258;&#24102;&#30340; Tomcat &#33021;&#30452;&#25509;&#25903;&#25345; HTTP/2&#65292;&#21482;&#38656;&#22312;&#37197;&#32622;&#25991;&#20214;&#20013;&#22686;&#21152;&#22914;&#19979;&#37197;&#32622;&#21363;&#21487;&#65306;<span class="&#27880;&#37322;&#32534;&#21495;">11</span></p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>server.http2.enabled=true</code></pre>
<p>&#20026;&#20160;&#20040;&#36825;&#37324;&#30340;&#26368;&#20302;&#35201;&#27714;&#26159; JDK 9 &#21602;&#65292;&#22240;&#20026; JDK 8 &#19981;&#25903;&#25345; HTTP/2&#65292;&#27492;&#26102; Tomcat &#38656;&#35201; libtcnative &#30340;&#24110;&#21161;&#25165;&#33021;&#25552;&#20379; HTTP/2 &#26381;&#21153;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">12</span> &#19981;&#36807;&#65292;&#20063;&#26377;&#19981;&#36208;&#23547;&#24120;&#36335;&#30340;&#65292;Undertow &#23601;&#33258;&#24049;&#23454;&#29616;&#20102; HTTP/2&#65292;&#22312; JDK 8 &#19978;&#20063;&#33021;&#22312;&#26080;&#39035;&#20219;&#20309;&#39069;&#22806;&#20381;&#36182;&#30340;&#24773;&#20917;&#19979;&#25903;&#25345; HTTP/2&#12290;</p>
<p>&#23436;&#25104;&#37197;&#32622;&#21518;&#65292;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807; curl &#21629;&#20196;&#31616;&#21333;&#22320;&#20570;&#20010;&#27979;&#35797;&#65292;&#30475;&#21040;&#22914;&#19979;&#36755;&#20986;&#20013;&#30340; <code>h2</code> &#21644; <code>HTTP/2</code> &#23601;&#35828;&#26126;&#8220;&#36208;&#20102;&#8221;HTTP/2 &#21327;&#35758;&#65292;&#36824;&#21487;&#20197;&#21152;&#19978; <code>--http2</code> &#24378;&#21046;&#20351;&#29992; HTTP/2&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; curl -v -k https://localhost:8443/menu/

*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 8443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
* &#30465;&#30053;&#37096;&#20998;&#20869;&#23481;
* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384
* ALPN, server accepted to use h2
* &#30465;&#30053;&#37096;&#20998;&#20869;&#23481;
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
* Using Stream ID: 1 (easy handle 0x7fe31500e800)
&gt; GET /menu/ HTTP/2
&gt; Host: localhost:8443
&gt; User-Agent: curl/7.64.1
&gt; Accept: */*
&gt;
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
&lt; HTTP/2 200
&lt; &#30465;&#30053;&#37096;&#20998;&#20869;&#23481;</code></pre>
<p>&#34429;&#28982;&#23448;&#26041;&#19981;&#24314;&#35758;&#20351;&#29992;&#22522;&#20110;&#26126;&#25991;&#30340; HTTP/2&#65288;&#31616;&#31216; H2C&#65289;&#65292;&#20294;&#25105;&#20204;&#36824;&#26159;&#21487;&#20197;&#22312; Spring Boot &#25552;&#20379; H2C &#30340;&#26381;&#21153;&#12290;&#39318;&#20808;&#23558; <code>server.http2.enabled</code> &#35774;&#32622;&#20026; <code>false</code>&#65307;&#25509;&#19979;&#26469;&#65292;&#29992;&#19978;&#19968;&#33410;&#25552;&#21040;&#30340; <code>WebServerFactoryCustomizer&lt;TomcatServletWebServerFactory&gt;</code> &#20570;&#20123;&#25163;&#21160;&#37197;&#32622;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-12 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">13</span> &#20351;&#29992; H2C &#26102;&#35760;&#24471;&#35201;&#21435;&#25481;&#25152;&#26377; SSL &#30456;&#20851;&#30340;&#37197;&#32622;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-12</strong>&#12288;&#24320;&#21551; H2C &#25903;&#25345;&#30340;&#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
public class BinaryTeaApplication implements WebMvcConfigurer,
        WebServerFactoryCustomizer&lt;TomcatServletWebServerFactory&gt; {
    @Override
    public void customize(TomcatServletWebServerFactory factory) {
        factory.addConnectorCustomizers(connector -&gt; connector.addUpgradeProtocol(new Http2Protocol()));
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#19968;&#26679;&#65292;&#20063;&#26159;&#29992; curl &#21629;&#20196;&#26469;&#20570;&#27979;&#35797;&#65292;&#20294;&#26159;&#19968;&#23450;&#35201;&#29992; <code>--http2</code> &#24378;&#21046;&#20351;&#29992; HTTP/2&#65292;&#36825;&#26102;&#34429;&#28982;&#26174;&#31034;&#30340;&#21327;&#35758;&#26159; HTTP/1.1&#65292;&#20294; <code>Upgrade: h2c</code> &#35828;&#26126;&#24050;&#32463;&#21319;&#32423;&#21040;&#20102; H2C&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; curl --http2 -v http://localhost:8080/menu
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 8080 (#0)
&gt; GET /menu HTTP/1.1
&gt; Host: localhost:8080
&gt; User-Agent: curl/7.64.1
&gt; Accept: */*
&gt; Connection: Upgrade, HTTP2-Settings
&gt; Upgrade: h2c
&gt; HTTP2-Settings: AAMAAABkAARAAAAAAAIAAAAA
&gt;
&lt; HTTP/1.1 101
&lt; Connection: Upgrade
&lt; Upgrade: h2c
&lt; Date: Sun, 21 Feb 2021 14:18:34 GMT
* Received 101
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
&lt; HTTP/2 200</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#23458;&#25143;&#31471;&#25903;&#25345; HTTP/2</strong></p>
<p>&#32842;&#23436;&#20102;&#26381;&#21153;&#31471;&#65292;&#20877;&#26469;&#30475;&#30475;&#23458;&#25143;&#31471;&#29992; <code>RestTemplate</code> &#22914;&#20309;&#25903;&#25345; HTTP/2&#12290;&#22312; 9.4 &#33410;&#37324;&#25105;&#20204;&#35828;&#36807; <code>RestTemplate</code> &#25903;&#25345;&#22810;&#31181;&#24213;&#23618;&#30340; HTTP &#23458;&#25143;&#31471;&#65292;&#20854;&#20013;&#29992;&#30340;&#27604;&#36739;&#22810;&#30340;&#26159; Apache HttpComponents &#21644; OkHttp&#12290;&#23601; HTTP/2 &#32780;&#35328;&#65292;HttpComponents &#22312; 5.1 &#29256;&#26412;&#25165;&#24320;&#22987;&#25903;&#25345;&#65292;&#20294;&#22312; Spring Framework &#20013;&#36866;&#37197;&#30340;&#36824;&#26159; 4.<em>x</em> &#30340;&#29256;&#26412;&#12290;OkHttp &#23601;&#19981;&#23384;&#22312;&#36825;&#20010;&#38382;&#39064;&#65292;Spring Framework &#36866;&#37197;&#30340; OkHttp 3.14 &#29256;&#26412;&#23601;&#24050;&#32463;&#23436;&#20840;&#25903;&#25345; HTTP/2 &#20102;&#65292;&#22240;&#27492;&#22312;&#36825;&#37324;&#25105;&#20204;&#23601;&#35201;&#25226;&#24213;&#23618;&#30340;&#23458;&#25143;&#31471;&#20999;&#25442;&#20026; OkHttp&#12290;</p>
<p>&#39318;&#20808;&#65292;&#25105;&#20204;&#35843;&#25972;&#19968;&#19979; pom.xml&#65292;&#23558; HttpComponents &#30340;&#20381;&#36182;&#21435;&#25481;&#65292;&#22686;&#21152; OkHttp &#30340;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;
    &lt;artifactId&gt;okhttp&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#20462;&#25913; <code>CustomerApplication</code> &#30340; <code>requestFactory()</code> &#26041;&#27861;&#65292;&#21407;&#20808;&#23427;&#36820;&#22238;&#30340;&#26159; <code>HttpComponentsClientHttpRequestFactory</code>&#65292;&#29616;&#22312;&#35201;&#25913;&#20026; <code>OkHttp3ClientHttpRequestFactory</code>&#65292;&#30456;&#24212;&#30340; SSL &#37197;&#32622;&#21644;&#36830;&#25509;&#37197;&#32622;&#20063;&#35201;&#20570;&#19968;&#23450;&#30340;&#35843;&#25972;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-13 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">14</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-13</strong>&#12288;&#36866;&#37197; OkHttp &#30340; <code>ClientHttpRequestFactory</code> &#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class CustomerApplication {
    @Bean
    public ClientHttpRequestFactory requestFactory() {

        // &#26500;&#36896;SSLSocketFactory&#65292;&#37197;&#32622;&#23494;&#38053;&#31561;&#20449;&#24687;
        SSLSocketFactory sslSocketFactory = null;
        TrustManagerFactory tmf = null;
        try {
            KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
            keyStore.load(this.keyStore.getInputStream(), keyStorePassword.toCharArray());
            tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
            tmf.init(keyStore);
            SSLContext sslContext = SSLContext.getInstance("TLS");
            sslContext.init(null, tmf.getTrustManagers(), null);
            sslSocketFactory = sslContext.getSocketFactory();
        } catch (Exception e) {
            log.error("Can NOT create sslSocketFactory and ", e);
        }

        OkHttpClient.Builder builder = new OkHttpClient.Builder()
             .protocols(Arrays.asList(Protocol.HTTP_2, Protocol.HTTP_1_1)) // &#40664;&#35748;&#23601;&#36825;&#26679;
             .connectTimeout(10, TimeUnit.SECONDS) // &#20197;&#19979;3&#20010;&#36229;&#26102;&#40664;&#35748;&#23601;&#26159;10&#31186;
             .callTimeout(10, TimeUnit.SECONDS)
             .readTimeout(10, TimeUnit.SECONDS)
             .connectionPool(new ConnectionPool(50, 30, TimeUnit.MINUTES));

        if (sslSocketFactory != null) {
            builder.connectionSpecs(Collections.singletonList(ConnectionSpec.RESTRICTED_TLS))
                    .hostnameVerifier((hostname, session) -&gt; true) // &#19981;&#39564;&#35777;&#20027;&#26426;
                    .sslSocketFactory(sslSocketFactory, (X509TrustManager) tmf.getTrustManagers()[0]);
        }

        return new OkHttp3ClientHttpRequestFactory(builder.build());
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#36825;&#37324;&#38656;&#35201;&#20570;&#19968;&#20123;&#35828;&#26126;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>protocols()</code> &#25351;&#23450;&#25903;&#25345;&#30340;&#21327;&#35758;&#26377;&#20123;&#38480;&#21046;&#65292;&#20363;&#22914;&#65292;<code>H2_PRIOR_KNOWLEDGE</code> &#21644; <code>HTTP_1_1</code> &#24517;&#39035;&#33267;&#23569;&#26377;&#19968;&#20010;&#65307;&#29992;&#20102; <code>H2_PRIOR_KNOWLEDGE</code> &#23601;&#19981;&#33021;&#20877;&#21152;&#21035;&#30340;&#21327;&#35758;&#20102;&#65307;&#19981;&#33021;&#20351;&#29992; <code>HTTP_1_0</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>connectTimeout()</code>&#12289;<code>callTimeout()</code> &#21644; <code>readTimeout()</code> &#36825;&#19977;&#20010;&#36229;&#26102;&#35774;&#32622;&#20026; <code>0</code> &#34920;&#31034;&#19981;&#36229;&#26102;&#65292;&#36825;&#37324;&#30340;&#20195;&#30721;&#31034;&#20363;&#37324;&#20351;&#29992;&#30340;&#20854;&#23454;&#23601;&#26159;&#40664;&#35748;&#20540;&#65292;&#25918;&#22312;&#36825;&#37324;&#20027;&#35201;&#26159;&#28436;&#31034;&#19968;&#19979;&#26377;&#36825;&#20010;&#37197;&#32622;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>callTimeout()</code> &#36825;&#20010;&#36229;&#26102;&#21253;&#21547;&#20102;&#25972;&#20010;&#35831;&#27714;&#36807;&#31243;&#65292;&#21253;&#25324; DNS &#35299;&#26512;&#12289;&#36830;&#25509;&#12289;&#21457;&#36865;&#35831;&#27714;&#12289;&#31561;&#24453;&#26381;&#21153;&#31471;&#22788;&#29702;&#21644;&#36820;&#22238;&#24212;&#31572;&#65292;&#22914;&#26524;&#37197;&#32622;&#20102;&#37325;&#35797;&#65292;&#37027;&#37325;&#35797;&#20063;&#21253;&#21547;&#22312;&#20869;&#12290;&#22240;&#27492;&#23427;&#33267;&#23569;&#24212;&#35813;&#22823;&#20110;&#31561;&#20110;&#21478;&#20004;&#20010;&#21333;&#29420;&#27493;&#39588;&#30340;&#36229;&#26102;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>hostnameVerifier()</code> &#35774;&#32622;&#20026;&#19981;&#39564;&#35777;&#20027;&#26426;&#23436;&#20840;&#26159;&#22240;&#20026;&#25105;&#20204;&#22312;&#28436;&#31034;&#26102;&#20351;&#29992;&#20102;&#33258;&#31614;&#35777;&#20070;&#65292;&#22312;&#29983;&#20135;&#29615;&#22659;&#19981;&#24314;&#35758;&#36825;&#20040;&#20570;&#65292;&#23384;&#22312;&#23433;&#20840;&#38544;&#24739;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">OkHttp &#20869;&#32622;&#20102;&#19968;&#20123; <code>ConnectionSpec</code>&#65292;&#20363;&#23376;&#37324;&#25105;&#20204;&#20351;&#29992;&#20102; <code>RESTRICTED_TLS</code>&#65292;&#20855;&#20307;&#30340;&#20960;&#20010;&#20869;&#32622;&#39033;&#22914;&#34920; 11-10 &#25152;&#31034;&#65288;&#26681;&#25454;&#23433;&#20840;&#24615;&#20174;&#39640;&#21040;&#20302;&#25490;&#21015;&#65289;&#12290;</li>
</ul>
<p><strong>&#34920; 11-10&#12288;OkHttp &#20869;&#32622;&#30340; <code>ConnectionSpec</code></strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><td><code>ConnectionSpec</code></td><th>&#25903;&#25345;&#30340; TLS &#29256;&#26412;</th><th>&#21152;&#23494;&#22871;&#20214; <sup><b>15</b></sup></th><th>&#36866;&#29992;&#33539;&#22260;</th></tr><tr><td><code>RESTRICTED_TLS</code></td><td>TLS 1.3 &#19982; TLS 1.2</td><td>&#30446;&#21069;&#20026;&#27490;&#36739;&#20026;&#23433;&#20840;&#19988;&#25903;&#25345;&#36739;&#22810;&#30340; 9 &#31181;&#22871;&#20214;</td><td>&#26381;&#21153;&#31471;&#21644;&#23458;&#25143;&#31471;&#29256;&#26412;&#37117;&#27604;&#36739;&#26032;&#30340;&#24773;&#20917;</td></tr><tr><td><code>MODERN_TLS</code></td><td>TLS 1.3 &#19982; TLS 1.2</td><td>&#22312; <code>RESTRICTED_TLS</code> &#30340;&#22522;&#30784;&#19978;&#22686;&#21152;&#20102; 7 &#31181; HTTP/2 &#19981;&#25512;&#33616;&#30340;&#22871;&#20214;</td><td>&#25903;&#25345;&#22823;&#37096;&#20998;&#24773;&#20917;&#65292;&#20063;&#26159;&#40664;&#35748;&#20351;&#29992;&#30340;</td></tr><tr><td><code>COMPATIBLE_TLS</code></td><td>TLS 1.3&#12289;TLS 1.2&#12289;TLS 1.1 &#19982; TLS 1.0</td><td>&#21516; <code>MODERN_TLS</code></td><td>&#29992;&#26469;&#20860;&#23481;&#19968;&#20123;&#36739;&#32769;&#30340;&#24179;&#21488;</td></tr><tr><td><code>CLEARTEXT</code></td><td>&#26080;</td><td>&#26080;</td><td>HTTP &#26126;&#25991;&#20256;&#36755;</td></tr></table>
<blockquote>
<p><sup><b>15</b></sup>&#21152;&#23494;&#22871;&#20214;&#65288;Cipher Suite&#65289;&#65292;&#20854;&#23454;&#26159;&#19968;&#20010;&#8220;&#22235;&#20214;&#22871;&#8221;&#65292;&#30001;&#23494;&#38053;&#20132;&#25442;&#31639;&#27861;&#12289;&#36523;&#20221;&#39564;&#35777;&#31639;&#27861;&#12289;&#23545;&#31216;&#21152;&#23494;&#31639;&#27861;&#21644;&#20449;&#24687;&#25688;&#35201;&#31639;&#27861;&#22235;&#20010;&#37096;&#20998;&#32452;&#25104;&#12290;&#20197; TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 &#20026;&#20363;&#65292;&#21327;&#35758;&#26159; TLS&#65292;&#23494;&#38053;&#20132;&#25442;&#31639;&#27861;&#26159; ECDHE&#65292;&#36523;&#20221;&#39564;&#35777;&#31639;&#27861;&#26159; RSA_WITH_AES_256&#65292;&#23545;&#31216;&#21152;&#23494;&#31639;&#27861;&#26159; GCM&#65292;&#20449;&#24687;&#25688;&#35201;&#31639;&#27861;&#26159; SHA384&#12290;</p>
</blockquote>
<p>&#22914;&#26524;&#24819;&#35201;&#36208; H2C &#21327;&#35758;&#65292;&#22312; <code>requestFactory()</code> &#37324;&#21024;&#25481;&#19982; SSL &#30456;&#20851;&#30340;&#20869;&#23481;&#65292;&#21327;&#35758;&#25913;&#20026; <code>H2_PRIOR_KNOWLEDGE</code> &#23601;&#21487;&#20197;&#20102;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-14 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-14</strong>&#25903;&#25345; H2C &#30340; <code>ClientHttpRequestFactory</code> &#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public ClientHttpRequestFactory requestFactory() {
    OkHttpClient.Builder builder = new OkHttpClient.Builder()
                 // &#21482;&#33021;&#20445;&#30041;&#19968;&#20010;
                 .protocols(Arrays.asList(Protocol.H2_PRIOR_KNOWLEDGE))
                 .connectTimeout(10, TimeUnit.SECONDS)
                 .callTimeout(10, TimeUnit.SECONDS)
                 .readTimeout(10, TimeUnit.SECONDS)
                 .connectionPool(new ConnectionPool(50, 30, TimeUnit.MINUTES));

    return new OkHttp3ClientHttpRequestFactory(builder.build());
}</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#32593;&#31449;&#25552;&#20379;&#30340; HTTPS &#26381;&#21153;&#21040;&#24213;&#26159;&#21542;&#23433;&#20840;&#65311;</strong></p>
<p>&#22312;&#36825;&#37096;&#20998;&#37324;&#25105;&#20204;&#35752;&#35770;&#20102;&#24456;&#22810; HTTPS &#36824;&#26377; HTTP/2 &#30340;&#20869;&#23481;&#65292;&#32463;&#36807;&#36825;&#19968;&#36718;&#35774;&#32622;&#65292;&#32593;&#31449;&#30340;&#23433;&#20840;&#24615;&#24471;&#21040;&#20102;&#24456;&#22823;&#30340;&#25552;&#21319;&#12290;&#20294;&#26159;&#65292;&#25105;&#20204;&#20570;&#30340;&#21040;&#24213;&#22909;&#19981;&#22909;&#65292;&#22815;&#19981;&#22815;&#21602;&#65311;&#24635;&#24471;&#26816;&#39564;&#19968;&#19979;&#25165;&#33021;&#25918;&#24515;&#12290;&#22823;&#20844;&#21496;&#26377;&#33258;&#24049;&#30340;&#23433;&#20840;&#22242;&#38431;&#65292;&#26377;&#38065;&#30340;&#20013;&#23567;&#20844;&#21496;&#21487;&#20197;&#35831;&#31532;&#19977;&#26041;&#26426;&#26500;&#36827;&#34892;&#26816;&#27979;&#12290;&#37027;&#26377;&#27809;&#26377;&#26082;&#26041;&#20415;&#21448;&#19981;&#29992;&#33457;&#38065;&#12289;&#32467;&#26524;&#36824;&#26377;&#21442;&#32771;&#20215;&#20540;&#30340;&#21150;&#27861;&#21602;&#65311;</p>
<p>&#32467;&#35770;&#32943;&#23450;&#26159;&#26377;&#30340;&#65292;&#36825;&#37324;&#35201;&#32473;&#22823;&#23478;&#25512;&#33616;&#20004;&#20010;&#24037;&#20855;&#65292;&#19968;&#20010;&#26159; SSL Labs &#30340;&#22312;&#32447; SSL &#27979;&#35797;&#65292;&#21478;&#19968;&#20010;&#26159;&#20122;&#27954;&#35802;&#20449;&#25512;&#20986;&#30340; MySSL &#26816;&#27979;&#24037;&#20855;&#12290;&#20004;&#32773;&#30340;&#20316;&#29992;&#24046;&#19981;&#22810;&#65292;&#37117;&#26159;&#26681;&#25454;&#20107;&#20808;&#39044;&#35774;&#22909;&#30340;&#26816;&#27979;&#26465;&#30446;&#65292;&#36880;&#26465;&#36827;&#34892;&#26816;&#27979;&#65292;&#35268;&#21017;&#21253;&#25324;&#20294;&#19981;&#38480;&#20110;&#35777;&#20070;&#12289;&#25903;&#25345;&#30340;&#21327;&#35758;&#12289;&#25903;&#25345;&#30340;&#31639;&#27861;&#12289;&#26159;&#21542;&#23384;&#22312;&#24050;&#30693;&#28431;&#27934;&#31561;&#12290;&#28982;&#21518;&#26681;&#25454;&#26816;&#27979;&#32467;&#26524;&#36827;&#34892;&#32508;&#21512;&#25171;&#20998;&#65292;&#26368;&#21518;&#38024;&#23545;&#32593;&#31449; SSL &#37197;&#32622;&#30340;&#23433;&#20840;&#24615;&#20570;&#20986;&#19968;&#20010;&#35780;&#20215;&#65292;&#26368;&#39640;&#26159; A+&#12290;&#22914;&#26524;&#23384;&#22312;&#38382;&#39064;&#65292;&#24037;&#20855;&#20063;&#20250;&#32473;&#20986;&#20248;&#21270;&#24314;&#35758;&#12290;</p>
<p>&#21487;&#20197;&#36873;&#25321;&#20854;&#19968;&#23545;&#33258;&#24049;&#30340;&#32593;&#31449;&#36827;&#34892;&#22312;&#32447;&#27979;&#35797;&#12290;&#24314;&#35758;&#36873;&#25321;&#21069;&#32773;&#65292;&#35268;&#21017;&#20250;&#26356;&#20026;&#20005;&#26684;&#19968;&#20123;&#12290;</p>
</blockquote>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">11</span>&#30001;&#20110; HTTP/2 &#24314;&#35758;&#24320;&#21551; SSL &#22686;&#24378;&#23433;&#20840;&#24615;&#65292;&#25152;&#20197;&#25105;&#20204;&#36825;&#37324;&#35752;&#35770;&#30340;&#24773;&#20917;&#37117;&#26159;&#21152;&#23494;&#36890;&#20449;&#65292;&#20063;&#23601;&#26159;&#35828;&#35201;&#20808;&#25353;&#29031; 11.2.2 &#33410;&#20013;&#20171;&#32461;&#30340;&#20869;&#23481;&#37197;&#32622;&#22909; SSL&#12290;&#21518;&#38754;&#23458;&#25143;&#31471;&#30340;&#25903;&#25345;&#65292;&#35828;&#30340;&#20063;&#26159;&#24102; SSL &#30340;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">12</span>Apache Portable Runtime (APR) based Native library for Tomcat&#65292;&#26159;&#20010;&#26412;&#22320;&#24211;&#65292;&#21487;&#20197;&#20687;&#36825;&#26679;&#25918;&#21040; JVM &#36335;&#24452;&#37324;&#65306;<code>-Djava.library.path=/usr/local/opt/tomcat-native/lib</code>&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">13</span>&#36825;&#20010;&#31034;&#20363;&#22312; ch11/binarytea-h2c &#39033;&#30446;&#37324;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">14</span>&#36825;&#20010;&#31034;&#20363;&#22312; ch11/customer-h2 &#39033;&#30446;&#37324;&#12290;</p><h2 id="nav_point_180">11.3&#12288;&#25903;&#25345;&#20998;&#24067;&#24335; Session</h2><p>&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#25105;&#20204;&#22522;&#26412;&#20250;&#35201;&#27714;&#24212;&#29992;&#20197;&#38598;&#32676;&#30340;&#26041;&#24335;&#37096;&#32626;&#65292;&#23601;&#31639;&#29992; Kubernetes&#65292;&#20063;&#20250;&#35201;&#27714;&#26368;&#23567;&#20445;&#25345;&#20004;&#20010; Pod&#65292;&#19988;&#20004;&#20010; Pod &#35201;&#22312;&#19981;&#21516;&#30340;&#29289;&#29702;&#33410;&#28857;&#19978;&#65292;&#20197;&#38450;&#27490;&#20986;&#29616;&#21333;&#28857;&#25925;&#38556;&#8212;&#8212;&#36825;&#26159;&#26368;&#36215;&#30721;&#30340;&#35774;&#35745;&#35201;&#27714;&#12290;&#27491;&#24120;&#24773;&#20917;&#19979;&#65292;&#20219;&#20309;&#29702;&#30001;&#30340;&#21333;&#28857;&#37117;&#26159;<strong>&#19981;&#24212;&#35813;</strong>&#23384;&#22312;&#30340;&#12290;</p><p>&#36825;&#26102;&#23601;&#21487;&#33021;&#20986;&#29616;&#20197;&#19979;&#24773;&#20917;&#65306;&#23545;&#20110;&#29992;&#25143;&#20960;&#27425;&#36830;&#32493;&#30340;&#35831;&#27714;&#65292;&#26377;&#30340;&#35831;&#27714;&#21457;&#32473;&#20102; A &#26381;&#21153;&#22120;&#65292;&#26377;&#30340;&#21017;&#21457;&#32473;&#20102; B &#26381;&#21153;&#22120;&#65292;&#32780;&#40664;&#35748; Servlet &#30340; Session<span class="&#27880;&#37322;&#32534;&#21495;">16</span> &#26159;&#20445;&#23384;&#22312;&#26412;&#22320;&#30340;&#12290;&#35775;&#38382;&#19981;&#21516;&#30340;&#26381;&#21153;&#22120;&#65292;&#30475;&#21040;&#30340; Session &#20449;&#24687;&#26159;&#19981;&#21516;&#30340;&#12290;&#20363;&#22914;&#65292;&#19968;&#20010;&#35831;&#27714;&#35775;&#38382; A &#26381;&#21153;&#22120;&#65292;A &#26381;&#21153;&#22120;&#21457;&#29616;&#26412;&#22320;&#27809;&#26377;&#35813;&#29992;&#25143;&#30340; Session&#65292;&#23601;&#30452;&#25509;&#21019;&#24314;&#20102;&#20010;&#26032;&#30340;&#65292;&#20889;&#20102;&#20123;&#20449;&#24687;&#36827;&#21435;&#65307;&#19979;&#19968;&#20010;&#35831;&#27714;&#35775;&#38382;&#20102; B &#26381;&#21153;&#22120;&#65292;&#20063;&#21457;&#29616;&#26412;&#22320;&#27809;&#26377;&#35813;&#29992;&#25143;&#30340; Session&#65292;&#21516;&#26679;&#21019;&#24314;&#20102;&#19968;&#20010;&#26032;&#30340;&#65292;&#36825;&#37324;&#38754;&#24403;&#28982;&#23601;&#27809;&#26377; A &#26381;&#21153;&#22120;&#20889;&#36827;&#21435;&#30340;&#20869;&#23481;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">16</span>Session &#30340;&#20013;&#25991;&#32763;&#35793;&#20026;&#8220;&#20250;&#35805;&#8221;&#12290;&#22312;&#26085;&#24120;&#24037;&#20316;&#20013;&#65292;&#22823;&#23478;&#36890;&#24120;&#20250;&#30452;&#25509;&#20351;&#29992;&#33521;&#25991; Session&#65292;&#32780;&#20351;&#29992;&#8220;&#20250;&#35805;&#8221;&#26377;&#26102;&#20250;&#20135;&#29983;&#28151;&#28102;&#65292;&#22240;&#27492;&#65292;&#25105;&#20204;&#22312;&#26412;&#20070;&#20013;&#32422;&#23450;&#65306;&#24378;&#35843;&#26381;&#21153;&#22120;&#31471;&#30340; Session &#23545;&#35937;&#26102;&#65292;&#20351;&#29992; Session&#65307;&#65292;&#34920;&#31034;&#20132;&#20114;&#30340;&#24773;&#20917;&#19979;&#20351;&#29992;&#8220;&#20250;&#35805;&#8221;&#12290;&#27492;&#22806;&#65292;&#22312;&#19968;&#20123;&#24815;&#29992;&#34920;&#36798;&#20013;&#20063;&#20250;&#20351;&#29992;&#8220;&#20250;&#35805;&#8221;&#65292;&#20363;&#22914;&#20250;&#35805;&#20445;&#25345;&#12290;</p><p>&#26082;&#28982;&#30693;&#36947;&#20102;&#20250;&#26377;&#36825;&#26679;&#30340;&#38382;&#39064;&#65292;&#37027;&#33258;&#28982;&#23601;&#35201;&#21435;&#23547;&#25214;&#35299;&#20915;&#26041;&#26696;&#65292;&#22909;&#22312;&#25105;&#20204;&#19981;&#26159;&#34892;&#19994;&#37324;&#31532;&#19968;&#25209;&#36935;&#21040;&#36825;&#20010;&#38382;&#39064;&#30340;&#20154;&#65292;&#21069;&#20154;&#24050;&#32463;&#20026;&#25105;&#20204;&#20934;&#22791;&#22909;&#20102;&#35299;&#20915;&#26041;&#26696;&#12290;</p><h3 id="nav_point_181">11.3.1&#12288;&#20960;&#31181;&#24120;&#35265;&#30340;&#35299;&#20915;&#26041;&#26696;</h3><p>&#22312;&#20171;&#32461; Spring Session &#36825;&#20010; Spring &#25552;&#20379;&#30340;&#35299;&#20915;&#26041;&#26696;&#20043;&#21069;&#65292;&#25105;&#20204;&#20808;&#26469;&#20102;&#35299;&#19968;&#20123;&#24120;&#35265;&#30340;&#35299;&#20915;&#26041;&#26696;&#30340;&#24605;&#36335;&#65292;&#20063;&#35768;&#36825;&#20123;&#26041;&#26696;&#23601;&#36275;&#22815;&#22788;&#29702;&#30446;&#21069;&#30340;&#22330;&#26223;&#20102;&#12290;&#33021;&#29992;&#31616;&#21333;&#30340;&#21150;&#27861;&#25630;&#23450;&#30340;&#65292;&#20026;&#20160;&#20040;&#35201;&#36873;&#22797;&#26434;&#30340;&#21602;&#65311;</p><ol>
<li><p><strong>&#20351;&#29992; Cookie</strong></p>
<p>&#26082;&#28982;&#19981;&#21516;&#30340;&#26426;&#22120;&#27809;&#21150;&#27861;&#31616;&#21333;&#22320;&#20351;&#29992;&#21516;&#19968;&#20010; Session&#65292;&#37027;&#32034;&#24615;&#23601;&#19981;&#29992; Session &#20102;&#12290;&#25105;&#20204;&#21487;&#20197;&#25226;&#21407;&#20808;&#38656;&#35201;&#36890;&#36807; Session &#26469;&#20256;&#36882;&#30340;&#20449;&#24687;&#25918;&#21040; Cookie &#37324;&#38754;&#12290;&#27599;&#27425;&#35831;&#27714;&#26102;&#37117;&#20250;&#20174;&#23458;&#25143;&#31471;&#35835;&#21462; Cookie &#21457;&#36865;&#32473;&#26381;&#21153;&#31471;&#65292;&#36825;&#30456;&#24403;&#20110;&#25226;&#22312;&#19981;&#21516;&#35831;&#27714;&#38388;&#20849;&#20139;&#20449;&#24687;&#30340;&#20219;&#21153;&#20132;&#32473;&#20102;&#23458;&#25143;&#31471;&#26469;&#20570;&#65292;&#35201;&#20849;&#20139;&#30340;&#20869;&#23481;&#20063;&#37117;&#25918;&#21040;&#20102;&#23458;&#25143;&#31471;&#12290;</p>
<p>&#20294;&#36825;&#26102;&#38656;&#35201;&#27880;&#24847;&#20197;&#19979;&#20004;&#28857;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#30001;&#20110; Cookie &#26159;&#20445;&#23384;&#22312;&#23458;&#25143;&#31471;&#30340;&#65292;&#32780;&#19988;&#27599;&#27425;&#37117;&#38656;&#35201;&#22312;&#32593;&#19978;&#36827;&#34892;&#20256;&#36755;&#65292;&#19981;&#24314;&#35758;&#23558;&#25935;&#24863;&#20449;&#24687;&#25918;&#22312; Cookie &#37324;&#65292;&#22914;&#26524;&#19968;&#23450;&#35201;&#25918;&#20063;&#24517;&#39035;&#21152;&#23494;&#23384;&#25918;&#65292;&#36991;&#20813;&#20449;&#24687;&#27844;&#38706;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#27599;&#27425;&#35831;&#27714;&#37117;&#35201;&#22312;&#35831;&#27714;&#20013;&#21253;&#21547; Cookie&#65292;&#22914;&#26524; Cookie &#24456;&#22823;&#65292;&#21183;&#24517;&#20250;&#23548;&#33268;&#35831;&#27714;&#24456;&#22823;&#65292;&#36825;&#24102;&#26469;&#20102;&#39069;&#22806;&#30340;&#20256;&#36755;&#37327;&#65292;&#25152;&#20197;&#19996;&#35199;&#33021;&#31934;&#31616;&#23601;&#31934;&#31616;&#12290;</li>
</ul>
<p>&#160;</p>
</li>
<li><p><strong>&#20250;&#35805;&#20445;&#25345;</strong></p>
<p>&#25105;&#20204;&#35828;&#33258;&#24049;&#30340;&#24212;&#29992;&#26159;&#20010;&#38598;&#32676;&#65292;&#37027;&#22312;&#23454;&#38469;&#30340;&#26381;&#21153;&#22120;&#20043;&#21069;&#23601;&#19968;&#23450;&#20250;&#26377;&#36127;&#36733;&#22343;&#34913;&#35774;&#22791;&#12290;&#26082;&#28982;&#35831;&#27714;&#37117;&#20250;&#32463;&#36807;&#36127;&#36733;&#22343;&#34913;&#65292;&#37027;&#23601;&#21487;&#20197;&#24819;&#21150;&#27861;&#35753;&#21516;&#19968;&#20010;&#29992;&#25143;&#30340;&#35831;&#27714;&#37117;&#35775;&#38382;&#21516;&#19968;&#21488;&#26381;&#21153;&#22120;&#65292;&#36825;&#26679;&#23601;&#21487;&#20197;&#19968;&#30452;&#20351;&#29992;&#21516;&#19968;&#21488;&#26381;&#21153;&#22120;&#19978;&#30340; Session&#12290;&#36825;&#31181;&#35753;&#19968;&#27425;&#20250;&#35805;&#36807;&#31243;&#20013;&#21457;&#36215;&#30340;&#35831;&#27714;&#37117;&#21457;&#36865;&#21040;&#21516;&#19968;&#21488;&#26381;&#21153;&#22120;&#19978;&#30340;&#25216;&#26415;&#23601;&#26159;&#20250;&#35805;&#20445;&#25345;&#65292;&#26377;&#26102;&#20063;&#31216;&#20026;&#31896;&#28382;&#20250;&#35805;&#65288;Sticky Session&#65289;&#12290;&#22823;&#33268;&#24773;&#20917;&#22914;&#22270; 11-1 &#25152;&#31034;&#65292;&#29992;&#25143;&#21457;&#36215;&#30340;&#35831;&#27714; 1 &#21644;&#35831;&#27714; 2 &#37117;&#20250;&#34987;&#36716;&#21457;&#21040;&#21516;&#19968;&#20010;&#21518;&#31471;&#33410;&#28857;&#19978;&#12290;</p>
<p>&#20197;&#20351;&#29992; Nginx &#23454;&#29616;&#36127;&#36733;&#22343;&#34913;&#20026;&#20363;&#65292;&#21487;&#20197;&#22312;&#37197;&#32622; <code>upstream</code> &#26102;&#21152;&#20837; <code>ip_hash</code> &#37197;&#32622;&#65292;&#24320;&#21551;&#22522;&#20110; IP &#30340;&#20250;&#35805;&#20445;&#25345;&#12290;&#36825;&#31181;&#26041;&#26696;&#31616;&#21333;&#26377;&#25928;&#65292;&#20294;&#22914;&#26524;&#36935;&#19978; Hash &#20998;&#37197;&#21040;&#30340;&#26381;&#21153;&#22120;&#23445;&#26426;&#65292;&#20250;&#37325;&#26032;&#36827;&#34892; Hash &#35745;&#31639;&#65292;&#36873;&#25321;&#26032;&#30340;&#26381;&#21153;&#22120;&#65292;&#36825;&#26102;&#36824;&#26159;&#20250;&#20002;&#22833;&#19968;&#37096;&#20998;&#30340; Session&#12290;&#19981;&#21516;&#26041;&#26696;&#21508;&#26377;&#21033;&#24330;&#65292;&#20570;&#20986;&#36873;&#25321;&#23601;&#24847;&#21619;&#30528;&#35201;&#25509;&#21463;&#28508;&#22312;&#30340;&#39118;&#38505;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#20250;&#35805;&#22797;&#21046;</strong></p>
<p>&#22914;&#26524;&#36824;&#26159;&#24819;&#35753;&#35831;&#27714;&#33853;&#21040;&#19981;&#21516;&#30340;&#26381;&#21153;&#22120;&#19978;&#65292;&#20063;&#21487;&#20197;&#32771;&#34385;&#35753;&#19981;&#21516;&#30340;&#26381;&#21153;&#22120;&#25317;&#26377;&#30456;&#21516;&#30340; Session&#12290;&#25968;&#25454;&#24211;&#26377;&#20027;&#20174;&#22797;&#21046;&#65292;&#20063;&#26377;&#8220;&#21452;&#20027;&#8221;&#30340;&#31574;&#30053;&#65292;Web &#23481;&#22120;&#30340; Session &#31649;&#29702;&#31574;&#30053;&#21487;&#20197;&#20511;&#37492;&#36825;&#31181;&#24605;&#24819;&#65292;&#23454;&#29616;&#20250;&#35805;&#22797;&#21046;&#65288;Session Replication&#65289;&#12290;&#22312;&#25104;&#29087;&#30340; Java Web &#23481;&#22120;&#37324;&#37117;&#26377;&#38598;&#32676;&#27169;&#24335;&#65292;&#20363;&#22914; Tomcat &#37324;&#23601;&#21487;&#20197;&#37197;&#32622; <code>SimpleTcpCluster</code>&#65292;&#37324;&#38754;&#21253;&#21547;&#20102;&#38598;&#32676;&#20013;&#27599;&#20010;&#33410;&#28857;&#30340;&#20449;&#24687;&#65292;Session &#20250;&#22312;&#25972;&#20010;&#38598;&#32676;&#20013;&#36827;&#34892;&#22797;&#21046;&#12290;&#22823;&#33268;&#24773;&#20917;&#22914;&#22270; 11-2 &#25152;&#31034;&#65292;&#33410;&#28857; 1 &#21644;&#33410;&#28857; 2 &#33021;&#21452;&#21521;&#22797;&#21046; Session&#65292;&#22240;&#27492;&#29992;&#25143;&#30340;&#35831;&#27714;&#33853;&#21040;&#21738;&#20010;&#33410;&#28857;&#37117;&#27809;&#26377;&#22826;&#22823;&#24046;&#21035;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00783.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 11-1&#12288;&#20250;&#35805;&#20445;&#25345;&#31034;&#24847;&#22270;</strong></p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00784.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 11-2&#12288;&#20250;&#35805;&#22797;&#21046;&#31034;&#24847;&#22270;</strong></p>
<p>&#24403;&#28982;&#65292;&#36825;&#20010;&#26041;&#26696;&#30340;&#38382;&#39064;&#20063;&#27604;&#36739;&#26126;&#26174;&#65292;&#22312;&#26381;&#21153;&#22120;&#20043;&#38388;&#22797;&#21046;&#22823;&#37327;&#30340; Session &#21183;&#24517;&#20250;&#21344;&#29992;&#26381;&#21153;&#22120;&#21644;&#32593;&#32476;&#30340;&#36164;&#28304;&#12290;&#32780;&#19988;&#25968;&#25454;&#30340;&#22797;&#21046;&#22987;&#32456;&#20250;&#26377;&#19968;&#23450;&#24310;&#26102;&#65292;&#22240;&#32780;&#23601;&#26377;&#19968;&#23450;&#30340;&#27010;&#29575;&#22312;&#33410;&#28857;&#24322;&#24120;&#20851;&#38381;&#21518;&#25968;&#25454;&#24182;&#26410;&#21450;&#26102;&#22797;&#21046;&#65292;&#23548;&#33268; Session &#20002;&#22833;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#20849;&#20139;&#23384;&#20648;</strong></p>
<p>&#24212;&#29992;&#30340;&#26381;&#21153;&#22120;&#26159;&#20010;&#38598;&#32676;&#65292;&#25105;&#20204;&#19968;&#30452;&#35828;&#23427;&#20204;&#38656;&#35201;&#20570;&#25104;&#26080;&#29366;&#24577;&#30340;&#65292;&#23384;&#22312; Session &#29366;&#24577;&#22312;&#26576;&#31181;&#24847;&#20041;&#19978;&#23601;&#26159;&#36829;&#32972;&#20102;&#26080;&#29366;&#24577;&#30340;&#21407;&#21017;&#65292;&#37027;&#20040;&#25226;&#36825;&#31181;&#29366;&#24577;&#20174;&#24212;&#29992;&#37324;&#21093;&#31163;&#20986;&#26469;&#19981;&#23601;&#21487;&#20197;&#20102;&#21527;&#65311;&#20043;&#21069;&#20351;&#29992; Cookie &#23601;&#26159;&#36825;&#20010;&#24605;&#36335;&#65292;&#23427;&#25226;&#29366;&#24577;&#24448;&#21069;&#25512;&#32473;&#20102;&#23458;&#25143;&#31471;&#65292;&#36825;&#27425;&#25105;&#20204;&#35201;&#24448;&#21518;&#25512;&#65292;&#26082;&#28982;&#24212;&#29992;&#26381;&#21153;&#22120;&#26159;&#26080;&#29366;&#24577;&#30340;&#65292;&#37027;&#23601;&#25226;&#29366;&#24577;&#20445;&#23384;&#22312;&#21487;&#20197;&#23384;&#20648;&#29366;&#24577;&#30340;&#22320;&#26041;&#12290;&#20363;&#22914;&#65292;&#26089;&#26399;&#20250;&#36873;&#25321; Memcached&#65292;&#29616;&#22312;&#26356;&#22810;&#30340;&#26159;&#25918;&#22312; Redis &#21644;&#25968;&#25454;&#24211;&#36825;&#26679;&#30340;&#23384;&#20648;&#37324;&#12290;Web &#23481;&#22120;&#26159;&#36890;&#36807; <code>JSESSIONID</code> &#26469;&#21152;&#36733; Session &#30340;&#65292;&#21482;&#38656;&#20462;&#25913;&#36825;&#20010;&#21152;&#36733;&#21644;&#23384;&#20648;&#36923;&#36753;&#65292;&#32972;&#21518;&#20351;&#29992;&#25351;&#23450;&#30340;&#23384;&#20648;&#23601;&#21487;&#20197;&#20102;&#12290;&#22823;&#33268;&#24773;&#20917;&#22914;&#22270; 11-3 &#25152;&#31034;&#65292;Session &#37117;&#20445;&#23384;&#22312;&#21516;&#19968;&#20010;&#23384;&#20648;&#20013;&#65292;&#33410;&#28857;&#23601;&#21464;&#25104;&#26080;&#29366;&#24577;&#30340;&#20102;&#65292;&#33258;&#28982;&#21487;&#20197;&#22788;&#29702;&#20840;&#37096;&#35831;&#27714;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00785.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 11-3&#12288;&#20849;&#20139;&#23384;&#20648;&#31034;&#24847;&#22270;</strong></p>
<p>&#36825;&#20010;&#26041;&#26696;&#21487;&#20197;&#27604;&#36739;&#29702;&#24819;&#22320;&#35299;&#20915;&#20250;&#35805;&#20445;&#25345;&#21644;&#20250;&#35805;&#22797;&#21046;&#22312;&#36935;&#21040;&#24322;&#24120;&#26102;&#20250;&#20002;&#22833;&#25968;&#25454;&#30340;&#38382;&#39064;&#65292;&#22240;&#20026;&#25968;&#25454;&#37117;&#22312;&#21518;&#31471;&#23384;&#20648;&#37324;&#65292;&#20294;&#20195;&#20215;&#26159;&#35201;&#37096;&#32626;&#39069;&#22806;&#30340;&#23384;&#20648;&#65292;&#36824;&#35201;&#23454;&#29616;&#19968;&#23450;&#30340;&#39640;&#21487;&#29992;&#65292;&#20363;&#22914; Redis &#38656;&#35201;&#29992; Redis Cluster&#65292;&#25968;&#25454;&#24211;&#35201;&#37096;&#32626;&#20027;&#20174;&#33410;&#28857;&#12290;&#21478;&#22806;&#65292;&#36825;&#20010;&#26041;&#26696;&#38656;&#35201;&#19968;&#20123;&#39069;&#22806;&#30340;&#32452;&#20214;&#24320;&#21457;&#65292;&#22909;&#22312;&#29616;&#22312;&#26377; Spring Session&#65292;&#23427;&#24050;&#32463;&#23454;&#29616;&#22909;&#20102;&#19968;&#22871;&#27604;&#36739;&#23436;&#21892;&#30340;&#20998;&#24067;&#24335; Session &#26426;&#21046;&#65292;&#32972;&#21518;&#20063;&#26377;&#22810;&#31181;&#23384;&#20648;&#21487;&#20379;&#36873;&#25321;&#12290;&#25509;&#19979;&#26469;&#65292;&#23601;&#35753;&#25105;&#20204;&#19968;&#36215;&#20102;&#35299;&#19968;&#19979; Spring Session&#12290;</p>
</li>
</ol><h3 id="nav_point_182">11.3.2&#12288;&#20351;&#29992; Spring Session &#23454;&#29616;&#20998;&#24067;&#24335; Session</h3><p>&#20026;&#20102;&#24110;&#21161;&#22823;&#23478;&#22788;&#29702; Session &#30456;&#20851;&#30340;&#38382;&#39064;&#65292;Spring Session &#25552;&#20379;&#20102;&#19968;&#22871;&#23436;&#22791;&#30340; API&#65292;&#21644; Spring &#30340;&#20854;&#20182;&#32452;&#20214;&#19968;&#26679;&#65292;&#23427;&#22312;&#19981;&#21516;&#30340;&#24213;&#23618;&#23454;&#29616;&#20043;&#19978;&#20570;&#20102;&#32479;&#19968;&#30340;&#25277;&#35937;&#65292;&#24320;&#21457;&#26102;&#26080;&#39035;&#19982;&#29305;&#23450;&#23481;&#22120;&#32465;&#23450;&#12290;Spring Session &#20013;&#21253;&#21547;&#20102;&#23545;&#31867;&#20284; Tomcat &#36825;&#31181; Web &#23481;&#22120;&#30340; <code>HttpSession</code> &#30340;&#25903;&#25345;&#65292;&#36824;&#25552;&#20379;&#20102; WebSocket &#21644; WebFlux &#30340;&#25903;&#25345;&#12290;&#23427;&#30001;&#20197;&#19979;&#19968;&#20123;&#20027;&#35201;&#27169;&#22359;&#32452;&#25104;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Spring Session Core&#65292;&#21253;&#21547;&#26680;&#24515; API &#21644;&#22522;&#30784;&#21151;&#33021;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Spring Session JDBC&#65292;&#25552;&#20379;&#20351;&#29992; JDBC &#20316;&#20026; Session &#23384;&#20648;&#30340;&#33021;&#21147;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Spring Session Data Redis&#65292;&#25552;&#20379;&#20351;&#29992; Redis &#20316;&#20026; Session &#23384;&#20648;&#30340;&#33021;&#21147;&#12290;</li>
</ul><p>&#38500;&#27492;&#20043;&#22806;&#65292;&#36824;&#26377; Spring Session MongoDB&#12289;Spring Session Hazelcast&#12289;Spring Session for Apache Geode&#65292;&#20998;&#21035;&#25552;&#20379;&#20102;&#19981;&#21516;&#30340;&#24213;&#23618;&#23384;&#20648;&#33021;&#21147;&#12290;</p><p>Spring Boot &#37324;&#33258;&#24102;&#20102; Spring Session &#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#21487;&#20197;&#30452;&#25509;&#20351;&#29992;&#12290;&#22914;&#26524;&#24076;&#26395;&#20351;&#29992;&#26356;&#26032;&#29256;&#26412;&#65292;&#21487;&#20197;&#22312; pom.xml &#30340; <code>&lt;dependencyManagement /&gt;</code> &#20013;&#28155;&#21152;&#22914;&#19979; BOM&#65288;&#20855;&#20307;&#29256;&#26412;&#38656;&#35201;&#21040;&#23448;&#26041;&#32593;&#31449;&#26597;&#30475;&#65289;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;
    &lt;artifactId&gt;spring-session-bom&lt;/artifactId&gt;
    &lt;version&gt;2020.0.3&lt;/version&gt;
    &lt;type&gt;pom&lt;/type&gt;
    &lt;scope&gt;import&lt;/scope&gt;
&lt;/dependency&gt;</code></pre><p>&#28982;&#21518;&#30452;&#25509;&#22312; <code>&lt;dependencies /&gt;</code> &#37324;&#24341;&#20837;&#38656;&#35201;&#30340;&#20381;&#36182;&#65292;&#27492;&#26102;&#26080;&#39035;&#25351;&#23450;&#29256;&#26412;&#12290;</p><ol>
<li><p><strong>&#23454;&#29616;&#21407;&#29702;</strong></p>
<p>&#22312;&#24320;&#21457;&#36807;&#31243;&#20013;&#65292;&#25105;&#20204;&#22522;&#26412;&#26159;&#20174; <code>HttpServletRequest</code> &#37324;&#33719;&#21462; <code>HttpSession</code> &#36827;&#34892;&#30456;&#20851;&#30340;&#25805;&#20316;&#65292;&#21306;&#21035;&#26080;&#38750;&#26159;&#36890;&#36807;&#33258;&#24049;&#20889;&#30340;&#20195;&#30721;&#26469;&#33719;&#21462;&#65292;&#36824;&#26159;&#30001; Spring MVC &#26694;&#26550;&#27880;&#20837;&#26041;&#27861;&#30340;&#21442;&#25968;&#37324;&#12290;&#26082;&#28982;&#36825;&#20123;&#37117;&#26159;&#25509;&#21475;&#65292;&#23545;&#20351;&#29992; <code>HttpSession</code> &#30340;&#20195;&#30721;&#32780;&#35328;&#65292;&#26080;&#39035;&#20851;&#24515;&#23427;&#23454;&#38469;&#23384;&#20648;&#22312;&#21738;&#37324;&#65292;&#21448;&#26159;&#24590;&#20040;&#21462;&#20986;&#26469;&#30340;&#12290;</p>
<p>Spring Session &#27491;&#26159;&#22522;&#20110;&#36825;&#20010;&#24605;&#24819;&#65292;&#36890;&#36807; <code>SessionRepositoryFilter&lt;S extends Session&gt;</code> &#36825;&#20010; Servlet <code>Filter</code> &#25318;&#25130;&#20102; <code>HTTP</code> &#35831;&#27714;&#65292;&#23558;&#35831;&#27714;&#20013;&#30340; <code>HttpServletRequest</code> &#23553;&#35013;&#20026; <code>SessionRepositoryFilter&lt;S&gt;.SessionRepositoryRequestWrapper</code>&#12290;&#20174;&#36825;&#20010; <code>Wrapper</code> &#20013;&#33719;&#21462;&#30340; Session &#37117;&#26159; <code>HttpSessionWrapper</code>&#65292;&#23427;&#30340;&#25805;&#20316;&#37117;&#26159;&#30001; <code>SessionRepositoryFilter</code> &#37324;&#30340; <code>SessionRepository&lt;S&gt;</code> &#26469;&#23454;&#26045;&#30340;&#12290;&#22914;&#26524;&#32972;&#21518;&#26159; JDBC&#65292;&#37027;&#36825;&#20010; <code>SessionRepository&lt;S&gt;</code> &#23601;&#26159; <code>JdbcIndexedSessionRepository&lt;JdbcIndexedSessionRepository.JdbcSession&gt;</code>&#12290;Spring Session &#37096;&#20998;&#26680;&#24515;&#31867;&#30340;&#22823;&#33268;&#32467;&#26500;&#22914;&#22270; 11-4 &#25152;&#31034;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00786.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 11-4&#12288;Spring Session &#30340;&#37096;&#20998;&#26680;&#24515;&#31867;</strong></p>
<p>&#160;</p>
</li>
<li><p><strong>&#22522;&#20110;&#25968;&#25454;&#24211;&#23384;&#20648; Session</strong></p>
<p>&#35201;&#24320;&#21551; Spring Session &#30340; JDBC &#25903;&#25345;&#65292;&#39318;&#20808;&#35201;&#22312; pom.xml &#20013;&#24341;&#20837;&#22914;&#19979;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
   &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;
   &lt;artifactId&gt;spring-session-jdbc&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>Spring Session JDBC &#20854;&#23454;&#23601;&#26159;&#25226; Session &#20449;&#24687;&#23384;&#20648;&#22312;&#25968;&#25454;&#24211;&#30340; <code>SPRING_SESSION</code> &#21644; <code>SPRING_SESSION_ ATTRIBUTES</code> &#34920;&#37324;&#65292;&#21069;&#32773;&#20445;&#23384;&#20102; Session &#30340;&#20449;&#24687;&#65292;&#20363;&#22914; <code>SESSION_ID</code>&#12289;&#20309;&#26102;&#21019;&#24314;&#30340;&#12289;&#26368;&#21518;&#35775;&#38382;&#26102;&#38388;&#12289;&#36807;&#26399;&#26102;&#38388;&#31561;&#20449;&#24687;&#65307;&#21518;&#32773;&#21017;&#26159; Session &#20013;&#30340;&#20855;&#20307;&#23646;&#24615;&#12290;&#37027;&#36825;&#20004;&#24352;&#34920;&#30340;&#34920;&#32467;&#26500;&#22914;&#20309;&#65292;&#25105;&#20204;&#35813;&#24590;&#20040;&#21435;&#21019;&#24314;&#23427;&#20204;&#21602;&#65311;Spring Session JDBC &#26089;&#23601;&#20026;&#25105;&#20204;&#20934;&#22791;&#22909;&#20102;&#65292;&#22312; spring-session-jdbc &#30340; Jar &#20013;&#65292;org/springframework/session/jdbc/ &#30446;&#24405;&#19979;&#25552;&#20379;&#20102; 10 &#31181;&#19981;&#21516;&#25968;&#25454;&#30340;&#24314;&#34920;&#19982;&#21024;&#34920;&#35821;&#21477;&#65292;&#20855;&#20307;&#22914;&#34920; 11-11 &#25152;&#31034;&#12290;&#26377;&#20102;&#34920;&#20043;&#21518;&#65292;&#20877;&#36890;&#36807; <code>JdbcOperations</code> &#36827;&#34892;&#21508;&#31181;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#23601;&#21487;&#20197;&#20102;&#12290;</p>
<p><strong>&#34920; 11-11&#12288;Spring Session JDBC &#20869;&#32622;&#30340; Schema &#25991;&#20214;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#25968;&#25454;&#24211;</th><th>&#24314;&#34920;&#35821;&#21477;&#25991;&#20214;</th><th>&#21024;&#34920;&#35821;&#21477;&#25991;&#20214;</th></tr><tr><td>DB2</td><td>schema-db2.sql</td><td>schema-drop-db2.sql</td></tr><tr><td>Derby</td><td>schema-derby.sql</td><td>schema-drop-derby.sql</td></tr><tr><td>H2</td><td>schema-h2.sql</td><td>schema-drop-h2.sql</td></tr><tr><td>HsqlDB</td><td>schema-hsqldb.sql</td><td>schema-drop-hsqldb.sql</td></tr><tr><td>MySQL</td><td>schema-mysql.sql</td><td>schema-drop-mysql.sql</td></tr><tr><td>Oracle</td><td>schema-oracle.sql</td><td>schema-drop-oracle.sql</td></tr><tr><td>PostgreSQL</td><td>schema-postgresql.sql</td><td>schema-drop-postgresql.sql</td></tr><tr><td>SQLite</td><td>schema-sqlite.sql</td><td>schema-drop-sqlite.sql</td></tr><tr><td>SQLServer</td><td>schema-sqlserver.sql</td><td>schema-drop-sqlserver.sql</td></tr><tr><td>Sybase</td><td>schema-sybase.sql</td><td>schema-drop-sybase.sql</td></tr></table>
<p>&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;DBA &#36890;&#24120;&#20250;&#26681;&#25454;&#35201;&#27714;&#20107;&#20808;&#22312;&#25968;&#25454;&#24211;&#37324;&#24314;&#22909;&#23545;&#24212;&#30340;&#34920;&#12290;&#20363;&#22914;&#23545;&#20110; MySQL &#25968;&#25454;&#24211;&#65292;&#25105;&#20204;&#23601;&#21487;&#20197;&#25226; schema-mysql.sql &#37324;&#30340;&#35821;&#21477;&#25343;&#20986;&#26469;&#32473;&#21040; DBA&#65292;&#20043;&#21069;&#22312;&#24320;&#21457;&#26102;&#25105;&#20204;&#37117;&#36873;&#25321;&#20102; H2 &#25968;&#25454;&#24211;&#65292;&#25152;&#20197;&#21487;&#20197;&#25226; schema-h2.sql &#31561;&#25991;&#20214;&#37324;&#30340;&#20869;&#23481;&#25918;&#21040;&#25105;&#20204;&#30340; schema.sql &#37324;&#65292;&#25110;&#32773;&#20687;&#20195;&#30721;&#31034;&#20363; 11-15 &#36825;&#26679;&#25163;&#21160;&#21019;&#24314;&#19968;&#20010;&#20869;&#23884;&#25968;&#25454;&#28304;&#65292;&#20854;&#20182;&#31867;&#20284; <code>TransactionManager</code> &#20043;&#31867;&#30340; Bean &#20381;&#28982;&#20132;&#32473; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#26469;&#20026;&#25105;&#20204;&#21019;&#24314;&#12290;&#22914;&#26524;&#25105;&#20204;&#30340;&#20195;&#30721;&#20013;&#23384;&#22312;&#22810;&#20010; <code>DataSource</code> Bean&#65292;&#21487;&#20197;&#22312;&#29992;&#20110; Spring Session &#30340; <code>DataSource</code> &#22768;&#26126;&#19978;&#22686;&#21152; <code>@SpringSessionDataSource</code> &#27880;&#35299;&#21152;&#20197;&#26631;&#35782;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-15</strong>&#12288;&#28155;&#21152;&#20102; Spring Session JDBC &#33050;&#26412;&#30340;&#20869;&#23884;&#25968;&#25454;&#28304;&#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
@EnableJdbcHttpSession
public class BinaryTeaApplication implements WebMvcConfigurer {
    @Bean
    public EmbeddedDatabase dataSource() {
        return new EmbeddedDatabaseBuilder()
                .setType(EmbeddedDatabaseType.H2)
                .addScript("org/springframework/session/jdbc/schema-drop-h2.sql")
                .addScript("org/springframework/session/jdbc/schema-h2.sql")
                .build();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#20013;&#65292;&#25105;&#20204;&#36824;&#22312;&#31867;&#19978;&#28155;&#21152;&#20102;&#19968;&#20010; <code>@EnableJdbcHttpSession</code> &#27880;&#35299;&#65292;&#23427;&#30340;&#23450;&#20041;&#22914;&#19979;&#25152;&#31034;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.TYPE})
@Documented
@Import({JdbcHttpSessionConfiguration.class})
@Configuration(proxyBeanMethods = false)
public @interface EnableJdbcHttpSession {...}</code></pre>
<p>&#23427;&#23548;&#20837;&#20102; <code>JdbcHttpSessionConfiguration</code>&#65292;&#20854;&#20013;&#20250;&#20026;&#25105;&#20204;&#21019;&#24314; <code>SessionRepositoryFilter&lt;? extends Session&gt;</code> &#31867;&#22411;&#30340; <code>springSessionRepositoryFilter</code>&#65292;&#36890;&#36807;&#23427;&#26469;&#23454;&#29616; 11.3.2 &#24320;&#22836;&#37096;&#20998;&#30340;&#23553;&#35013;&#36923;&#36753;&#12290;Spring Boot &#20250;&#33258;&#21160;&#27880;&#20876;&#19978;&#19979;&#25991;&#37324;&#30340; <code>Filter</code>&#65292;&#20197;&#20415;&#23545;&#35831;&#27714;&#36827;&#34892;&#25318;&#25130;&#65292;&#22914;&#26524;&#19981;&#26159;&#22312; Spring Boot &#37324;&#65292;&#25110;&#32773;&#31105;&#29992;&#20102; Spring Boot Servlet &#30456;&#20851;&#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#25105;&#20204;&#21487;&#20197;&#20687;&#23448;&#26041;&#25991;&#26723;&#37324;&#37027;&#26679;&#20351;&#29992; <code>AbstractHttpSessionApplicationInitializer</code> &#26469;&#23436;&#25104; <code>Filter</code> &#30340;&#27880;&#20876;&#12290;</p>
<p>&#29992;&#25143;&#30340;&#30331;&#24405;&#20449;&#24687;&#26159;&#25918;&#22312; Session &#37324;&#30340;&#65292;&#26410;&#30331;&#24405;&#29992;&#25143;&#35775;&#38382; <code>/order</code> &#20250;&#34987;&#37325;&#23450;&#21521;&#21040;&#30331;&#24405;&#39029;&#38754;&#65292;&#30331;&#24405;&#21518; Session &#37324;&#23601;&#26377;&#20102;&#24403;&#21069;&#30331;&#24405;&#30340;&#20449;&#24687;&#65292;&#36825;&#26102;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807; JDBC &#26597;&#30475;&#19968;&#19979; <code>SPRING_SESSION</code> &#21644; <code>SPRING_SESSION_ATTRIBUTES</code> &#34920;&#30340;&#20869;&#23481;&#65292;&#28982;&#21518;&#24102;&#19978; Cookie &#20877;&#21435;&#35775;&#38382; <code>/order</code>&#65292;&#24212;&#35813;&#23601;&#33021;&#27491;&#24120;&#35775;&#38382;&#20102;&#12290;&#20855;&#20307;&#27979;&#35797;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 11-17 &#25152;&#31034;&#65292;&#20294;&#22312;&#27492;&#20043;&#21069;&#65292;&#38656;&#35201;&#20808;&#35774;&#32622;&#19968;&#19979;&#25105;&#20204;&#30340; <code>MockMvc</code>&#65292;&#21152;&#20837; <code>SessionRepositoryFilter</code>&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-16 &#25152;&#31034;&#65288;&#27880;&#24847;&#28155;&#21152; <code>Filter</code> &#30340;&#39034;&#24207;&#65289;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-16</strong>&#12288;&#22312; <code>MockMvc</code> &#37324;&#22686;&#21152; <code>SessionRepositoryFilter</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class OrderControllerTest {
    private MockMvc mockMvc;
    private JdbcTemplate jdbcTemplate;

    @BeforeEach
    void setUp(WebApplicationContext wac) {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac)
            .addFilter(wac.getBean("springSessionRepositoryFilter", SessionRepositoryFilter.class))
            .apply(springSecurity())
            .build();
        jdbcTemplate = new JdbcTemplate(wac.getBean(DataSource.class));
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#22312; <code>JdbcIndexedSessionRepository</code> &#20445;&#23384;&#23436; Session &#20449;&#24687;&#21518;&#20250;&#36820;&#22238;&#19968;&#20010; Session ID&#65292;<code>SessionRepositoryFilter</code> &#20250;&#36890;&#36807; <code>HttpSessionIdResolver</code> &#23558;&#20854;&#20889;&#20837;&#25351;&#23450;&#20301;&#32622;&#65292;&#20363;&#22914;&#65292;&#22312;&#25105;&#20204;&#30340;&#27979;&#35797;&#20013;&#23601;&#26159;&#29992; <code>CookieHttpSessionIdResolver</code> &#25226; Session ID &#20889;&#21040;&#20102; Cookie &#20013;&#12290;&#21517;&#20026; <code>SESSION</code> &#30340; Cookie &#20013;&#29992; BASE64 &#30340;&#26041;&#24335;&#20445;&#23384;&#20102; Session ID&#65292;&#31867;&#20284; <code>MDhhMDg5NWYtZTU5Ny00NzNlLTk2NzYtMzU0ZDBjZGIyOGE3</code>&#65292;&#36824;&#21407;&#21518;&#23601;&#26159; <code>08a0895f-e597-473e-9676-354d0cdb28a7</code>&#65292;&#29992;&#23427;&#23601;&#21487;&#20197;&#22312;&#25968;&#25454;&#24211;&#37324;&#36827;&#34892;&#26597;&#35810;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-17</strong>&#12288;<code>OrderControllerTest</code> &#20013;&#38024;&#23545; Spring Session JDBC &#30340;&#21333;&#20803;&#27979;&#35797;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Test
void testLoginWithJdbcSession() throws Exception {
    mockMvc.perform(get("/order"))
            .andExpect(status().is3xxRedirection());

    MvcResult result = mockMvc.perform(post("/doLogin")
            .param("user", "LiLei").param("pwd", "binarytea")
            .with(csrf())).andReturn();
    Cookie sessionCookie = result.getResponse().getCookie("SESSION");
    String sessionId = new String(Base64.getDecoder().decode(sessionCookie.getValue()));
    String id = jdbcTemplate.queryForObject(
            "select PRIMARY_ID from SPRING_SESSION where SESSION_ID='" + sessionId + "'", String.class);
    assertNotNull(id);
    int attrCount = jdbcTemplate.queryForObject(
            "select count(*) from SPRING_SESSION_ATTRIBUTES where SESSION_PRIMARY_ID='" + id + "'",
            Integer.class);
    assertTrue(attrCount &gt; 0);

    mockMvc.perform(get("/order").cookie(sessionCookie))
            .andExpect(status().isOk());
}</code></pre>
<p>&#20854;&#23454;&#65292;Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#20013;&#25552;&#20379;&#20102;&#19982; Spring Session &#30456;&#20851;&#30340;&#37197;&#32622;&#65292;&#25105;&#20204;&#26080;&#39035;&#33258;&#24049;&#28155;&#21152; <code>@EnableJdbcHttpSession</code> &#27880;&#35299;&#65292;&#21482;&#35201; CLASSPATH &#20013;&#26377;&#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#29992;&#37197;&#32622;&#25991;&#20214;&#23601;&#33021;&#23436;&#25104;&#37197;&#32622;&#65292;<code>spring.session</code> &#23545;&#24212;&#30340;&#37197;&#32622;&#23646;&#24615;&#31867;&#26159; <code>SessionProperties</code>&#65292;&#32780; <code>spring.session.jdbc</code> &#23545;&#24212;&#30340;&#21017;&#26159; <code>JdbcSessionProperties</code>&#12290;<code>JdbcSessionDataSourceInitializer</code> &#20250;&#26681;&#25454;&#23454;&#38469;&#25968;&#25454;&#28304;&#30340;&#31867;&#22411;&#23436;&#25104;&#25968;&#25454;&#24211;&#30340;&#21021;&#22987;&#21270;&#65292;&#25105;&#20204;&#20063;&#19981;&#38656;&#35201;&#37197;&#32622; <code>EmbeddedDatabase</code> &#20102;&#12290;</p>
<p>&#22312; <code>application.properties</code> &#20013;&#28155;&#21152;&#22914;&#19979;&#37197;&#32622;&#20063;&#21487;&#20197;&#25351;&#23450;&#20351;&#29992; Spring Session JDBC&#65292;<code>spring.session.jdbc.initialize-schema</code> &#30340;&#20316;&#29992;&#19982; <code>spring.datasource.initialization-mode</code> &#26159;&#31867;&#20284;&#30340;&#65292;<code>spring.session.jdbc.schema</code> &#26159;&#21021;&#22987;&#21270;&#25968;&#25454;&#34920;&#29992;&#30340; SQL &#25991;&#20214;&#65292;<code>spring.session.jdbc.table-name</code> &#21017;&#26159;&#23384;&#20648; Session &#30340;&#34920;&#21517;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=embedded
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql
spring.session.jdbc.table-name=SPRING_SESSION</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#22522;&#20110; Redis &#23384;&#20648; Session</strong></p>
<p>&#19968;&#26086;&#29702;&#35299;&#22914;&#20309;&#20351;&#29992; Spring Session JDBC &#23384;&#20648; Session&#65292;&#20351;&#29992; Redis &#30340;&#26041;&#27861;&#23601;&#31616;&#21333;&#22810;&#20102;&#8212;&#8212;&#20808;&#26159;&#24341;&#20837; Spring Session Data Redis &#30340;&#20381;&#36182;&#65288;&#22914;&#26524;&#27809;&#26377;&#24341;&#20837; Spring Data Redis &#30456;&#20851;&#20381;&#36182;&#65292;&#21487;&#20197;&#19968;&#24182;&#21152;&#19978;&#65289;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;
    &lt;artifactId&gt;spring-session-data-redis&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>&#28982;&#21518;&#65292;&#25353;&#29031; 8.2 &#33410;&#20013;&#30340;&#26041;&#27861;&#37197;&#32622; Redis &#30456;&#20851;&#30340;&#20449;&#24687;&#65292;&#21097;&#19979;&#30340;&#20132;&#32473; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#23601;&#22909;&#20102;&#12290;&#22914;&#26524; CLASSPATH &#20013;&#21516;&#26102;&#23384;&#22312;&#22810;&#20010; Spring Session &#30340;&#20381;&#36182;&#65292;&#20063;&#21487;&#20197;&#22312; <code>application.properties</code> &#20013;&#20687;&#19979;&#38754;&#36825;&#26679;&#25351;&#23450;&#23384;&#20648;&#26041;&#24335;&#65292;&#25110;&#32773;&#22312;&#37197;&#32622;&#31867;&#19978;&#22686;&#21152; <code>@EnableRedisHttpSession</code> &#27880;&#35299;&#12290;<code>spring.session.redis</code> &#23545;&#24212;&#30340;&#37197;&#32622;&#31867;&#26159; <code>RedisSessionProperties</code>&#65292;&#20854;&#20013;&#38656;&#35201;&#29305;&#21035;&#35828;&#26126;&#30340;&#26159; <code>spring.session.redis.namespace</code> &#21487;&#20197;&#29992;&#26469;&#37197;&#32622; Redis &#20013;&#20445;&#23384; Session &#20449;&#24687;&#30340;&#38190;&#21517;&#30340;&#21069;&#32512;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.session.store-type=redis
spring.session.redis.namespace=spring:session</code></pre>
<p>&#20854;&#23454;&#36824;&#26377;&#20010;&#31616;&#21333;&#30340;&#26041;&#27861;&#21487;&#20197;&#27979;&#35797;&#26159;&#21542;&#37197;&#32622;&#22909;&#20102; Redis &#23384;&#20648;&#65306;&#22914;&#26524;&#20351;&#29992;&#21333;&#26426;&#30340; Session &#31649;&#29702;&#65292;Tomcat &#37325;&#21551;&#21518; Session &#20250;&#20002;&#22833;&#65307;&#32780;&#20351;&#29992;&#20102; Spring Session Data Redis &#30340;&#31995;&#32479;&#65292;Session &#20445;&#23384;&#22312; Redis &#37324;&#65292;&#21482;&#35201;&#29992;&#20043;&#21069;&#30340; Cookie &#21457;&#36215;&#35831;&#27714;&#65292;&#20381;&#26087;&#21487;&#20197;&#33719;&#24471; Session&#12290;</p>
</li>
</ol><h2 id="nav_point_183">11.4&#12288;&#21709;&#24212;&#24335; Web</h2><p>&#21040;&#30446;&#21069;&#20026;&#27490;&#65292;&#26412;&#20070;&#19968;&#30452;&#20351;&#29992;&#30340;&#26159;&#21629;&#20196;&#24335;&#32534;&#31243;&#26041;&#24335;&#65292;&#25972;&#20010;&#22788;&#29702;&#36807;&#31243;&#20063;&#37117;&#26159;&#38459;&#22622;&#24335;&#30340;&#12290;&#20197;&#25552;&#20379; Web &#26381;&#21153;&#20026;&#20363;&#65292;&#25105;&#20204;&#22914;&#26524;&#24076;&#26395;&#21516;&#26102;&#24182;&#21457;&#22320;&#26381;&#21153; 100 &#20010;&#35831;&#27714;&#65292;&#37027;&#23601;&#38656;&#35201; Tomcat &#23481;&#22120;&#26377; 100 &#20010;&#24037;&#20316;&#32447;&#31243;&#65292;&#27599;&#20010;&#32447;&#31243;&#22788;&#29702;&#19968;&#20010;&#35831;&#27714;&#65292;&#22914;&#26524;&#26469;&#20102;&#31532; 101 &#20010;&#35831;&#27714;&#65292;&#37027;&#23427;&#21482;&#33021;&#31561;&#24453;&#21069;&#38754;&#30340;&#26576;&#20010;&#35831;&#27714;&#34987;&#22788;&#29702;&#23436;&#65292;&#26377;&#31354;&#38386;&#30340;&#32447;&#31243;&#21518;&#25165;&#24320;&#22987;&#22788;&#29702;&#12290;&#27599;&#20010;&#32447;&#31243;&#26412;&#36523;&#26159;&#35201;&#28040;&#32791;&#19968;&#23450;&#36164;&#28304;&#30340;&#65292;&#65288;&#20363;&#22914;&#28040;&#32791;&#26356;&#22810;&#20869;&#23384;&#65289;&#65292;&#22823;&#37327;&#32447;&#31243;&#38388;&#30340;&#20999;&#25442;&#20063;&#20250;&#28040;&#32791; CPU&#12290;&#20294;&#36825;&#36824;&#19981;&#26159;&#26368;&#35201;&#21629;&#30340;&#65292;&#26368;&#35201;&#21629;&#30340;&#26159;&#22312;&#35831;&#27714;&#22788;&#29702;&#36807;&#31243;&#20013;&#65292;&#22914;&#26524;&#25105;&#20204;&#36824;&#38656;&#35201;&#19982;&#25968;&#25454;&#24211;&#20132;&#20114;&#65292;&#25110;&#32773;&#35835;&#20889;&#25991;&#20214;&#65292;&#21448;&#25110;&#32773;&#35843;&#29992;&#36828;&#31243;&#26381;&#21153;&#65292;&#37027;&#20040;&#24403;&#21069;&#32447;&#31243;&#23601;&#19981;&#24471;&#19981;&#34987;&#38459;&#22622;&#65292;&#30452;&#21040;&#25805;&#20316;&#32467;&#26524;&#36820;&#22238;&#65292;&#36825;&#23601;&#20250;&#36896;&#25104;&#22823;&#37327;&#30340;&#36164;&#28304;&#28010;&#36153;&#12290;</p><p>&#24819;&#35201;&#22788;&#29702;&#26356;&#22810;&#35831;&#27714;&#65292;&#26080;&#38750;&#26159;&#25552;&#21319;&#24615;&#33021;&#65292;&#25552;&#39640;&#24182;&#21457;&#24230;&#12290;&#21487;&#20197;&#29992;&#26356;&#22810;&#30340;&#32447;&#31243;&#21644;&#26356;&#24378;&#30340;&#26426;&#22120;&#65292;&#20063;&#21487;&#20197;&#24819;&#21150;&#27861;&#25380;&#21387;&#29616;&#26377;&#36164;&#28304;&#12290;&#26082;&#28982;&#22522;&#20110;&#21516;&#27493;&#32447;&#31243;&#30340;&#26041;&#24335;&#19981;&#34892;&#65292;&#37027;&#23601;&#25442;&#21035;&#30340;&#26041;&#24335;&#65292;&#20154;&#20204;&#33258;&#28982;&#24819;&#20102;&#21508;&#31181;&#21150;&#27861;&#65292;&#22914;&#20309;&#29992;&#26356;&#23569;&#30340;&#36164;&#28304;&#26469;&#25552;&#20379;&#26356;&#22823;&#30340;&#21534;&#21520;&#37327;&#65292;&#22522;&#20110;&#20107;&#20214;&#39537;&#21160;&#30340;&#26041;&#24335;&#26159;&#21542;&#21487;&#34892;&#21602;&#65311;</p><p>&#19981;&#21516;&#30340;&#20107;&#20214;&#26377;&#19981;&#21516;&#30340;&#22788;&#29702;&#22120;&#65292;&#22312;&#27880;&#20876;&#23436;&#21508;&#31181;&#22788;&#29702;&#22120;&#20043;&#21518;&#65292;&#36890;&#36807; IO &#22810;&#36335;&#22797;&#29992;&#26469;&#26816;&#27979;&#26159;&#21542;&#26377;&#20107;&#20214;&#65288;&#19981;&#20165;&#26159;&#32593;&#32476;&#65292;UI &#30028;&#38754;&#19978;&#30340;&#28857;&#20987;&#20063;&#31639;&#26159;&#19968;&#31181;&#20107;&#20214;&#65289;&#65292;&#20363;&#22914; <code>8080</code> &#31471;&#21475;&#26159;&#21542;&#25910;&#21040;&#20102;&#19968;&#20010;&#35831;&#27714;&#65292;&#26377;&#35831;&#27714;&#23601;&#23558;&#23427;&#20998;&#27966;&#32473;&#20855;&#20307;&#30340;&#20107;&#20214;&#22788;&#29702;&#22120;&#20570;&#21518;&#32493;&#22788;&#29702;&#12290;&#32780;&#35831;&#27714;&#22788;&#29702;&#26412;&#36523;&#20063;&#26159;&#20107;&#20214;&#39537;&#21160;&#30340;&#65292;&#36935;&#21040; IO &#25805;&#20316;&#19981;&#20250;&#8220;&#20667;&#20667;&#8221;&#22320;&#31561;&#24453;&#32467;&#26524;&#36820;&#22238;&#65292;&#21516;&#26679;&#20250;&#20381;&#38752; IO &#23436;&#25104;&#20107;&#20214;&#36890;&#30693;&#12290;&#36825;&#26679;&#19968;&#26469;&#23601;&#33021;&#23558;&#21407;&#26412;&#22788;&#20110;&#38459;&#22622;&#29366;&#24577;&#30340;&#22823;&#37327;&#32447;&#31243;&#37322;&#25918;&#20986;&#26469;&#12290;</p><p>&#22312;&#19978;&#36848;&#36825;&#19968;&#24605;&#24819;&#30340;&#24433;&#21709;&#19979;&#65292;&#23601;&#26377;&#20102;&#25509;&#19979;&#26469;&#35201;&#35752;&#35770;&#30340;&#21709;&#24212;&#24335;&#32534;&#31243;&#65288;Reactive Programming&#65289;&#65292;&#26412;&#33410;&#20250;&#30528;&#37325;&#35752;&#35770;&#21709;&#24212;&#24335; Web&#12290;&#32500;&#22522;&#30334;&#31185;&#23545;&#21709;&#24212;&#24335;&#32534;&#31243;&#30340;&#23450;&#20041;&#26159;&#36825;&#26679;&#30340;&#65306;</p><blockquote>
<p>&#22312;&#35745;&#31639;&#26426;&#20013;&#65292;&#21709;&#24212;&#24335;&#32534;&#31243;&#65288;&#25110;&#21453;&#24212;&#24335;&#32534;&#31243;&#65289;&#26159;&#19968;&#31181;&#38754;&#21521;&#25968;&#25454;&#27969;&#21644;&#21464;&#21270;&#20256;&#25773;&#30340;&#32534;&#31243;&#33539;&#24335;&#65292;&#36825;&#24847;&#21619;&#30528;&#21487;&#20197;&#22312;&#32534;&#31243;&#35821;&#35328;&#20013;&#24456;&#26041;&#20415;&#22320;&#34920;&#36798;&#38745;&#24577;&#25110;&#21160;&#24577;&#30340;&#25968;&#25454;&#27969;&#65292;&#32780;&#30456;&#20851;&#30340;&#35745;&#31639;&#27169;&#22411;&#20250;&#33258;&#21160;&#23558;&#21464;&#21270;&#30340;&#20540;&#36890;&#36807;&#25968;&#25454;&#27969;&#36827;&#34892;&#20256;&#25773;&#12290;</p>
</blockquote><p>&#21487;&#20197;&#30475;&#21040;&#65292;&#21709;&#24212;&#24335;&#32534;&#31243;&#26356;&#20851;&#27880;&#25968;&#25454;&#30340;&#21464;&#21270;&#12290;&#35201;&#22788;&#29702;&#30340;&#25968;&#25454;&#19981;&#26159;&#19968;&#19979;&#23376;&#23601;&#20840;&#37117;&#23601;&#32490;&#30340;&#65292;&#32780;&#26159;&#21487;&#20197;&#19968;&#20010;&#25509;&#30528;&#19968;&#20010;&#28304;&#28304;&#19981;&#26029;&#22320;&#8220;&#28044;&#8221;&#36807;&#26469;&#65307;&#32780;&#23545;&#25968;&#25454;&#30340;&#22788;&#29702;&#20063;&#19981;&#20877;&#38656;&#35201;&#31561;&#19968;&#22823;&#25209;&#25968;&#25454;&#23601;&#32490;&#20102;&#25165;&#24320;&#22987;&#65292;&#19968;&#20999;&#37117;&#20250;&#26356;&#21160;&#24577;&#19968;&#20123;&#12290;&#27492;&#22806;&#65292;&#21709;&#24212;&#24335;&#32534;&#31243;&#26356;&#27880;&#37325;&#25551;&#36848;&#35201;&#20570;&#20160;&#20040;&#65292;&#32780;&#19981;&#26159;&#24590;&#20040;&#20570;&#12290;</p><p>&#34429;&#28982;&#22312;&#36825;&#20010;&#22330;&#26223;&#20013;&#21709;&#24212;&#24335;&#32534;&#31243;&#30475;&#36215;&#26469;&#29305;&#21035;&#21385;&#23475;&#65292;&#20294;&#35831;&#21153;&#24517;&#35760;&#20303;&#65292;<strong>&#21709;&#24212;&#24335;&#32534;&#31243;&#19981;&#26159;&#38134;&#24377;</strong>&#65292;&#23427;&#24182;&#19981;&#33021;&#35299;&#20915;&#25152;&#26377;&#38382;&#39064;&#12290;&#19981;&#35201;&#20026;&#20102;&#21709;&#24212;&#24335;&#32780;&#21709;&#24212;&#24335;&#65292;&#21629;&#20196;&#24335;&#32534;&#31243;&#20063;&#26377;&#33258;&#24049;&#30340;&#20248;&#21183;&#65292;&#20004;&#32773;&#21487;&#20197;&#30456;&#36741;&#30456;&#25104;&#12290;</p><h3 id="nav_point_184">11.4.1&#12288;&#20102;&#35299; Project Reactor</h3><p>&#21709;&#24212;&#24335;&#32534;&#31243;&#30340;&#29702;&#24565;&#26159;&#22909;&#30340;&#65292;&#20294;&#19982;&#21629;&#20196;&#24335;&#32534;&#31243;&#30456;&#27604;&#65292;&#24320;&#21457;&#24605;&#36335;&#24182;&#19981;&#23481;&#26131;&#29702;&#35299;&#12290;&#22914;&#26524;&#27809;&#26377;&#39034;&#25163;&#30340;&#24037;&#20855;&#65292;&#32534;&#20889;&#21709;&#24212;&#24335;&#20195;&#30721;&#23558;&#38750;&#24120;&#30171;&#33510;&#12290;&#26080;&#35770;&#26159;&#29992;&#22238;&#35843;&#36824;&#26159; <code>Future</code>&#65292;&#36935;&#21040;&#31245;&#24494;&#22797;&#26434;&#19968;&#20123;&#30340;&#22330;&#26223;&#65292;&#20250;&#24456;&#35753;&#20154;&#25235;&#29378;&#12290;&#22909;&#22312;&#31038;&#21306;&#24456;&#26089;&#23601;&#24847;&#35782;&#21040;&#20102;&#36825;&#20010;&#38382;&#39064;&#65292;&#38500;&#20102;&#26377; Reactive Streams &#35268;&#33539;&#65292;&#36824;&#30456;&#32487;&#20986;&#29616;&#20102;&#20687; RxJava &#21644; Project Reactor &#36825;&#26679;&#30340;&#26694;&#26550; <span class="&#27880;&#37322;&#32534;&#21495;">17</span>&#12290;&#20854;&#20013;&#65292;Project Reactor &#20063;&#20986;&#33258; VMWare &#20043;&#25163;&#65292;&#33258;&#28982;&#21644; Spring &#36208;&#24471;&#24456;&#36817;&#12290;&#26412;&#33410;&#30340;&#20027;&#35282; Spring WebFlux &#23601;&#26159;&#22522;&#20110; Reactor &#30340;&#65292;&#25152;&#20197;&#22312;&#27491;&#24335;&#20171;&#32461; WebFlux &#21069;&#65292;&#20808;&#35753;&#25105;&#20204;&#26469;&#20102;&#35299;&#19968;&#19979; Project Reactor&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">17</span>Reactive Streams &#35268;&#33539;&#26088;&#22312;&#20026;&#24322;&#27493;&#38750;&#38459;&#22622;&#27969;&#24335;&#22788;&#29702;&#25552;&#20379;&#19968;&#20010;&#32479;&#19968;&#30340;&#26631;&#20934;&#12290;RxJava &#26159;&#19968;&#22871; Java &#19990;&#30028;&#37324;&#30340;&#21709;&#24212;&#24335;&#32534;&#31243;&#26694;&#26550;&#65292;Project Reactor &#19982; RxJava &#31867;&#20284;&#12290;</p><ol>
<li><p><strong>&#22522;&#26412;&#20351;&#29992;</strong></p>
<p>&#22312; Project Reactor &#20013;&#65292;&#26377;&#20004;&#20010;&#37325;&#35201;&#30340;&#27010;&#24565;&#8212;&#8212;<code>Publisher</code> &#21644; <code>Subscriber</code>&#65292;&#21069;&#32773;&#26159;&#25968;&#25454;&#30340;&#29983;&#20135;&#32773;&#65292;&#21518;&#32773;&#21017;&#26159;&#25968;&#25454;&#30340;&#35746;&#38405;&#32773;&#65288;&#25110;&#32773;&#35828;&#28040;&#36153;&#32773;&#65289;&#12290;<code>Subscriber</code> &#36890;&#36807; <code>Publisher</code> &#30340; <code>subscribe()</code> &#36827;&#34892;&#35746;&#38405;&#65292;&#32780; <code>Publisher</code> &#21017;&#22312;&#20135;&#29983;&#26032;&#25968;&#25454;&#21518;&#35843;&#29992; <code>Subscriber</code> &#30340; <code>onNext()</code> &#36827;&#34892;&#22788;&#29702;&#65292;&#36935;&#21040;&#25253;&#38169;&#26102;&#35843;&#29992; <code>onError()</code>&#65292;&#22312;&#32467;&#26463;&#26102;&#35843;&#29992; <code>onComplete()</code>&#12290;</p>
<p><code>Mono</code> &#21644; <code>Flux</code> &#23601;&#26159; Reactor &#39033;&#30446;&#20026;&#25105;&#20204;&#25552;&#20379;&#30340;&#20004;&#20010; <code>Publisher</code>&#65292;<code>Mono</code> &#20195;&#34920; 0 &#25110; 1 &#20010;&#23545;&#35937;&#65292;&#32780; <code>Flux</code> &#21017;&#20195;&#34920;&#22810;&#20010;&#23545;&#35937;&#65292;&#20063;&#23601;&#26159; 0 &#21040; <em>N</em> &#20010;&#23545;&#35937;&#12290;&#22914;&#26524;&#25105;&#20204;&#21482;&#26159;&#20135;&#29983;&#19968;&#20010;&#25968;&#23383; <code>5</code>&#65292;&#29992; <code>Mono.just(5)</code> &#23601;&#21487;&#20197;&#20102;&#65292;&#34920; 11-12 &#32599;&#21015;&#20102;&#19968;&#20123;&#24120;&#29992;&#30340;&#21019;&#24314; <code>Flux&lt;T&gt;</code> &#30340;&#26041;&#27861;&#65288;&#26377;&#30340;&#20063;&#36866;&#29992;&#20110; <code>Mono&lt;T&gt;</code>&#65289;&#12290;</p>
<p><strong>&#34920; 11-12&#12288;&#24120;&#29992;&#30340;&#21019;&#24314; <code>Flux&lt;T&gt;</code> &#30340;&#26041;&#27861;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#26041;&#27861;</th><th>&#35828;&#26126;</th></tr><tr><td><code>Flux.empty()</code></td><td>&#21019;&#24314;&#31354;&#30340; <code>Flux</code></td></tr><tr><td><code>Flux.just(T... data)</code></td><td>&#21019;&#24314;&#22266;&#23450;&#20869;&#23481;&#30340; <code>Flux</code></td></tr><tr><td><code>Flux.range(int start, int count)</code></td><td>&#21019;&#24314; <code>Flux&lt;Integer&gt;</code>&#65292;&#20174; <code>start</code> &#24320;&#22987;&#65292;&#19968;&#20849; <code>count</code> &#20010;&#65288;&#21253;&#21547;&#24320;&#22987;&#30340;&#37027;&#20010;&#65289;</td></tr><tr><td><code>Flux.interval(Duration delay, Duration period)</code></td><td>&#21019;&#24314; <code>Flux&lt;Long&gt;</code>&#65292;&#24310;&#36831; <code>delay</code> &#24320;&#22987;&#65292;&#27599;&#38548; <code>period</code> &#25918;&#20986;&#19968;&#20010;&#65292;&#20174; 0 &#24320;&#22987;&#30340;&#38271;&#25972;&#24418;&#25968;</td></tr><tr><td><code>Flux.from(Publisher source)</code></td><td>&#26681;&#25454;&#26576;&#20010; <code>Publisher</code> &#26469;&#21019;&#24314; <code>Flux</code></td></tr><tr><td><code>Flux.fromArray(T[] array)</code></td><td>&#26681;&#25454;&#26576;&#20010;&#25968;&#32452;&#26469;&#21019;&#24314; <code>Flux</code></td></tr><tr><td><code>Flux.fromIterable(Iterable it)</code></td><td>&#26681;&#25454;&#26576;&#20010;&#36845;&#20195;&#22120;&#26469;&#21019;&#24314; <code>Flux</code></td></tr><tr><td><code>Flux.fromStream(Stream s)</code></td><td>&#26681;&#25454;&#26576;&#20010;&#27969;&#26469;&#21019;&#24314; <code>Flux</code></td></tr></table>
<p>&#26377;&#20102; <code>Flux</code> &#20043;&#21518;&#65292;&#25105;&#20204;&#26410;&#24517;&#24819;&#22788;&#29702;&#20840;&#37096;&#20803;&#32032;&#65292;&#36825;&#26102;&#20505;&#21487;&#20197;&#36890;&#36807; <code>take()</code>&#12289;<code>takeLast()</code> &#31561;&#26041;&#27861;&#21462;&#20986;&#20854;&#20013;&#30340;&#19968;&#37096;&#20998;&#12290;&#20854;&#23454;&#65292;&#25105;&#20204;&#21487;&#20197;&#25226; <code>Publisher</code> &#30475;&#25104;&#31867;&#20284; Java <code>Stream</code> &#30340;&#19996;&#35199;&#65292;&#23545;&#27969;&#30340;&#22823;&#37096;&#20998;&#25805;&#20316;&#26159;&#36866;&#29992;&#30340;&#12290;&#20363;&#22914;&#65292;&#36807;&#28388;&#20803;&#32032;&#30340; <code>filter()</code>&#65292;&#36716;&#25442;&#20803;&#32032;&#30340; <code>map()</code> &#21644; <code>flatMap()</code>&#65292;&#23558;&#27969;&#20013;&#30340;&#20803;&#32032;&#25910;&#38598;&#32858;&#21512;&#25104;&#19968;&#20010;&#30340; <code>reduce()</code>&#12290;</p>
<p>&#38500;&#20102;&#31867;&#20284;&#27969;&#30340;&#25805;&#20316;&#65292;&#22312;&#36935;&#21040;&#20107;&#20214;&#26102; <code>Publisher</code> &#20063;&#32473;&#25105;&#20204;&#30041;&#19979;&#20102;&#21487;&#20197;&#21152;&#20837;&#33258;&#24049;&#25805;&#20316;&#30340;&#38057;&#23376;&#65292;&#22914;&#34920; 11-13 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 11-13&#12288;<code>Publisher</code> &#38024;&#23545;&#20107;&#20214;&#30340;&#38057;&#23376;&#26041;&#27861;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#26041;&#27861;</th><th>&#35828;&#26126;</th></tr><tr><td><code>doOnSubscribe()</code></td><td>&#26377;&#28040;&#36153;&#32773;&#35746;&#38405;&#26102;&#25191;&#34892;&#21160;&#20316;</td></tr><tr><td><code>doOnNext()</code></td><td>&#20135;&#29983;&#19968;&#20010;&#26032;&#25968;&#25454;&#26102;&#25191;&#34892;&#21160;&#20316;</td></tr><tr><td><code>doOnComplete()</code></td><td>&#25968;&#25454;&#20840;&#37096;&#25104;&#21151;&#20135;&#29983;&#26102;&#25191;&#34892;&#21160;&#20316;</td></tr><tr><td><code>doOnError()</code></td><td>&#36935;&#21040;&#38169;&#35823;&#26102;&#25191;&#34892;&#21160;&#20316;</td></tr><tr><td><code>doOnTerminate()</code></td><td>&#32467;&#26463;&#26102;&#65288;&#21487;&#20197;&#26159;&#25104;&#21151;&#32467;&#26463;&#65292;&#20063;&#21487;&#20197;&#26159;&#36935;&#21040;&#38169;&#35823;&#32467;&#26463;&#65289;&#25191;&#34892;&#21160;&#20316;</td></tr><tr><td><code>doOnEach()</code></td><td>&#22312;&#20135;&#29983;&#26032;&#25968;&#25454;&#12289;&#25104;&#21151;&#23436;&#25104;&#21644;&#36935;&#21040;&#38169;&#35823;&#26102;&#25191;&#34892;&#21160;&#20316;</td></tr></table>
<p>&#20030;&#20010;&#20363;&#23376;&#65292;&#19979;&#38754;&#25105;&#20204;&#32452;&#21512;&#20351;&#29992;&#19968;&#19979;&#36825;&#20123;&#26041;&#27861;&#65306;&#20808;&#26500;&#36896;&#19968;&#20010;&#20174; 5 &#21040; 0 &#30340; <code>Flux&lt;Integer&gt;</code>&#65307;&#38543;&#21518;&#20174;&#20013;&#25361;&#36873;&#20986;&#23567;&#20110; 4 &#30340;&#25972;&#25968;&#65292;&#21462; 3 &#20010;&#20986;&#26469;&#65292;&#20998;&#21035;&#23581;&#35797;&#20351;&#29992; <code>doOnNext()</code>&#12289;<code>doOnComplete()</code> &#21644; <code>doOnEach()</code> &#26041;&#27861;&#65292;&#30475;&#30475;&#26377;&#20309;&#21306;&#21035;&#65307;&#26368;&#21518;&#20877;&#23558;&#36825;&#20010;&#25972;&#25968;&#20540;&#36716;&#25442;&#20026;&#33258;&#24049;&#30340;&#24179;&#26041;&#65292;&#35746;&#38405;&#32773;&#29992; <code>log</code>&#65288;&#35831;&#22312;&#31867;&#19978;&#28155;&#21152; Lombok &#30340; <code>@Slf4j</code> &#27880;&#35299;&#26469;&#25552;&#20379; <code>log</code>&#65289;&#25171;&#21360;&#19968;&#19979;&#33258;&#24049;&#21462;&#21040;&#30340;&#20540;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Flux.just(5, 4, 3, 2, 1, 0)
    .filter(n -&gt; n &lt; 4)
    .take(3)
    .doOnNext(n -&gt; log.info("onNext: {}", n))
    .doOnComplete(() -&gt; log.info("Complete!"))
    .doOnEach(n -&gt; log.info("onEach: {}, {}", n.getType(), n.get()))
    .map(n -&gt; n * n)
    .subscribe(n -&gt; log.info("Subscribe: {}", n));</code></pre>
<p>&#36825;&#27573;&#20195;&#30721;&#30340;&#36755;&#20986;&#22823;&#27010;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>19:41:39.811 [main] INFO learning.spring.customer.OrderGenerator - onNext: 3
19:41:39.813 [main] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 3
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - Subscribe: 9
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - onNext: 2
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 2
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - Subscribe: 4
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - onNext: 1
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 1
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - Subscribe: 1
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - Complete!
19:41:39.814 [main] INFO learning.spring.customer.OrderGenerator - onEach: onComplete, null</code></pre>
<p>&#21487;&#20197;&#30475;&#21040;&#25968;&#23383; 3&#12289;2&#12289;1 &#20998;&#21035;&#32463;&#36807;&#20102; <code>onNext()</code>&#12289;<code>onEach()</code> &#21644; <code>subscribe()</code>&#65292;&#20808;&#26159; 3&#65292;&#28982;&#21518;&#26159; 2&#65292;&#21040; 1 &#30340;&#26102;&#20505;&#36825;&#20010; <code>Flux</code> &#23436;&#25104;&#20102;&#65292;&#25152;&#20197;&#36824;&#25191;&#34892;&#20102; <code>complete()</code>&#12290;<code>doOnEach()</code> &#20013;&#22788;&#29702;&#30340;&#26159; <code>Signal&lt;T&gt;</code>&#65292;&#24182;&#38750;&#27599;&#31181;&#20449;&#21495;&#37117;&#26377;&#23545;&#24212;&#30340;&#20540;&#65292;&#27604;&#22914; <code>onComplete</code> &#21462;&#21040;&#30340;&#20540;&#23601;&#26159; <code>null</code>&#12290;</p>
<p>&#22914;&#26524;&#35843;&#25442;&#19968;&#19979; <code>.filter(n -&gt; n &lt; 4)</code> &#21644; <code>.take(3)</code> &#30340;&#39034;&#24207;&#65292;&#37027;&#23601;&#21464;&#25104;&#20102;&#20808;&#21462;&#20986; 3 &#20010;&#25968;&#65292;&#20877;&#36807;&#28388;&#20986;&#23567;&#20110; 4 &#30340;&#65292;&#21069; 3 &#20010;&#25968;&#26159; 5&#12289;4&#12289;3&#65292;&#23567;&#20110; 4 &#30340;&#23601;&#21482;&#26377; 3&#65292;&#36755;&#20986;&#23601;&#21464;&#25104;&#20102;&#19979;&#38754;&#36825;&#26679;&#65288;&#25152;&#20197;&#65292;&#35831;&#27880;&#24847;&#21508;&#31181;&#25805;&#20316;&#30340;&#39034;&#24207;&#65289;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>19:56:10.483 [main] INFO learning.spring.customer.OrderGenerator - onNext: 3
19:56:10.484 [main] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 3
19:56:10.485 [main] INFO learning.spring.customer.OrderGenerator - Subscribe: 9
19:56:10.485 [main] INFO learning.spring.customer.OrderGenerator - Complete!
19:56:10.486 [main] INFO learning.spring.customer.OrderGenerator - onEach: onComplete, null</code></pre>
<p>&#22914;&#26524;&#25105;&#20204;&#21435;&#25481;&#26368;&#21518;&#37027;&#21477; <code>.subscribe(n -&gt; log.info("Subscribe: {}", n))</code>&#65292;&#37325;&#26032;&#25191;&#34892;&#36825;&#27573;&#20195;&#30721;&#65292;&#20250;&#21457;&#29616;&#20160;&#20040;&#37117;&#27809;&#26377;&#21457;&#29983;&#12290;</p>
<blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#22312;&#20351;&#29992;&#20102; Project Reactor &#30340;&#20195;&#30721;&#20013;&#65292;&#21482;&#26377;&#20808;&#35746;&#38405;&#65292;&#29983;&#20135;&#32773;&#19978;&#30340;&#21508;&#31181;&#25805;&#20316;&#25165;&#20250;&#34987;&#30495;&#27491;&#25191;&#34892;&#12290;&#23448;&#26041;&#25991;&#26723;&#20013;&#31216;&#20854;&#20026;&#8220;Nothing happens until you subscribe&#8221;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#32447;&#31243;&#35843;&#24230;</strong></p>
<p>&#22312;&#21069;&#38754;&#20363;&#23376;&#30340;&#36755;&#20986;&#20013;&#65292;&#25105;&#20204;&#30475;&#21040;&#30340; <code>main</code> &#26159;&#32447;&#31243;&#21517;&#65292;&#23427;&#26159;&#24403;&#21069;&#25191;&#34892;&#30340;&#32447;&#31243;&#12290;&#20854;&#23454; Project Reactor &#37324;&#30340; <code>Mono</code> &#21644; <code>Flux</code> &#21487;&#20197;&#22312;&#20027;&#32447;&#31243;&#22806;&#30340;&#22320;&#26041;&#25191;&#34892;&#65292;&#20063;&#19981;&#19968;&#23450;&#26159;&#35843;&#29992; <code>subscribe()</code> &#30340;&#37027;&#20010;&#32447;&#31243;&#12290;&#20855;&#20307;&#25191;&#34892;&#30340;&#32447;&#31243;&#26159;&#30001;&#26694;&#26550;&#20013;&#30340; <code>Scheduler</code> &#26469;&#35843;&#24230;&#30340;&#65292;&#36890;&#36807; <code>Schedulers</code> &#31867;&#20013;&#30340;&#38745;&#24577;&#26041;&#27861;&#65292;&#25105;&#20204;&#21487;&#20197;&#25351;&#23450;&#24819;&#35201;&#20351;&#29992;&#30340;&#25191;&#34892;&#19978;&#19979;&#25991;&#65292;&#22914;&#34920; 11-14 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 11-14&#12288;<code>Schedulers</code> &#31867;&#20013;&#30340;&#38745;&#24577;&#26041;&#27861;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#26041;&#27861;</th><th>&#35828;&#26126;</th></tr><tr><td><code>Schedulers.immediate()</code></td><td>&#30452;&#25509;&#22312;&#24403;&#21069;&#32447;&#31243;&#20013;&#25191;&#34892;</td></tr><tr><td><code>Schedulers.single()</code></td><td>&#22312;&#19968;&#20010;&#21333;&#29420;&#30340;&#32447;&#31243;&#20013;&#25191;&#34892;&#65292;&#36825;&#20010;&#32447;&#31243;&#26159;&#22823;&#23478;&#20849;&#29992;&#30340;</td></tr><tr><td><code>Schedulers.newSingle()</code></td><td>&#22312;&#19968;&#20010;&#21333;&#29420;&#30340;&#32447;&#31243;&#20013;&#25191;&#34892;&#65292;&#27599;&#27425;&#35843;&#29992;&#37117;&#20250;&#20351;&#29992;&#19968;&#20010;&#26032;&#30340;&#32447;&#31243;</td></tr><tr><td><code>Schedulers.elastic()</code></td><td>&#22312;&#19968;&#20010;&#21487;&#20280;&#32553;&#30340;&#32447;&#31243;&#27744;&#20013;&#25191;&#34892;&#65292;&#24037;&#20316;&#32447;&#31243;&#20250;&#25353;&#38656;&#21019;&#24314;&#65292;&#19968;&#27573;&#26102;&#38388;&#19981;&#29992;&#65288;&#40664;&#35748; 60 &#31186;&#65289;&#20250;&#34987;&#22238;&#25910;&#65292;&#20294;&#24517;&#39035;&#27880;&#24847;&#32447;&#31243;&#27744;&#20013;&#30340;&#32447;&#31243;&#25968;&#26159;&#27809;&#26377;&#19978;&#38480;&#30340;</td></tr><tr><td><code>Schedulers.boundedElastic()</code></td><td>&#19982; <code>Schedulers.elastic()</code> &#31867;&#20284;&#65292;&#21306;&#21035;&#22312;&#20110;&#36825;&#37324;&#30340;&#32447;&#31243;&#25968;&#26159;&#26377;&#38480;&#30340;&#65292;&#40664;&#35748;&#26159; CPU &#26680;&#25968;&#30340; 10 &#20493;</td></tr><tr><td><code>Schedulers.parallel()</code></td><td>&#22312;&#19968;&#20010;&#22266;&#23450;&#30340;&#32447;&#31243;&#27744;&#20013;&#25191;&#34892;&#65292;&#32447;&#31243;&#27744;&#30340;&#32447;&#31243;&#25968;&#23601;&#26159; CPU &#26680;&#25968;</td></tr><tr><td><code>Schedulers.fromExecutorService()</code></td><td>&#21487;&#20197;&#25351;&#23450;&#19968;&#20010; <code>ExecutorService</code>&#65292;&#22312;&#36825;&#20010; <code>ExecutorService</code> &#20013;&#25191;&#34892;</td></tr></table>
<p>&#21487;&#20197;&#36890;&#36807; <code>publishOn()</code> &#21644; <code>subscribeOn()</code> &#26041;&#27861;&#26469;&#20999;&#25442;&#25191;&#34892;&#30340;&#19978;&#19979;&#25991;&#65292;&#20854;&#20013; <code>publishOn()</code> &#30340;&#20301;&#32622;&#24456;&#26377;&#35762;&#31350;&#65292;<code>subscribeOn()</code> &#21017;&#25918;&#22312;&#21738;&#37324;&#37117;&#21487;&#20197;&#12290;&#25105;&#20204;&#25226;&#21069;&#38754;&#30340;&#20363;&#23376;&#31245;&#20316;&#20462;&#25913;&#65292;&#22686;&#21152;&#20004;&#22788; <code>publishOn()</code>&#65292;&#35753;&#23427;&#36305;&#22312;&#20854;&#20182;&#32447;&#31243;&#37324;&#65292;&#30475;&#30475;&#20250;&#26377;&#20309;&#19981;&#21516;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">18</span></p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Flux.just(5, 4, 3, 2, 1, 0)
    .filter(n -&gt; n &lt; 4)
    .take(3)
    .publishOn(Schedulers.single())
    .doOnNext(n -&gt; log.info("onNext: {}", n))
    .doOnComplete(() -&gt; log.info("Complete!"))
    .doOnEach(n -&gt; log.info("onEach: {}, {}", n.getType(), n.get()))
    .map(n -&gt; n * n)
    .publishOn(Schedulers.parallel())
    .map(n -&gt; n - 1)
    .subscribe(n -&gt; log.info("Subscribe: {}", n));
Thread.sleep(1000);</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#36755;&#20986;&#22914;&#19979;&#12290;&#21487;&#20197;&#30475;&#21040; <code>publishOn(Schedulers.single())</code> &#24433;&#21709;&#20102; <code>doOnNext()</code>&#12289;<code>doOnComplete</code> &#21644; <code>doOnEach()</code> &#30340;&#25191;&#34892;&#65292;&#36825;&#19977;&#20010;&#26041;&#27861;&#37117;&#36305;&#22312; <code>single-1</code> &#32447;&#31243;&#37324;&#65307;<code>publishOn(Schedulers.parallel())</code> &#21017;&#24433;&#21709;&#20102; <code>subscribe()</code>&#65292;&#23427;&#36305;&#22312; <code>parallel-1</code> &#32447;&#31243;&#37324;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>21:05:03.947 [single-1] INFO learning.spring.customer.OrderGenerator - onNext: 3
21:05:03.949 [single-1] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 3
21:05:03.950 [single-1] INFO learning.spring.customer.OrderGenerator - onNext: 2
21:05:03.950 [single-1] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 2
21:05:03.950 [parallel-1] INFO learning.spring.customer.OrderGenerator - Subscribe: 8
21:05:03.950 [single-1] INFO learning.spring.customer.OrderGenerator - onNext: 1
21:05:03.950 [parallel-1] INFO learning.spring.customer.OrderGenerator - Subscribe: 3
21:05:03.950 [single-1] INFO learning.spring.customer.OrderGenerator - onEach: onNext, 1
21:05:03.950 [single-1] INFO learning.spring.customer.OrderGenerator - Complete!
21:05:03.950 [parallel-1] INFO learning.spring.customer.OrderGenerator - Subscribe: 0
21:05:03.951 [single-1] INFO learning.spring.customer.OrderGenerator - onEach: onComplete, null</code></pre>
<p>&#20854;&#23454;&#65292;&#31532;&#19968;&#20010; <code>map()</code> &#20063;&#26159;&#22312; <code>single-1</code> &#32447;&#31243;&#20013;&#25191;&#34892;&#30340;&#65292;&#31532;&#20108;&#20010; <code>map()</code> &#26159;&#22312; <code>parallel-1</code> &#32447;&#31243;&#37324;&#12290;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#22312; <code>map()</code> &#30340; Lambda &#20013;&#22686;&#21152;&#26085;&#24535;&#26469;&#21152;&#20197;&#39564;&#35777;&#65292;&#36825;&#20010;&#39564;&#35777;&#23601;&#20132;&#32473;&#21508;&#20301;&#33258;&#24049;&#21160;&#25163;&#20102;&#12290;&#36890;&#36807;&#36825;&#20010;&#20363;&#23376;&#21487;&#20197;&#30475;&#21040;&#65292;<code>publishOn()</code> &#20250;&#24433;&#21709;&#23427;&#21518;&#38754;&#20195;&#30721;&#25191;&#34892;&#30340;&#19978;&#19979;&#25991;&#65292;&#30452;&#21040;&#36935;&#21040;&#19979;&#19968;&#20010; <code>publishOn()</code>&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#38169;&#35823;&#22788;&#29702;</strong></p>
<p>&#26085;&#24120;&#24320;&#21457;&#24037;&#20316;&#20013;&#65292;&#19968;&#23450;&#20250;&#36935;&#21040;&#38656;&#35201;&#22788;&#29702;&#24322;&#24120;&#30340;&#24773;&#20917;&#12290;&#22312;&#8220;&#20256;&#32479;&#8221;&#30340;&#20195;&#30721;&#20013;&#65292;&#25105;&#20204;&#20064;&#24815;&#20102;&#29992; <code>try-catch</code> &#20195;&#30721;&#22359;&#26469;&#25429;&#33719;&#24322;&#24120;&#24182;&#21152;&#20197;&#22788;&#29702;&#65292;&#37027;&#22312;&#21709;&#24212;&#24335;&#30340;&#20195;&#30721;&#37324;&#21448;&#35813;&#22914;&#20309;&#22788;&#29702;&#24322;&#24120;&#21602;&#65311;&#27599;&#20010;&#27493;&#39588;&#20256;&#20837;&#30340; Lambda &#37324;&#37117;&#22871;&#20010; <code>try-catch</code> &#19968;&#28857;&#20799;&#37117;&#19981;&#20248;&#38597;&#65292;&#37027; Project Reactor &#21448;&#26159;&#24590;&#20040;&#20570;&#30340;&#21602;&#65311;</p>
<p>&#22312; <code>subscribe()</code> &#26041;&#27861;&#20013;&#65292;&#38500;&#20102;&#27491;&#24120;&#30340;&#28040;&#36153;&#36923;&#36753;&#65292;&#25105;&#20204;&#36824;&#21487;&#20197;&#20256;&#20837; <code>Consumer&lt;? super Throwable&gt;</code> &#31867;&#22411;&#30340;&#28040;&#36153;&#32773;&#21435;&#22788;&#29702;&#25243;&#20986;&#30340;&#24322;&#24120;&#12290;&#20363;&#22914;&#19979;&#38754;&#30340;&#20195;&#30721;&#23601;&#20250;&#36935;&#21040;&#38500;&#25968;&#20026; 0 &#30340;&#24322;&#24120;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Flux.just(2, 1, 0, -1, -2)
    .map(n -&gt; 10 / n)
    .subscribe(n -&gt; log.info("num={}", n),
        e -&gt; log.error("Exception occurred: {}", e.getMessage()));</code></pre>
<p>&#36816;&#34892;&#30340;&#32467;&#26524;&#22914;&#19979;&#12290;&#24403;&#22788;&#29702;&#21040; <code>0</code> &#30340;&#26102;&#20505; <code>map()</code> &#25253;&#38169;&#20102;&#65292;&#21518;&#38754;&#30340; <code>-1</code> &#21644; <code>-2</code> &#24182;&#26410;&#24471;&#21040;&#22788;&#29702;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>22:21:28.669 [main] INFO learning.spring.customer.OrderGenerator - num=5
22:21:28.670 [main] INFO learning.spring.customer.OrderGenerator - num=10
22:21:28.674 [main] ERROR learning.spring.customer.OrderGenerator - Exception occurred: / by zero</code></pre>
<p>&#25226;&#25152;&#26377;&#24322;&#24120;&#22788;&#29702;&#36923;&#36753;&#37117;&#20889;&#22312;&#19968;&#20010;&#22320;&#26041;&#24517;&#28982;&#21487;&#34892;&#65292;&#20294;&#36824;&#26159;&#19981;&#22815;&#20248;&#38597;&#12290;&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#22312;&#25253;&#38169;&#21518;&#33021;&#25191;&#34892;&#38477;&#32423;&#26041;&#26696;&#65292;&#29992;&#20854;&#20182;&#20540;&#20195;&#26367;&#32467;&#26524;&#65292;&#24076;&#26395;&#32487;&#32493;&#22788;&#29702;&#21518;&#32493;&#30340;&#20869;&#23481;&#65292;&#24076;&#26395;&#26681;&#25454;&#24322;&#24120;&#31867;&#22411;&#36827;&#34892;&#26377;&#38024;&#23545;&#24615;&#30340;&#22788;&#29702;&#65292;&#25110;&#32773;&#23601;&#26159;&#31616;&#21333;&#20877;&#37325;&#35797;&#19968;&#19979;&#65292;&#21448;&#35813;&#24590;&#20040;&#21150;&#65311;&#34920; 11-15 &#20013;&#23601;&#26159; Project Reactor &#32473;&#20986;&#30340;&#35299;&#20915;&#26041;&#26696;&#65292;&#36890;&#36807;&#36825;&#20123;&#26041;&#27861;&#21487;&#20197;&#28385;&#36275;&#21018;&#25165;&#30340;&#35785;&#27714;&#12290;</p>
<p><strong>&#34920; 11-15&#12288;&#19968;&#20123;&#26377;&#29992;&#30340;&#24322;&#24120;&#22788;&#29702;&#26041;&#27861;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#26041;&#27861;</th><th>&#35828;&#26126;</th></tr><tr><td><code>onErrorReturn()</code></td><td>&#25429;&#33719;&#24322;&#24120;&#65292;&#36820;&#22238;&#19968;&#20010;&#40664;&#35748;&#20540;&#12290;&#21487;&#20197;&#30452;&#25509;&#36820;&#22238;&#65292;&#20063;&#21487;&#20197;&#26681;&#25454;&#24322;&#24120;&#31867;&#22411;&#36820;&#22238;&#65292;&#25110;&#32773;&#26681;&#25454; <code>Predicate</code> &#26469;&#36807;&#28388;&#24322;&#24120;</td></tr><tr><td><code>onErrorResume()</code></td><td>&#25429;&#33719;&#24322;&#24120;&#65292;&#25191;&#34892;&#19968;&#27573;&#38477;&#32423;&#30340;&#36923;&#36753;&#65292;&#36820;&#22238;&#21478;&#19968;&#20010; <code>Publisher</code>&#65307;&#21516; <code>onErrorReturn()</code> &#19968;&#26679;&#65292;&#20063;&#21487;&#20197;&#36807;&#28388;&#24322;&#24120;</td></tr><tr><td><code>onErrorContinue()</code></td><td>&#25429;&#33719;&#24322;&#24120;&#65292;&#25191;&#34892;&#19968;&#27573;&#36923;&#36753;&#65292;&#38543;&#21518;&#32487;&#32493;&#22788;&#29702;&#21518;&#32493;&#30340;&#20869;&#23481;</td></tr><tr><td><code>doOnError()</code></td><td>&#32487;&#32493;&#25243;&#20986;&#24322;&#24120;&#65292;&#20294;&#21487;&#20197;&#33719;&#21462;&#21040;&#24322;&#24120;&#20449;&#24687;&#65292;&#20197;&#20415;&#25171;&#21360;&#26085;&#24535;&#25110;&#20570;&#20123;&#20854;&#20182;&#30340;&#22788;&#29702;</td></tr><tr><td><code>doFinally()</code></td><td>&#31867;&#20284; <code>try-catch-finally</code> &#20195;&#30721;&#22359;&#20013;&#30340; <code>finally</code> &#20851;&#38190;&#23383;&#65292;&#20854;&#20013;&#30340;&#36923;&#36753;&#22312;&#29983;&#20135;&#32773;&#30340;&#24207;&#21015;&#32467;&#26463;&#25110;&#32773;&#21462;&#28040;&#26102;&#20250;&#24471;&#21040;&#25191;&#34892;</td></tr><tr><td><code>retry()</code></td><td>&#37325;&#35797;&#25351;&#23450;&#27425;&#25968;</td></tr></table>
<p>&#22914;&#26524;&#29992; <code>onErrorContinue()</code> &#26469;&#25913;&#20889;&#19968;&#19979;&#65292;&#21487;&#20197;&#22312;&#38500;&#20197; <code>0</code> &#25253;&#38169;&#21518;&#32487;&#32493;&#22788;&#29702;&#21518;&#32493;&#30340; <code>-1</code> &#21644; <code>-2</code>&#65292;&#20195;&#30721;&#20250;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Flux.just(2, 1, 0, -1, -2)
    .map(n -&gt; 10 / n)
    .onErrorContinue((throwable, o) -&gt; log.info("o = {}", o))
    .subscribe(n -&gt; log.info("num={}", n));</code></pre>
<p>&#20195;&#30721;&#30340;&#36755;&#20986;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>22:40:08.472 [main] INFO learning.spring.customer.OrderGenerator - num=5
22:40:08.473 [main] INFO learning.spring.customer.OrderGenerator - num=10
22:40:08.476 [main] INFO learning.spring.customer.OrderGenerator - o = 0
22:40:08.476 [main] INFO learning.spring.customer.OrderGenerator - num=-10
22:40:08.476 [main] INFO learning.spring.customer.OrderGenerator - num=-5</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#32972;&#21387;</strong></p>
<p>&#22312;&#22788;&#29702;&#27969;&#30340;&#26102;&#20505;&#65292;&#19979;&#28216;&#36890;&#24120;&#26159;&#34987;&#21160;&#22320;&#25509;&#21463;&#19978;&#28216;&#21457;&#26469;&#30340;&#20869;&#23481;&#65292;&#20294;&#24635;&#20250;&#20986;&#29616;&#19978;&#28216;&#30340;&#29983;&#20135;&#36895;&#24230;&#36828;&#22823;&#20110;&#19979;&#28216;&#28040;&#36153;&#36895;&#24230;&#30340;&#24773;&#20917;&#65292;&#36825;&#26102;&#35813;&#24590;&#20040;&#21150;&#21602;&#65311;&#23545;&#20110;&#19981;&#37325;&#35201;&#30340;&#20869;&#23481;&#65292;&#19968;&#33324;&#20250;&#24819;&#21040;&#30340;&#26159;&#30452;&#25509;&#25243;&#24323;&#65292;&#19981;&#20570;&#22788;&#29702;&#65307;&#37027;&#20123;&#19981;&#33021;&#25243;&#24323;&#30340;&#65292;&#22914;&#26524;&#21487;&#20197;&#21578;&#35785;&#19978;&#28216;&#21457;&#24930;&#28857;&#65292;&#35753;&#19978;&#28216;&#20808;&#32531;&#19968;&#19979;&#23601;&#22909;&#20102;&#8212;&#8212;<strong>&#32972;&#21387;</strong>&#65288;backpressure&#65292;&#20063;&#26377;&#21483;&#22238;&#21387;&#30340;&#65289;&#23601;&#26159;&#36825;&#31181;&#21521;&#19978;&#28216;&#20256;&#36882;&#20449;&#21495;&#30340;&#26426;&#21046;&#12290;</p>
<p>&#22312;&#19978;&#38754;&#30475;&#21040;&#30340;&#21508;&#31181;&#20363;&#23376;&#37324;&#65292;&#25105;&#20204;&#37117;&#20351;&#29992; <code>subscribe()</code> &#26041;&#27861;&#65292;&#40664;&#35748;&#23427;&#20250;&#35831;&#27714; <code>Long.MAX_VALUE</code> &#20010;&#25968;&#25454;&#22238;&#26469;&#65292;&#36825;&#23601;&#30456;&#24403;&#20110;&#29031;&#21333;&#20840;&#25910;&#12290;&#20294;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#19968;&#20123;&#26041;&#27861;&#26469;&#25511;&#21046;&#35831;&#27714;&#30340;&#25968;&#37327;&#65292;&#20363;&#22914;&#65292;<code>buffer()</code> &#23558;&#25968;&#25454;&#20808;&#32531;&#23384;&#19968;&#19979;&#65292;&#36825;&#26102;&#21333;&#20010;&#25968;&#25454;&#20250;&#21464;&#25104;&#38598;&#21512;&#65292;&#35746;&#38405;&#32773;&#25343;&#21040;&#30340;&#20854;&#23454;&#26159;&#38598;&#21512;&#65307;<code>limitRequest()</code> &#33021;&#38480;&#21046;&#23454;&#38469;&#35831;&#27714;&#30340;&#25968;&#25454;&#25968;&#37327;&#65307;<code>limitRate()</code> &#33021;&#23558;&#35831;&#27714;&#25968;&#25353;&#25351;&#23450;&#22823;&#23567;&#20998;&#25209;&#21462;&#22238;&#12290;&#27604;&#22914;&#19979;&#38754;&#36825;&#20010;&#20363;&#23376;&#65292;&#25105;&#20204;&#36890;&#36807; <code>doOnRequest()</code> &#25171;&#21360;&#20986;&#20102;&#27599;&#27425;&#35831;&#27714;&#24076;&#26395;&#33719;&#21462;&#30340;&#25968;&#25454;&#37327;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Flux.just(2, 1, 0, -1, -2)
    .doOnRequest(r -&gt; log.info("onRequest1={}", r))
    .buffer(2)
    .doOnRequest(r -&gt; log.info("onRequest2={}", r))
    .limitRequest(2)
    .doOnRequest(r -&gt; log.info("onRequest3={}", r))
    .subscribe(n -&gt; log.info("num={}", n));</code></pre>
<p>&#23427;&#30340;&#36755;&#20986;&#22914;&#19979;&#12290;<code>subscribe()</code> &#24819;&#35201; <code>Long.MAX_VALUE</code> &#20010;&#25968;&#25454;&#65292;&#32780; <code>limitRequest(2)</code> &#38480;&#21046;&#20102;&#21462;&#22238;&#20004;&#20010;&#32531;&#23384;&#30340;&#20869;&#23481;&#65292;&#27599;&#20010;&#32531;&#23384;&#22823;&#23567;&#26159; 2&#65292;&#25152;&#20197;&#25343;&#20102; 4 &#20010;&#25968;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>23:22:28.157 [main] INFO learning.spring.customer.OrderGenerator - onRequest3=9223372036854775807
23:22:28.158 [main] INFO learning.spring.customer.OrderGenerator - onRequest2=2
23:22:28.158 [main] INFO learning.spring.customer.OrderGenerator - onRequest1=4
23:22:28.159 [main] INFO learning.spring.customer.OrderGenerator - num=[2, 1]
23:22:28.159 [main] INFO learning.spring.customer.OrderGenerator - num=[0, -1]</code></pre>
<p>&#22914;&#26524;&#25226; <code>limitRequest(2)</code> &#25913;&#20026; <code>limitRate(2)</code>&#65292;&#37027;&#20040;&#36755;&#20986;&#23601;&#21464;&#25104;&#19979;&#38754;&#36825;&#26679;&#65292;&#25152;&#26377;&#30340;&#25968;&#26368;&#32456;&#37117;&#33021;&#34987;&#21462;&#22238;&#26469;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>23:24:05.680 [main] INFO learning.spring.customer.OrderGenerator - onRequest3=9223372036854775807
23:24:05.681 [main] INFO learning.spring.customer.OrderGenerator - onRequest2=2
23:24:05.681 [main] INFO learning.spring.customer.OrderGenerator - onRequest1=4
23:24:05.682 [main] INFO learning.spring.customer.OrderGenerator - num=[2, 1]
23:24:05.682 [main] INFO learning.spring.customer.OrderGenerator - num=[0, -1]
23:24:05.682 [main] INFO learning.spring.customer.OrderGenerator - onRequest2=2
23:24:05.682 [main] INFO learning.spring.customer.OrderGenerator - onRequest1=4
23:24:05.682 [main] INFO learning.spring.customer.OrderGenerator - num=[-2]</code></pre>
<p>&#30001;&#20110;&#19981;&#26159;&#25152;&#26377;&#19978;&#28216;&#37117;&#33021;&#25903;&#25345;&#32972;&#21387;&#20449;&#21495;&#65292;&#26377;&#20123;&#29983;&#20135;&#32773;&#26159;&#26377;&#35746;&#38405;&#25165;&#24320;&#22987;&#29983;&#20135;&#65292;&#32780;&#26377;&#20123;&#26159;&#26080;&#35770;&#26159;&#21542;&#26377;&#35746;&#38405;&#37117;&#20250;&#29983;&#20135;&#25968;&#25454;&#12290;&#25152;&#20197;&#24456;&#22810;&#24773;&#20917;&#19979;&#65292;&#36824;&#26159;&#21482;&#33021;&#38752;&#25243;&#24323;&#65292;&#26368;&#22810;&#33258;&#24049;&#36825;&#37324;&#31245;&#24494;&#32531;&#23384;&#19968;&#20123;&#65292;&#21097;&#19979;&#30340;&#20877;&#25243;&#24323;&#12290;&#19981;&#31649;&#24590;&#20040;&#26679;&#65292;&#32972;&#21387;&#36824;&#26159;&#32473;&#20102;&#25105;&#20204;&#19968;&#20123;&#24212;&#23545;&#19978;&#19979;&#28216;&#36895;&#29575;&#19981;&#21305;&#37197;&#30340;&#25163;&#27573;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">18</span>&#20195;&#30721;&#30340;&#26368;&#21518;&#21152;&#20102;&#19968;&#21477; <code>Thread.sleep(1000)</code>&#65292;&#22240;&#20026;&#35746;&#38405;&#21457;&#29983;&#22312;&#21035;&#30340;&#32447;&#31243;&#37324;&#65292;&#25105;&#20204;&#24076;&#26395;&#20027;&#32447;&#31243;&#21487;&#20197;&#31561;&#24453;&#20854;&#20182;&#25805;&#20316;&#25191;&#34892;&#23436;&#27605;&#12290;&#38500;&#20102;&#36825;&#37324;&#29992;&#21040;&#30340; <code>sleep()</code>&#65292;&#20063;&#21487;&#20197;&#32771;&#34385;&#29992; <code>CountDownLatch</code>&#65292;&#27599;&#28040;&#36153;&#19968;&#20010;&#25968;&#25454;&#35745;&#25968;&#22120;&#20943; 1&#65292;&#21478;&#22806;&#36824;&#26377;&#24456;&#22810;&#20854;&#20182;&#30340;&#26041;&#27861;&#37117;&#33021;&#22815;&#23454;&#29616;&#21516;&#26679;&#30340;&#25928;&#26524;&#12290;</p><h3 id="nav_point_185">11.4.2&#12288;&#20351;&#29992; WebFlux &#20195;&#26367; WebMVC</h3><p>&#20174; Spring Framework 5.0 &#24320;&#22987;&#65292;Spring &#22242;&#38431;&#24341;&#20837;&#20102;&#19968;&#22871;&#26032;&#30340;&#21709;&#24212;&#24335; Web &#26694;&#26550;&#8212;&#8212;WebFlux&#12290;&#21487;&#20197;&#35828;&#65292;WebFlux &#26159;&#20197;&#8220;&#19968;&#31561;&#20844;&#27665;&#8221;&#30340;&#36523;&#20221;&#20986;&#29616;&#22312; Spring Framework &#20013;&#30340;&#65292;&#21644;&#34892;&#36208;&#27743;&#28246;&#22810;&#24180;&#30340; Spring MVC &#24179;&#36215;&#24179;&#22352;&#12290;&#36825;&#26159;&#19968;&#22871;&#23436;&#20840;&#38750;&#38459;&#22622;&#30340; Web &#26694;&#26550;&#65292;&#19981;&#20381;&#36182; Servlet &#23481;&#22120;&#12290;&#34429;&#28982; Servlet 3.1 &#23545;&#38750;&#38459;&#22622; IO &#20063;&#26377;&#19968;&#23450;&#30340;&#25903;&#25345;&#65292;&#20294;&#22312;&#20351;&#29992;&#26102;&#22810;&#23569;&#26377;&#20123;&#21035;&#25197;&#12290;</p><p>WebFlux &#34429;&#28982;&#22312;&#24213;&#23618;&#20351;&#29992;&#20102;&#23436;&#20840;&#19981;&#21516;&#30340;&#26426;&#21046;&#65292;&#20294;&#22312;&#20351;&#29992;&#19978;&#36824;&#26159;&#20860;&#39038;&#20102;&#19981;&#23569; WebMVC &#30340;&#20064;&#24815;&#65292;&#20363;&#22914;&#21487;&#20197;&#20351;&#29992;&#30456;&#20284;&#30340;&#27880;&#35299;&#65288;&#20063;&#21487;&#20197;&#32534;&#20889;&#20989;&#25968;&#24335;&#31471;&#28857;&#65289;&#65292;&#36816;&#34892;&#22312;&#30456;&#21516;&#30340;&#26381;&#21153;&#22120;&#19978;&#65292;&#19981;&#20165;&#26377;&#26381;&#21153;&#31471;&#30340;&#25903;&#25345;&#65292;&#36824;&#25552;&#20379;&#20102;&#24378;&#22823;&#30340;&#23458;&#25143;&#31471;&#12290;&#27604;&#36215;&#30452;&#25509;&#20351;&#29992; Servlet 3.1 &#24320;&#21457;&#38750;&#38459;&#22622;&#30340; Web &#26381;&#21153;&#65292;&#20351;&#29992; WebFlux &#26174;&#28982;&#33021;&#33719;&#24471;&#26356;&#22909;&#30340;&#24320;&#21457;&#20307;&#39564;&#12290;</p><p>&#22914;&#26524;&#20351;&#29992; Spring Boot&#65292;&#21487;&#20197;&#22312; Spring Initializr &#20013;&#36873;&#25321; Spring Reactive Web&#65292;&#20063;&#21487;&#20197;&#30452;&#25509;&#22312; pom.xml &#20013;&#28155;&#21152;&#22914;&#19979;&#20381;&#36182;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p>&#38543;&#21518;&#65292;&#33258;&#21160;&#37197;&#32622;&#31867; <code>WebFluxAutoConfiguration</code> &#20250;&#21019;&#24314;&#19968;&#20123;&#24517;&#35201;&#30340; Bean&#65292;&#20363;&#22914; Spring Boot &#20869;&#32622;&#30340; <code>WebFluxConfigurer</code> &#21644; <code>DelegatingWebFluxConfiguration</code>&#65292;&#36890;&#36807;&#23427;&#20204;&#26469;&#37197;&#32622; <code>FormattingConversionService</code>&#12289;<code>RequestMappingHandlerAdapter</code> &#31561;&#20869;&#23481;&#12290;<code>DelegatingWebFluxConfiguration</code> &#20250;&#33258;&#21160;&#25910;&#38598;&#19978;&#19979;&#25991;&#20013;&#30340; <code>WebFluxConfigurer</code>&#65292;&#36816;&#29992;&#20854;&#20013;&#30340;&#37197;&#32622;&#12290;&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#20570;&#20123;&#33258;&#23450;&#20041;&#30340;&#37197;&#32622;&#65292;&#21487;&#20197;&#32771;&#34385;&#23450;&#20041;&#19968;&#20010;&#33258;&#24049;&#30340; <code>WebFluxConfigurer</code> &#23454;&#29616;&#31867;&#12290;</p><p>Spring Boot &#40664;&#35748;&#20351;&#29992; Netty &#26469;&#36816;&#34892; WebFlux &#30340;&#31243;&#24207;&#65292;&#23427;&#25552;&#20379;&#20102; 4 &#31181;&#19981;&#21516;&#30340;&#26381;&#21153;&#22120;&#25903;&#25345;&#65292;&#20855;&#20307;&#22914;&#34920; 11-16 &#25152;&#31034;&#12290;&#21482;&#38656;&#25490;&#38500; spring-boot-starter-reactor-netty&#65292;&#38543;&#21518;&#24341;&#20837;&#34920;&#20013;&#30340;&#36215;&#27493;&#20381;&#36182;&#65292;&#23601;&#33021;&#23436;&#25104;&#26381;&#21153;&#22120;&#30340;&#26367;&#25442;&#12290;</p><p><strong>&#34920; 11-16&#12288;&#25903;&#25345; WebFlux &#30340; Spring Boot &#20869;&#32622;&#26381;&#21153;&#22120;&#36215;&#27493;&#20381;&#36182;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#26381;&#21153;&#22120;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#20381;&#36182;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Reactor Netty</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>org.springframework.boot:spring-boot-starter-reactor-netty</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Tomcat</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>org.springframework.boot:spring-boot-starter-tomcat</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Jetty</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>org.springframework.boot:spring-boot-starter-jetty</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Undertow</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>org.springframework.boot:spring-boot-starter-undertow</code></p></td>
</tr>
</tbody>
</table><p><code>ReactiveWebServerFactoryConfiguration</code> &#25552;&#20379;&#20102;&#30456;&#24212;&#26381;&#21153;&#22120;&#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#36890;&#36807; <code>@Import</code> &#23548;&#20837;&#20102;&#20855;&#20307;&#30340;&#37197;&#32622;&#65292;&#20363;&#22914; Tomcat &#30340;&#37197;&#32622;&#25918;&#22312; <code>ReactiveWebServerFactoryConfiguration.EmbeddedTomcat</code> &#37324;&#65292;Jetty &#30340;&#26159; <code>ReactiveWebServerFactoryConfiguration.EmbeddedJetty</code>&#12290;&#36825;&#20123;&#37197;&#32622;&#31867;&#30340;&#20316;&#29992;&#23601;&#26159;&#21019;&#24314;&#19981;&#21516;&#26381;&#21153;&#22120;&#30340; <code>ReactiveWebServerFactory</code> Bean&#65292;&#36890;&#36807;&#23427;&#26469;&#33719;&#24471; <code>WebServer</code>&#12290;&#34920; 11-17 &#32599;&#21015;&#20102;&#19981;&#21516;&#26381;&#21153;&#22120;&#23545;&#24212;&#30340; <code>ReactiveWebServerFactory</code> &#31867;&#21644;&#30456;&#24212;&#30340;&#23450;&#21046;&#22120;&#25509;&#21475;&#65292;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#22312;&#19978;&#19979;&#25991;&#37324;&#37197;&#32622;&#36825;&#20123; <code>XxxCustomizer</code> Bean &#26469;&#23454;&#29616;&#20869;&#23884;&#26381;&#21153;&#22120;&#30340;&#23450;&#21046;&#65292;&#20363;&#22914;&#65292;Spring Boot &#30340; <code>ReactiveWebServerFactoryCustomizer</code> &#23601;&#26159;&#26681;&#25454; <code>ServerProperties</code> &#37197;&#32622;&#20869;&#23884;&#26381;&#21153;&#22120;&#30340;&#65292;&#29992;&#30340;&#26159; <code>server.*</code> &#30340;&#37197;&#32622;&#12290;</p><p><strong>&#34920; 11-17&#12288;Spring Boot &#20013;&#19981;&#21516;&#20869;&#23884;&#26381;&#21153;&#22120;&#23545;&#24212;&#30340;&#31867;&#21644;&#25509;&#21475;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#26381;&#21153;&#22120;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;"><code>ReactiveWebServerFactory</code> &#23454;&#29616;&#31867;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#23450;&#21046;&#22120;&#25509;&#21475;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Reactor Netty</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>NettyReactiveWebServerFactory</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>NettyServerCustomizer</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Tomcat</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>TomcatReactiveWebServerFactory</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>TomcatConnectorCustomizer</code>&#12289;<code>TomcatContextCustomizer</code> &#21644; <code>TomcatProtocolHandlerCustomizer</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Jetty</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>JettyReactiveWebServerFactory</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>JettyServerCustomizer</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Undertow</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>UndertowReactiveWebServerFactory</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>UndertowBuilderCustomizer</code></p></td>
</tr>
</tbody>
</table><p>&#35828;&#20102;&#36825;&#20040;&#22810;&#65292;&#20854;&#23454;&#22312;&#23454;&#36341;&#20013;&#38656;&#35201;&#20570;&#30340;&#20107;&#24773;&#22522;&#26412;&#23601;&#26159;&#24341;&#20837;&#36215;&#27493;&#20381;&#36182;&#65292;&#21097;&#19979;&#30340;&#20132;&#32473;&#33258;&#21160;&#37197;&#32622;&#23601;&#22909;&#20102;&#12290;&#19979;&#38754;&#36825;&#26679;&#30340; pom.xml &#23601;&#23436;&#25104;&#20102;&#36866;&#29992;&#20110; WebFlux &#30340; Tomcat &#30340;&#37197;&#32622;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-reactor-netty&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><ol>
<li><p><strong>&#32534;&#20889;&#22522;&#20110;&#27880;&#35299;&#30340;&#25511;&#21046;&#22120;</strong></p>
<p>Spring WebFlux &#20013;&#21487;&#20197;&#20351;&#29992;&#19982; Spring MVC &#19968;&#26679;&#30340;&#27880;&#35299;&#26469;&#24320;&#21457; Web &#25511;&#21046;&#22120;&#65292;&#20174;&#24320;&#21457;&#30340;&#35282;&#24230;&#26469;&#30475;&#65292;&#21482;&#26159;&#29992; <code>Flux</code> &#21644; <code>Mono</code> &#20316;&#20026;&#36820;&#22238;&#23545;&#35937;&#65292;&#20854;&#20182;&#22522;&#26412;&#27809;&#26377;&#20160;&#20040;&#24046;&#24322;&#12290;</p>
<p>&#25105;&#20204;&#20197; 10.4 &#33410;&#26368;&#21518;&#24320;&#21457;&#30340;&#37027;&#20010; JWT &#35748;&#35777;&#23458;&#25143;&#31471;&#20026;&#22522;&#30784;&#65292;&#25913;&#36896;&#19968;&#19979; Customer &#24037;&#31243;&#12290;&#21407;&#26469;&#30340;&#31243;&#24207;&#27604;&#36739;&#31616;&#21333;&#65292;&#23436;&#20840;&#26159;&#33258;&#21160;&#30340;&#65292;&#36816;&#34892;&#32467;&#26463;&#33258;&#21160;&#36864;&#20986;&#65292;&#28789;&#27963;&#24615;&#24046;&#20102;&#19968;&#20123;&#12290;&#20551;&#35774;&#25105;&#20204;&#29616;&#22312;&#24076;&#26395;&#30001;&#20154;&#26469;&#35302;&#21457;&#19968;&#20123;&#25805;&#20316;&#12290;&#20197;&#21152;&#36733;&#33756;&#21333;&#20026;&#20363;&#65292;&#21407;&#26469;&#29992;&#30340;&#26159; <code>MenuRunner</code> &#31867;&#65292;&#29616;&#22312;&#21487;&#20197;&#25226;&#23427;&#21024;&#20102;&#65292;&#30452;&#25509;&#35843;&#29992; REST &#26381;&#21153;&#65292;&#21462;&#22238;&#32467;&#26524;&#24182;&#25171;&#21360;&#26085;&#24535;&#12290;&#24590;&#20040;&#23454;&#29616;&#21602;&#65311;&#21487;&#20197;&#29992; WebFlux &#32534;&#20889;&#19968;&#20010; Web &#25511;&#21046;&#22120;&#65292;&#20854;&#20313;&#25805;&#20316;&#19981;&#21464;&#65292;Web &#25511;&#21046;&#22120;&#30340;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 11-18 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">19</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-18</strong>&#12288;&#22522;&#20110; WebFlux &#30340; Web &#25511;&#21046;&#22120; <code>MenuController</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@RestController
@RequestMapping("/menu")
public class MenuController {
    @Autowired
    private MenuService menuService;

    @GetMapping
    public Flux&lt;MenuItem&gt; getAllMenu() {
        return menuService.getAllMenu();
    }

    @GetMapping(path = "/{id}")
    public Mono&lt;MenuItem&gt; getById(@PathVariable Long id) {
        if (id == null) {
            return Mono.empty();
        }
        return menuService.getById(id);
    }
}</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#20013;&#65292;&#25105;&#20204;&#23558;&#33719;&#21462;&#33756;&#21333;&#30340;&#25805;&#20316;&#23553;&#35013;&#36827;&#20102; <code>MenuService</code> &#20013;&#65292;&#25511;&#21046;&#22120;&#30340;&#26041;&#27861;&#30452;&#25509;&#36820;&#22238; Project Reactor &#30340; <code>Flux</code> &#21644; <code>Mono</code> &#31867;&#22411;&#23545;&#35937;&#12290;<code>MenuService</code> &#30452;&#25509;&#27839;&#29992;&#20102; <code>MenuRunner</code> &#20013;&#30340;&#37096;&#20998;&#20195;&#30721;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-19 &#25152;&#31034;&#12290;&#36825;&#37324;&#30340; <code>RestTemplate</code> &#25805;&#20316;&#26159;&#38459;&#22622;&#30340;&#65288;&#25105;&#20204;&#20250;&#22312;&#26412;&#33410;&#21518;&#32493;&#30340;&#20869;&#23481;&#20013;&#20171;&#32461;&#21709;&#24212;&#24335;&#30340; Web &#23458;&#25143;&#31471; <code>WebClient</code>&#65292;&#27492;&#22788;&#20808;&#32487;&#32493;&#20351;&#29992; <code>RestTemplate</code>&#65289;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-19</strong>&#12288;&#23553;&#35013;&#20102; <code>RestTemplate</code> &#25805;&#20316;&#30340; <code>MenuService</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
public class MenuService {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    public Flux&lt;MenuItem&gt; getAllMenu() {
        ParameterizedTypeReference&lt;List&lt;MenuItem&gt;&gt; typeReference =
            new ParameterizedTypeReference&lt;List&lt;MenuItem&gt;&gt;() {
            };
        URI uri = UriComponentsBuilder.fromUriString(binarytea + "/menu").build().toUri();
        RequestEntity&lt;Void&gt; request = RequestEntity.get(uri).accept(MediaType.APPLICATION_JSON).build();
        ResponseEntity&lt;List&lt;MenuItem&gt;&gt; response = restTemplate.exchange(request, typeReference);
        return Flux.fromIterable(response.getBody());
    }

    public Mono&lt;MenuItem&gt; getById(Long id) {
        MenuItem item = restTemplate.getForObject(binarytea + "/menu/{id}", MenuItem.class, id);
        return item != null ? Mono.just(item) : Mono.empty();
    }
}</code></pre>
<p>&#30001;&#20110;&#25105;&#20204;&#20351;&#29992;&#20102;&#21709;&#24212;&#24335; Web &#25216;&#26415;&#26632;&#65292;Spring Boot &#30340;&#19968;&#20123;&#33258;&#21160;&#37197;&#32622;&#31867;&#20250;&#30452;&#25509;&#22833;&#25928;&#65292;&#20363;&#22914; <code>RestTemplateAutoConfiguration</code> &#21644; <code>HttpMessageConvertersAutoConfiguration</code>&#65292;&#19978;&#38754;&#37117;&#21152;&#20102; <code>@Conditional(NotReactiveWebApplicationCondition.class)</code>&#65292;&#25152;&#20197;&#38656;&#35201;&#25105;&#20204;&#33258;&#24049;&#26469;&#22788;&#29702;&#19968;&#20123; <code>RestTemplate</code> &#21644; <code>HttpMessageConverter</code> &#30456;&#20851;&#30340;&#21021;&#22987;&#21270;&#24037;&#20316;&#12290;&#20026;&#27492;&#65292;&#25105;&#20204;&#38656;&#35201;&#20877;&#35843;&#25972;&#19968;&#19979; <code>CustomerApplication</code> &#31867;&#37324;&#30340;&#37197;&#32622;&#20195;&#30721;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-20 &#25152;&#31034;&#12290;&#39318;&#20808;&#65292;&#27880;&#37322;&#25481; <code>SpringApplicationBuilder</code> &#19978;&#31105;&#29992; Web &#21151;&#33021;&#30340;&#20195;&#30721;&#65292;&#24320;&#21551; Web &#21151;&#33021;&#65307;&#28982;&#21518;&#65292;&#35843;&#25972; <code>RestTemplate</code> &#30340;&#21019;&#24314;&#20195;&#30721;&#65292;&#21407;&#20808;&#36890;&#36807;&#21442;&#25968;&#33719;&#21462;&#33258;&#21160;&#37197;&#32622;&#30340; <code>RestTemplateBuilder</code>&#65292;&#29616;&#22312;&#21482;&#33021;&#33258;&#24049;&#29992; <code>new</code> &#21019;&#24314;&#19968;&#20010;&#65292;&#20877;&#37197;&#32622;&#20004;&#20010; <code>HttpMessageConverter</code>&#65292;&#23588;&#20854;&#26159; Jackson2 &#30340;&#37027;&#20010;&#65292;&#19968;&#23450;&#35201;&#29992; Spring &#23481;&#22120;&#20013;&#30340; <code>ObjectMapper</code>&#65292;&#21542;&#21017;&#26080;&#27861;&#21033;&#29992; Spring Boot &#33258;&#21160;&#37197;&#32622;&#30340;&#21508;&#31181; Module&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-20</strong>&#12288;&#38024;&#23545; WebFlux &#35843;&#25972;&#36807;&#30340; <code>CustomerApplication</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@Slf4j
public class CustomerApplication {
    public static void main(String[] args) {
        new SpringApplicationBuilder()
            .sources(CustomerApplication.class)
            //.web(WebApplicationType.NONE)
            .run(args);
    }

    @Bean
    public RestTemplate restTemplate(ObjectProvider&lt;ObjectMapper&gt; objectMapper) {
        return new RestTemplateBuilder()
                .additionalMessageConverters(new StringHttpMessageConverter(),
                    new MappingJackson2HttpMessageConverter(objectMapper.getIfAvailable()))
                .requestFactory(this::requestFactory)
                .setConnectTimeout(Duration.ofSeconds(1)) // &#36830;&#25509;&#36229;&#26102;
                .setReadTimeout(Duration.ofSeconds(5)) // &#35835;&#21462;&#36229;&#26102;
                .additionalRequestCustomizers(jwtClientHttpRequestInitializer())
                .build();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#22312;&#36816;&#34892; <code>CustomerApplication</code> &#21069;&#65292;&#20808;&#22312;&#26412;&#22320;&#30340; <code>8080</code> &#31471;&#21475;&#21551;&#21160;&#19968;&#20010; <code>BinaryteaApplication</code>&#65292;11.1 &#33410;&#20013;&#30340;&#37027;&#20010; binarytea-controller-advice &#23601;&#21487;&#20197;&#12290;&#38543;&#21518;&#35843;&#25972;&#19968;&#19979; Customer &#39033;&#30446;&#30340; <code>application.properties</code>&#65292;&#22686;&#21152; <code>server.port=8081</code>&#65292;&#25351;&#23450;&#21551;&#21160;&#22312; <code>8081</code> &#31471;&#21475;&#19978;&#65292;&#36991;&#20813;&#20914;&#31361;&#12290;&#26368;&#21518;&#21551;&#21160; <code>CustomerApplication</code>&#65292;&#36890;&#36807;&#35775;&#38382; http://localhost:8081/menu &#21644; http://localhost:8081/menu/1 &#35302;&#21457;&#36828;&#31243;&#35843;&#29992;&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#20026;&#20160;&#20040; Project Reactor &#21644; WebFlux &#36824;&#27809;&#25104;&#20026;&#20027;&#27969;</strong></p>
<p>&#26082;&#28982;&#21709;&#24212;&#24335;&#32534;&#31243;&#22312;&#36164;&#28304;&#21033;&#29992;&#26041;&#38754;&#34920;&#29616;&#36825;&#20040;&#22909;&#65292;&#21482;&#35201;&#24456;&#23569;&#30340;&#36164;&#28304;&#23601;&#33021;&#25903;&#25345;&#22823;&#27969;&#37327;&#65292;&#37027;&#20026;&#20160;&#20040;&#25105;&#20204;&#19981;&#25226;&#25152;&#26377;&#20195;&#30721;&#37117;&#29992;&#21709;&#24212;&#24335;&#32534;&#31243;&#26694;&#26550;&#37325;&#20889;&#19968;&#36941;&#21602;&#65311;&#33258;&#20174; Spring Framework 5.0 &#21457;&#24067; WebFlux&#65292;&#25105;&#36523;&#36793;&#20284;&#20046;&#24182;&#27809;&#26377;&#22826;&#22823;&#30340;&#21453;&#24212;&#65292;&#20063;&#27809;&#30475;&#21040;&#20160;&#20040;&#31995;&#32479;&#20174; Spring MVC &#36801;&#31227;&#21040; WebFlux&#65292;&#36825;&#21448;&#26159;&#20026;&#20160;&#20040;&#21602;&#65311;</p>
<p>&#20851;&#38190;&#36824;&#26159;&#25105;&#20204;&#22312; 11.4 &#33410;&#24320;&#22836;&#35828;&#30340;&#65292;&#21709;&#24212;&#24335;&#32534;&#31243;&#24182;&#19981;&#26159;&#38134;&#24377;&#65292;&#19981;&#33021;&#35299;&#20915;&#25152;&#26377;&#30340;&#38382;&#39064;&#65292;&#23427;&#20063;&#26377;&#33258;&#24049;&#36866;&#29992;&#30340;&#22330;&#26223;&#12290;&#26356;&#37325;&#35201;&#30340;&#19968;&#28857;&#65292;&#23558;&#31995;&#32479;&#23436;&#20840;&#25913;&#20026;&#21709;&#24212;&#24335;&#30340;&#20063;&#26159;&#26377;&#25104;&#26412;&#30340;&#12290;&#22914;&#26524;&#21482;&#23558; Web &#23618;&#25913;&#20026;&#21709;&#24212;&#24335;&#30340;&#65292;&#24213;&#23618;&#30340;&#25152;&#26377;&#25805;&#20316;&#36824;&#26159;&#38459;&#22622;&#24335;&#30340;&#35843;&#29992;&#65292;&#37027;&#21482;&#33021;&#23558;&#36825;&#20123;&#35843;&#29992;&#25918;&#21040;&#21478;&#22806;&#30340;&#32447;&#31243;&#27744;&#37324;&#65292;&#36825;&#31181;&#20026;&#20102;&#21709;&#24212;&#24335;&#32780;&#21709;&#24212;&#24335;&#30340;&#20570;&#27861;&#24182;&#19981;&#33021;&#24102;&#26469;&#22826;&#22810;&#30340;&#22909;&#22788;&#12290;&#20363;&#22914;&#65292;&#22823;&#37096;&#20998;&#20027;&#27969;&#30340;&#25968;&#25454;&#24211;&#30446;&#21069;&#36824;&#27809;&#26377;&#21709;&#24212;&#24335;&#30340; JDBC &#39537;&#21160;&#65292;Spring &#23448;&#26041;&#30340; R2DBC&#65288;Reactive Relational Database Connectivity&#65289;&#39033;&#30446; <span class="&#27880;&#37322;&#32534;&#21495;">20</span> &#29616;&#22312;&#21482;&#25903;&#25345; H2&#12289;PostgreSQL &#21644; SQL Server &#31561;&#23569;&#25968;&#25968;&#25454;&#24211;&#65292;&#26377;&#20123;&#31867;&#22411;&#30340;&#25968;&#25454;&#24211;&#39537;&#21160;&#36824;&#19981;&#26159;&#23448;&#26041;&#25903;&#25345;&#30340;&#12290;</p>
<p>&#21478;&#19968;&#26041;&#38754;&#65292;&#21709;&#24212;&#24335;&#32534;&#31243;&#21644;&#21629;&#20196;&#24335;&#32534;&#31243;&#30340;&#29702;&#35299;&#38590;&#24230;&#19981;&#22312;&#19968;&#20010;&#23618;&#38754;&#19978;&#12290;&#30456;&#23545;&#32780;&#35328;&#65292;&#21069;&#32773;&#23398;&#20064;&#26354;&#32447;&#38497;&#23789;&#12289;&#23398;&#20064;&#25104;&#26412;&#39640;&#12290;&#23545;&#20110;&#22823;&#37096;&#20998;&#31995;&#32479;&#26469;&#35828;&#65292;&#22914;&#26524;&#21482;&#26159;&#22788;&#29702;&#19994;&#21153;&#36923;&#36753;&#65292;&#37027;&#20040;&#25353;&#25351;&#20196;&#27493;&#39588;&#25551;&#36848;&#22797;&#26434;&#30340;&#19994;&#21153;&#36923;&#36753;&#20063;&#35768;&#20250;&#26356;&#26131;&#20110;&#29702;&#35299;&#12290;</p>
<p>&#25152;&#20197;&#65292;&#22914;&#26524;&#25105;&#20204;&#38754;&#23545;&#22914;&#19979;&#30340;&#24773;&#20917;&#65292;&#24314;&#35758;&#22312;&#26159;&#21542;&#36801;&#31227;&#21040; Project Reactor &#21644; WebFlux &#30340;&#38382;&#39064;&#19978;&#19977;&#24605;&#32780;&#21518;&#34892;&#65306;</p>
<ul>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#29616;&#26377;&#30340;&#31995;&#32479;&#36816;&#34892;&#24456;&#27491;&#24120;&#65292;&#26159;&#22522;&#20110;&#20256;&#32479;&#30340; Spring MVC &#30340;&#25216;&#26415;&#26632;&#65292;&#26159;&#21629;&#20196;&#24335;&#39118;&#26684;&#30340;&#65292;&#37027;&#19981;&#24314;&#35758;&#36801;&#31227;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#38656;&#35201;&#36827;&#34892;&#30340;&#21508;&#31181;&#25805;&#20316;&#20013;&#26377;&#24456;&#22810;&#25351;&#20196;&#36824;&#19981;&#26159;&#21709;&#24212;&#24335;&#30340;&#65292;&#20363;&#22914;&#35201;&#20351;&#29992; Oracle&#65292;&#37027;&#19981;&#24314;&#35758;&#36801;&#31227;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#22242;&#38431;&#20855;&#26377;&#19968;&#23450;&#30340;&#35268;&#27169;&#65292;&#22823;&#23478;&#30340;&#25216;&#26415;&#27700;&#24179;&#23618;&#27425;&#19981;&#40784;&#65292;&#37027;&#19981;&#24314;&#35758;&#36801;&#31227;&#12290;</li>
</ul>
<p>&#27604;&#36739;&#29702;&#24819;&#30340;&#26041;&#24335;&#26159;&#23567;&#27493;&#24555;&#36305;&#65292;&#20808;&#25343;&#20960;&#20010;&#23567;&#31995;&#32479;&#25110;&#32773;&#23567;&#21151;&#33021;&#20570;&#20123;&#23581;&#35797;&#12290;&#22914;&#26524;&#21482;&#26159;&#20570;&#19968;&#19979;&#35831;&#27714;&#22788;&#29702;&#21644;&#36716;&#21457;&#65292;&#21487;&#20197;&#23581;&#35797;&#26412;&#33410;&#21518;&#38754;&#35762;&#21040;&#30340; <code>WebClient</code>&#65292;&#29992;&#23427;&#20195;&#26367; <code>RestTemplate</code>&#65292;&#20808;&#20307;&#39564;&#19968;&#19979;&#65292;&#35273;&#24471;&#36866;&#24212;&#20102;&#20043;&#21518;&#65292;&#20877;&#20570;&#21518;&#32493;&#30340;&#25171;&#31639;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#32534;&#20889;&#31616;&#21333;&#30340; WebHandler</strong></p>
<p>&#38500;&#20102;&#20351;&#29992;&#27880;&#35299;&#30340;&#26041;&#24335;&#65292;Spring WebFlux &#36824;&#25552;&#20379;&#20102;&#21478;&#19968;&#31181;&#25130;&#28982;&#19981;&#21516;&#30340;&#26041;&#24335;&#65306;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#32534;&#20889;&#36335;&#30001;&#20989;&#25968;&#21644;&#22788;&#29702;&#22120;&#26469;&#23454;&#29616;&#30456;&#21516;&#30340;&#21151;&#33021;&#12290;&#23545;&#20110;&#19981;&#22826;&#22797;&#26434;&#30340;&#36923;&#36753;&#65292;&#20351;&#29992; Lambda &#34920;&#36798;&#24335;&#23601;&#22815;&#20102;&#65307;&#32780;&#23545;&#20110;&#30456;&#23545;&#22797;&#26434;&#30340;&#36923;&#36753;&#65292;&#21017;&#21487;&#20197;&#23553;&#35013;&#22312;&#21333;&#29420;&#30340;&#22788;&#29702;&#22120;&#31867;&#37324;&#12290;</p>
<p>&#20808;&#26469;&#30475;&#30475;&#31616;&#21333;&#30340;&#22330;&#26223;&#65292;&#30452;&#25509;&#22312;&#24102;&#26377; <code>@Configuration</code> &#30340;&#37197;&#32622;&#31867;&#20013;&#32534;&#20889; <code>RouterFunction</code> &#36335;&#30001;&#20989;&#25968;&#65292;&#23558;&#23427;&#20316;&#20026; Bean &#37197;&#32622;&#22312; Spring &#23481;&#22120;&#20013;&#65292;&#34920; 11-18 &#21015;&#20030;&#20102;&#24320;&#21457;&#36335;&#30001;&#20989;&#25968;&#26102;&#19968;&#23450;&#20250;&#29992;&#21040;&#30340;&#20960;&#20010;&#25509;&#21475;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">21</span></p>
<p><strong>&#34920; 11-18&#12288;&#24320;&#21457;&#36335;&#30001;&#20989;&#25968;&#26102;&#24120;&#29992;&#30340;&#25509;&#21475;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#25509;&#21475;</th><th>&#35828;&#26126;</th></tr><tr><td><code>RouterFunction</code></td><td>&#21487;&#20197;&#23558;&#35831;&#27714;&#36335;&#30001;&#21040;&#19968;&#31995;&#21015;&#35831;&#27714;&#22788;&#29702;&#20989;&#25968;&#19978;&#12290;&#22312;&#23454;&#38469;&#24320;&#21457;&#26102;&#65292;&#36890;&#24120;&#20250;&#29992; <code>RouterFunctions</code> &#20013;&#30340;&#38745;&#24577;&#26041;&#27861;&#65292;&#20363;&#22914; <code>route()</code> &#21644; <code>resources()</code>&#65292;&#22312; <code>route()</code> &#36820;&#22238;&#30340; <code>Builder</code> &#20013;&#26377; <code>GET()</code>&#12289;<code>POST()</code> &#20043;&#31867;&#30340;&#26041;&#27861;&#65292;&#33021;&#24555;&#36895;&#32534;&#20889;&#36335;&#30001;&#20989;&#25968;</td></tr><tr><td><code>HandlerFunction</code></td><td>&#23454;&#38469;&#22788;&#29702;&#35831;&#27714;&#30340;&#20989;&#25968;&#65292;&#19968;&#33324;&#30452;&#25509;&#29992; Lambda &#34920;&#36798;&#24335;&#26469;&#23454;&#29616;</td></tr><tr><td><code>RequestPredicate</code></td><td>&#29992;&#26469;&#21028;&#26029;&#35831;&#27714;&#26159;&#21542;&#31526;&#21512;&#36335;&#30001;&#26465;&#20214;&#12290;&#22312;&#23454;&#38469;&#24320;&#21457;&#26102;&#65292;&#36890;&#24120;&#20250;&#29992; <code>RequestPredicates</code> &#20013;&#30340;&#38745;&#24577;&#26041;&#27861;&#65292;&#20363;&#22914; <code>methods()</code>&#12289;<code>accept()</code> &#21644; <code>queryParam()</code>&#65292;&#20998;&#21035;&#29992;&#26469;&#21028;&#26029;&#35831;&#27714;&#30340; <code>HTTP</code> &#26041;&#27861;&#12289;<code>Accept</code> &#22836;&#21644;&#26597;&#35810;&#21442;&#25968;&#26159;&#21542;&#31526;&#21512;&#26465;&#20214;</td></tr><tr><td><code>ServerRequest</code></td><td>&#20195;&#34920;&#19968;&#20010;&#26381;&#21153;&#31471;&#25910;&#21040;&#30340;&#35831;&#27714;&#65292;&#21253;&#21547;&#20102; HTTP &#22836;&#21644;&#27491;&#25991;&#20449;&#24687;&#65292;<code>HandlerFunction</code> &#20250;&#22788;&#29702;&#36825;&#20010;&#35831;&#27714;&#12290;&#20854;&#20013;&#30340; <code>body()</code>&#12289;<code>bodyToMono()</code> &#21644; <code>bodyToFlux()</code> &#21487;&#20197;&#33719;&#21462;&#35831;&#27714;&#27491;&#25991;&#65292;<code>formData()</code> &#30452;&#25509;&#33719;&#21462; <code>POST</code> &#25552;&#20132;&#30340;&#34920;&#21333;&#65292;<code>multipartData()</code> &#33719;&#21462;&#19978;&#20256;&#30340;&#25991;&#20214;</td></tr><tr><td><code>ServerResponse</code></td><td>&#20195;&#34920;&#19968;&#20010;&#26381;&#21153;&#31471;&#36820;&#36824;&#32473;&#23458;&#25143;&#31471;&#30340;&#24212;&#31572;&#12290;&#21487;&#20197;&#36890;&#36807;&#20854;&#20013;&#30340; <code>ok()</code>&#12289;<code>created()</code> &#31561;&#26041;&#27861;&#21019;&#24314;&#29305;&#23450;&#21709;&#24212;&#30721;&#30340;&#24212;&#31572;</td></tr></table>
<p>&#22914;&#26524;&#29616;&#22312;&#24076;&#26395;&#22312; <code>/order</code> &#25509;&#25910; <code>GET</code> &#35831;&#27714;&#65292;&#35302;&#21457;&#26597;&#35810;&#25152;&#26377;&#35746;&#21333;&#65292;&#21487;&#20197;&#32534;&#20889;&#19968;&#27573;&#31867;&#20284;&#20195;&#30721;&#31034;&#20363; 11-21 &#37027;&#26679;&#30340;&#20195;&#30721;&#12290;&#36890;&#36807; <code>RouterFunctions.route().GET()</code> &#26041;&#27861;&#65292;&#25105;&#20204;&#21019;&#24314;&#20102;&#19968;&#20010;&#22788;&#29702; <code>/order</code> &#30340; <code>GET</code> &#35831;&#27714;&#30340;&#20989;&#25968;&#65292;&#35201;&#27714;&#24102;&#26377; <code>Accept: application/json</code> &#35831;&#27714;&#22836;&#65292;&#20989;&#25968;&#30452;&#25509;&#36820;&#22238; <code>200 OK</code> &#30340;&#24212;&#31572;&#65292;&#24212;&#31572;&#27491;&#25991;&#26159; <code>OrderService.getAllOrders()</code> &#36820;&#22238;&#30340; <code>Flux&lt;Order&gt;</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-21</strong>&#12288;&#22788;&#29702; <code>/order</code> &#30340; <code>GET</code> &#35831;&#27714;&#30340;&#20989;&#25968;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
public class OrderRouterConfig {
    @Autowired
    private OrderService orderService;

    @Bean
    public RouterFunction&lt;?&gt; orderRouter() {
        return route()
                .GET("/order",
                    RequestPredicates.accept(MediaType.APPLICATION_JSON),
                    request -&gt; ok().body(orderService.getAllOrders(), Order.class))
                .build();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p><code>OrderService</code> &#19982;&#21069;&#38754;&#30340; <code>MenuService</code> &#20316;&#29992;&#31867;&#20284;&#65292;&#23553;&#35013;&#20102;&#19968;&#20123; <code>RestTemplate</code> &#30340;&#25805;&#20316;&#65292;&#21518;&#32493;&#20250;&#34987;&#26367;&#25442;&#20026; <code>WebClient</code>&#12290;&#36825;&#37324;&#30340; <code>getAllOrders()</code> &#26041;&#27861;&#22914;&#20195;&#30721;&#31034;&#20363; 11-22 &#25152;&#31034;&#12290;&#20855;&#20307;&#35828;&#26469;&#65292;&#36890;&#36807; <code>RestTemplate.exchange()</code> &#21462;&#22238;&#25152;&#26377;&#30340;&#35746;&#21333;&#65292;&#38543;&#21518;&#23558; <code>List&lt;Order&gt;</code> &#36716;&#25442;&#20026; <code>Flux&lt;Order&gt;</code> &#36820;&#22238;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-22</strong>&#12288;<code>OrderService.getAllOrders()</code> &#26041;&#27861;&#30340;&#23454;&#29616;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Slf4j
public class OrderService {
    @Value("${binarytea.url}")
    private String binarytea;
    @Autowired
    private RestTemplate restTemplate;

    public Flux&lt;Order&gt; getAllOrders() {
        ParameterizedTypeReference&lt;List&lt;Order&gt;&gt; typeReference =
                new ParameterizedTypeReference&lt;&gt;() {};
        RequestEntity&lt;Void&gt; request = RequestEntity.get(URI.create(binarytea + "/order"))
                .accept(MediaType.APPLICATION_JSON).build();
        ResponseEntity&lt;List&lt;Order&gt;&gt; response = restTemplate.exchange(request, typeReference);
        if (response.getStatusCode().is2xxSuccessful()) {
            return Flux.fromIterable(response.getBody());
        }
        return Flux.empty();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#22914;&#26524;&#35831;&#27714;&#30340;&#22788;&#29702;&#36923;&#36753;&#36739;&#20026;&#22797;&#26434;&#65292;Lambda &#34920;&#36798;&#24335;&#20889;&#36215;&#26469;&#24456;&#32321;&#29712;&#30340;&#35805;&#65292;&#21487;&#20197;&#23558;&#36923;&#36753;&#21093;&#31163;&#21040;&#21333;&#29420;&#30340;&#31867;&#37324;&#65306;&#22788;&#29702;&#26041;&#27861;&#25509;&#25910; <code>ServerRequest</code> &#21442;&#25968;&#65292;&#36820;&#22238; <code>Mono&lt;ServerResponse&gt;</code> &#21363;&#21487;&#12290;&#25105;&#20204;&#20197;&#21019;&#24314;&#35746;&#21333;&#30340;&#35831;&#27714;&#20026;&#20363;&#65292;&#25509;&#25910; <code>POST</code> &#35831;&#27714;&#65292;&#20854;&#20013;&#21253;&#21547;&#35746;&#21333;&#37324;&#30340;&#20855;&#20307;&#26465;&#30446;&#65292;&#23558;&#35831;&#27714;&#22788;&#29702;&#36923;&#36753;&#25918;&#21040;&#21333;&#29420;&#30340; <code>OrderHandler</code> &#31867;&#20013;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-23 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-23</strong>&#12288;&#36127;&#36131;&#21019;&#24314;&#35746;&#21333;&#30340; <code>OrderHandler</code> &#21644; <code>OrderRequest</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
public class OrderRequest {
    private List&lt;String&gt; items;
}

public class OrderHandler {
    @Autowired
    private OrderService orderService;

    public Mono&lt;ServerResponse&gt; createNewOrder(ServerRequest request) {
        Mono&lt;OrderRequest&gt; orderRequest = request.bodyToMono(OrderRequest.class);
        Mono&lt;Order&gt; order = orderService.createOrder(orderRequest);
        return ServerResponse.ok().contentType(MediaType.APPLICATION_JSON).body(order, Order.class);
    }
}</code></pre>
<p>&#20855;&#20307;&#21019;&#24314;&#35746;&#21333;&#30340;&#36923;&#36753;&#23553;&#35013;&#21040;&#20102; <code>OrderService.createOrder()</code> &#26041;&#27861;&#37324;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-24 &#25152;&#31034;&#12290;<code>createOrder()</code> &#20808;&#23558; <code>Mono&lt;OrderRequest&gt;</code> &#36716;&#25442;&#20026; <code>NewOrderForm</code>&#65292;&#38543;&#21518;&#21457;&#36865; <code>POST</code> &#35831;&#27714;&#23558;&#34920;&#21333;&#25552;&#20132;&#32473;&#26381;&#21153;&#31471;&#65292;&#20877;&#36807;&#28388;&#24212;&#31572;&#65292;&#22914;&#26524;&#26159;&#36820;&#22238; 2xx &#29366;&#24577;&#30721;&#20195;&#34920;&#25104;&#21151;&#24212;&#31572;&#65292;&#27492;&#26102;&#20877;&#23558;&#27491;&#25991;&#30340;&#35746;&#21333;&#20449;&#24687;&#36716;&#25442;&#20026; <code>Mono&lt;Order&gt;</code>&#12290;&#20854;&#20013;&#29992;&#21040;&#30340;&#25240;&#25187;&#20449;&#24687;&#21487;&#20197;&#29992; <code>binarytea.order.discount</code> &#37197;&#32622;&#39033;&#30340;&#24418;&#24335;&#37197;&#22312; <code>application.properties</code> &#37324;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-24</strong>&#12288;<code>OrderService.createOrder()</code> &#26041;&#27861;&#30340;&#23454;&#29616;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Slf4j
public class OrderService {
    @Value("${binarytea.order.discount:100}")
    private int discount;
    @Value("${binarytea.url}")
    private String binarytea;
    @Autowired
    private RestTemplate restTemplate;

    public Mono&lt;Order&gt; createOrder(Mono&lt;OrderRequest&gt; orderRequest) {
        return orderRequest
                .map(r -&gt; NewOrderForm.builder().itemIdList(r.getItems()).discount(discount).build())
                .map(f -&gt; restTemplate.postForEntity(binarytea + "/order", f, Order.class))
                .filter(e -&gt; e.getStatusCode().is2xxSuccessful())
                .map(e -&gt; e.getBody())
                .log();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#26368;&#21518;&#65292;&#36824;&#38656;&#35201;&#35843;&#25972;&#19968;&#19979; <code>OrderRouterConfig</code>&#65292;&#35753; <code>orderRouter()</code> &#30693;&#36947;&#22914;&#20309;&#22788;&#29702;&#36825;&#20010; <code>POST</code> &#35831;&#27714;&#65292;&#20195;&#30721;&#31034;&#20363; 11-25 &#26159;&#20462;&#25913;&#21518;&#30340;&#37197;&#32622;&#65292;&#20027;&#35201;&#26159;&#21152;&#20102;&#19968;&#34892; <code>.POST("/order", orderHandler()::createNewOrder)</code>&#65292;&#21578;&#35785; <code>RouterFunction.Builder</code>&#65292;&#21457;&#32473; <code>/order</code> &#30340; <code>POST</code> &#35831;&#27714;&#37117;&#36716;&#32473; <code>OrderHandler.createNewOrder()</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-25</strong>&#12288;&#22686;&#21152;&#20102; <code>POST</code> &#35831;&#27714;&#36335;&#30001;&#30340; <code>OrderRouterConfig</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
public class OrderRouterConfig {
    @Autowired
    private OrderService orderService;

    @Bean
    public RouterFunction&lt;?&gt; orderRouter() {
        return route()
                .GET("/order",
                    RequestPredicates.accept(MediaType.APPLICATION_JSON),
                    request -&gt; ok().body(orderService.getAllOrders(), Order.class))
                .POST("/order", orderHandler()::createNewOrder)
                .build();
    }

    @Bean
    public OrderHandler orderHandler() {
        return new OrderHandler();
    }
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">19</span>&#36825;&#37096;&#20998;&#30340;&#20195;&#30721;&#31034;&#20363;&#37117;&#22312;&#31532; 11 &#31456;&#30340; customer-reactor &#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">20</span>Spring Data R2DBC &#26159; Spring Data &#30340;&#19968;&#20010;&#23376;&#39033;&#30446;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">21</span>&#36825;&#37324;&#25552;&#21040;&#30340;&#24456;&#22810;&#25509;&#21475;&#65288;&#20363;&#22914; <code>RouterFunctions</code> &#21644; <code>RequestPredicates</code>&#65289;&#37324;&#37117;&#21253;&#21547;&#26377;&#22823;&#37327;&#30340;&#38745;&#24577;&#26041;&#27861;&#65292;&#34920;&#20013;&#21482;&#26159;&#21015;&#20030;&#20102;&#24456;&#23567;&#19968;&#37096;&#20998;&#65292;&#20855;&#20307;&#21487;&#20197;&#26597;&#30475;&#23545;&#24212;&#20195;&#30721;&#21644;&#25991;&#26723;&#26469;&#36827;&#19968;&#27493;&#20102;&#35299;&#12290;</p><h3 id="nav_point_186">11.4.3&#12288;&#36890;&#36807; WebClient &#35775;&#38382; Web &#36164;&#28304;</h3><p>&#22312; Spring Framework 5.0 &#20043;&#21069;&#65292;&#25512;&#33616;&#20351;&#29992; <code>RestTemplate</code> &#21457;&#36215;&#21508;&#31181; Web &#35831;&#27714;&#65292;&#20854;&#20013;&#23553;&#35013;&#20102;&#21508;&#31867;&#24120;&#29992;&#30340; HTTP &#25805;&#20316;&#65292;&#25105;&#20204;&#22312;&#26412;&#20070;&#20043;&#21069;&#30340;&#31456;&#33410;&#37324;&#20063;&#22823;&#37327;&#20351;&#29992;&#20102;&#36825;&#20010;&#31867;&#12290;&#20174; 5.0 &#29256;&#26412;&#24320;&#22987;&#65292;&#23448;&#26041;&#22312;&#28155;&#21152;&#20102; WebFlux &#20043;&#21518;&#65292;&#20063;&#21516;&#26102;&#25552;&#20379;&#20102;&#19982;&#20043;&#37197;&#22871;&#30340;&#21709;&#24212;&#24335; Web &#23458;&#25143;&#31471;&#8212;&#8212;<code>WebClient</code>&#65292;&#24182;&#19988;&#25512;&#33616;&#26080;&#35770;&#26159;&#21542;&#20351;&#29992; WebFlux&#65292;&#26159;&#21542;&#20351;&#29992;&#21709;&#24212;&#24335;&#32534;&#31243;&#39118;&#26684;&#65292;&#37117;&#20351;&#29992; <code>WebClient</code> &#26469;&#21457;&#36215; HTTP &#25805;&#20316;&#12290;</p><p>&#23448;&#26041;&#30340;&#35828;&#27861;&#26159; <code>RestTemplate</code> &#21518;&#32493;&#21482;&#20570;&#22522;&#26412;&#30340;&#32500;&#25252;&#65292;&#19981;&#20250;&#20877;&#26377;&#22823;&#30340;&#21319;&#32423;&#12290;&#20294;&#20174;&#30446;&#21069;&#30340;&#24773;&#20917;&#26469;&#30475;&#65292;<code>RestTemplate</code> &#21644; <code>WebClient</code> &#22312;&#21151;&#33021;&#19978;&#24182;&#27809;&#26377;&#22826;&#22823;&#30340;&#21306;&#21035;&#65292;&#20027;&#35201;&#30340;&#24046;&#24322;&#26159;&#21069;&#32773;&#26159;&#38459;&#22622;&#24335;&#30340;&#65292;&#21518;&#32773;&#26159;&#21709;&#24212;&#24335;&#30340;&#12290;&#20294;&#26159;&#30001;&#20110; <code>WebClient</code> &#26159;&#22312; spring-webflux &#21253;&#37324;&#30340;&#65292;&#22914;&#26524;&#19981;&#24341;&#20837;&#36825;&#20010;&#20381;&#36182;&#23601;&#26080;&#27861;&#20351;&#29992; <code>WebClient</code>&#65292;&#35797;&#38382;&#19968;&#20010;&#20027;&#35201;&#20351;&#29992; Spring MVC &#30340;&#31995;&#32479;&#65292;&#20026;&#20160;&#20040;&#35201;&#24341;&#20837; WebFlux &#30340;&#20381;&#36182;&#21602;&#65311;&#22240;&#27492;&#65292;&#20010;&#20154;&#36824;&#26159;&#24314;&#35758;&#20165;&#22312;&#20351;&#29992;&#21709;&#24212;&#24335;&#32534;&#31243;&#39118;&#26684;&#30340;&#31995;&#32479;&#20013;&#20351;&#29992;&#26032;&#30340; <code>WebClient</code> &#23458;&#25143;&#31471;&#12290;</p><p>&#22312;&#26412;&#33410;&#30340;&#26368;&#21518;&#19968;&#37096;&#20998;&#37324;&#65292;&#25105;&#20204;&#26469;&#19968;&#36215;&#20102;&#35299;&#19968;&#19979;&#22914;&#20309;&#20351;&#29992; <code>WebClient</code>&#12290;</p><ol>
<li><p><strong>&#22522;&#26412;&#20351;&#29992;</strong></p>
<p><code>WebClient</code> &#26412;&#36523;&#26159;&#19968;&#20010;&#25509;&#21475;&#65292;&#23454;&#38469;&#20351;&#29992;&#30340;&#26159; <code>DefaultWebClient</code>&#65292;Spring Framework &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#20004;&#31181;&#21019;&#24314; <code>WebClient</code> &#30340;&#26041;&#27861;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>WebClient.create()</code> &#26041;&#27861;&#65292;&#36890;&#36807;&#19981;&#24102;&#20219;&#20309;&#21442;&#25968;&#30340; <code>create()</code> &#26041;&#27861;&#21487;&#20197;&#21019;&#24314;&#19968;&#20010;&#40664;&#35748;&#30340; <code>WebClient</code> &#23454;&#29616;&#65292;&#22914;&#26524;&#20256;&#20837; <code>baseUrl</code>&#65288;&#20363;&#22914; http://localhost:8080&#65289;&#65292;&#21017;&#36820;&#22238;&#30340;&#23454;&#29616;&#20250;&#26377;&#40664;&#35748;&#30340; URL &#21069;&#32512;&#65292;&#22312;&#21457;&#36215;&#35831;&#27714;&#26102;&#21482;&#38656;&#35201;&#32473;&#20986; URL &#30340;&#21518;&#21322;&#37096;&#20998;&#23601;&#21487;&#20197;&#20102;&#65288;&#20363;&#22914;&#32473;&#23450; <code>/menu</code>&#65292;&#23454;&#38469;&#30340;&#35831;&#27714;&#20250;&#25340;&#19978;&#21069;&#32512;&#65292;&#26368;&#32456;&#30340; URL &#26159; http://localhost:8080/menu&#65289;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>WebClient.Builder</code> &#26500;&#36896;&#22120;&#65292;&#36890;&#36807;&#36825;&#20010;&#26500;&#36896;&#22120;&#21487;&#20197;&#30452;&#25509;&#35774;&#32622;&#22823;&#37327;&#21442;&#25968;&#65292;Spring Boot &#33258;&#21160;&#37197;&#32622;&#20250;&#21019;&#24314;&#19968;&#20010; <code>WebClient.Builder</code> Bean&#65292;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#27880;&#20837;&#21518;&#35843;&#29992; <code>build()</code> &#26041;&#27861;&#21019;&#24314;&#33258;&#24049;&#30340; <code>WebClient</code>&#12290;Spring Boot &#36824;&#25552;&#20379;&#20102; <code>WebClientCustomizer</code> &#25509;&#21475;&#65292;&#21487;&#20197;&#29992;&#23427;&#23436;&#25104;&#23545;&#33258;&#21160;&#37197;&#32622;&#30340; <code>WebClient.Builder</code> &#30340;&#33258;&#23450;&#20041;&#12290;</li>
</ul>
<p>&#22312;&#20195;&#30721;&#37324;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#21019;&#24314;&#33258;&#24049;&#30340; <code>WebClient</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public WebClient webClient(WebClient.Builder builder,
@Value("${binarytea.url}") String binarytea) {
    return builder.baseUrl(binarytea).build();
}</code></pre>
<p>&#22312;&#33719;&#24471;&#20102; <code>WebClient</code> &#21518;&#65292;&#23601;&#21487;&#20197;&#25351;&#23450;&#35201;&#21457;&#36215;&#30340;&#35831;&#27714;&#20102;&#65292;&#22823;&#33268;&#30340;&#35831;&#27714;&#21644;&#24212;&#31572;&#22788;&#29702;&#36807;&#31243;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20351;&#29992; <code>get()</code>&#12289;<code>post()</code>&#12289;<code>put()</code>&#12289;<code>delete()</code>&#12289;<code>head()</code> &#31561;&#26041;&#27861;&#25351;&#23450;&#20855;&#20307;&#30340; <code>HTTP</code> &#35831;&#27714;&#26041;&#27861;&#65292;&#20063;&#21487;&#20197;&#29992; <code>method()</code> &#26041;&#27861;&#25351;&#23450;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20351;&#29992; <code>uri()</code> &#25351;&#23450;&#30446;&#26631; URI&#65292;&#20351;&#29992; <code>accept()</code>&#12289;<code>contentType()</code> &#31561;&#26041;&#27861;&#25351;&#23450;&#35831;&#27714;&#30340;&#30456;&#20851;&#20449;&#24687;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20351;&#29992; <code>body()</code> &#25110; <code>bodyValue()</code> &#25351;&#23450;&#35831;&#27714;&#30340;&#27491;&#25991;&#65292;&#21069;&#32773;&#21487;&#20197;&#25509;&#21463; <code>Mono</code>&#12289;<code>Flux</code> &#31561;&#31867;&#22411;&#65292;&#21518;&#32773;&#30452;&#25509;&#25509;&#21463;&#29616;&#25104;&#30340;&#23545;&#35937;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>retrieve()</code> &#26041;&#27861;&#25191;&#34892;&#35831;&#27714;&#24182;&#33719;&#21462;&#24212;&#31572;&#65292;<code>retrieve()</code> &#26041;&#27861;&#20043;&#21069;&#37117;&#26159;&#35831;&#27714;&#30456;&#20851;&#30340;&#36923;&#36753;&#65292;&#20043;&#21518;&#25918;&#30340;&#23601;&#37117;&#26159;&#21644;&#24212;&#31572;&#30456;&#20851;&#30340;&#36923;&#36753;&#20102;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#23545;&#20110;&#24212;&#31572;&#65292;&#21487;&#20197;&#29992; <code>bodyToMono()</code> &#21644; <code>bodyToFlux()</code> &#32467;&#21512;&#20855;&#20307;&#30340;&#31867;&#20449;&#24687; <span class="&#27880;&#37322;&#32534;&#21495;">22</span>&#65292;&#23558;&#24212;&#31572;&#27491;&#25991;&#36716;&#25442;&#20026;&#23545;&#24212;&#30340; <code>Mono</code> &#21644; <code>Flux</code>&#65307;&#20063;&#21487;&#20197;&#29992; <code>toEntity()</code>&#12289;<code>toEntityList()</code> &#21644; <code>toBodilessEntity()</code> &#23558;&#24212;&#31572;&#36716;&#25442;&#20026; <code>ResponseEntity</code>&#12290;</li>
</ul>
<p>&#22312;&#20195;&#30721;&#31034;&#20363; 11-19 &#20013;&#65292;&#25105;&#20204;&#20889;&#36807;&#19968;&#20010;&#19982;&#33756;&#21333;&#30456;&#20851;&#30340;&#26381;&#21153;&#31867; <code>MenuService</code>&#65292;&#20854;&#20013;&#29992;&#30340;&#26159; <code>RestTemplate</code>&#65292;&#29616;&#22312;&#25105;&#20204;&#35201;&#25913;&#29992; <code>WebClient</code>&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-26 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">23</span> &#25913;&#29992; <code>WebClient</code> &#21518;&#25972;&#20010; <code>MenuController</code> &#30340; WebFlux &#25511;&#21046;&#22120;&#30340;&#25805;&#20316;&#23601;&#37117;&#26159;&#21709;&#24212;&#24335;&#30340;&#20102;&#65292;&#20854;&#20013;&#19981;&#24102;&#21516;&#27493;&#30340;&#38459;&#22622;&#37096;&#20998;&#65292;&#22312;&#36820;&#22238; <code>Mono</code> &#25110; <code>Flux</code> &#21069;&#65292;&#25105;&#20204;&#36824;&#36890;&#36807; <code>timeout()</code> &#35774;&#32622;&#20102;&#19968;&#19979;&#33719;&#21462;&#32467;&#26524;&#30340;&#36229;&#26102;&#26102;&#38388;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-26</strong>&#12288;&#20351;&#29992;&#20102; <code>WebClient</code> &#30340; <code>MenuService</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
public class MenuService {
    @Autowired
    private WebClient webClient;

    public Flux&lt;MenuItem&gt; getAllMenu() {
        return webClient.get().uri("/menu")
                          .accept(MediaType.APPLICATION_JSON)
                          .retrieve().bodyToFlux(MenuItem.class)
                          .timeout(Duration.ofSeconds(1));
    }

    public Mono&lt;MenuItem&gt; getById(Long id) {
        return webClient.get().uri("/menu/{id}", id)
                          .retrieve().bodyToMono(MenuItem.class)
                          .timeout(Duration.ofSeconds(1));
    }
}</code></pre>
<p>HTTP &#30340; <code>GET</code> &#26041;&#27861;&#27809;&#26377;&#35831;&#27714;&#27491;&#25991;&#65292;&#23545;&#20110; <code>POST</code> &#36825;&#26679;&#30340;&#35831;&#27714;&#65292;&#38656;&#35201;&#35774;&#32622;&#27491;&#25991;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 11-27 &#25152;&#31034;&#65292;&#20854;&#20013;&#65292;&#36890;&#36807; <code>body(form, NewOrderForm.class)</code> &#23558; <code>NewOrdeForm</code> &#31867;&#22411;&#30340;&#23545;&#35937;&#35774;&#32622;&#20026;&#27491;&#25991;&#12290;&#38500;&#20102;&#19968;&#20010;&#20855;&#20307;&#30340;&#23545;&#35937;&#65292;&#36824;&#21487;&#20197;&#20256;&#20837;&#19968;&#20010; <code>BodyInserter</code>&#65292;<code>BodyInserters</code> &#25277;&#35937;&#31867;&#37324;&#25552;&#20379;&#20102;&#22909;&#22810;&#26377;&#29992;&#30340;&#36741;&#21161;&#26041;&#27861;&#65292;&#20363;&#22914;&#65292;<code>BodyInserters.fromFormData()</code> &#21487;&#20197;&#29992;&#26469;&#20256;&#36882;&#34920;&#21333;&#25968;&#25454;&#65292;<code>BodyInserters.fromMultipartData()</code> &#21487;&#20197;&#29992;&#26469;&#20256;&#36882; Multipart &#25968;&#25454;&#65288;&#19978;&#20256;&#25991;&#20214;&#26102;&#20250;&#29992;&#21040;&#65289;&#65292;&#32780; <code>BodyInserters.fromValue()</code> &#23601;&#21644;&#30452;&#25509;&#20256;&#23545;&#35937;&#26159;&#19968;&#26679;&#30340;&#25928;&#26524;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-27</strong>&#12288;&#36890;&#36807; <code>WebClient</code> &#21457;&#36215; <code>POST</code> &#35831;&#27714;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Slf4j
public class OrderService {
    @Value("${binarytea.order.discount:100}")
    private int discount;
    @Autowired
    private WebClient webClient;

    public Mono&lt;Order&gt; createOrder(Mono&lt;OrderRequest&gt; orderRequest) {
        Mono&lt;NewOrderForm&gt; form = orderRequest.map(r -&gt;
             NewOrderForm.builder().itemIdList(r.getItems())
                          .discount(discount).build());
        return webClient.post().uri("/order")
                          .body(form, NewOrderForm.class)
                          .retrieve()
                          .bodyToMono(Order.class);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#38500;&#20102;&#36820;&#22238; <code>Mono</code> &#21644; <code>Flux</code> &#29992;&#20110;&#21508;&#31867;&#38750;&#38459;&#22622;&#30340;&#22330;&#26223;&#65292;<code>WebClient</code> &#20063;&#21487;&#20197;&#29992;&#20110;&#21516;&#27493;&#30340;&#22330;&#26223;&#65292;&#35843;&#29992; <code>block()</code> &#26041;&#27861;&#38459;&#22622;&#31561;&#24453;&#65292;&#21462;&#24471;&#32467;&#26524;&#21518;&#20877;&#36820;&#22238;&#65292;<code>block()</code> &#37324;&#20063;&#21487;&#20197;&#20256;&#20837;&#36229;&#26102;&#26102;&#38388;&#12290;&#22914;&#20195;&#30721;&#31034;&#20363; 11-28 &#25152;&#31034;&#65292;&#36825;&#26159; <code>WaitForOpenRunner</code> &#30340; <code>isOpen()</code> &#26041;&#27861;&#65292;&#36890;&#36807;&#35775;&#38382;&#26381;&#21153;&#31471;&#26469;&#21028;&#26029;&#38376;&#24215;&#29366;&#24577;&#65292;&#30001;&#20110;&#21482;&#38656;&#35201;&#21709;&#24212;&#20013;&#30340;&#21709;&#24212;&#30721;&#65292;&#25152;&#20197;&#30452;&#25509;&#29992;&#20102; <code>toBodilessEntity()</code> &#23558;&#32467;&#26524;&#36716;&#25442;&#20026;&#27809;&#26377;&#27491;&#25991;&#30340; <code>ResponseEntity&lt;Void&gt;</code>&#65292;&#38543;&#21518; <code>block()</code> &#31561;&#24453;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-28</strong>&#12288;&#20351;&#29992;&#20102; <code>WebClient</code> &#30340; <code>WaitForOpenRunner</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class WaitForOpenRunner implements ApplicationRunner, ApplicationContextAware {
    private boolean isOpen() {
        try {
            ResponseEntity&lt;Void&gt; entity = webClient.get().uri("/menu")
                .retrieve().toBodilessEntity().block();
            return entity.getStatusCode().is2xxSuccessful();
        } catch (Exception e) {
            log.warn("&#24212;&#35813;&#36824;&#27809;&#24320;&#38376;&#65292;&#35775;&#38382;&#20986;&#38169;&#65306;{}", e);
        }
        return false;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#36827;&#38454;&#37197;&#32622;</strong></p>
<p><code>RestTemplate</code> &#32473;&#25105;&#20204;&#30041;&#20102;&#24456;&#22810;&#33021;&#22815;&#36827;&#34892;&#33258;&#23450;&#20041;&#30340;&#25193;&#23637;&#28857;&#65292;<code>WebClient</code> &#20316;&#20026;&#23427;&#30340;&#21518;&#36744;&#65292;&#33258;&#28982;&#20063;&#32487;&#25215;&#20102;&#21069;&#36744;&#30340;&#20248;&#33391;&#20256;&#32479;&#12290;&#39318;&#20808;&#65292;<code>WebClient</code> &#36890;&#36807; <code>ClientHttpConnector</code> &#23553;&#35013;&#20102;&#24213;&#23618;&#23458;&#25143;&#31471;&#65292;&#20869;&#32622;&#20102;&#23545;&#22810;&#31181;&#19981;&#21516;&#30340;&#23458;&#25143;&#31471;&#30340;&#25903;&#25345;&#65292;&#20855;&#20307;&#22914;&#34920; 11-19 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 11-19&#12288;&#20869;&#32622;&#30340;&#21709;&#24212;&#24335; HTTP &#23458;&#25143;&#31471;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#23458;&#25143;&#31471;</th><th>&#20381;&#36182;&#39033;</th><th><code>ClientHttpConnector</code> &#23454;&#29616;</th></tr><tr><td>Reactor Netty</td><td><code>io.projectreactor.netty:reactor-netty-http</code></td><td><code>ReactorClientHttpConnector</code></td></tr><tr><td>Jetty Reactive HttpClient</td><td><code>org.eclipse.jetty:jetty-reactive-httpclient</code></td><td><code>JettyClientHttpConnector</code></td></tr><tr><td>Apache HttpComponents</td><td><code>org.apache.httpcomponents.client5:httpclient5</code><sup><b>24</b></sup></td><td><code>HttpComponentsClientHttpConnector</code></td></tr></table>
<blockquote>
<p><sup><b>24</b></sup>Spring Boot &#30340;&#20381;&#36182;&#37324;&#27809;&#26377;&#36825;&#19968;&#39033;&#65292;&#22312;&#39033;&#30446;&#37324;&#28155;&#21152;&#26102;&#38656;&#35201;&#33258;&#24049;&#22635;&#20889;&#29256;&#26412;&#65292;&#20363;&#22914; 5.0.3&#12290;&#21478;&#22806;&#65292;&#22312;&#36816;&#34892;&#26102;&#36824;&#38656;&#35201;&#22686;&#21152; <code>org.apache.httpcomponents.core5:httpcore5-reactive</code> &#20381;&#36182;&#12290;</p>
</blockquote>
<p>&#22240;&#20026; Spring Boot &#30340; spring-boot-starter-webflux &#40664;&#35748;&#24341;&#20837;&#20102; Reactor Netty &#20316;&#20026;&#23481;&#22120;&#65292;CLASSPATH &#20013;&#26377; Netty &#30340;&#24211;&#65292;&#25152;&#20197; <code>ClientHttpConnectorAutoConfiguration</code> &#20250;&#33258;&#21160;&#37197;&#32622; <code>ReactorClientHttpConnector</code>&#12290;&#22914;&#26524;&#25105;&#20204;&#33258;&#24049;&#37197;&#32622;&#20102;&#19968;&#20010; <code>ClientHttpConnector</code> &#31867;&#22411;&#30340; Bean&#65292;&#23601;&#33021;&#35206;&#30422;&#40664;&#35748;&#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#20363;&#22914;&#25105;&#20204;&#24076;&#26395;&#20351;&#29992; Spring WebFlux 5.3 &#29256;&#26412;&#22686;&#21152;&#30340; HttpComponents &#23458;&#25143;&#31471;&#25903;&#25345;&#65292;&#23601;&#21487;&#20197;&#22312; pom.xml &#28155;&#21152;&#30456;&#24212;&#20381;&#36182;&#21518;&#20877;&#20687;&#20195;&#30721;&#31034;&#20363; 11-29 &#37027;&#26679;&#37197;&#32622;&#33258;&#24049;&#30340; <code>ClientHttpConnector</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-29</strong>&#12288;&#25903;&#25345; HttpComponents &#30340;&#23458;&#25143;&#31471; <code>ClientHttpConnector</code> &#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@Slf4j
public class CustomerApplication {
    @Bean
    public ClientHttpConnector clientHttpConnector() {
        HttpAsyncClientBuilder clientBuilder = HttpAsyncClients.custom();
        clientBuilder.disableAutomaticRetries()
                       .setDefaultRequestConfig(RequestConfig.custom()
                       .setConnectionRequestTimeout(1, TimeUnit.SECONDS)
                       .setConnectTimeout(1, TimeUnit.SECONDS).build())
                       // &#30465;&#30053;&#20854;&#20182;&#21508;&#31181;&#23458;&#25143;&#31471;&#30456;&#20851;&#37197;&#32622;&#65292;&#20855;&#20307;&#35265;&#28304;&#30721;
                       .evictIdleConnections(TimeValue.ofMinutes(10));
        CloseableHttpAsyncClient client = clientBuilder.build();
        return new HttpComponentsClientHttpConnector(client);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#22312;&#19978;&#38754;&#30340;&#20195;&#30721;&#37324;&#25105;&#20204;&#35774;&#32622;&#20102;&#40664;&#35748;&#30340;&#35831;&#27714;&#36229;&#26102;&#26102;&#38388;&#65292;&#20854;&#23454;&#65292;&#22823;&#37327;&#19982;&#24213;&#23618;&#23458;&#25143;&#31471;&#25110;&#32773;&#35831;&#27714;&#26377;&#20851;&#30340;&#37197;&#32622;&#65292;&#37117;&#21487;&#20197;&#36890;&#36807;&#37197;&#32622;&#33258;&#24049;&#30340; <code>ClientHttpConnector</code> &#26469;&#23454;&#29616;&#12290;Reactor Netty &#21644; Jetty Reactive HttpClient &#30340; <code>ClientHttpConnector</code> &#37197;&#32622;&#26041;&#27861;&#19982;&#19978;&#38754;&#30340;&#31867;&#20284;&#12290;</p>
<p>&#22312; 10.5 &#33410;&#20013;&#65292;&#25105;&#20204;&#36824;&#20026;&#23458;&#25143;&#31471;&#22686;&#21152;&#20102; JWT &#20196;&#29260;&#30340;&#35748;&#35777;&#65292;&#22312; <code>WebClient</code> &#20013;&#22914;&#26524;&#24076;&#26395;&#20026;&#27599;&#20010;&#35831;&#27714;&#37117;&#22686;&#21152;&#20123;&#36890;&#29992;&#30340;&#22788;&#29702;&#36923;&#36753;&#65292;&#21487;&#20197;&#22686;&#21152;&#33258;&#24049;&#30340;&#36807;&#28388;&#22120;&#65292;&#21363; <code>ExchangeFilterFunction</code> &#23454;&#29616;&#12290;&#20195;&#30721;&#31034;&#20363; 11-30 &#30340;&#20316;&#29992;&#19982; 10.5 &#33410;&#20013;&#30340; <code>JwtClientHttpRequestInitializer</code> &#31867;&#20284;&#65292;&#20026;&#35831;&#27714;&#28155;&#21152;&#20102; JWT &#20196;&#29260;&#65292;&#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65292;&#27492;&#22788;&#24314;&#35758;&#22312;&#35201;&#20462;&#25913; <code>ClientRequest</code> &#26102;&#21019;&#24314;&#19968;&#20010;&#26032;&#30340;&#23545;&#35937;&#65292;&#20462;&#25913;&#21518;&#20877;&#21521;&#19979;&#20256;&#36882;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-30</strong>&#12288;&#20026;&#35831;&#27714;&#22836;&#20013;&#28155;&#21152; <code>Authorization</code> &#22836;&#30340; <code>ExchangeFilterFunction</code> &#23454;&#29616;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class JwtExchangeFilterFunction implements ExchangeFilterFunction {
    @Override
    public Mono&lt;ClientResponse&gt; filter(ClientRequest request, ExchangeFunction next) {
        if (StringUtils.isBlank(token)) {
            initToken();
        }
        if (StringUtils.isBlank(token) ||
            request.headers().containsKey(HttpHeaders.AUTHORIZATION)) {
            return next.exchange(request);
        }
        ClientRequest filtered = ClientRequest.from(request)
            .header(HttpHeaders.AUTHORIZATION, "Bearer " + token)
            .build();
        return next.exchange(filtered);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#26377;&#20102; <code>ExchangeFilterFunction</code> &#21518;&#65292;&#23601;&#21487;&#20197;&#22312; <code>WebClient.Builder</code> &#26500;&#36896; <code>WebClient</code> &#26102;&#65292;&#20351;&#29992; <code>filter()</code> &#26041;&#27861;&#23558;&#25105;&#20204;&#30340;&#36807;&#28388;&#22120;&#36171;&#32473;&#24453;&#21019;&#24314;&#30340; <code>WebClient</code>&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 11-31 &#37027;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 11-31</strong>&#12288;&#20026; <code>WebClient</code> &#28155;&#21152;&#36807;&#28388;&#22120;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@Slf4j
public class CustomerApplication {
    @Bean
    public WebClient webClient(WebClient.Builder builder,
    @Value("${binarytea.url}") String binarytea) {
        return builder.baseUrl(binarytea)
                .filter(jwtExchangeFilterFunction(builder)).build();
    }

    @Bean
    public JwtExchangeFilterFunction jwtExchangeFilterFunction(WebClient.Builder builder) {
        return new JwtExchangeFilterFunction(builder);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#22914;&#26524;&#36807;&#28388;&#22120;&#30340;&#36923;&#36753;&#27604;&#36739;&#31616;&#21333;&#65292;&#25105;&#20204;&#20063;&#23436;&#20840;&#21487;&#20197;&#32771;&#34385;&#30452;&#25509;&#20351;&#29992; Lambda &#34920;&#36798;&#24335;&#22312; <code>filter()</code> &#26041;&#27861;&#20013;&#23436;&#25104;&#36923;&#36753;&#30340;&#24320;&#21457;&#65292;&#25110;&#32773;&#30452;&#25509;&#20351;&#29992; <code>ExchangeFilterFunctions</code> &#25277;&#35937;&#31867;&#37324;&#25552;&#20379;&#30340;&#24120;&#29992;&#36807;&#28388;&#22120;&#23454;&#29616;&#65292;&#20363;&#22914; <code>ExchangeFilterFunctions.basicAuthentication()</code> &#23601;&#21487;&#20197;&#23454;&#29616;&#36890;&#29992;&#30340; HTTP Basic &#35748;&#35777;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">22</span>&#22914;&#26524;&#26377;&#22797;&#26434;&#30340;&#27867;&#22411;&#31867;&#22411;&#38656;&#35201;&#25351;&#23450;&#65292;&#36825;&#37324;&#20063;&#21487;&#20197;&#20687; <code>RestTemplate</code> &#37027;&#26679;&#20256;&#20837; <code>ParameterizedTypeReference</code> &#26469;&#25351;&#23450;&#20855;&#20307;&#30340;&#31867;&#22411;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">23</span>&#36825;&#37096;&#20998;&#30340;&#20195;&#30721;&#37117;&#22312; ch11/customer-webclient &#39033;&#30446;&#37324;&#12290;&#22312;&#22522;&#30784;&#20351;&#29992;&#37096;&#20998;&#65292;&#25105;&#20204;&#36824;&#27809;&#26377;&#22686;&#21152; JWT &#20196;&#29260;&#30456;&#20851;&#30340;&#21151;&#33021;&#65292;&#26381;&#21153;&#31471;&#30340; binarytea &#21487;&#20197;&#20351;&#29992;&#19981;&#24102;&#35748;&#35777;&#30340;&#29256;&#26412;&#65292;&#21518;&#32493;&#20250;&#22686;&#21152;&#35748;&#35777;&#30340;&#20869;&#23481;&#12290;&#21478;&#22806;&#65292;&#30001;&#20110; <code>WebClient</code> &#40664;&#35748;&#20250;&#29992; Reactor Netty &#20316;&#20026;&#24213;&#23618;&#30340;&#23458;&#25143;&#31471;&#23454;&#29616;&#65292;&#25152;&#20197;&#22914;&#26524;&#25105;&#20204;&#35201;&#36816;&#34892;&#31243;&#24207;&#65292;&#35201;&#20808;&#23558; WebFlux &#30340;&#23481;&#22120;&#20174; Tomcat &#23481;&#22120;&#25442;&#22238;&#40664;&#35748;&#30340; Netty&#65292;&#35762;&#21040;&#36827;&#38454;&#37197;&#32622;&#26102;&#20877;&#26469;&#30475;&#22914;&#20309;&#20351;&#29992;&#20854;&#20182;&#23458;&#25143;&#31471;&#12290;</p><h2 id="nav_point_187">11.5&#12288;&#23567;&#32467;</h2><p>&#26412;&#31456;&#25105;&#20204;&#20855;&#20307;&#20102;&#35299;&#20102;&#22914;&#20309;&#22312; Web &#39033;&#30446;&#20013;&#36890;&#36807; <code>HandlerInterceptor</code> &#23454;&#29616;&#31867;&#20284; AOP &#30340;&#25805;&#20316;&#65292;&#22914;&#20309;&#36890;&#36807; <code>@ExceptionHandler</code> &#22788;&#29702;&#35831;&#27714;&#24322;&#24120;&#65292;&#22914;&#20309;&#23450;&#21046; Web &#23481;&#22120;&#30340;&#21508;&#31181;&#32454;&#33410;&#65292;&#22914;&#20309;&#25903;&#25345; HTTPS &#21644; HTTP/2&#12290;&#36824;&#20174;&#23439;&#35266;&#23618;&#38754;&#19978;&#35752;&#35770;&#20102;&#20998;&#24067;&#24335; Session &#30340;&#20960;&#31181;&#23454;&#29616;&#26041;&#24335;&#65292;&#24182;&#20351;&#29992; Spring Session &#31616;&#21333;&#23454;&#29616;&#20102;&#22522;&#20110; RDBMS &#21644; Redis &#30340;&#20998;&#24067;&#24335; Session&#12290;&#26368;&#21518;&#36824;&#19968;&#36215;&#30475;&#20102;&#30475; Spring Framework 5.0 &#26032;&#21152;&#30340;&#21709;&#24212;&#24335; Web &#26694;&#26550; WebFlux&#65292;&#20197;&#21450;&#23545;&#24212;&#23458;&#25143;&#31471; <code>WebClient</code> &#30340;&#29992;&#27861;&#12290;Spring WebMVC &#21644; WebFlux &#26159;&#20004;&#22871;&#23436;&#20840;&#24182;&#34892;&#30340; Web &#26694;&#26550;&#65292;&#22823;&#23478;&#21487;&#20197;&#26681;&#25454;&#23454;&#38469;&#24773;&#20917;&#36873;&#25321;&#21512;&#36866;&#30340;&#26694;&#26550;&#12290;</p><p>&#20174;&#19979;&#19968;&#31456;&#24320;&#22987;&#65292;&#25105;&#20204;&#23558;&#32763;&#24320;&#19968;&#20010;&#20840;&#26032;&#30340;&#31687;&#31456;&#65292;&#23398;&#20064;&#22914;&#20309;&#20351;&#29992; Spring &#25552;&#20379;&#30340;&#21508;&#31181;&#32452;&#20214;&#65292;&#24320;&#21457;&#31283;&#23450;&#39640;&#21487;&#29992;&#30340;&#24494;&#26381;&#21153;&#31995;&#32479;&#12290;</p><blockquote>
<p style="text-align: center"><strong>&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#39033;&#30446;&#24320;&#21457;&#23567;&#32467;&#21040;</strong></p>
<p>&#30446;&#21069;&#20026;&#27490;&#65292;&#25105;&#20204;&#30340;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#24050;&#32463;&#26377;&#20102;&#19968;&#20010; Web &#31649;&#29702;&#30340;&#30028;&#38754;&#65292;&#24215;&#21592;&#21487;&#20197;&#22312;&#30028;&#38754;&#19978;&#30452;&#25509;&#20026;&#39038;&#23458;&#19979;&#21333;&#12290;&#30028;&#38754;&#34429;&#28982;&#31616;&#38475;&#65292;&#20294;&#21151;&#33021;&#21364;&#26159;&#23436;&#25972;&#30340;&#65292;&#29978;&#33267;&#36824;&#21253;&#21547;&#20102;&#19968;&#25972;&#22871;&#22522;&#20110;&#35282;&#33394;&#30340;&#26435;&#38480;&#31649;&#29702;&#20307;&#31995;&#12290;</p>
<p>&#20026;&#20102;&#25552;&#21319;&#25972;&#20010;&#22902;&#33590;&#24215;&#31995;&#32479;&#30340;&#24615;&#33021;&#12289;&#31283;&#23450;&#24615;&#21644;&#23433;&#20840;&#24615;&#65292;&#25105;&#20204;&#23545;&#31995;&#32479;&#36816;&#34892;&#30340;&#23481;&#22120;&#36827;&#34892;&#20102;&#19968;&#36718;&#35843;&#25972;&#65292;&#36824;&#22686;&#21152;&#20102;&#24120;&#35265;&#25915;&#20987;&#26041;&#24335;&#30340;&#38450;&#24481;&#25514;&#26045;&#65292;&#36873;&#25321;&#24615;&#24320;&#21551;&#20102; HTTPS &#19982; HTTP/2 &#30340;&#25903;&#25345;&#12290;&#22914;&#26524;&#21518;&#32493;&#31995;&#32479;&#20570;&#22823;&#20102;&#65292;&#21487;&#20197;&#25226;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#31995;&#32479;&#20174;&#21333;&#26426;&#21464;&#20026;&#19968;&#20010;&#38598;&#32676;&#65292;&#32780;&#20998;&#24067;&#24335; Session &#30340;&#38382;&#39064;&#65292;&#25105;&#20204;&#24050;&#32463;&#36890;&#36807; Spring Session &#35299;&#20915;&#20102;&#65288;&#22914;&#26524;&#30495;&#30340;&#21464;&#25104;&#19968;&#20010;&#38598;&#32676;&#65292;&#35760;&#24471;&#25226;&#25968;&#25454;&#24211;&#20174;&#20869;&#23384;&#20013;&#23384;&#20648;&#25968;&#25454;&#30340; H2 &#25442;&#25104;&#29420;&#31435;&#30340; MySQL&#65289;&#12290;</p>
<p>&#23545;&#20110;&#39038;&#23458;&#20351;&#29992;&#30340;&#23458;&#25143;&#31471;&#65292;&#21407;&#20808;&#30340;&#23458;&#25143;&#31471;&#21482;&#33021;&#20570;&#22266;&#23450;&#30340;&#20960;&#20214;&#20107;&#65307;&#29616;&#22312;&#25105;&#20204;&#20063;&#20026;&#23458;&#25143;&#31471;&#22686;&#21152;&#20102;&#19968;&#20123;&#21487;&#20154;&#24037;&#20171;&#20837;&#25805;&#20316;&#30340;&#25509;&#21475;&#65292;&#27604;&#22914;&#20154;&#20026;&#27169;&#25311;&#39038;&#23458;&#26597;&#30475;&#33756;&#21333;&#21644;&#19979;&#21333;&#31561;&#25805;&#20316;&#12290;</p>
</blockquote><br style="page-break-after:always"/><div style="page-break-after:always"></div>