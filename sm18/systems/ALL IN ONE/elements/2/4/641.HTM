<h1 id="nav_point_90">&#31532; 6 &#31456;&#12288;Spring &#20013;&#30340; JDBC</h1><blockquote>
<p><strong>&#26412;&#31456;&#20869;&#23481;</strong></p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#24120;&#35265;&#30340;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#37197;&#32622;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312; Spring &#20013;&#20351;&#29992; JDBC &#25805;&#20316;&#25968;&#25454;&#24211;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring &#20013;&#30340;&#20107;&#21153;&#25277;&#35937;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring &#20013;&#30340;&#24322;&#24120;&#25277;&#35937;</li>
</ul>
</blockquote><p>JDBC &#30340;&#20840;&#31216;&#26159; Java Database Connectivity&#65292;&#26159;&#19968;&#22871;&#38754;&#21521;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#30340;&#35268;&#33539;&#12290;&#34429;&#28982;&#25968;&#25454;&#24211;&#21508;&#26377;&#19981;&#21516;&#65292;&#20294;&#36825;&#20123;&#25968;&#25454;&#24211;&#37117;&#25552;&#20379;&#20102;&#22522;&#20110; JDBC &#35268;&#33539;&#23454;&#29616;&#30340; JDBC &#39537;&#21160;&#12290;&#24320;&#21457;&#32773;&#21482;&#38656;&#35201;&#38754;&#21521; JDBC &#25509;&#21475;&#32534;&#31243;&#65292;&#23601;&#33021;&#22312;&#24456;&#22823;&#31243;&#24230;&#19978;&#35268;&#36991;&#25968;&#25454;&#24211;&#24046;&#24322;&#24102;&#26469;&#30340;&#38382;&#39064;&#12290;Java &#24212;&#29992;&#31243;&#24207;&#22522;&#26412;&#19978;&#26159;&#36890;&#36807; JDBC &#26469;&#36830;&#25509;&#24182;&#25805;&#20316;&#25968;&#25454;&#24211;&#30340;&#65292;&#21738;&#24597;&#25105;&#20204;&#20351;&#29992;&#20102;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26694;&#26550;&#65288;&#20363;&#22914; Hibernate&#65289;&#65292;&#20854;&#24213;&#23618;&#20063;&#26159;&#29992; JDBC &#26469;&#19982;&#25968;&#25454;&#24211;&#36827;&#34892;&#20132;&#20114;&#30340;&#12290;</p><h2 id="nav_point_91">6.1&#12288;&#37197;&#32622;&#25968;&#25454;&#28304;</h2><p>&#26080;&#35770;&#26159;&#31616;&#21333;&#30340;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#65292;&#36824;&#26159;&#22797;&#26434;&#30340;&#25968;&#25454;&#20998;&#26512;&#20219;&#21153;&#65292;&#37117;&#38656;&#35201;&#20808;&#25552;&#20379;&#19968;&#20010;&#25968;&#25454;&#28304;&#65288;<code>DataSource</code>&#65289;&#12290;&#39038;&#21517;&#24605;&#20041;&#65292;&#25968;&#25454;&#28304;&#23601;&#26159;&#25968;&#25454;&#30340;&#28304;&#22836;&#65292;&#21363;&#21487;&#20197;&#20174;&#20013;&#33719;&#21462;&#25968;&#25454;&#30340;&#22320;&#26041;&#12290;&#25968;&#25454;&#28304;&#30340;&#24120;&#35265;&#23454;&#29616;&#26159;&#36830;&#25509;&#27744;&#65292;&#24320;&#21457;&#32773;&#33021;&#36890;&#36807;&#36830;&#25509;&#27744;&#26469;&#31649;&#29702; JDBC &#36830;&#25509;&#12290;&#30001;&#20110; JDBC &#25805;&#20316;&#37117;&#26159;&#22522;&#20110;&#36830;&#25509;&#30340;&#65292;&#22240;&#32780;&#22312;&#26412;&#31456;&#30340;&#31532;&#19968;&#37096;&#20998;&#20013;&#65292;&#25105;&#20204;&#20808;&#26469;&#20102;&#35299;&#19968;&#19979;&#36830;&#25509;&#27744;&#12290;</p><h3 id="nav_point_92">6.1.1&#12288;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;</h3><p>&#22312;&#23398;&#20064; Java &#26102;&#65292;&#22823;&#23478;&#21487;&#33021;&#23398;&#20064;&#36807; JDBC &#30340;&#22522;&#30784;&#30693;&#35782;&#12290;JDBC &#36890;&#36807; <code>java.sql</code> &#21253;&#20013;&#30340; <code>Connection</code> &#26469;&#36830;&#25509;&#25968;&#25454;&#24211;&#65292;&#38543;&#21518;&#21019;&#24314; <code>Statement</code> &#25110; <code>PreparedStatement</code> &#25191;&#34892; SQL &#35821;&#21477;&#12290;&#22914;&#26524;&#26159;&#26597;&#35810;&#25805;&#20316;&#65292;&#22312; JDBC &#20013;&#20250;&#29992; <code>ResultSet</code> &#26469;&#20195;&#34920;&#36820;&#22238;&#30340;&#32467;&#26524;&#38598;&#12290;&#19968;&#20010;&#26222;&#36890;&#30340;&#26597;&#35810;&#25805;&#20316;&#21487;&#33021;&#22914;&#20195;&#30721;&#31034;&#20363; 6-1 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">1</span></p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">1</span>&#36825;&#20010;&#31034;&#20363;&#20301;&#20110; ch6/raw-jdbc-demo &#39033;&#30446;&#20013;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-1</strong>&#12288;&#22522;&#30784;&#30340; JDBC &#26597;&#35810;&#25805;&#20316;&#31034;&#20363;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Class.forName("org.h2.Driver");
// &#27492;&#22788;&#20351;&#29992;&#20102;try-with-resource&#30340;&#35821;&#27861;&#65292;&#22240;&#27492;&#19981;&#29992;&#22312;finally&#35821;&#27861;&#27573;&#20013;&#20851;&#38381;&#36164;&#28304;
try (Connection connection = DriverManager.getConnection("jdbc:h2:mem:test_db");
    Statement statement = connection.createStatement();
     ResultSet resultSet = statement.executeQuery("SELECT X FROM SYSTEM_RANGE(1, 10)")) {
    while (resultSet.next()) {
        log.info("&#21462;&#20540;&#65306;{}", resultSet.getInt(1));
    }
} catch (Exception e) {
    log.error("&#20986;&#38169;&#21862;", e);
}</code></pre><p>&#36825;&#26679;&#30340;&#20195;&#30721;&#34429;&#28982;&#19981;&#22797;&#26434;&#65292;&#20294;&#26159;&#22312;&#30495;&#23454;&#30340;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#24182;&#19981;&#25512;&#33616;&#22823;&#23478;&#33258;&#24049;&#26469;&#21019;&#24314;&#24182;&#31649;&#29702;&#25968;&#25454;&#24211;&#36830;&#25509;&#65292;&#20027;&#35201;&#21407;&#22240;&#26159;&#21019;&#24314;&#19968;&#20010; JDBC &#36830;&#25509;&#30340;&#25104;&#26412;&#38750;&#24120;&#39640;&#12290;&#25105;&#20204;&#24314;&#35758;&#36890;&#36807;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#26469;&#31649;&#29702;&#36830;&#25509;&#65292;&#23427;&#30340;&#20027;&#35201;&#21151;&#33021;&#26377;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#26681;&#25454;&#37197;&#32622;&#65292;&#20107;&#20808;&#21019;&#24314;&#19968;&#23450;&#25968;&#37327;&#30340;&#36830;&#25509;&#25918;&#22312;&#36830;&#25509;&#27744;&#20013;&#65292;&#20197;&#20415;&#22312;&#38656;&#35201;&#30340;&#26102;&#20505;&#30452;&#25509;&#36820;&#22238;&#29616;&#25104;&#30340;&#36830;&#25509;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#32500;&#25252;&#36830;&#25509;&#27744;&#20013;&#30340;&#36830;&#25509;&#65292;&#26681;&#25454;&#37197;&#32622;&#65292;&#28165;&#29702;&#24050;&#23384;&#22312;&#30340;&#36830;&#25509;&#12290;</li>
</ul><p>&#25105;&#20204;&#24120;&#29992;&#30340;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#37117;&#23454;&#29616;&#20102; <code>DataSource</code> &#25509;&#21475;&#65292;&#36890;&#36807;&#20854;&#20013;&#30340; <code>getConnection()</code> &#26041;&#27861;&#21363;&#21487;&#33719;&#24471;&#19968;&#20010;&#36830;&#25509;&#12290;&#26412;&#33410;&#23558;&#20171;&#32461;&#30446;&#21069;&#27604;&#36739;&#27969;&#34892;&#30340;&#20004;&#20010;&#36830;&#25509;&#27744;&#8212;&#8212;HikariCP &#21644; Druid&#12290;&#27492;&#22806;&#65292;&#19994;&#30028;&#36824;&#26377;&#20854;&#20182;&#19968;&#20123;&#36830;&#25509;&#27744;&#30340;&#20986;&#38236;&#29575;&#20063;&#27604;&#36739;&#39640;&#65292;&#27604;&#22914; DBCP2 &#21644; C3P0 &#31561;&#12290;</p><ol>
<li><p><strong>HikariCP</strong></p>
<p>Spring Boot 2.<em>x</em> &#39033;&#30446;&#30340;&#40664;&#35748;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#26159; HikariCP&#65292;Hikari &#36825;&#20010;&#35789;&#22312;&#26085;&#35821;&#20013;&#30340;&#24847;&#24605;&#26159;&#8220;&#20809;&#8221;&#65292;&#20063;&#35768;&#20316;&#32773;&#36215;&#36825;&#20010;&#21517;&#23383;&#26159;&#20026;&#20102;&#31361;&#20986;&#23427;&#8220;&#36895;&#24230;&#24555;&#8221;&#30340;&#36825;&#20010;&#29305;&#28857;&#12290;&#22312;&#24037;&#31243;&#20013;&#24341;&#20837;&#25968;&#25454;&#24211;&#30456;&#20851;&#30340; Spring Boot Starter&#65292;&#40664;&#35748;&#23601;&#20250;&#24341;&#20837; HikariCP &#30340;&#20381;&#36182;&#12290;&#20363;&#22914;&#65292;&#22312; Spring Initializr &#19978;&#36873;&#20013; H2&#12289;JDBC API &#21644; Lombok &#19977;&#20010;&#32452;&#20214;&#65292;&#29983;&#25104;&#19968;&#20010;&#24037;&#31243;&#65292;&#20854;&#20013;&#30340;&#20381;&#36182;&#23601;&#21253;&#25324;&#22914;&#19979;&#20869;&#23481;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.h2database&lt;/groupId&gt;
    &lt;artifactId&gt;h2&lt;/artifactId&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
    &lt;artifactId&gt;lombok&lt;/artifactId&gt;
    &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;</code></pre>
<p>Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#26426;&#21046;&#22312;&#26816;&#27979;&#21040; CLASSPATH &#20013;&#23384;&#22312; H2 &#25968;&#25454;&#24211;&#30340;&#20381;&#36182;&#65292;&#19988;&#27809;&#26377;&#37197;&#32622;&#36807; <code>DataSource</code> &#26102;&#65292;&#20250;&#36827;&#34892;&#33258;&#21160;&#37197;&#32622;&#65292;&#25552;&#20379;&#19968;&#20010;&#22522;&#20110;&#20869;&#23384;&#25968;&#25454;&#24211;&#30340;&#25968;&#25454;&#28304;&#12290;&#22312;&#19979;&#19968;&#33410;&#20013;&#25105;&#20204;&#36824;&#20250;&#30475;&#21040;&#19981;&#29992; Spring Boot &#33258;&#21160;&#37197;&#32622;&#65292;&#32780;&#26159;&#25163;&#21160;&#37197;&#32622;&#19968;&#20010; <code>DataSource</code> &#30340;&#20363;&#23376;&#12290;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#19968;&#27573;&#27979;&#35797;&#20195;&#30721;&#26469;&#39564;&#35777;&#19968;&#19979;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 6-2 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">2</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-2</strong>&#12288;<code>DatasourceDemoApplicationTests</code> &#27979;&#35797;&#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class DatasourceDemoApplicationTests {
    @Autowired
    private ApplicationContext applicationContext;

    @Test
    void testDataSource() throws SQLException {
        assertTrue(applicationContext.containsBean("dataSource"));
        DataSource dataSource = applicationContext.getBean("dataSource", DataSource.class);
        assertTrue(dataSource instanceof HikariDataSource);

        Connection connection = dataSource.getConnection();
        assertTrue(connection instanceof HikariProxyConnection);
        connection.close();

        assertEquals(10, ((HikariDataSource) dataSource).getMaximumPoolSize());
    }
}</code></pre>
<p>&#22312; <code>testDataSource()</code> &#26041;&#27861;&#20013;&#65292;&#25105;&#20204;&#20570;&#20102;&#22914;&#19979;&#19968;&#20123;&#21160;&#20316;&#65306;</p>
<p>(1) &#20808;&#21028;&#26029;&#19978;&#19979;&#25991;&#20013;&#26159;&#21542;&#23384;&#22312;&#21517;&#20026; <code>dataSource</code> &#30340; Bean&#65307;</p>
<p>(2) &#22914;&#26524;&#23384;&#22312;&#65292;&#21017;&#21462;&#20986;&#35813; Bean&#65292;&#21516;&#26102;&#35201;&#27714;&#36825;&#20010; Bean &#26159;&#23454;&#29616;&#20102; <code>DataSource</code> &#25509;&#21475;&#30340;&#65307;</p>
<p>(3) &#21028;&#26029;&#21462;&#20986;&#30340; <code>dataSource</code> &#26159; <code>HikariDataSource</code> &#31867;&#22411;&#30340;&#65307;</p>
<p>(4) &#20174; <code>dataSource</code> &#20013;&#21462;&#20986;&#19968;&#20010;&#36830;&#25509;&#65292;&#21028;&#26029;&#23427;&#26159;&#21542;&#20026; <code>HikariProxyConnection</code> &#31867;&#22411;&#65307;</p>
<p>(5) &#21028;&#26029;&#36830;&#25509;&#27744;&#30340;&#26368;&#22823;&#36830;&#25509;&#25968;&#26159;&#21542;&#20026; 10&#65292;&#36825;&#26159;&#19968;&#20010;&#40664;&#35748;&#20540;&#12290;</p>
<p>&#36816;&#34892;&#21518;&#65292;&#36825;&#20010;&#21333;&#20803;&#27979;&#35797;&#33021;&#22815;&#39034;&#21033;&#36890;&#36807;&#12290;</p>
<p>&#22312;&#23454;&#38469;&#20351;&#29992;&#26102;&#65292;&#21487;&#20197;&#30452;&#25509;&#27880;&#20837; <code>DataSource</code> Bean&#65292;&#20294;&#22312;&#26356;&#22810;&#30340;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#24182;&#19981;&#20250;&#30452;&#25509;&#21435;&#25805;&#20316; <code>DataSource</code>&#65292;&#32780;&#26159;&#20351;&#29992;&#26356;&#19978;&#23618;&#30340; API&#12290;&#22312;&#21518;&#25991;&#20013;&#25105;&#20204;&#20250;&#30475;&#21040; Spring Framework &#30340;&#19968;&#20123; JDBC &#23553;&#35013;&#25805;&#20316;&#12290;</p>
<p>HikariCP &#26377;&#19981;&#23569;&#37197;&#32622;&#39033;&#65292;&#29992;&#20110;&#35843;&#25972;&#36830;&#25509;&#27744;&#30340;&#22823;&#23567;&#21644;&#21508;&#31181;&#36229;&#26102;&#35774;&#32622;&#65292;&#21487;&#20197;&#30452;&#25509;&#37197;&#32622;&#22312;&#36830;&#25509;&#27744;&#23545;&#35937;&#19978;&#12290;Spring Boot &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#26041;&#20415;&#30340;&#37197;&#32622;&#26041;&#24335;&#65292;&#22312; <code>application.properties</code> &#20013;&#23601;&#21487;&#20197;&#20462;&#25913;&#33258;&#21160;&#37197;&#32622;&#30340;&#36830;&#25509;&#27744;&#65292;&#20855;&#20307;&#30340;&#21442;&#25968;&#22914;&#34920; 6-1 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 6-1&#12288;HikariCP &#30340;&#24120;&#29992;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>Spring Boot &#37197;&#32622;&#23646;&#24615;</th><th>&#37197;&#32622;&#21547;&#20041;</th></tr><tr><td>`jdbcUrl`</td><td>`spring.datasource.url`</td><td>&#29992;&#20110;&#36830;&#25509;&#25968;&#25454;&#24211;&#30340; JDBC URL</td></tr><tr><td>`username`</td><td>`spring.datasource.username`</td><td>&#36830;&#25509;&#25968;&#25454;&#24211;&#20351;&#29992;&#30340;&#29992;&#25143;&#21517;</td></tr><tr><td>`password`</td><td>`spring.datasource.password`</td><td>&#36830;&#25509;&#25968;&#25454;&#24211;&#20351;&#29992;&#30340;&#23494;&#30721;</td></tr><tr><td>`maximumPoolSize`</td><td>`spring.datasource.hikari.maximum-pool-size`</td><td>&#36830;&#25509;&#27744;&#20013;&#30340;&#26368;&#22823;&#36830;&#25509;&#25968;</td></tr><tr><td>`minimumIdle`</td><td>`spring.datasource.hikari.minimum-idle`</td><td>&#36830;&#25509;&#27744;&#20013;&#20445;&#25345;&#30340;&#26368;&#23567;&#31354;&#38386;&#36830;&#25509;&#25968;</td></tr><tr><td>`connectionTimeout`</td><td>`spring.datasource.hikari.connection-timeout`</td><td>&#24314;&#31435;&#36830;&#25509;&#26102;&#30340;&#36229;&#26102;&#26102;&#38388;&#65292;&#21333;&#20301;&#20026;&#31186;</td></tr><tr><td>`idleTimeout`</td><td>`spring.datasource.hikari.idle-timeout`</td><td>&#36830;&#25509;&#28165;&#29702;&#21069;&#30340;&#31354;&#38386;&#26102;&#38388;&#65292;&#21333;&#20301;&#20026;&#31186;</td></tr><tr><td>`maxLifetime`</td><td>`spring.datasource.hikari.max-lifetime`</td><td>&#36830;&#25509;&#27744;&#20013;&#36830;&#25509;&#30340;&#26368;&#22823;&#23384;&#27963;&#26102;&#38388;&#65292;&#21333;&#20301;&#20026;&#31186;</td></tr></table>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;HikariCP &#20026;&#20160;&#20040;&#35828;&#33258;&#24049;&#27604;&#21035;&#20154;&#24555;</strong></p>
<p>HikariCP &#23448;&#26041;&#19968;&#30452;&#23558;&#8220;&#24555;&#8221;&#20316;&#20026;&#33258;&#24049;&#30340;&#20142;&#28857;&#12290;&#20174;&#23448;&#26041;&#24615;&#33021;&#27979;&#35797;&#30340;&#32467;&#26524;&#26469;&#30475;&#65292;HikariCP &#30340;&#24615;&#33021;&#25968;&#20493;&#20110; DBCP2&#12289;C3P0 &#21644; Tomcat &#36830;&#25509;&#27744;&#12290;</p>
<p>&#23448;&#26041;&#26377;&#19968;&#31687;&#8220;Down the Rabbit Hole&#8221;&#30340;&#25991;&#31456;&#65292;&#31616;&#21333;&#35828;&#26126;&#20102; HikariCP &#24615;&#33021;&#20986;&#20247;&#30340;&#21407;&#22240;&#65306;</p>
<ul>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807;&#23383;&#33410;&#30721;&#36827;&#34892;&#21152;&#36895;&#65292;<code>JavassistProxyFactory</code> &#20013;&#20351;&#29992; <code>Javassist</code> &#30452;&#25509;&#29983;&#25104;&#20102;&#22823;&#37327;&#23383;&#33410;&#30721;&#22622;&#21040;&#20102; <code>ProxyFactory</code> &#20013;&#65292;&#21516;&#26102;&#36824;&#23545;&#23383;&#33410;&#30721;&#36827;&#34892;&#20102;&#31934;&#30830;&#22320;&#20248;&#21270;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#20351;&#29992; <code>FastList</code> &#20195;&#26367;&#20102; JDK &#20869;&#32622;&#30340; <code>ArrayList</code>&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#20174; .NET &#20013;&#20511;&#37492;&#20102;&#26080;&#38145;&#38598;&#21512; <code>ConcurrentBag</code>&#12290;</li>
</ul>
<p>&#30001;&#27492;&#21487;&#35265;&#65292;HikariCP &#30340;&#20316;&#32773;&#36824;&#26159;&#22312;&#36830;&#25509;&#27744;&#30340;&#24615;&#33021;&#35843;&#20248;&#26041;&#38754;&#19979;&#20102;&#24456;&#22810;&#21151;&#22827;&#30340;&#65292;&#29978;&#33267;&#21487;&#20197;&#35828;&#29992;&#19978;&#20102;&#19981;&#23569;&#8220;&#22855;&#25216;&#28139;&#24039;&#8221;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>Druid</strong></p>
<p>&#38463;&#37324;&#24052;&#24052;&#24320;&#28304;&#30340; Druid &#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#22312;&#38463;&#37324;&#24052;&#24052;&#38598;&#22242;&#20869;&#37096;&#24471;&#21040;&#20102;&#24191;&#27867;&#30340;&#24212;&#29992;&#65292;&#22312;&#22269;&#20869;&#20063;&#26377;&#22823;&#37327;&#30340;&#20351;&#29992;&#32773;&#12290;&#26242;&#19988;&#19981;&#35770; Druid &#26159;&#21542;&#26159; Java &#35821;&#35328;&#20013;&#26368;&#22909;&#30340;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#65292;&#20294;&#20854;&#23448;&#26041;&#23459;&#31216;&#23427;&#26159;&#38754;&#21521;&#30417;&#25511;&#32780;&#29983;&#30340;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#20498;&#26159;&#19968;&#20010;&#19981;&#20105;&#30340;&#20107;&#23454;&#12290;&#22312;&#30417;&#25511;&#33021;&#21147;&#20043;&#22806;&#65292;Druid &#36824;&#25552;&#20379;&#20102;&#24456;&#20016;&#23500;&#30340;&#21151;&#33021;&#65292;&#20363;&#22914;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#38024;&#23545;&#20027;&#27969;&#25968;&#25454;&#24211;&#30340;&#36866;&#37197;&#65292;&#21253;&#21547;&#39537;&#21160;&#12289;&#36830;&#25509;&#26816;&#26597;&#12289;&#24322;&#24120;&#31561;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20869;&#32622; SQL &#27880;&#20837;&#38450;&#28779;&#22681;&#21151;&#33021;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20869;&#32622;&#25968;&#25454;&#24211;&#23494;&#30721;&#38750;&#23545;&#31216;&#21152;&#23494;&#21151;&#33021;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20869;&#32622;&#38024;&#23545;&#25968;&#25454;&#24211;&#24322;&#24120;&#30340; <code>ExceptionSorter</code>&#65292;&#21487;&#23545;&#19981;&#21516;&#30340;&#24322;&#24120;&#36827;&#34892;&#21306;&#21035;&#23545;&#24453;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20869;&#32622;&#20016;&#23500;&#30340;&#26085;&#24535;&#20449;&#24687;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#25552;&#20379;&#20102;&#24378;&#22823;&#30340;&#25193;&#23637;&#33021;&#21147;&#65292;&#21487;&#22312; JDBC &#36830;&#25509;&#25805;&#20316;&#30340;&#21508;&#20010;&#38454;&#27573;&#27880;&#20837;&#33258;&#24049;&#30340;&#36923;&#36753;&#12290;</li>
</ul>
<p>&#22914;&#26524;&#29992;&#19968;&#20010;&#23383;&#26469;&#24418;&#23481; HikariCP &#30340;&#29305;&#28857;&#65292;&#37027;&#23601;&#26159;&#8220;&#24555;&#8221;&#65292;&#23427;&#38656;&#35201;&#37197;&#21512;&#20854;&#20182;&#30340;&#19968;&#20123;&#32452;&#20214;&#25165;&#33021;&#23454;&#29616;&#26576;&#20123;&#21151;&#33021;&#12290;Druid &#30340;&#29305;&#28857;&#24212;&#35813;&#23601;&#26159;&#8220;&#20840;&#8221;&#65292;&#20165;&#20854;&#20869;&#32622;&#30340;&#21151;&#33021;&#23601;&#24050;&#32463;&#33021;&#28385;&#36275;&#32477;&#22823;&#37096;&#20998;&#29983;&#20135;&#29615;&#22659;&#20013;&#30340;&#33499;&#21051;&#35201;&#27714;&#20102;&#65292;&#26356;&#19981;&#29992;&#35828;&#25105;&#20204;&#36824;&#33021;&#23545;&#23427;&#36827;&#34892;&#25193;&#23637;&#12290;</p>
<p>Druid &#25552;&#20379;&#20102;&#19968;&#20010; Spring Boot Starter &#26469;&#36866;&#37197; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#21151;&#33021;&#12290;&#20063;&#23601;&#26159;&#35828;&#65292;&#38500;&#20102;&#33258;&#24049;&#21160;&#25163;&#37197;&#32622;&#19968;&#20010; <code>DruidDataSource</code> Bean &#20197;&#22806;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#36890;&#36807;&#33258;&#21160;&#37197;&#32622;&#30340;&#26041;&#24335;&#26469;&#25552;&#20379;&#25968;&#25454;&#28304;&#30340; Bean&#12290;</p>
<p>&#20173;&#26087;&#20197;&#19978;&#38754;&#30340; <code>DataSourceDemo</code> &#20026;&#20363;&#65292;&#22312; pom.xml &#20013;&#28155;&#21152;&#22914;&#19979;&#20381;&#36182;&#65288;&#29256;&#26412;&#21487;&#36890;&#36807;&#23448;&#26041;&#20027;&#39029;&#26597;&#35810;&#65289;&#21363;&#21487;&#24341;&#20837; Druid &#30340;&#25903;&#25345;&#12290;&#22914;&#26524;&#21487;&#20197;&#30340;&#35805;&#65292;&#24314;&#35758;&#20174; spring-boot-starter-jdbc &#20013;&#25490;&#38500;&#25481; HikariCP &#30340;&#20381;&#36182;&#65292;&#22240;&#20026;&#39033;&#30446;&#20013;&#19981;&#20877;&#38656;&#35201;&#23427;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;
    &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;
    &lt;version&gt;1.2.8&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p>&#23545;&#20110;&#27979;&#35797;&#20195;&#30721;&#65292;&#25105;&#20204;&#20063;&#31245;&#20316;&#35843;&#25972;&#65292;&#23558;&#21028;&#26029;&#30340;&#26465;&#20214;&#26367;&#25442;&#20026; Druid &#30340;&#31867;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 6-3 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">3</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-3</strong>&#12288;<code>DatasourceDemoApplicationTests</code> &#27979;&#35797;&#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class DatasourceDemoApplicationTests {
    @Autowired
    private ApplicationContext applicationContext;

    @Test
    void testDataSource() throws SQLException {
        assertTrue(applicationContext.containsBean("dataSource"));
        DataSource dataSource = applicationContext.getBean("dataSource", DataSource.class);
        assertTrue(dataSource instanceof DruidDataSource);

        Connection connection = dataSource.getConnection();
        assertTrue(connection instanceof DruidPooledConnection);
        connection.close();

        assertEquals(DruidDataSource.DEFAULT_MAX_ACTIVE_SIZE,((DruidDataSource) dataSource).getMaxActive());
    }
}</code></pre>
<p>&#22312;&#21028;&#26029;&#20986;&#20351;&#29992;&#20102; H2 &#20869;&#23884;&#25968;&#25454;&#24211;&#21518;&#65292;&#36890;&#36807; druid-spring-boot-starter &#20063;&#33021;&#33258;&#21160;&#21019;&#24314;&#25968;&#25454;&#28304;&#30340; Bean&#12290;&#25105;&#20204;&#23545;&#20854;&#31867;&#22411;&#21644;&#19968;&#20123;&#40664;&#35748;&#37197;&#32622;&#20570;&#20102;&#21028;&#26029;&#12290;&#19982; HikariCP &#31867;&#20284;&#65292;Druid &#20063;&#25552;&#20379;&#20102;&#24456;&#22810;&#37197;&#32622;&#39033;&#65292;&#20854;&#20013;&#24120;&#29992;&#30340;&#20869;&#23481;&#22914;&#34920; 6-2 &#25152;&#31034;&#65292;&#20851;&#20110; Druid &#30340;&#39640;&#38454;&#21151;&#33021;&#65292;&#25105;&#20204;&#20250;&#22312;&#21518;&#32493;&#30340;&#31456;&#33410;&#20013;&#20877;&#23637;&#24320;&#35752;&#35770;&#12290;</p>
<p><strong>&#34920; 6-2&#12288;Druid &#30340;&#24120;&#29992;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>Spring Boot &#37197;&#32622;&#23646;&#24615;</th><th>&#37197;&#32622;&#21547;&#20041;</th></tr><tr><td>`url`</td><td>`spring.datasource.url`</td><td>&#29992;&#20110;&#36830;&#25509;&#25968;&#25454;&#24211;&#30340; JDBC URL</td></tr><tr><td>`username`</td><td>`spring.datasource.username`</td><td>&#36830;&#25509;&#25968;&#25454;&#24211;&#20351;&#29992;&#30340;&#29992;&#25143;&#21517;</td></tr><tr><td>`password`</td><td>`spring.datasource.password`</td><td>&#36830;&#25509;&#25968;&#25454;&#24211;&#20351;&#29992;&#30340;&#23494;&#30721;</td></tr><tr><td>`initialSize`</td><td>`spring.datasource.druid.initial-size`</td><td>&#21021;&#22987;&#21270;&#36830;&#25509;&#27744;&#26102;&#24314;&#31435;&#30340;&#36830;&#25509;&#25968;</td></tr><tr><td>`maxActive`</td><td>`spring.datasource.druid.max-active`</td><td>&#36830;&#25509;&#27744;&#20013;&#30340;&#26368;&#22823;&#36830;&#25509;&#25968;</td></tr><tr><td>`minIdle`</td><td>`spring.datasource.druid.min-idle`</td><td>&#36830;&#25509;&#27744;&#20013;&#20445;&#25345;&#30340;&#26368;&#23567;&#31354;&#38386;&#36830;&#25509;&#25968;</td></tr><tr><td>`maxWait`</td><td>`spring.datasource.druid.max-wait`</td><td>&#33719;&#21462;&#36830;&#25509;&#30340;&#26368;&#22823;&#31561;&#24453;&#26102;&#38388;&#65292;&#21333;&#20301;&#20026;&#27627;&#31186;</td></tr><tr><td>`testOnBorrow`</td><td>`spring.datasource.druid.test-on-borrow`</td><td>&#33719;&#21462;&#36830;&#25509;&#26102;&#26816;&#26597;&#36830;&#25509;&#65292;&#20250;&#24433;&#21709;&#24615;&#33021;</td></tr><tr><td>`testOnReturn`</td><td>`spring.datasource.druid.test-on-return`</td><td>&#24402;&#36824;&#36830;&#25509;&#26102;&#26816;&#26597;&#36830;&#25509;&#65292;&#20250;&#24433;&#21709;&#24615;&#33021;</td></tr><tr><td>`testWhileIdle`</td><td>`spring.datasource.druid.test-while-idle`</td><td>&#26816;&#26597;&#31354;&#38386;&#30340;&#36830;&#25509;&#65292;&#20855;&#20307;&#30340;&#26816;&#26597;&#21457;&#29983;&#22312;&#33719;&#21462;&#26102;&#65292;&#23545;&#24615;&#33021;&#20960;&#20046;&#26080;&#24433;&#21709;</td></tr><tr><td>`filters`</td><td>`spring.datasource.druid.filters`</td><td>&#35201;&#37197;&#32622;&#30340;&#25554;&#20214;&#36807;&#28388;&#22120;&#21015;&#34920;</td></tr></table>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">2</span>&#36825;&#20010;&#31034;&#20363;&#20301;&#20110; ch6/datasource-demo &#39033;&#30446;&#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">3</span>&#36825;&#20010;&#31034;&#20363;&#20301;&#20110; ch6/druid-datasource-demo &#39033;&#30446;&#20013;&#12290;</p><h3 id="nav_point_93">6.1.2&#12288;&#25968;&#25454;&#28304;&#37197;&#32622;&#35814;&#35299;</h3><p>Spring Boot &#20026;&#20102;&#20943;&#23569;&#25968;&#25454;&#28304;&#30340;&#37197;&#32622;&#24037;&#20316;&#65292;&#20570;&#20102;&#22823;&#37327;&#30340;&#22522;&#30784;&#24037;&#20316;&#65292;&#27604;&#22914;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#25552;&#20379;&#20102;&#26041;&#20415;&#30340; <code>spring.datasource</code> &#36890;&#29992;&#37197;&#32622;&#21442;&#25968;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#25552;&#20379;&#20102;&#38024;&#23545;&#22810;&#31181;&#36830;&#25509;&#27744;&#30340;&#21333;&#25968;&#25454;&#28304;&#33258;&#21160;&#37197;&#32622;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#25552;&#20379;&#20102;&#38024;&#23545;&#20869;&#23884;&#25968;&#25454;&#24211;&#30340;&#29305;&#27530;&#33258;&#21160;&#37197;&#32622;&#12290;</li>
</ul><p>&#25509;&#19979;&#26469;&#23601;&#35753;&#25105;&#20204;&#20998;&#21035;&#26469;&#20102;&#35299;&#36825;&#20123;&#29305;&#24615;&#20197;&#21450;&#23427;&#20204;&#30340;&#23454;&#29616;&#21407;&#29702;&#12290;&#22312;&#26412;&#33410;&#30340;&#26368;&#21518;&#65292;&#20250;&#20197; MySQL &#20026;&#20363;&#65292;&#37197;&#32622;&#19968;&#20010;&#25968;&#25454;&#28304;&#12290;</p><ol>
<li><p><strong>&#25968;&#25454;&#28304;&#37197;&#32622;&#21442;&#25968;&#35814;&#35299;</strong></p>
<p>Spring Boot &#20026;&#25968;&#25454;&#28304;&#37197;&#32622;&#25552;&#20379;&#20102;&#19968;&#20010; <code>DataSourceProperties</code>&#65292;&#29992;&#20110;&#32465;&#23450; <code>spring.datasource</code> &#30340;&#37197;&#32622;&#20869;&#23481;&#12290;&#23427;&#30340;&#31867;&#23450;&#20041;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@ConfigurationProperties(prefix = "spring.datasource")
public class DataSourceProperties implements BeanClassLoaderAware, InitializingBean {}</code></pre>
<p>&#20043;&#21069;&#22312;&#20171;&#32461; HikariCP &#21644; Druid &#26102;&#65292;&#25105;&#20204;&#24050;&#32463;&#30475;&#21040;&#36807;&#19968;&#20123;&#37197;&#32622;&#39033;&#20102;&#65292;&#29616;&#22312;&#20877;&#36319;&#30528; <code>DataSourceProperties</code> &#37325;&#26032;&#35748;&#35782;&#19968;&#19979; Spring Boot &#25552;&#20379;&#30340;&#37197;&#32622;&#39033;&#65292;&#20855;&#20307;&#22914;&#34920; 6-3 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 6-3&#12288;Spring Boot &#25552;&#20379;&#30340;&#37096;&#20998;&#24120;&#29992; <code>spring.datasource</code> &#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.datasource.url</code></td><td></td><td>&#25968;&#25454;&#24211;&#30340; JDBC URL</td></tr><tr><td><code>spring.datasource.username</code></td><td></td><td>&#36830;&#25509;&#25968;&#25454;&#24211;&#30340;&#29992;&#25143;&#21517;</td></tr><tr><td><code>spring.datasource.password</code></td><td></td><td>&#36830;&#25509;&#25968;&#25454;&#24211;&#30340;&#23494;&#30721;</td></tr><tr><td><code>spring.datasource.name</code></td><td>&#20351;&#29992;&#20869;&#23884;&#25968;&#25454;&#24211;&#26102;&#20026; <code>testdb</code></td><td>&#25968;&#25454;&#28304;&#30340;&#21517;&#31216;</td></tr><tr><td><code>spring.datasource.jndi-name</code></td><td></td><td>&#33719;&#21462;&#25968;&#25454;&#28304;&#30340; JNDI &#21517;&#31216;</td></tr><tr><td><code>spring.datasource.type</code></td><td>&#26681;&#25454; CLASSPATH &#33258;&#21160;&#25506;&#27979;</td><td>&#36830;&#25509;&#27744;&#23454;&#29616;&#30340;&#20840;&#38480;&#23450;&#31867;&#21517;</td></tr><tr><td><code>spring.datasource.driver-class-name</code></td><td>&#26681;&#25454; URL &#33258;&#21160;&#25506;&#27979;</td><td>JDBC &#39537;&#21160;&#31867;&#30340;&#20840;&#38480;&#23450;&#31867;&#21517;</td></tr><tr><td><code>spring.datasource.generate-unique-name</code></td><td><code>true</code></td><td>&#26159;&#21542;&#38543;&#26426;&#29983;&#25104;&#25968;&#25454;&#28304;&#21517;&#31216;</td></tr></table>
<p>&#25105;&#20204;&#19968;&#33324;&#20250;&#37197;&#32622;&#34920; 6-3 &#20013;&#30340;&#21069;&#19977;&#20010;&#37197;&#32622;&#39033;&#65292;&#20877;&#32467;&#21512;&#19968;&#20123;&#36830;&#25509;&#27744;&#30340;&#37197;&#32622;&#65288;Spring Boot &#20869;&#32622;&#20102;&#23545; HikariCP&#12289;DBCP2 &#21644; Tomcat &#36830;&#25509;&#27744;&#30340;&#25903;&#25345;&#65289;&#65292;&#36824;&#26377;&#20854;&#20182;&#23545;&#24212;&#30340;&#37197;&#32622;&#65292;&#20998;&#21035;&#25918;&#22312;&#20102;&#22914;&#19979;&#21069;&#32512;&#30340;&#37197;&#32622;&#39033;&#20013;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>spring.datasource.hikari.*</code>&#65288;&#22312;&#20043;&#21069;&#30340;&#31456;&#33410;&#20013;&#24050;&#32463;&#35265;&#36807;&#19968;&#20123;&#20102;&#65289;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>spring.datasource.dbcp2.*</code>&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>spring.datasource.tomcat.*</code>&#12290;</li>
</ul>
<p>&#36824;&#26377;&#19968;&#20123;&#19982;&#21021;&#22987;&#21270;&#30456;&#20851;&#30340;&#37197;&#32622;&#65292;&#31245;&#21518;&#20877;&#20570;&#35828;&#26126;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#25968;&#25454;&#28304;&#33258;&#21160;&#37197;&#32622;&#35814;&#35299;</strong></p>
<p>Spring Boot &#30340;&#25968;&#25454;&#28304;&#33258;&#21160;&#37197;&#32622;&#65292;&#26159;&#19968;&#20010;&#24456;&#22909;&#30340;&#33258;&#21160;&#37197;&#32622;&#23454;&#29616;&#31034;&#33539;&#12290;&#25105;&#20204;&#36890;&#36807; <code>DataSourceAutoConfiguration</code> &#31867;&#21487;&#20197;&#23398;&#20064;&#21040;&#24456;&#22810;&#33258;&#21160;&#37197;&#32622;&#30340;&#25216;&#24039;&#65292;&#20363;&#22914;&#26465;&#20214;&#25511;&#21046;&#12289;&#20869;&#23884;&#37197;&#32622;&#31867;&#12289;&#23548;&#20837;&#20854;&#20182;&#37197;&#32622;&#31561;&#12290;</p>
<p><code>DataSourceAutoConfiguration</code> &#20250;&#20808;&#21028;&#26029;&#26159;&#21542;&#23384;&#22312; <code>DataSource</code> &#21644; <code>EmbeddedDatabaseType</code>&#65292;&#28385;&#36275;&#26465;&#20214;&#21017;&#23548;&#20837; <code>DataSourcePoolMetadataProvidersConfiguration</code> &#21644; <code>DataSourceInitializationConfiguration</code> &#20004;&#20010;&#37197;&#32622;&#31867;&#65292;&#21069;&#32773;&#37197;&#32622;&#36830;&#25509;&#27744;&#20803;&#25968;&#25454;&#25552;&#20379;&#32773;&#65292;&#21518;&#32773;&#36827;&#34892;&#25968;&#25454;&#28304;&#21021;&#22987;&#21270;&#37197;&#32622;&#12290;</p>
<p>&#25972;&#20010; <code>DataSourceAutoConfiguration</code> &#20998;&#20026;&#20004;&#20010;&#20869;&#23884;&#37197;&#32622;&#31867;&#8212;&#8212;&#20869;&#23884;&#25968;&#25454;&#24211;&#37197;&#32622;&#31867; <code>EmbeddedDatabaseConfiguration</code> &#21644;&#36830;&#25509;&#27744;&#25968;&#25454;&#28304;&#37197;&#32622;&#31867; <code>PooledDataSourceConfiguration</code>&#12290;&#19979;&#38754;&#26469;&#30475;&#19968;&#19979;&#36830;&#25509;&#27744;&#25968;&#25454;&#28304;&#30340;&#37197;&#32622;&#12290;</p>
<p><code>PooledDataSourceConfiguration</code> &#20250;&#30452;&#25509;&#23548;&#20837; <code>DataSourceConfiguration</code> &#20013;&#20851;&#20110; HikariCP&#12289;DBCP2&#12289;Tomcat &#21644;&#36890;&#29992;&#25968;&#25454;&#28304;&#30340;&#37197;&#32622;&#65292;&#38543;&#21518;&#36825;&#20123;&#37197;&#32622;&#31867;&#20877;&#26681;&#25454;&#33258;&#24049;&#30340;&#26465;&#20214;&#20915;&#23450;&#26159;&#21542;&#29983;&#25928;&#65307;&#27492;&#22806; <code>DataSourceJmxConfiguration</code> &#37197;&#32622;&#31867;&#20063;&#20250;&#26681;&#25454;&#26465;&#20214;&#23558;&#19981;&#21516;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#30340;&#20449;&#24687;&#21457;&#24067;&#21040; JMX &#31471;&#28857;&#19978;&#12290;</p>
<p>&#25105;&#20204;&#20197; HikariCP &#30340;&#33258;&#21160;&#37197;&#32622; <code>DataSourceConfiguration.Hikari</code> &#20026;&#20363;&#65292;&#26469;&#30475;&#19968;&#19979; Spring Boot &#26159;&#22914;&#20309;&#20026;&#25105;&#20204;&#33258;&#21160;&#37197;&#32622; <code>DataSource</code> &#30340;&#12290;&#20854;&#20182;&#31867;&#22411;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#30340;&#37197;&#32622;&#19982;&#23427;&#22823;&#21516;&#23567;&#24322;&#65292;&#19979;&#38754;&#26159;&#20855;&#20307;&#30340;&#20195;&#30721;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass(HikariDataSource.class)
@ConditionalOnMissingBean(DataSource.class)
@ConditionalOnProperty(name = "spring.datasource.type", havingValue = "com.zaxxer.hikari.
HikariDataSource", matchIfMissing = true)
static class Hikari {
    @Bean
    @ConfigurationProperties(prefix = "spring.datasource.hikari")
    HikariDataSource dataSource(DataSourceProperties properties) {
        HikariDataSource dataSource = createDataSource(properties, HikariDataSource.class);
        if (StringUtils.hasText(properties.getName())) {
            dataSource.setPoolName(properties.getName());
        }
        return dataSource;
    }
}</code></pre>
<p>&#39318;&#20808;&#65292;&#21028;&#26029; CLASSPATH &#20013;&#23384;&#22312; <code>HikariDataSource</code> &#31867;&#65292;&#24182;&#19988;&#23578;&#26410;&#37197;&#32622; <code>DataSource</code>&#12290;&#22914;&#26524;&#37197;&#32622;&#20102; <code>spring.datasource.type</code> &#24182;&#19988;&#26159; HikariCP &#30340;&#31867;&#65292;&#25110;&#32773;&#36825;&#20010;&#23646;&#24615;&#20026;&#31354;&#65292;&#21017;&#37197;&#32622;&#29983;&#25928;&#12290;</p>
<p>&#25509;&#30528;&#65292;&#21019;&#24314;&#19968;&#20010; <code>HikariDataSource</code> &#25968;&#25454;&#28304;&#23545;&#35937;&#65292;&#22914;&#26524;&#25351;&#23450;&#20102;&#25968;&#25454;&#28304;&#21517;&#31216;&#65292;&#21017;&#36827;&#34892;&#36171;&#20540;&#12290;</p>
<p>&#26368;&#21518;&#65292;&#36890;&#36807; <code>@ConfigurationProperties</code> &#23558; <code>spring.datasource.hikari.*</code> &#30340;&#23646;&#24615;&#37117;&#32465;&#23450;&#21040;&#36820;&#22238;&#30340; <code>HikariDataSource</code> &#23545;&#35937;&#19978;&#65292;&#36825;&#20010;&#23545;&#35937;&#23601;&#26159; Spring &#19978;&#19979;&#25991;&#20013;&#30340; <code>DataSource</code> Bean &#20102;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#20869;&#23884;&#25968;&#25454;&#24211;&#30340;&#29305;&#27530;&#36923;&#36753;</strong></p>
<p>&#22312;&#20043;&#21069;&#30340;&#31034;&#20363;&#20013;&#65292;&#25105;&#20204;&#20351;&#29992;&#20102; H2 &#20869;&#23884;&#25968;&#25454;&#24211;&#65292;&#23427;&#21487;&#20197;&#36731;&#26494;&#22320;&#23558;&#25152;&#26377;&#25968;&#25454;&#20445;&#23384;&#22312;&#26412;&#26426;&#20869;&#23384;&#20013; <span class="&#27880;&#37322;&#32534;&#21495;">4</span>&#65292;&#31243;&#24207;&#20851;&#38381;&#21518;&#65292;&#20869;&#23384;&#20013;&#30340;&#25968;&#25454;&#23601;&#28040;&#22833;&#20102;&#12290;&#22240;&#27492;&#65292;H2 &#29992;&#26469;&#20316;&#20026;&#27979;&#35797;&#25968;&#25454;&#24211;&#38750;&#24120;&#21512;&#36866;&#12290;&#25105;&#20204;&#22312;&#21518;&#32493;&#30340;&#31034;&#20363;&#20013;&#20063;&#20250;&#22823;&#37327;&#22320;&#20351;&#29992; H2&#12290;</p>
<p><code>EmbeddedDatabaseType</code> &#23450;&#20041;&#20102; Spring Boot &#20869;&#32622;&#25903;&#25345;&#30340;&#19977;&#31181;&#25968;&#25454;&#24211;&#65292;&#21363; HSQL&#12289;H2 &#21644; Derby&#65292;<code>EmbeddedDatabaseConnection</code> &#21017;&#20998;&#21035;&#23450;&#20041;&#20102;&#19977;&#32773;&#30340; JDBC &#39537;&#21160;&#31867;&#21644;&#29992;&#26469;&#21019;&#24314;&#20869;&#23384;&#25968;&#25454;&#24211;&#30340; JDBC URL&#12290;&#31995;&#32479;&#21551;&#21160;&#26102;&#20250;&#26681;&#25454; CLASSPATH &#26469;&#21028;&#26029;&#26159;&#21542;&#23384;&#22312;&#23545;&#24212;&#30340;&#39537;&#21160;&#31867;&#12290;&#38543;&#21518;&#65292;<code>EmbeddedDataSourceConfiguration.dataSource()</code> &#26041;&#27861;&#20250;&#26681;&#25454;&#21069;&#38754;&#30340;&#20449;&#24687;&#26469;&#21019;&#24314; <code>DataSource</code> &#23545;&#35937;&#12290;</p>
<p>&#21019;&#24314;&#23436;&#20869;&#23884;&#25968;&#25454;&#24211;&#30340; <code>DataSource</code> &#21518;&#65292;Spring Boot &#36824;&#20250;&#20026;&#25105;&#20204;&#36827;&#34892;&#25968;&#25454;&#24211;&#30340;&#21021;&#22987;&#21270;&#24037;&#20316;&#65292;&#25105;&#20204;&#21487;&#20197;&#22312;&#36825;&#20010;&#36807;&#31243;&#20013;&#24314;&#34920;&#65292;&#24182;&#23548;&#20837;&#21021;&#22987;&#30340;&#25968;&#25454;&#12290;&#21021;&#22987;&#21270;&#21160;&#20316;&#26159;&#30001; <code>DataSourceInitializer</code> &#31867;&#26469;&#23454;&#29616;&#30340;&#65292;&#23427;&#20250;&#26681;&#25454; <code>spring.sql.init.schema-locations</code> &#21644; <code>spring.sql.init.data-locations</code> &#36825;&#20004;&#20010;&#23646;&#24615;&#26469;&#21021;&#22987;&#21270;&#25968;&#25454;&#24211;&#20013;&#30340;&#34920;&#21644;&#25968;&#25454;&#65292;&#40664;&#35748;&#36890;&#36807;&#35835;&#21462; CLASSPATH &#20013;&#30340; schema.sql &#21644; data.sql &#25991;&#20214;&#26469;&#36827;&#34892;&#21021;&#22987;&#21270;&#12290;&#34920; 6-4 &#32599;&#21015;&#20102;&#19968;&#20123;&#19982;&#25968;&#25454;&#28304;&#21021;&#22987;&#21270;&#30456;&#20851;&#30340;&#37197;&#32622;&#39033; <span class="&#27880;&#37322;&#32534;&#21495;">5</span>&#12290;</p>
<p><strong>&#34920; 6-4&#12288;&#19982;&#25968;&#25454;&#28304;&#21021;&#22987;&#21270;&#30456;&#20851;&#30340;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#24403;&#21069;&#37197;&#32622;&#39033;</th><th>&#26087;&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.sql.init.mode</code></td><td><code>spring.datasource.initialization-mode</code></td><td><code>embedded</code></td><td>&#20309;&#26102;&#20351;&#29992; DDL &#21644; DML<sup><b>6</b></sup>&#33050;&#26412;&#21021;&#22987;&#21270;&#25968;&#25454;&#28304;&#65292;&#21487;&#36873;&#20540;&#20026; <code>embedded</code>&#12289;<code>always</code> &#21644; <code>never</code></td></tr><tr><td><code>spring.sql.init.platform</code></td><td><code>spring.datasource.platform</code></td><td><code>all</code></td><td>&#33050;&#26412;&#23545;&#24212;&#30340;&#24179;&#21488;&#65292;&#29992;&#26469;&#25340;&#25509;&#26368;&#32456;&#30340; SQL &#33050;&#26412;&#25991;&#20214;&#21517;&#65292;&#20363;&#22914;&#65292;schema-{platform}.sql</td></tr><tr><td><code>spring.sql.init.separator</code></td><td><code>spring.datasource.separator</code></td><td><code>;</code></td><td>&#33050;&#26412;&#20013;&#30340;&#35821;&#21477;&#20998;&#38548;&#31526;</td></tr><tr><td><code>spring.sql.init.encoding</code></td><td><code>spring.datasource.sql-script-encoding</code></td><td></td><td>SQL &#33050;&#26412;&#30340;&#32534;&#30721;</td></tr><tr><td><code>spring.sql.init.continue-on-error</code></td><td><code>spring.datasource.continue-on-error</code></td><td><code>false</code></td><td>&#21021;&#22987;&#21270;&#36807;&#31243;&#20013;&#25253;&#38169;&#26159;&#21542;&#20572;&#27490;&#21021;&#22987;&#21270;</td></tr><tr><td><code>spring.sql.init.schema-locations</code></td><td><code>spring.datasource.schema</code></td><td></td><td>&#21021;&#22987;&#21270;&#29992;&#30340; DDL &#33050;&#26412;&#65292;&#40664;&#35748;&#20250;&#29992; schema.sql</td></tr><tr><td><code>spring.sql.init.username</code></td><td><code>spring.datasource.schema-username</code></td><td></td><td>DDL &#35821;&#21477;&#36816;&#34892;&#25152;&#29992;&#30340;&#29992;&#25143;&#21517;&#65292;&#22914;&#19982;&#36830;&#25509;&#29992;&#30340;&#19981;&#19968;&#26679;&#65292;&#21487;&#22312;&#27492;&#25351;&#23450;</td></tr><tr><td><code>spring.sql.init.password</code></td><td><code>spring.datasource.schema-password</code></td><td></td><td>DDL &#35821;&#21477;&#36816;&#34892;&#25152;&#29992;&#30340;&#23494;&#30721;&#65292;&#22914;&#19982;&#36830;&#25509;&#29992;&#30340;&#19981;&#19968;&#26679;&#65292;&#21487;&#22312;&#27492;&#25351;&#23450;</td></tr><tr><td><code>spring.sql.init.data-locations</code></td><td><code>spring.datasource.data</code></td><td></td><td>&#21021;&#22987;&#21270;&#29992;&#30340; DML &#33050;&#26412;&#65292;&#40664;&#35748;&#20250;&#29992; data.sql</td></tr><tr><td><code>spring.sql.init.username</code></td><td><code>spring.datasource.data-username</code></td><td></td><td>DML &#35821;&#21477;&#36816;&#34892;&#25152;&#29992;&#30340;&#29992;&#25143;&#21517;&#65292;&#22914;&#19982;&#36830;&#25509;&#29992;&#30340;&#19981;&#19968;&#26679;&#65292;&#21487;&#22312;&#27492;&#25351;&#23450;</td></tr><tr><td><code>spring.sql.init.password</code></td><td><code>spring.datasource.data-password</code></td><td></td><td>DML &#35821;&#21477;&#36816;&#34892;&#25152;&#29992;&#30340;&#23494;&#30721;&#65292;&#22914;&#19982;&#36830;&#25509;&#29992;&#30340;&#19981;&#19968;&#26679;&#65292;&#21487;&#22312;&#27492;&#25351;&#23450;</td></tr></table>
<blockquote>
<p><sup><b>6</b></sup>DDL &#26159;&#25968;&#25454;&#23450;&#20041;&#35821;&#35328;&#65292;&#19968;&#33324;&#23545;&#24212;&#19982;&#34920;&#32467;&#26500;&#30456;&#20851;&#30340;&#20869;&#23481;&#65307;DML &#26159;&#25968;&#25454;&#25805;&#20316;&#35821;&#35328;&#65292;&#19968;&#33324;&#23545;&#24212;&#19982;&#34920;&#25968;&#25454;&#24211;&#22686;&#21024;&#25913;&#26597;&#30456;&#20851;&#30340;&#25805;&#20316;&#20869;&#23481;&#12290;</p>
</blockquote>
<p>&#31532;&#19968;&#20010;&#37197;&#32622;&#39033;&#23601;&#21578;&#35785;&#25105;&#20204;&#65292;Spring Boot &#21482;&#26159;&#40664;&#35748;&#20026;&#20869;&#23884;&#25968;&#25454;&#24211;&#20570;&#21021;&#22987;&#21270;&#65292;&#20854;&#23454;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#23545;&#20219;&#24847;&#25968;&#25454;&#24211;&#36827;&#34892;&#21021;&#22987;&#21270;&#12290;&#19981;&#36807;&#22312;&#23454;&#38469;&#29983;&#20135;&#20013;&#65292;&#36825;&#31181;&#21021;&#22987;&#21270;&#24037;&#20316;&#24456;&#23569;&#30001;&#31995;&#32479;&#26469;&#23454;&#29616;&#65292;&#26356;&#22810;&#30340;&#26159;&#36890;&#36807;&#19968;&#23450;&#30340;&#27969;&#31243;&#65292;&#32463; DBA &#23457;&#25209;&#21518;&#33258;&#21160;&#25110;&#20154;&#24037;&#36827;&#34892;&#21464;&#26356;&#30340;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#37197;&#32622;&#19968;&#20010;&#36830;&#25509; MySQL &#30340;&#25968;&#25454;&#28304;</strong></p>
<p>&#22312;&#24037;&#20316;&#20013;&#65292;&#25105;&#20204;&#30340;&#31995;&#32479;&#19968;&#33324;&#37117;&#20250;&#36830;&#25509;&#31867;&#20284; MySQL&#12289;Oracle &#36825;&#26679;&#30340;&#25968;&#25454;&#24211;&#65292;&#24456;&#23569;&#20250;&#29992; H2&#12289;Derby&#65292;&#25152;&#20197;&#22312;&#26412;&#33410;&#30340;&#26368;&#21518;&#65292;&#25105;&#20204;&#20197; MySQL &#20026;&#20363;&#65292;&#30475;&#30475; Spring Boot &#31243;&#24207;&#35813;&#22914;&#20309;&#26469;&#36830;&#25509;&#29983;&#20135;&#25968;&#25454;&#24211;&#12290;</p>
<p>&#35201;&#36830;&#25509;&#25968;&#25454;&#24211;&#65292;&#39318;&#20808;&#38656;&#35201;&#22312; pom.xml &#30340; <code>&lt;dependencies/&gt;</code> &#20013;&#21152;&#20837; MySQL &#30340; JDBC &#39537;&#21160;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#28155;&#21152;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;mysql&lt;/groupId&gt;
    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>spring-boot-dependencies &#20250;&#33258;&#21160;&#20026;&#25105;&#20204;&#31649;&#29702; mysql-connector-java &#30340;&#29256;&#26412;&#12290;&#20363;&#22914;&#65292;Spring Boot 2.6.3 &#20013;&#29992;&#30340;&#23601;&#26159; mysql-connector-java 8.0.28&#12290;&#38543;&#21518;&#65292;&#25105;&#20204;&#22312; <code>application.properties</code> &#20013;&#28155;&#21152;&#19982;&#25968;&#25454;&#28304;&#30456;&#20851;&#30340;&#37197;&#32622;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 6-4<span class="&#27880;&#37322;&#32534;&#21495;">7</span> &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-4</strong>&#12288;<code>application.properties</code> &#20013; MySQL &#25968;&#25454;&#28304;&#30340;&#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.datasource.url=jdbc:mysql://localhost/binary-tea?useUnicode=true&amp;characterEncoding=utf8
spring.datasource.username=binary-tea
spring.datasource.password=binary-tea
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10</code></pre>
<p>&#36825;&#20010;&#37197;&#32622;&#20250;&#36830;&#25509;&#26412;&#26426;&#23433;&#35013;&#30340; MySQL&#65292;&#31471;&#21475;&#26159;&#40664;&#35748;&#30340; <code>3306</code>&#65292;&#36830;&#25509;&#30340;&#25968;&#25454;&#24211;&#26159; <code>binary-tea</code>&#65292;&#29992;&#25143;&#21517;&#21644;&#23494;&#30721;&#20063;&#26159; <code>binary-tea</code>&#12290;</p>
<blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#22312;&#29983;&#20135;&#29615;&#22659;&#35831;&#19981;&#35201;&#20351;&#29992;&#36825;&#26679;&#30340;&#8220;&#24369;&#23494;&#30721;&#8221;&#65292;&#32780;&#19988;&#23494;&#30721;&#19981;&#35201;&#29992;&#26126;&#25991;&#37197;&#32622;&#22312;&#25991;&#20214;&#20013;&#12290;</p>
</blockquote>
<p>&#38543;&#21518;&#65292;&#23545;&#27979;&#35797;&#20195;&#30721;&#31245;&#20316;&#20462;&#25913;&#65292;&#35753;&#23427;&#26816;&#26597;&#19968;&#19979;&#25105;&#20204;&#26159;&#21542;&#25104;&#21151;&#36830;&#25509;&#20102; MySQL&#12290;&#20855;&#20307;&#35265;&#20195;&#30721;&#31034;&#20363; 6-5&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-5</strong>&#12288;<code>DatasourceDemoApplicationTests</code> &#27979;&#35797;&#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class DatasourceDemoApplicationTests {
    @Autowired
    private ApplicationContext applicationContext;
    @Value("${spring.datasource.url}")
    private String jdbcUrl;

    @Test
    void testDataSource() throws SQLException {
        assertTrue(applicationContext.containsBean("dataSource"));
        DataSource dataSource = applicationContext.getBean("dataSource", DataSource.class);
        assertTrue(dataSource instanceof HikariDataSource);

        HikariDataSource hikari = (HikariDataSource) dataSource;
        assertEquals(20, hikari.getMaximumPoolSize());
        assertEquals(10, hikari.getMinimumIdle());
        assertEquals("com.mysql.cj.jdbc.Driver", hikari.getDriverClassName());
        assertEquals(jdbcUrl, hikari.getJdbcUrl());

        Connection connection = hikari.getConnection();
        assertNotNull(connection);
        connection.close();
    }
}</code></pre>
<p>&#36890;&#36807;&#36825;&#20010;&#27979;&#35797;&#65292;&#25105;&#20204;&#21487;&#20197;&#30475;&#21040; Spring Boot &#26681;&#25454;&#25105;&#20204;&#30340; JDBC URL &#21644; CLASSPATH &#33258;&#21160;&#25512;&#26029;&#20986;&#20102;&#25152;&#38656;&#30340; JDBC &#39537;&#21160;&#31867;&#65292;&#24182;&#23558;&#20854;&#35774;&#32622;&#20026;&#20102; <code>com.mysql.cj.jdbc.Driver</code>&#12290;&#25105;&#20204;&#20063;&#21487;&#20197;&#33258;&#24049;&#26469;&#21019;&#24314; <code>DataSource</code> Bean&#65292;HikariCP &#26412;&#36523;&#20063;&#33021;&#33258;&#24049;&#26469;&#36873;&#25321;&#39537;&#21160;&#65292;&#20294;&#22914;&#26524;&#27492;&#26102; <code>driverClassName</code> &#20026;&#31354;&#65292;&#21017;&#21487;&#20197;&#21435;&#25481;&#37027;&#20010;&#21028;&#26029;&#12290;&#20195;&#30721;&#31034;&#20363; 6-6 &#26159;&#33258;&#24049;&#21019;&#24314; Bean &#30340;&#20195;&#30721;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-6</strong>&#12288;&#33258;&#24049;&#37197;&#32622; <code>HikariDataSource</code> Bean &#30340;&#20195;&#30721;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
@ConfigurationProperties("spring.datasource.hikari")
public DataSource dataSource(DataSourceProperties properties) {
    HikariDataSource dataSource = new HikariDataSource();
    dataSource.setJdbcUrl(properties.getUrl());
    dataSource.setUsername(properties.getUsername());
    dataSource.setPassword(properties.getPassword());
    return dataSource;
}</code></pre>
<p>&#22914;&#26524;&#20351;&#29992; XML &#30340;&#26041;&#24335;&#65292;&#21487;&#33021;&#20250;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    https://www.springframework.org/schema/beans/spring-beans.xsd"&gt;

    &lt;bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"&gt;
        &lt;property name="jdbcUrl" ref="${spring.datasource.url}"/&gt;
        &lt;property name="username" ref="${spring.datasource.username}"/&gt;
        &lt;property name="password" ref="${spring.datasource.password}"/&gt;
        &lt;property name="maxPoolSize" ref="${spring.datasource.hikari.max-pool-size}"/&gt;
        &lt;property name="minIdle" ref="${spring.datasource.hikari.min-idle}"/&gt;
        &lt;!-- &#20854;&#20182;&#37197;&#32622;&#30465;&#30053; --&gt;
    &lt;/bean&gt;
&lt;/beans&gt;</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#20351;&#29992; Docker &#31616;&#21270;&#26412;&#22320;&#24320;&#21457;&#29615;&#22659;&#30340;&#20934;&#22791;&#24037;&#20316;</strong></p>
<p>&#38543;&#30528;&#23481;&#22120;&#25216;&#26415;&#30340;&#26222;&#21450;&#65292;&#22312;&#29983;&#20135;&#21644;&#27979;&#35797;&#29615;&#22659;&#20351;&#29992; Kubernetes &#26089;&#24050;&#19981;&#26159;&#20160;&#20040;&#26032;&#40092;&#20107;&#20102;&#12290;&#23481;&#22120;&#20013;&#19981;&#20165;&#21253;&#21547;&#20102;&#25105;&#20204;&#30340;&#24037;&#31243;&#65292;&#36824;&#21253;&#21547;&#20102;&#24037;&#31243;&#36816;&#34892;&#25152;&#38656;&#30340;&#25972;&#20010;&#29615;&#22659;&#12290;&#32780;&#19988;&#65292;&#23481;&#22120;&#25216;&#26415;&#30456;&#27604;&#20256;&#32479;&#30340;&#34394;&#25311;&#26426;&#26356;&#33410;&#30465;&#36164;&#28304;&#65292;&#36816;&#34892;&#25928;&#29575;&#26356;&#39640;&#65292;&#26159;&#20132;&#20184;&#19982;&#36816;&#34892;&#30340;&#29702;&#24819;&#20043;&#36873;&#12290;</p>
<p>Docker &#26159;&#30446;&#21069;&#27604;&#36739;&#24120;&#29992;&#30340;&#23481;&#22120;&#65292;&#23427;&#25552;&#20379;&#20102;&#38024;&#23545;&#19981;&#21516;&#25805;&#20316;&#31995;&#32479;&#30340;&#25903;&#25345;&#65292;&#21487;&#20197;&#38750;&#24120;&#26041;&#20415;&#22320;&#22312;&#26412;&#22320;&#25645;&#24314;&#36215;&#19968;&#22871;&#29615;&#22659;&#12290;&#22312;&#24320;&#21457;&#26102;&#65292;&#25105;&#20204;&#32463;&#24120;&#38656;&#35201;&#25645;&#24314;&#21508;&#31181;&#22522;&#30784;&#35774;&#26045;&#65292;&#27604;&#22914;&#65292;MySQL &#25968;&#25454;&#24211;&#12289;Redis&#12289;Zookeeper &#31561;&#12290;&#26377;&#20102; Docker&#65292;&#25645;&#24314;&#36825;&#20123;&#22522;&#30784;&#35774;&#26045;&#23601;&#21464;&#25104;&#20102;&#31616;&#21333;&#30340;&#20960;&#26465;&#21629;&#20196;&#12290;</p>
<p>&#20197;&#19978;&#38754;&#25552;&#21040;&#30340; MySQL &#20026;&#20363;&#65292;&#35201;&#22312;&#26412;&#26426;&#20174;&#22836;&#24320;&#22987;&#25645;&#24314;&#19968;&#22871; MySQL&#65292;&#21482;&#38656;&#31616;&#21333;&#30340;&#20004;&#21477;&#21629;&#20196;&#12290;</p>
<p>&#39318;&#20808;&#65292;&#36890;&#36807; <code>docker pull</code> &#21629;&#20196;&#20174;&#20179;&#24211; <span class="&#27880;&#37322;&#32534;&#21495;">8</span>&#20013;&#33719;&#21462; MySQL &#30340;&#38236;&#20687;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; docker pull mysql</code></pre>
<p>&#25509;&#30528;&#65292;&#26681;&#25454;&#23448;&#26041;&#38236;&#20687;&#30340;&#35828;&#26126;&#36816;&#34892; MySQL&#65292;&#24182;&#36827;&#34892;&#30456;&#24212;&#30340;&#21021;&#22987;&#21270;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; docker run --name binary-tea-mysql -d -p 3306:3306 -v ~/docker-data/mysql/binary-tea:/var/lib/mysql -e MYSQL_DATABASE=binary-tea -e MYSQL_USER=binary-tea -e MYSQL_PASSWORD=binary-tea -e MYSQL_ROOT_PASSWORD=root_password mysql</code></pre>
<p>&#36825;&#37324;&#65292;&#25105;&#20204;&#31616;&#21333;&#35828;&#26126;&#19968;&#19979; <code>docker run</code> &#30340;&#21629;&#20196;&#65292;&#21629;&#20196;&#26368;&#21518;&#30340; <code>mysql</code> &#26159;&#38236;&#20687;&#21517;&#65292;&#21069;&#38754;&#20960;&#20010;&#21442;&#25968;&#30340;&#20316;&#29992;&#35265;&#34920; 6-5&#12290;</p>
<p><strong>&#34920; 6-5&#12288;<code>docker run</code> &#21629;&#20196;&#20013;&#20960;&#20010;&#21442;&#25968;&#30340;&#20316;&#29992;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;</th><th>&#20316;&#29992;</th></tr><tr><td><code>--name</code></td><td>&#25351;&#23450;&#20102;&#36816;&#34892;&#21518;&#23481;&#22120;&#30340;&#21517;&#31216;&#65292;&#22914;&#26524;&#19981;&#25351;&#23450;&#30340;&#35805;&#65292;Docker &#20250;&#33258;&#21160;&#29983;&#25104;&#19968;&#20010;</td></tr><tr><td><code>-d</code></td><td>&#22312;&#21518;&#21488;&#36816;&#34892;&#23481;&#22120;</td></tr><tr><td><code>-p</code></td><td>&#23558;&#23481;&#22120;&#20013;&#30340;&#31471;&#21475;&#26144;&#23556;&#21040;&#23487;&#20027;&#26426;&#19978;&#65292;&#20363;&#22914;&#65292;&#36825;&#37324;&#23601;&#21487;&#20197;&#36890;&#36807;&#26412;&#26426;&#30340; 3306 &#31471;&#21475;&#26469;&#35775;&#38382;&#23481;&#22120;&#30340; 3306 &#31471;&#21475;</td></tr><tr><td><code>-v</code></td><td>&#23558;&#23487;&#20027;&#26426;&#30340;&#26576;&#20010;&#30446;&#24405;&#25346;&#36733;&#21040;&#23481;&#22120;&#20013;&#65292;&#20363;&#22914;&#65292;&#36825;&#37324;&#23601;&#25226;&#26412;&#26426;&#30340; ~/docker-data/mysql/binary-tea &#30446;&#24405;&#25346;&#36733;&#21040;&#20102;&#23481;&#22120;&#37324;</td></tr><tr><td><code>-e</code></td><td>&#29992;&#26469;&#25351;&#23450;&#23481;&#22120;&#30340;&#29615;&#22659;&#21464;&#37327;</td></tr></table>
</blockquote>
<p>&#38500;&#20102; <code>docker run</code>&#65292;&#24120;&#29992;&#30340;&#21629;&#20196;&#36824;&#26377; <code>docker stop</code>&#12289;<code>docker start</code> &#21644; <code>docker ps</code>&#12290;<code>docker stop</code> &#29992;&#26469;&#20572;&#27490;&#36816;&#34892;&#20013;&#30340;&#23481;&#22120;&#65292;<code>docker start</code> &#21017;&#26159;&#23558;&#20572;&#27490;&#36816;&#34892;&#30340;&#23481;&#22120;&#20877;&#21551;&#21160;&#36215;&#26469;&#65292;&#20363;&#22914;&#65292;&#21487;&#20197;&#29992; <code>docker stop binary-tea-mysql</code> &#26469;&#20572;&#27490;&#21018;&#25165;&#30001; <code>docker run</code> &#21019;&#24314;&#30340;&#23481;&#22120;&#12290;<code>docker ps</code> &#21629;&#20196;&#21487;&#20197;&#26597;&#30475;&#24403;&#21069;&#27491;&#22312;&#36816;&#34892;&#30340;&#23481;&#22120;&#12290;</p>
<p>Docker &#28041;&#21450;&#30340;&#20869;&#23481;&#38750;&#24120;&#22810;&#65292;&#22914;&#26524;&#22823;&#23478;&#24863;&#20852;&#36259;&#30340;&#35805;&#65292;&#21487;&#20197;&#21069;&#24448;&#20854;&#23448;&#26041;&#32593;&#31449;&#20102;&#35299;&#26356;&#22810;&#20449;&#24687;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">4</span>H2 &#20063;&#25903;&#25345;&#23558;&#25968;&#25454;&#20445;&#23384;&#22312;&#25991;&#20214;&#20013;&#65292;&#25110;&#32773;&#20197;&#29420;&#31435;&#36827;&#31243;&#30340;&#26041;&#24335;&#25552;&#20379;&#26381;&#21153;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">5</span>&#20174; Spring Boot 2.5 &#24320;&#22987;&#65292;&#19982;&#21021;&#22987;&#21270;&#30456;&#20851;&#30340;&#37197;&#32622;&#39033;&#37117;&#31227;&#21040;&#20102; <code>spring.sql.init</code> &#19979;&#65292;&#34920; 6-4 &#20013;&#21015;&#20986;&#20102;&#26032;&#26087;&#37197;&#32622;&#39033;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">7</span>&#36825;&#20010;&#37096;&#20998;&#30340;&#31034;&#20363;&#22312; ch6/mysql-datasource-demo &#39033;&#30446;&#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">8</span>Docker &#26377;&#19968;&#20010;&#23448;&#26041;&#30340;&#20179;&#24211;&#65292;&#21363; Docker Hub&#65292;&#25105;&#20204;&#21487;&#20197;&#22312;&#20854;&#20013;&#25214;&#21040;&#25152;&#38656;&#30340;&#38236;&#20687;&#65292;&#19968;&#33324;&#30001;&#36719;&#20214;&#23448;&#26041;&#25552;&#20379;&#30340;&#38236;&#20687;&#22312;&#39029;&#38754;&#19978;&#37117;&#20250;&#26377;&#19968;&#20123;&#20351;&#29992;&#35828;&#26126;&#65292;&#27604;&#22914; MySQL&#65288;_/mysql&#65289;&#30340;&#23448;&#26041;&#20179;&#24211;&#20013;&#23601;&#26377;&#35814;&#32454;&#30340;&#21629;&#20196;&#35299;&#37322;&#12290;&#20174; Docker Hub &#19979;&#36733;&#38236;&#20687;&#65288;image&#65289;&#26377;&#26102;&#20250;&#27604;&#36739;&#24930;&#65292;&#22312;&#22269;&#20869;&#21487;&#20197;&#32771;&#34385;&#20351;&#29992;&#38463;&#37324;&#20113;&#12289;&#33150;&#35759;&#20113;&#25110;&#20013;&#31185;&#22823;&#30340;&#22269;&#20869;&#38236;&#20687;&#65288;mirror&#65289;&#31449;&#28857;&#12290;</p><h2 id="nav_point_94">6.2&#12288;&#20351;&#29992; JDBC &#25805;&#20316;&#25968;&#25454;&#24211;</h2><p>&#22312;&#24314;&#31435;&#20102;&#25968;&#25454;&#28304;&#20043;&#21518;&#65292;&#24819;&#35201;&#25805;&#20316;&#25968;&#25454;&#65292;&#26368;&#31616;&#21333;&#30340;&#21150;&#27861;&#23601;&#26159;&#20351;&#29992; JDBC &#25552;&#20379;&#30340;&#25509;&#21475;&#65292;&#27491;&#22914; 6.1 &#33410;&#24320;&#22836;&#37027;&#26679;&#12290;&#20294;&#20351;&#29992;&#21407;&#29983; API &#38656;&#35201;&#20570;&#24456;&#22810;&#27169;&#26495;&#21270;&#30340;&#24037;&#20316;&#65292;&#32780;&#19988;&#22312;&#19968;&#20123;&#32454;&#33410;&#19978;&#22914;&#26524;&#22788;&#29702;&#19981;&#24403;&#20063;&#20250;&#36896;&#25104;&#19968;&#20123;&#40635;&#28902;&#12290;Spring Framework &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#19968;&#25972;&#22871;&#20851;&#20110; JDBC &#30340;&#23553;&#35013;&#65292;Spring Boot &#26356;&#26159;&#36148;&#24515;&#22320;&#25552;&#20379;&#20102;&#30456;&#20851;&#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#22312;&#26412;&#33410;&#20013;&#65292;&#25105;&#20204;&#23601;&#26469;&#20102;&#35299;&#19968;&#20123;&#19982;&#25968;&#25454;&#25805;&#20316;&#30456;&#20851;&#30340;&#20869;&#23481;&#12290;</p><p>&#35828;&#36215; JDBC &#25805;&#20316;&#65292;&#26368;&#22522;&#26412;&#30340;&#23601;&#26159;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#65292;&#20294;&#26080;&#35770;&#26159;&#20160;&#20040;&#25805;&#20316;&#65292;&#37117;&#36981;&#24490;&#19968;&#20010;&#22522;&#26412;&#30340;&#27969;&#31243;&#65306;</p><p>(1) &#33719;&#21462; <code>Connection</code> &#36830;&#25509;&#65307;</p><p>(2) &#36890;&#36807; <code>Connection</code> &#21019;&#24314; <code>Statement</code> &#25110;&#32773; <code>PreparedStatement</code>&#65307;</p><p>(3) &#25191;&#34892;&#20855;&#20307;&#30340; SQL &#25805;&#20316;&#65307;</p><p>(4) &#20851;&#38381; <code>Statement</code> &#25110;&#32773; <code>PreparedStatement</code>&#65307;</p><p>(5) &#20851;&#38381; <code>Connection</code>&#12290;</p><p>&#21487;&#20197;&#30475;&#21040;&#65292;&#20854;&#20013;&#21482;&#26377;&#31532; (3) &#27493;&#26159;&#19982;&#25105;&#20204;&#30340;&#36923;&#36753;&#26377;&#20851;&#30340;&#65292;&#20854;&#20182;&#30340;&#27493;&#39588;&#37117;&#26159;&#22522;&#26412;&#19968;&#26679;&#30340;&#65292;GoF 23 &#20013;&#30340;&#27169;&#26495;&#27169;&#24335;&#23601;&#38750;&#24120;&#36866;&#29992;&#36825;&#31181;&#24773;&#20917;&#12290;&#23454;&#38469;&#19978;&#65292;Spring Framework &#20063;&#26159;&#36825;&#20040;&#20570;&#30340;&#65292;&#23427;&#20026;&#25105;&#20204;&#25552;&#20379;&#20102; <code>JdbcTemplate</code> &#21644; <code>NamedParameterJdbcTemplate</code> &#20004;&#20010;&#27169;&#26495;&#31867;&#65292;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#23427;&#20204;&#36827;&#34892;&#21508;&#31181; SQL &#25805;&#20316;&#12290;</p><p>&#25509;&#19979;&#26469;&#65292;&#35753;&#25105;&#20204;&#20197; <code>JdbcTemplate</code> &#20026;&#20363;&#26469;&#20102;&#35299;&#19979;&#22914;&#20309;&#36890;&#36807;&#27169;&#26495;&#31867;&#36827;&#34892;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#12290;</p><h3 id="nav_point_95">6.2.1&#12288;&#26597;&#35810;&#31867;&#25805;&#20316;</h3><p><code>JdbcTemplate</code> &#20013;&#25552;&#20379;&#20102;&#24456;&#22810;&#21442;&#25968;&#19982;&#36820;&#22238;&#31867;&#22411;&#30340; <code>query</code> &#21069;&#32512;&#26041;&#27861;&#65292;&#20854;&#20013;&#65292;&#27604;&#36739;&#24120;&#29992;&#30340;&#26159; <code>query()</code> &#21644; <code>queryForObject()</code>&#12290;&#23427;&#20204;&#20063;&#26377;&#24456;&#22810;&#21442;&#25968;&#21644;&#36820;&#22238;&#31867;&#22411;&#65292;&#26412;&#33410;&#20013;&#21482;&#20250;&#20171;&#32461;&#20854;&#20013;&#30340;&#20960;&#20010;&#65292;&#20854;&#20182;&#30340;&#21487;&#20197;&#36890;&#36807; JavaDoc &#25110;&#32773; <code>JdbcTemplate</code> &#30340;&#20195;&#30721;&#26469;&#20102;&#35299;&#12290;&#29616;&#22312;&#65292;&#32487;&#32493;&#20197;&#25105;&#20204;&#30340;&#22902;&#33590;&#24215;&#31995;&#32479;&#20026;&#20363;&#65292;&#28436;&#31034;&#19968;&#19979; JDBC &#30456;&#20851;&#30340;&#25805;&#20316;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#20551;&#35774;&#65292;&#39038;&#23458;&#36827;&#24215;&#28857;&#39278;&#21697;&#65292;&#25105;&#20204;&#38656;&#35201;&#20934;&#22791;&#19968;&#20221;&#33756;&#21333;&#65292;&#20854;&#20013;&#21253;&#21547;&#39278;&#21697;&#30340;&#21517;&#31216;&#21644;&#20215;&#26684;&#12290;&#27492;&#22788;&#65292;&#38656;&#35201;&#25552;&#20379;&#20004;&#20010;&#26597;&#35810;&#26041;&#27861;&#65292;&#19968;&#20010;&#29992;&#26469;&#26597;&#35810;&#33756;&#21333;&#20013;&#30340;&#26465;&#30446;&#24635;&#25968;&#65292;&#24403;&#26465;&#30446;&#24635;&#25968;&#22810;&#30340;&#26102;&#20505;&#65292;&#21487;&#20197;&#35753;&#39038;&#23458;&#24863;&#35273;&#25105;&#20204;&#24215;&#20869;&#39278;&#21697;&#36873;&#25321;&#22810;&#26679;&#21270;&#65292;&#26465;&#30446;&#24635;&#25968;&#23569;&#30340;&#26102;&#20505;&#65292;&#21487;&#20197;&#35828;&#25105;&#20204;&#21482;&#20570;&#31934;&#21697;&#65307;&#21478;&#19968;&#20010;&#29992;&#26469;&#26597;&#35810;&#33756;&#21333;&#30340;&#26126;&#32454;&#65292;&#22312;&#21551;&#21160;&#26102;&#25171;&#21360;&#19968;&#19979;&#24215;&#37324;&#30340;&#33756;&#21333;&#12290;</p>
</blockquote><p>&#20197;&#31532; 5 &#31456;&#30340; binarytea-endpoint &#20363;&#23376;&#20316;&#20026;&#22522;&#30784;&#65292;&#25105;&#20204;&#26032;&#24314;&#19968;&#20010; <code>binarytea-jdbc</code> &#39033;&#30446;&#65292;&#33756;&#21333;&#20449;&#24687;&#20250;&#34987;&#20445;&#23384;&#22312;&#21517;&#20026; <code>t_menu</code> &#30340;&#34920;&#20013;&#65292;&#24182;&#25552;&#20379;&#30456;&#24212;&#30340;&#25509;&#21475;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">9</span> &#22312;&#39033;&#30446;&#30340; pom.xml &#25991;&#20214;&#20381;&#36182;&#20013;&#22686;&#21152;&#22914;&#19979;&#20869;&#23481;&#65292;&#20998;&#21035;&#26159; Spring Boot &#30340; JDBC &#20381;&#36182;&#12289;H2 &#25968;&#25454;&#24211;&#20381;&#36182;&#20197;&#21450; Lombok&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">9</span>&#25972;&#20010;&#20363;&#23376;&#25918;&#22312; ch6/binarytea-jdbc &#39033;&#30446;&#20013;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.h2database&lt;/groupId&gt;
    &lt;artifactId&gt;h2&lt;/artifactId&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
    &lt;artifactId&gt;lombok&lt;/artifactId&gt;
    &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;</code></pre><p>&#20808;&#20026;&#33756;&#21333;&#26465;&#30446;&#21019;&#24314;&#19968;&#20010;&#23545;&#24212;&#30340;&#27169;&#22411;&#65288;Model&#65289;&#31867;&#65292;&#20854;&#20013;&#30340;&#20869;&#23481;&#19982;&#25968;&#25454;&#34920;&#32467;&#26500;&#19968;&#19968;&#23545;&#24212;&#12290;&#22312;&#21518;&#32493;&#25805;&#20316;&#26102;&#65292;&#23427;&#21487;&#20197;&#23558;&#26597;&#35810;&#25152;&#24471;&#32467;&#26524;&#36716;&#25442;&#20026;&#36825;&#20010;&#31867;&#22411;&#65292;&#36825;&#26679;&#26356;&#20415;&#20110;&#20351;&#29992;&#65292;&#20063;&#26131;&#20110;&#29702;&#35299;&#65292;&#20855;&#20307;&#35265;&#20195;&#30721;&#31034;&#20363; 6-7&#12290;&#20854;&#20013;&#65292;&#25105;&#20204;&#36890;&#36807; Lombok &#27880;&#35299;&#20943;&#23569;&#20102;&#22823;&#37327;&#26041;&#27861;&#20195;&#30721;&#30340;&#32534;&#20889;&#24037;&#20316;&#12290;</p><blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#35831;&#21153;&#24517;&#20107;&#20808;&#22312; IDEA &#20013;&#23433;&#35013; Lombok &#25554;&#20214;&#12290;</p>
</blockquote><p>&#160;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-7</strong>&#12288;<code>MenuItem</code> &#31867;&#30340;&#22768;&#26126;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>package learning.spring.binarytea.model;

// &#30465;&#30053; import

@Builder
@Getter
@Setter
@ToString
public class MenuItem {
    private Long id;
    private String name;
    private String size;
    private BigDecimal price; // &#26242;&#26102;&#29992;BigDecimal&#34920;&#31034;&#37329;&#39069;
    private Date createTime;
    private Date updateTime;
}</code></pre><p>&#20027;&#35201;&#30340;&#26597;&#35810;&#36923;&#36753;&#37117;&#20250;&#25918;&#22312; <code>MenuRepository</code> &#20013;&#65292;&#36825;&#20010;&#31867;&#19978;&#28155;&#21152;&#20102; <code>@Repository</code> &#27880;&#35299;&#65292;&#29992;&#26469;&#21578;&#35785; Spring &#23481;&#22120;&#36825;&#20010;&#31867;&#35201;&#21019;&#24314; Bean &#23454;&#20363;&#65292;&#24182;&#19988;&#23427;&#20195;&#34920;&#20102;&#19968;&#20010;&#25968;&#25454;&#20179;&#24211;&#65288;Repository&#65289;&#12290;&#23481;&#22120;&#20250;&#33258;&#21160;&#27880;&#20837;&#26500;&#36896;&#26041;&#27861;&#25152;&#38656;&#30340; <code>JdbcTemplate</code> &#23454;&#20363;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#25552;&#20379;&#31354;&#26500;&#36896;&#26041;&#27861;&#65292;&#22312; <code>jdbcTemplate</code> &#30340;&#22768;&#26126;&#19978;&#28155;&#21152; <code>@Autowired</code>&#65292;&#25928;&#26524;&#26159;&#19968;&#26679;&#30340;&#12290;&#20855;&#20307;&#30340;&#31867;&#22768;&#26126;&#35265;&#20195;&#30721;&#31034;&#20363; 6-8&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-8</strong>&#12288;<code>MenuRepository</code> &#31867;&#30340;&#22768;&#26126;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>package learning.spring.binarytea.repository;

// &#30465;&#30053;import

@Repository
public class MenuRepository {
    private JdbcTemplate jdbcTemplate;

    public MenuRepository(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }
    // &#20960;&#20010;&#26597;&#35810;&#26041;&#27861;&#24453;&#35828;&#26126;
}</code></pre><p>&#35201;&#26597;&#35810;&#30340; SQL &#21482;&#36820;&#22238;&#19968;&#20010;&#20540;&#65292;&#37027;&#20040;&#21487;&#20197;&#20351;&#29992; <code>queryForObject(String sql, Class&lt;T&gt; requiredType)</code> &#26041;&#27861;&#65292;&#20363;&#22914;&#65292;&#20195;&#30721;&#31034;&#20363; 6-9 &#20250;&#36820;&#22238;&#34920;&#20013;&#35760;&#24405;&#30340;&#24635;&#25968;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-9</strong>&#12288;&#32479;&#35745;&#24635;&#25968;&#30340; <code>countMenuItems()</code> &#26041;&#27861;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public long countMenuItems() {
    return jdbcTemplate.queryForObject("select count(*) from t_menu", Long.class);
}</code></pre><p>&#36820;&#22238;&#30340;&#32467;&#26524;&#26377;&#22810;&#20010;&#23383;&#27573;&#65292;&#21487;&#20197;&#29992; <code>queryForMap()</code> &#23558;&#23427;&#20204;&#37117;&#25918;&#21040;&#19968;&#20010; <code>Map&lt;String, Object&gt;</code> &#20013;&#65292;&#20063;&#21487;&#20197;&#36890;&#36807; <code>RowMapper</code> &#23558;&#23383;&#27573;&#26144;&#23556;&#21040;&#26576;&#20010;&#23545;&#35937;&#19978;&#12290;&#20363;&#22914;&#65292;&#20195;&#30721;&#31034;&#20363; 6-10 &#29992; <code>queryForObject(String sql, RowMapper&lt;T&gt; rowMapper, @Nullable Object... args)</code> &#26041;&#27861;&#26597;&#35810;&#21333;&#26465;&#35760;&#24405;&#65292;&#24182;&#23558;&#23383;&#27573;&#20869;&#23481;&#22635;&#20805;&#36827; <code>MenuItem</code> &#37324;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-10</strong>&#12288;&#26597;&#35810;&#21333;&#26465;&#35760;&#24405;&#30340; <code>queryForItem()</code> &#26041;&#27861;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public MenuItem queryForItem(Long id) {
    return jdbcTemplate.queryForObject("select * from t_menu where id = ?", rowMapper(), id);
}

private RowMapper&lt;MenuItem&gt; rowMapper() {
    return (resultSet, rowNum) -&gt; {
        return MenuItem.builder()
                .id(resultSet.getLong("id"))
                .name(resultSet.getString("name"))
                .size(resultSet.getString("size"))
                .price(BigDecimal.valueOf(resultSet.getLong("price") / 100.0d))
                .createTime(new Date(resultSet.getDate("create_time").getTime()))
                .updateTime(new Date(resultSet.getDate("update_time").getTime()))
                .build();
    };
}</code></pre><p>&#20854;&#20013;&#30340; <code>RowMapper&lt;MenuItem&gt;</code> &#21487;&#20197;&#30452;&#25509;&#36890;&#36807; Lambda &#30340;&#26041;&#24335;&#20889;&#22312;&#26041;&#27861;&#35843;&#29992;&#37324;&#65292;&#20294;&#20026;&#20102;&#33021;&#22815;&#22797;&#29992;&#36825;&#20010; <code>RowMapper</code>&#65292;&#25105;&#20204;&#23558;&#23427;&#21333;&#29420;&#8220;&#25277;&#8221;&#20102;&#20986;&#26469;&#12290;</p><p>&#19968;&#20010;&#26597;&#35810;&#25805;&#20316;&#22914;&#26524;&#35201;&#27714;&#36820;&#22238;&#22810;&#26465;&#35760;&#24405;&#65292;&#21487;&#20197;&#20351;&#29992; <code>query(String sql, RowMapper&lt;T&gt; rowMapper)</code>&#12290;&#20195;&#30721;&#31034;&#20363; 6-11 &#30340; <code>queryAllItems()</code> &#21487;&#20197;&#36820;&#22238;&#20840;&#37096;&#30340;&#33756;&#21333;&#20869;&#23481;&#65292;&#20854;&#20013;&#36824;&#29992;&#21040;&#20102;&#19978;&#38754;&#23450;&#20041;&#30340; <code>rowMapper()</code>&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-11</strong>&#12288;&#36820;&#22238;&#20840;&#37096;&#33756;&#21333;&#30340; <code>queryAllItems()</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public List&lt;MenuItem&gt; queryAllItems() {
    return jdbcTemplate.query("select * from t_menu", rowMapper());
}</code></pre><p>&#20026;&#20102;&#35753;&#26597;&#35810;&#33021;&#22815;&#27491;&#24120;&#25191;&#34892;&#65292;&#25105;&#20204;&#38656;&#35201;&#20026; H2 &#25968;&#25454;&#24211;&#24314;&#34920;&#24182;&#28155;&#21152;&#19968;&#20123;&#21021;&#22987;&#25968;&#25454; <span class="&#27880;&#37322;&#32534;&#21495;">10</span>&#65292;&#23427;&#20204;&#34987;&#20998;&#21035;&#25918;&#22312;&#24037;&#31243; src/resources &#30446;&#24405;&#30340; schema.sql &#21644; data.sql &#20013;&#65292;&#20855;&#20307;&#20869;&#23481;&#35265;&#20195;&#30721;&#31034;&#20363; 6-12 &#19982;&#20195;&#30721;&#31034;&#20363; 6-13&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">10</span>&#36825;&#37324;&#29992;&#30340;&#37117;&#26159; H2 &#30340; SQL &#35821;&#27861;&#65292;&#20250;&#19982;&#26631;&#20934; SQL &#26377;&#32454;&#24494;&#24046;&#24322;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-12</strong>&#12288;&#21253;&#21547;&#34920;&#32467;&#26500;&#23450;&#20041;&#30340; schema.sql</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>drop table t_menu if exists;

create table t_menu (
    id bigint auto_increment,
    name varchar(128),
    size varchar(16),
    price bigint,
    create_time timestamp,
    update_time timestamp,
    primary key (id)
);</code></pre><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-13</strong>&#12288;&#21253;&#21547;&#21021;&#22987;&#25968;&#25454;&#30340; data.sql</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>insert into t_menu (name, size, price, create_time, update_time) values ('Java&#21654;&#21857;', '&#20013;&#26479;', 1000, now(), now());
insert into t_menu (name, size, price, create_time, update_time) values ('Java&#21654;&#21857;', '&#22823;&#26479;', 1500, now(), now());</code></pre><p>&#20026;&#20102;&#20445;&#35777; <code>MenuRepository</code> &#31867;&#30340;&#21151;&#33021;&#27491;&#30830;&#65292;&#25105;&#20204;&#38656;&#35201;&#28155;&#21152;&#19968;&#20123;&#21333;&#20803;&#27979;&#35797;&#65292;&#26681;&#25454;&#19978;&#38754;&#26500;&#36896;&#30340;&#25968;&#25454;&#23545;&#26041;&#27861;&#30340;&#35843;&#29992;&#32467;&#26524;&#36827;&#34892;&#21028;&#26029;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 6-14 &#20013;&#28436;&#31034;&#30340;&#37027;&#26679;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-14</strong>&#12288;<code>MenuRepositoryTest</code> &#20013;&#30340;&#27979;&#35797;&#20195;&#30721;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuRepositoryTest {
    @Autowired
    private MenuRepository menuRepository;

    @Test
    void testCountMenuItems() {
        assertEquals(2, menuRepository.countMenuItems());
    }

    @Test
    void testQueryAllItems() {
        List&lt;MenuItem&gt; items = menuRepository.queryAllItems();
        assertNotNull(items);
        assertFalse(items.isEmpty());
        assertEquals(2, items.size());
    }

    @Test
    void testQueryForItem() {
        MenuItem item = menuRepository.queryForItem(1L);
        assertItem(item, 1L, "Java&#21654;&#21857;", "&#20013;&#26479;", BigDecimal.valueOf(10.00));
    }

    private void assertItem(MenuItem item, Long id, String name, String size, BigDecimal price) {
        assertNotNull(item);
        assertEquals(id, item.getId());
        assertEquals(name, item.getName());
        assertEquals(size, item.getSize());
        assertEquals(price, item.getPrice());
    }
}</code></pre><p>&#21333;&#20803;&#27979;&#35797;&#20013;&#65292;&#25105;&#20204;&#36890;&#36807;&#21508;&#31181;&#26029;&#35328;&#33258;&#21160;&#39564;&#35777;&#20102;&#26041;&#27861;&#30340;&#36820;&#22238;&#20869;&#23481;&#65292;&#22312;&#33258;&#21160;&#21270;&#27979;&#35797;&#36807;&#31243;&#20013;&#26080;&#39035;&#20154;&#30340;&#20171;&#20837;&#65292;&#24182;&#19988;&#21487;&#20197;&#21453;&#22797;&#25191;&#34892;&#12290;&#26029;&#35328;&#26159;&#21333;&#20803;&#27979;&#35797;&#20013;<strong>&#24517;&#19981;&#21487;&#23569;</strong>&#30340;&#37096;&#20998;&#65292;&#21315;&#19975;&#19981;&#35201;&#29992;<strong>&#8220;&#26085;&#24535;&#36755;&#20986;&#65291;&#20154;&#24037;&#35266;&#23519;&#8221;</strong>&#30340;&#26041;&#24335;&#12290;</p><p>&#26368;&#21518;&#65292;&#32534;&#20889;&#21551;&#21160;&#21518;&#36755;&#20986;&#33756;&#21333;&#30340;&#36923;&#36753;&#12290;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807; <code>ApplicationRunner</code> &#26469;&#25191;&#34892;&#25171;&#21360;&#21160;&#20316;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 6-15 &#25152;&#31034;&#12290;&#22312; <code>MenuPrinterRunner</code> &#19978;&#28155;&#21152; Lombok &#30340; <code>@Slf4j</code> &#27880;&#35299;&#65292;&#20250;&#33258;&#21160;&#29983;&#25104;&#19968;&#20010; <code>log</code> &#23545;&#35937;&#65292;&#21363;&#21487;&#29992;&#23427;&#26469;&#25171;&#21360;&#26085;&#24535;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-15</strong>&#12288;<code>MenuPrinterRunner</code> &#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>package learning.spring.binarytea.runner;

// &#30465;&#30053;import

@Component
@Slf4j
public class MenuPrinterRunner implements ApplicationRunner {
    private final MenuRepository menuRepository;

    public MenuPrinterRunner(MenuRepository menuRepository) {
        this.menuRepository = menuRepository;
    }

    @Override
    public void run(ApplicationArguments args) throws Exception {
        log.info("&#20849;&#26377;{}&#20010;&#39278;&#21697;&#21487;&#36873;&#12290;", menuRepository.countMenuItems());
        menuRepository.queryAllItems().forEach(i -&gt; log.info("&#39278;&#21697;&#65306;{}", i));
    }
}</code></pre><p>&#25972;&#20010;&#31243;&#24207;&#22312;&#36816;&#34892;&#21518;&#65292;&#33021;&#22312;&#26085;&#24535;&#20013;&#25214;&#21040;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#30340;&#20869;&#23481;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2022-02-13 00:01:48.838  INFO 70291 --- [main] l.s.binarytea.runner.MenuPrinterRunner  : &#20849;&#26377;2&#20010;&#39278;&#21697;&#21487;&#36873;&#12290;
2022-02-13 00:01:48.841  INFO 70291 --- [main] l.s.binarytea.runner.MenuPrinterRunner  : &#39278;&#21697;&#65306;
MenuItem(id=1, name=Java&#21654;&#21857;, size=&#20013;&#26479;, price=10.0, createTime=Sun Feb 13 00:00:00 CST 2022,
updateTime=Sun Feb 13 00:00:00 CST 2022)
2022-02-13 00:01:48.849 INFO 70291 --- [main] l.s.binarytea.runner.MenuPrinterRunner   : &#39278;&#21697;&#65306;
MenuItem(id=2, name=Java&#21654;&#21857;, size=&#22823;&#26479;, price=15.0, createTime=Sun Feb 13 00:00:00 CST 2022,
updateTime=Sun Feb 13 00:00:00 CST 2022)</code></pre><h3 id="nav_point_96">6.2.2&#12288;&#21464;&#26356;&#31867;&#25805;&#20316;</h3><p><code>JdbcTemplate</code> &#30340; <code>update()</code> &#26041;&#27861;&#21487;&#20197;&#29992;&#26469;&#25191;&#34892;&#20462;&#25913;&#31867;&#30340; SQL &#35821;&#21477;&#65292;&#27604;&#22914; <code>INSERT</code>&#12289;<code>UPDATE</code> &#21644; <code>DELETE</code> &#35821;&#21477;&#12290;&#20197;&#25554;&#20837;&#25968;&#25454;&#20026;&#20363;&#65292;&#22823;&#23478;&#21487;&#20197;&#31616;&#21333;&#22320;&#20351;&#29992; <code>update(String sql, @Nullable Object... args)</code> &#26041;&#27861;&#65292;&#36825;&#20010;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#26159;&#26356;&#26032;&#21040;&#30340;&#35760;&#24405;&#26465;&#25968;&#12290;&#25554;&#20837;&#19968;&#26465;&#33756;&#21333;&#20869;&#23481;&#30340;&#20195;&#30721;&#22823;&#27010;&#26159;&#20195;&#30721;&#31034;&#20363; 6-16 &#36825;&#26679;&#30340;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-16</strong>&#12288;&#25554;&#20837;&#19968;&#26465;&#35760;&#24405;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public static final String INSERT_SQL =
        "insert into t_menu (name, size, price, create_time, update_time) values (?, ?, ?, now(), now())";

public int insertItem(MenuItem item) {
    return jdbcTemplate.update(INSERT_SQL, item.getName(),
            item.getSize(), item.getPrice().multiply(BigDecimal.valueOf(100)).longValue());
}</code></pre><p>&#20854;&#20013;&#65292;SQL &#35821;&#21477;&#21518;&#30340;&#21442;&#25968;&#39034;&#24207;&#23545;&#24212;&#20102; SQL &#20013; <code>?</code> &#21344;&#20301;&#31526;&#30340;&#39034;&#24207;&#12290;&#22312;&#24456;&#22810;&#26102;&#20505;&#65292;&#25968;&#25454;&#30340; ID &#26159;&#33258;&#22686;&#38271;&#30340;&#20027;&#38190;&#65292;&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#22312;&#25554;&#20837;&#35760;&#24405;&#21518;&#33021;&#21462;&#24471;&#29983;&#25104;&#30340; ID&#65292;&#36825;&#26102;&#21487;&#20197;&#20351;&#29992; <code>KeyHolder</code> &#31867;&#26469;&#25345;&#26377;&#29983;&#25104;&#30340;&#38190;&#12290;&#20195;&#30721;&#31867;&#20284;&#20195;&#30721;&#31034;&#20363; 6-17&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-17</strong>&#12288;&#25554;&#20837;&#19968;&#26465;&#35760;&#24405;&#24182;&#22635;&#20805;&#20027;&#38190;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int insertItemAndFillId(MenuItem item) {
    KeyHolder keyHolder = new GeneratedKeyHolder();
    int affected = jdbcTemplate.update(con -&gt; {
        PreparedStatement preparedStatement =
                con.prepareStatement(INSERT_SQL, PreparedStatement.RETURN_GENERATED_KEYS);
        // &#20063;&#21487;&#20197;&#29992;PreparedStatement preparedStatement =
        //            con.prepareStatement(INSERT_SQL, new String[] { "id" });

        preparedStatement.setString(1, item.getName());
        preparedStatement.setString(2, item.getSize());
        preparedStatement.setLong(3, item.getPrice().multiply(BigDecimal.valueOf(100)).longValue());
        return preparedStatement;
    }, keyHolder);
    if (affected == 1) {
        item.setId(keyHolder.getKey().longValue());
    }
    return affected;
}</code></pre><p>&#26356;&#26032;&#19982;&#21024;&#38500;&#25805;&#20316;&#20351;&#29992;&#30340;&#20063;&#26159;&#31867;&#20284;&#30340;&#25163;&#27861;&#65292;&#21516;&#26679;&#20063;&#26159; <code>update()</code> &#26041;&#27861;&#65292;&#20363;&#22914;&#65292;&#20195;&#30721;&#31034;&#20363; 6-18 &#23558;&#26681;&#25454;&#20027;&#38190;&#21024;&#38500;&#19968;&#26465;&#33756;&#21333;&#39033;&#35760;&#24405;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-18</strong>&#12288;&#21024;&#38500;&#19968;&#26465;&#33756;&#21333;&#39033;&#35760;&#24405;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int deleteItem(Long id) {
    return jdbcTemplate.update("delete from t_menu where id = ?", id);
}</code></pre><p>&#19978;&#36848;&#22686;&#21152;&#21644;&#21024;&#38500;&#26041;&#27861;&#30340;&#27979;&#35797;&#20250;&#24433;&#21709;&#34920;&#20013;&#30340;&#35760;&#24405;&#25968;&#37327;&#65292;&#38543;&#26426;&#36816;&#34892;&#20250;&#23548;&#33268;&#23545;&#32467;&#26524;&#21028;&#26029;&#30340;&#19981;&#20934;&#30830;&#65292;&#22240;&#27492;&#38656;&#35201;&#25351;&#23450;&#27979;&#35797;&#30340;&#36816;&#34892;&#39034;&#24207;&#12290;JUnit 5 &#25552;&#20379;&#20102; <code>@TestMethodOrder</code> &#27880;&#35299;&#26469;&#25351;&#23450;&#25805;&#20316;&#30340;&#25191;&#34892;&#39034;&#24207;&#65292;&#21487;&#20197;&#36873;&#25321;&#23383;&#27597;&#24207;&#12289;&#27880;&#35299;&#39034;&#24207;&#21644;&#38543;&#26426;&#19977;&#31181;&#12290;&#20197;&#27880;&#35299;&#39034;&#24207;&#20026;&#20363;&#65292;&#20195;&#30721;&#22823;&#27010;&#20250;&#26159;&#20195;&#30721;&#31034;&#20363; 6-19 &#36825;&#26679;&#30340;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-19</strong>&#12288;&#25351;&#23450;&#20102;&#27880;&#35299;&#39034;&#24207;&#30340;&#27979;&#35797;&#20195;&#30721;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
class MenuRepositoryTest {
    @Autowired
    private MenuRepository menuRepository;
    // &#30465;&#30053;&#20102;&#20854;&#20182;&#27979;&#35797;&#26041;&#27861;
    @Test
    @Order(1)
    void testInsertItem() {
        MenuItem item = MenuItem.builder().name("Go&#27225;&#27713;").size("&#20013;&#26479;").price(BigDecimal.valueOf(12.00)).build();

        assertEquals(1, menuRepository.insertItem(item));
        assertNull(item.getId());
        MenuItem queryItem = menuRepository.queryForItem(3L);
        assertItem(queryItem, 3L, "Go&#27225;&#27713;", "&#20013;&#26479;", BigDecimal.valueOf(12.00));

        assertEquals(1, menuRepository.insertItemAndFillId(item));
        queryItem = menuRepository.queryForItem(item.getId());
        assertItem(queryItem, 4L, "Go&#27225;&#27713;", "&#20013;&#26479;", BigDecimal.valueOf(12.00));
    }

    @Test
    @Order(2)
    void testDelete() {
        assertEquals(1, menuRepository.deleteItem(3L));
        assertEquals(1, menuRepository.deleteItem(2L));
    }

    private void assertItem(MenuItem item, Long id, String name, String size, BigDecimal price) {
        assertNotNull(item);
        assertEquals(id, item.getId());
        assertEquals(name, item.getName());
        assertEquals(size, item.getSize());
        assertEquals(price, item.getPrice());
    }
}</code></pre><p>&#22312;&#19978;&#38754;&#30340;&#20363;&#23376;&#37324;&#65292;&#25105;&#20204;&#30340; SQL &#20013;&#29992;&#21040;&#20102;&#24456;&#22810; <code>?</code>&#65292;<code>?</code> &#30340;&#25968;&#37327;&#19968;&#22810;&#65292;&#23601;&#23481;&#26131;&#22312;&#20256;&#21442;&#26102;&#25630;&#38169;&#20301;&#32622;&#12290;Spring Framework &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#19968;&#20010; <code>NamedParameterJdbcTemplate</code> &#31867;&#65292;&#20854;&#20013;&#23553;&#35013;&#20102;&#24456;&#22810; <code>JdbcTemplate</code> &#30340;&#25805;&#20316;&#12290;<code>NamedParameterJdbcTemplate</code> &#21487;&#20197;&#20026; SQL &#20013;&#30340;&#21442;&#25968;&#35774;&#23450;&#21517;&#31216;&#65292;&#28982;&#21518;&#26681;&#25454;&#21517;&#31216;&#36827;&#34892;&#36171;&#20540;&#12290;Spring Boot &#21516;&#26679;&#20026;&#23427;&#36827;&#34892;&#20102;&#33258;&#21160;&#37197;&#32622;&#65292;&#22312;&#21482;&#26377;&#19968;&#20010;&#25110;&#25351;&#23450;&#20102;&#20027; <code>JdbcTemplate</code> &#30340; Bean &#26102;&#65292;Spring Boot &#23601;&#20250;&#33258;&#21160;&#37197;&#32622;&#19968;&#20010; <code>NamedParameterJdbcTemplate</code> Bean&#12290;&#25105;&#20204;&#21487;&#20197;&#25226;&#19978;&#38754;&#30340; <code>insertItem()</code> &#20462;&#25913;&#25104;&#20195;&#30721;&#31034;&#20363; 6-20 &#36825;&#26679;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-20</strong>&#12288;&#20351;&#29992;&#20102; <code>NamedParameterJdbcTemplate</code> &#30340; <code>insertItem()</code> &#26041;&#27861;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int insertItem(MenuItem item) {
    String sql = "insert into t_menu (name, size, price, create_time, update_time) values " +
            "(:name, :size, :price, now(), now())";
    MapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();
    sqlParameterSource.addValue("name", item.getName());
    sqlParameterSource.addValue("size", item.getSize());
    sqlParameterSource.addValue("price", item.getPrice().multiply(BigDecimal.valueOf(100)).longValue());
    return namedParameterJdbcTemplate.update(sql, sqlParameterSource);
}</code></pre><p>&#22312;&#20195;&#30721;&#31034;&#20363; 6-20 &#20013;&#21487;&#20197;&#30475;&#21040;&#65292;SQL &#20013;&#30340;&#21344;&#20301;&#31526;&#34987;&#26367;&#25442;&#20026;&#20102;&#20855;&#20307;&#30340;&#21442;&#25968;&#21517;&#31216;&#12290;&#22312;&#25191;&#34892;&#35821;&#21477;&#26102;&#65292;&#36890;&#36807; <code>SqlParameterSource</code> &#26469;&#20256;&#20837;&#21442;&#25968;&#65292;&#36825;&#20010;&#25509;&#21475;&#26377;&#22810;&#31181;&#23454;&#29616;&#65292;&#27604;&#22914;&#19978;&#38754;&#20363;&#23376;&#20013;&#30340; <code>MapSqlParameterSource</code> &#20250;&#20197; <code>Map</code> &#30340;&#24418;&#24335;&#26469;&#25552;&#20379;&#21442;&#25968;&#65292;<code>BeanPropertySqlParameterSource</code> &#20250;&#20174; Bean &#23646;&#24615;&#20013;&#25552;&#21462;&#21442;&#25968;&#12290;</p><h3 id="nav_point_97">6.2.3&#12288;&#25209;&#22788;&#29702;&#25805;&#20316;</h3><p>&#22312;&#25968;&#25454;&#22788;&#29702;&#26102;&#65292;&#25105;&#20204;&#32463;&#24120;&#20250;&#36935;&#21040;&#38656;&#35201;&#25554;&#20837;&#25110;&#26356;&#26032;&#19968;&#22823;&#25209;&#25968;&#25454;&#30340;&#24773;&#20917;&#12290;&#22823;&#22810;&#25968; JDBC &#39537;&#21160;&#38024;&#23545;&#25209;&#37327;&#35843;&#29992;&#30456;&#21516; <code>PreparedStatement</code> &#30340;&#24773;&#20917;&#37117;&#20570;&#20102;&#29305;&#27530;&#20248;&#21270;&#65292;&#25152;&#20197;&#22312; Spring Framework &#20013;&#20063;&#20026;&#25209;&#22788;&#29702;&#25805;&#20316;&#25552;&#20379;&#20102;&#22810;&#20010; <code>batchUpdate()</code> &#26041;&#27861;&#65292;&#26041;&#27861;&#30340;&#36820;&#22238;&#26159;&#19968;&#20010; <code>int[]</code>&#65292;&#20195;&#34920;&#27599;&#27425;&#25191;&#34892;&#35821;&#21477;&#30340;&#26356;&#26032;&#26465;&#25968;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30446;&#21069;&#30340;&#33756;&#21333;&#20869;&#23481;&#36824;&#27604;&#36739;&#23569;&#65292;&#19968;&#26465;&#19968;&#26465;&#22320;&#28155;&#21152;&#21193;&#24378;&#20063;&#21487;&#20197;&#25509;&#21463;&#65292;&#20294;&#20869;&#23481;&#22810;&#20102;&#20043;&#21518;&#65292;&#23436;&#25972;&#30340;&#25805;&#20316;&#36807;&#31243;&#23601;&#22826;&#24930;&#20102;&#65292;&#25928;&#29575;&#20063;&#19981;&#39640;&#12290;&#20026;&#20309;&#19981;&#19968;&#27425;&#24615;&#28155;&#21152;&#19968;&#25209;&#33756;&#21333;&#26465;&#30446;&#21602;&#65311;&#25630;&#20010;&#25209;&#37327;&#25805;&#20316;&#22810;&#22909;&#21568;&#65281;</p>
</blockquote><p>&#25105;&#20204;&#21487;&#20197;&#35774;&#35745;&#19968;&#20010;&#25209;&#37327;&#25554;&#20837;&#25968;&#25454;&#30340;&#25509;&#21475;&#65292;&#20687;&#20195;&#30721;&#31034;&#20363; 6-21 &#37027;&#26679;&#65292;&#22312; <code>batchUpdate()</code> &#26041;&#27861;&#20013;&#65292;&#20256;&#20837; <code>BatchPreparedStatementSetter</code> &#26469;&#35774;&#32622; <code>PreparedStatement</code> &#21344;&#20301;&#31526;&#30340;&#20869;&#23481;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-21</strong>&#12288;&#25209;&#37327;&#25554;&#20837;&#26041;&#27861;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int insertItems(List&lt;MenuItem&gt; items) {
    int[] count = jdbcTemplate.batchUpdate(INSERT_SQL, new BatchPreparedStatementSetter() {
        @Override
        public void setValues(PreparedStatement ps, int i) throws SQLException {
            MenuItem item = items.get(i);
            ps.setString(1, item.getName());
            ps.setString(2, item.getSize());
            ps.setLong(3, item.getPrice().multiply(BigDecimal.valueOf(100)).longValue());
        }

        @Override
        public int getBatchSize() {
            return items.size();
        }
    });
    return Arrays.stream(count).sum();
}</code></pre><p>&#19978;&#36848;&#26041;&#27861;&#30340;&#27979;&#35797;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 6-22 &#25152;&#31034;&#12290;&#25105;&#20204;&#36890;&#36807; Java 8 &#30340;&#27969;&#24335;&#20195;&#30721;&#21019;&#24314;&#20102; 3 &#20010;&#33756;&#21333;&#26465;&#30446;&#65292;&#23558;&#23427;&#20204;&#25918;&#22312;&#19968;&#20010; <code>List&lt;MenuItem&gt;</code> &#20013;&#65292;&#38543;&#21518;&#35843;&#29992; <code>insertItems()</code> &#26041;&#27861;&#65292;&#21028;&#26029;&#26159;&#21542;&#25104;&#21151;&#25554;&#20837; 3 &#26465;&#35760;&#24405;&#65292;&#24182;&#36880;&#26465;&#39564;&#35777;&#20102;&#27599;&#26465;&#25554;&#20837;&#35760;&#24405;&#30340;&#20869;&#23481;&#12290;&#36825;&#37324;&#35774;&#32622;&#20102; <code>@Order(3)</code> &#26469;&#25511;&#21046;&#27979;&#35797;&#29992;&#20363;&#30340;&#25191;&#34892;&#39034;&#24207;&#65292;&#22240;&#20026;&#19978;&#38754;&#25554;&#20837;&#36807;&#20960;&#26465;&#35760;&#24405;&#65292;&#25152;&#20197;&#26412;&#27425;&#26032;&#22686;&#30340;&#35760;&#24405; ID &#20174; <code>5</code> &#24320;&#22987;&#12290;&#22914;&#26524;&#26159;&#21333;&#29420;&#36816;&#34892; <code>testInsertItems()</code>&#65292;&#37027;&#20040; ID &#35201;&#20174; <code>3</code> &#24320;&#22987;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-22</strong>&#12288;<code>MenuRepositoryTest</code> &#20013;&#20851;&#20110; <code>insertItems()</code> &#30340;&#27979;&#35797;&#20195;&#30721;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Test
@Order(3)
void testInsertItems() {
    List&lt;MenuItem&gt; items = Stream.of("Go&#27225;&#27713;", "Python&#27668;&#27873;&#27700;", "JavaScript&#33487;&#25171;&#27700;")
            .map(n -&gt; MenuItem.builder().name(n).size("&#20013;&#26479;").price(BigDecimal.valueOf(12.00)).build())
            .collect(Collectors.toList());
    assertEquals(3, menuRepository.insertItems(items));
    assertItem(menuRepository.queryForItem(3L), 3L, "Go&#27225;&#27713;", "&#20013;&#26479;", BigDecimal.valueOf(12.00));
    assertItem(menuRepository.queryForItem(4L), 4L, "Python&#27668;&#27873;&#27700;", "&#20013;&#26479;", BigDecimal.valueOf(12.00));
    assertItem(menuRepository.queryForItem(5L), 5L, "JavaScript&#33487;&#25171;&#27700;", "&#20013;&#26479;", BigDecimal.valueOf(12.00));
}</code></pre><p><code>batchUpdate()</code> &#26041;&#27861;&#36824;&#26377;&#20854;&#20182;&#20960;&#31181;&#24418;&#24335;&#65292;&#29992;&#36215;&#26469;&#20063;&#30456;&#23545;&#23481;&#26131;&#20123;&#65292;&#20363;&#22914; <code>batchUpdate(String sql, List&lt;Object[]&gt; batchArgs)</code>&#65292;<code>Object[]</code> &#23601;&#26159;&#25353;&#32473;&#23450;&#30340;&#39034;&#24207;&#26367;&#25442;&#20869;&#23481;&#12290;<code>insertItems()</code> &#21487;&#20197;&#25913;&#20889;&#25104;&#19979;&#38754;&#36825;&#26679;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int insertItems(List&lt;MenuItem&gt; items) {
    List&lt;Object[]&gt; batchArgs = items.stream().map(item -&gt; new Object[]{
            item.getName(), item.getSize(), item.getPrice().multiply(BigDecimal.valueOf(100)).longValue()})
            .collect(Collectors.toList());
    int[] count = jdbcTemplate.batchUpdate(INSERT_SQL, batchArgs);
    return Arrays.stream(count).sum();
}</code></pre><p><code>NamedParameterJdbcTemplate</code> &#20013;&#20063;&#25552;&#20379;&#20102; <code>batchUpdate()</code> &#26041;&#27861;&#65292;&#25105;&#20204;&#33021;&#20351;&#29992; <code>SqlParameterSource</code> &#26469;&#20195;&#34920;&#19968;&#26465;&#23545;&#24212;&#30340;&#20869;&#23481;&#12290;&#36741;&#21161;&#31867; <code>SqlParameterSourceUtils</code> &#20013;&#26377;&#19968;&#20123;&#26041;&#27861;&#65292;&#21487;&#20197;&#24110;&#25105;&#20204;&#25226;&#19968;&#25209;&#23545;&#35937;&#36716;&#25442;&#20026; <code>SqlParameterSource[]</code>&#12290;&#21516;&#26679;&#30340;&#65292;&#25105;&#20204;&#21487;&#20197;&#29992; <code>NamedParameterJdbcTemplate</code> &#26469;&#25913;&#20889; <code>insertItems()</code> &#26041;&#27861;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int insertItems(List&lt;MenuItem&gt; items) {
    String sql = "insert into t_menu (name, size, price, create_time, update_time) values " +
            "(:name, :size, :price * 100, now(), now())";
    int[] count = namedParameterJdbcTemplate.batchUpdate(sql, SqlParameterSourceUtils.createBatch(items));
    return Arrays.stream(count).sum();
}</code></pre><p>&#36825;&#37324;&#25105;&#20204;&#23454;&#38469;&#20351;&#29992;&#30340;&#26159; <code>BeanPropertySqlParameterSource</code>&#65292;&#20174;&#23545;&#35937;&#20013;&#25552;&#21462;&#23646;&#24615;&#23545;&#24212;&#21040; SQL &#20013;&#30340;&#21629;&#21517;&#21442;&#25968;&#19978;&#65292;<code>price</code> &#30340;&#31867;&#22411;&#26159; <code>BigDecimal</code>&#65292;&#21333;&#20301;&#26159;&#20803;&#65292;&#32780;&#25968;&#25454;&#24211;&#20013;&#25105;&#20204;&#30340;&#21333;&#20301;&#26159;&#20998;&#65292;&#25152;&#20197;&#22312; SQL &#35821;&#21477;&#20013;&#20570;&#20102;&#20123;&#23567;&#35843;&#25972;&#12290;</p><h3 id="nav_point_98">6.2.4&#12288;&#33258;&#21160;&#37197;&#32622;&#35828;&#26126;</h3><p>&#19978;&#25991;&#25552;&#21040; Spring Boot &#25552;&#20379;&#20102; <code>JdbcTemplate</code> &#21644; <code>NamedParameterJdbcTemplate</code> &#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#25509;&#19979;&#26469;&#35753;&#25105;&#20204;&#35814;&#32454;&#30475;&#19968;&#19979;&#23427;&#30340;&#20855;&#20307;&#37197;&#32622;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass({ DataSource.class, JdbcTemplate.class })
@ConditionalOnSingleCandidate(DataSource.class)
@AutoConfigureAfter(DataSourceAutoConfiguration.class)
@EnableConfigurationProperties(JdbcProperties.class)
@Import({ DatabaseInitializationDependencyConfigurer.class, JdbcTemplateConfiguration.class,
NamedParameterJdbcTemplateConfiguration.class })
public class JdbcTemplateAutoConfiguration {}</code></pre><p>&#24403; CLASSPATH &#20013;&#23384;&#22312; <code>DataSource</code> &#21644; <code>JdbcTemplate</code>&#65292;&#21516;&#26102;&#33021;&#26126;&#30830;&#19968;&#20010;&#20027;&#35201;&#30340; <code>DataSource</code> Bean &#26102;&#65292;<code>JdbcTemplateAutoConfiguration</code> &#25165;&#20250;&#29983;&#25928;&#65292;&#32780;&#23427;&#30340;&#37197;&#32622;&#20869;&#23481;&#35201;&#30475; <code>DatabaseInitializationDependencyConfigurer</code>&#12289;<code>JdbcTemplateConfiguration</code> &#21644; <code>NamedParameterJdbcTemplateConfiguration</code>&#65292;&#37325;&#28857;&#26159;&#21518;&#38754;&#20004;&#20010;&#12290;</p><p><code>JdbcTemplateConfiguration</code> &#20250;&#22312;&#27809;&#26377;&#37197;&#32622; <code>JdbcOperations</code> &#30340;&#23454;&#29616; Bean &#26102;&#29983;&#25928;&#65292;&#23427;&#30340;&#20316;&#29992;&#26159;&#25552;&#20379;&#19968;&#20010; <code>JdbcTemplate</code> Bean&#65292;&#36825;&#20010; Bean &#20250;&#33258;&#21160;&#27880;&#20837;&#29616;&#26377;&#30340; <code>DataSource</code>&#65292;&#24182;&#23558; <code>spring.jdbc.template.*</code> &#30340;&#37197;&#32622;&#39033;&#20869;&#23481;&#35774;&#32622;&#36827;&#26469;&#65292;&#30456;&#20851;&#37197;&#32622;&#21450;&#20854;&#35828;&#26126;&#35265;&#34920; 6-6&#12290;</p><p><strong>&#34920; 6-6&#12288;<code>spring.jdbc.template.*</code> &#30340;&#37197;&#32622;&#39033;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#37197;&#32622;&#39033;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#40664;&#35748;&#20540;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>spring.jdbc.template.fetch-size</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>-1</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#27599;&#27425;&#20174;&#25968;&#25454;&#24211;&#33719;&#21462;&#30340;&#35760;&#24405;&#26465;&#25968;&#65292;<code>-1</code> &#34920;&#31034;&#20351;&#29992;&#39537;&#21160;&#30340;&#40664;&#35748;&#20540;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>spring.jdbc.template.max-rows</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>-1</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#19968;&#27425;&#26597;&#35810;&#21487;&#33719;&#21462;&#30340;&#26368;&#22823;&#35760;&#24405;&#26465;&#25968;&#65292;<code>-1</code> &#34920;&#31034;&#20351;&#29992;&#39537;&#21160;&#30340;&#40664;&#35748;&#20540;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>spring.jdbc.template.query-timeout</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#160;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26597;&#35810;&#30340;&#36229;&#26102;&#26102;&#38388;&#65292;&#27809;&#26377;&#37197;&#32622;&#30340;&#35805;&#20351;&#29992; JDBC &#39537;&#21160;&#30340;&#40664;&#35748;&#20540;&#65292;&#22914;&#26524;&#27809;&#26377;&#21152;&#26102;&#38388;&#21333;&#20301;&#65292;&#40664;&#35748;&#20026;&#31186;</p></td>
</tr>
</tbody>
</table><p><code>NamedParameterJdbcTemplateConfiguration</code> &#21017;&#27604;&#36739;&#31616;&#21333;&#65292;&#22312;&#33021;&#30830;&#23450;&#19968;&#20010;&#20027;&#35201;&#30340; <code>JdbcTemplate</code>&#65292;&#21516;&#26102;&#21448;&#27809;&#26377;&#25163;&#21160;&#37197;&#32622; <code>NamedParameterJdbcOperations</code> Bean &#26102;&#65292;&#33258;&#21160;&#21019;&#24314;&#19968;&#20010; <code>NamedParameter-JdbcTemplate</code> Bean&#65292;&#24182;&#23558; <code>JdbcTemplate</code> &#27880;&#20837;&#20854;&#20013;&#12290;</p><p>&#22914;&#26524;&#25105;&#20204;&#19981;&#24076;&#26395; Spring Boot &#20026;&#25105;&#20204;&#20570;&#33258;&#21160;&#37197;&#32622;&#65292;&#21482;&#38656;&#35201;&#33258;&#24049;&#21019;&#24314;&#19968;&#20010; <code>JdbcTemplate</code> &#23601;&#21487;&#20197;&#20102;&#65292;&#27604;&#22914;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public JdbcTemplate jdbcTemplate(DataSource dataSource) {
    return new JdbcTemplate(dataSource);
}</code></pre><h2 id="nav_point_99">6.3&#12288;&#20107;&#21153;&#31649;&#29702;</h2><p>&#35828;&#36215;&#25968;&#25454;&#24211;&#20107;&#21153;&#65292;&#30456;&#20449;&#22823;&#23478;&#19968;&#23450;&#19981;&#20250;&#38476;&#29983;&#65292;&#32593;&#19978;&#26159;&#36825;&#20040;&#35299;&#37322;&#23427;&#30340; <span class="&#27880;&#37322;&#32534;&#21495;">11</span>&#65306;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">11</span>&#25688;&#33258;&#30334;&#24230;&#30334;&#31185;&#8220;&#25968;&#25454;&#24211;&#20107;&#21153;&#8221;&#35789;&#26465;&#12290;</p><blockquote>
<p>&#25968;&#25454;&#24211;&#20107;&#21153;&#26159;&#35775;&#38382;&#24182;&#21487;&#33021;&#25805;&#20316;&#21508;&#31181;&#25968;&#25454;&#39033;&#30340;&#19968;&#20010;&#25968;&#25454;&#24211;&#25805;&#20316;&#24207;&#21015;&#65292;&#36825;&#20123;&#25805;&#20316;&#35201;&#20040;&#20840;&#37096;&#25191;&#34892;&#65292;&#35201;&#20040;&#20840;&#37096;&#19981;&#25191;&#34892;&#65292;&#26159;&#19968;&#20010;&#19981;&#21487;&#20998;&#21106;&#30340;&#24037;&#20316;&#21333;&#20301;&#12290;&#20107;&#21153;&#30001;&#20107;&#21153;&#24320;&#22987;&#19982;&#20107;&#21153;&#32467;&#26463;&#20043;&#38388;&#25191;&#34892;&#30340;&#20840;&#37096;&#25968;&#25454;&#24211;&#25805;&#20316;&#32452;&#25104;&#12290;</p>
</blockquote><p>&#25105;&#20204;&#24179;&#26102;&#25509;&#35302;&#30340;&#31995;&#32479;&#19968;&#33324;&#37117;&#38656;&#35201;&#19982;&#25968;&#25454;&#24211;&#25171;&#20132;&#36947;&#65292;&#31649;&#29702;&#22909;&#25805;&#20316;&#20013;&#30340;&#20107;&#21153;&#23601;&#26159;&#19968;&#36947;&#32469;&#19981;&#36807;&#21435;&#30340;&#8220;&#22350;&#8221;&#12290;&#30452;&#25509;&#20351;&#29992; JDBC &#30340;&#35805;&#65292;&#21516;&#26679;&#20250;&#26377;&#24456;&#22810;&#27169;&#26495;&#21270;&#30340;&#20195;&#30721;&#12290;Spring Framework &#21448;&#19968;&#27425;&#23637;&#29616;&#20986;&#20102;&#33258;&#24049;&#22312;&#38382;&#39064;&#25277;&#35937;&#19978;&#30340;&#33021;&#21147;&#65292;&#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#19968;&#22871;&#32479;&#19968;&#30340;&#20107;&#21153;&#25277;&#35937;&#65292;&#23427;&#26377;&#22768;&#26126;&#24335;&#21644;&#32534;&#31243;&#24335;&#20004;&#31181;&#20351;&#29992;&#26041;&#24335;&#12290;&#26412;&#33410;&#65292;&#23601;&#35753;&#25105;&#20204;&#26469;&#20102;&#35299;&#19968;&#19979; Spring Framework &#26159;&#22914;&#20309;&#31649;&#29702;&#20107;&#21153;&#30340;&#12290;</p><h3 id="nav_point_100">6.3.1&#12288;Spring Framework &#30340;&#20107;&#21153;&#25277;&#35937;</h3><p>&#22312; Java EE &#29615;&#22659;&#20013;&#65292;&#20107;&#21153;&#21487;&#20197;&#26159;&#20351;&#29992; JTA&#65288;Java Transaction API&#65289;&#36825;&#26679;&#30340;&#20840;&#23616;&#20107;&#21153;&#65292;&#20063;&#21487;&#20197;&#26159;&#22522;&#20110; JDBC &#36830;&#25509;&#30340;&#26412;&#22320;&#20107;&#21153;&#12290;&#23454;&#38469;&#19978;&#65292;&#22823;&#23478;&#26085;&#24120;&#24037;&#20316;&#20013;&#20351;&#29992;&#30340;&#22823;&#22810;&#26159;&#26412;&#22320;&#20107;&#21153;&#12290;&#38543;&#30528;&#20998;&#24067;&#24335;&#31995;&#32479;&#30340;&#21457;&#23637;&#65292;&#24456;&#22810;&#20154;&#20250;&#32842;&#21040;&#20998;&#24067;&#24335;&#20107;&#21153;&#30340;&#35805;&#39064;&#65292;&#36825;&#26102;&#21487;&#20197;&#20351;&#29992;&#20004;&#38454;&#27573;&#25552;&#20132;&#65292;&#24120;&#35265;&#30340;&#36873;&#25321;&#26159; TCC<span class="&#27880;&#37322;&#32534;&#21495;">12</span>&#12290;&#20294;<strong>&#22914;&#26524;&#21487;&#20197;&#30340;&#35805;&#65292;&#36824;&#26159;&#24314;&#35758;&#36991;&#20813;&#20998;&#24067;&#24335;&#20107;&#21153;&#65292;&#38477;&#20302;&#31995;&#32479;&#30340;&#22797;&#26434;&#24230;</strong>&#12290;&#22914;&#26080;&#29305;&#27530;&#35828;&#26126;&#65292;&#26412;&#20070;&#20013;&#25552;&#21040;&#30340;&#25152;&#26377;&#20107;&#21153;&#22343;&#25351;&#26412;&#22320;&#20107;&#21153;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">12</span>TCC &#26159; try-confirm-cancel &#30340;&#32553;&#20889;&#65292;&#21363;&#38024;&#23545;&#27599;&#20010;&#20107;&#21153;&#25805;&#20316;&#37117;&#35201;&#25552;&#20379;&#23545;&#24212;&#30340;&#30830;&#35748;&#21644;&#25764;&#38144;&#25805;&#20316;&#65292;&#29992;&#20110;&#23454;&#29616;&#26368;&#32456;&#19968;&#33268;&#24615;&#12290;</p><p>&#20026;&#20102;&#28040;&#38500;&#19981;&#21516;&#20107;&#21153;&#23545;&#20195;&#30721;&#30340;&#24433;&#21709;&#65292;Spring Framework &#23545;&#20107;&#21153;&#31649;&#29702;&#20570;&#20102;&#19968;&#23618;&#25277;&#35937;&#65306;&#26080;&#35770;&#26159;&#20840;&#23616;&#20107;&#21153;&#36824;&#26159;&#26412;&#22320;&#20107;&#21153;&#65292;&#26080;&#35770; JDBC &#30452;&#25509;&#25805;&#20316; SQL &#36824;&#26159;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#65292;&#37117;&#33021;&#22312;&#19968;&#20010;&#27169;&#22411;&#20013;&#21435;&#29702;&#35299;&#21644;&#31649;&#29702;&#20107;&#21153;&#12290;&#36825;&#20010;&#25277;&#35937;&#30340;&#26680;&#24515;&#26159;&#20107;&#21153;&#31649;&#29702;&#22120;&#65292;&#21363; <code>TransactionManager</code>&#65292;&#23427;&#26159;&#19968;&#20010;&#31354;&#25509;&#21475;&#65292;&#36890;&#24120;&#37117;&#20250;&#23558; <code>PlatformTransactionManager</code> &#20316;&#20026;&#26680;&#24515;&#25509;&#21475;&#65292;&#20854;&#20013;&#21253;&#21547;&#20102;&#33719;&#21462;&#20107;&#21153;&#12289;&#25552;&#20132;&#20107;&#21153;&#21644;&#22238;&#28378;&#20107;&#21153;&#30340;&#26041;&#27861;&#12290;&#23427;&#30340;&#23450;&#20041;&#26159;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface PlatformTransactionManager extends TransactionManager {
    TransactionStatus getTransaction(@Nullable TransactionDefinition definition)throws TransactionException;
    void commit(TransactionStatus status) throws TransactionException;
    void rollback(TransactionStatus status) throws TransactionException;
}</code></pre><p><code>DataSourceTransactionManager</code>&#12289;<code>JtaTransactionManager</code> &#21644; <code>HibernateTransactionManager</code> &#36825;&#20123;&#24213;&#23618;&#20107;&#21153;&#31649;&#29702;&#22120;&#37117;&#23454;&#29616;&#20102;&#19978;&#36848;&#25509;&#21475;&#12290;&#23545;&#19978;&#23618;&#19994;&#21153;&#26469;&#35828;&#65292;&#21482;&#35201;&#30693;&#36947;&#33021;&#35843;&#29992; <code>PlatformTransaction-Manager</code> &#25509;&#21475;&#30340;&#36825;&#20960;&#20010;&#26041;&#27861;&#26469;&#25805;&#20316;&#20107;&#21153;&#23601;&#34892;&#65292;&#20107;&#21153;&#30340;&#24046;&#24322;&#23601;&#36825;&#26679;&#34987;&#23631;&#34109;&#20102;&#12290;&#20197;&#26412;&#22320;&#25968;&#25454;&#28304;&#30340;&#20107;&#21153;&#20026;&#20363;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#26469;&#37197;&#32622; <code>DataSourceTransactionManager</code>&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;
    &lt;property name="dataSource" ref="dataSource"/&gt;
&lt;/bean&gt;</code></pre><p>&#29992;&#26469;&#25551;&#36848;&#20107;&#21153;&#23450;&#20041;&#30340; <code>TransactionDefinition</code> &#25509;&#21475;&#20013;&#21253;&#21547;&#20102;&#20960;&#20010;&#19982;&#20107;&#21153;&#23494;&#20999;&#30456;&#20851;&#30340;&#23646;&#24615;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#20256;&#25773;&#24615;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#38548;&#31163;&#32423;&#21035;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#36229;&#26102;&#26102;&#38388;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#26159;&#21542;&#21482;&#35835;</li>
</ul><p>&#8220;&#36229;&#26102;&#26102;&#38388;&#8221;&#21644;&#8220;&#26159;&#21542;&#21482;&#35835;&#8221;&#27604;&#36739;&#23481;&#26131;&#29702;&#35299;&#65292;&#32780;&#8220;&#20256;&#25773;&#24615;&#8221;&#21644;&#8220;&#38548;&#31163;&#32423;&#21035;&#8221;&#38656;&#35201;&#20877;&#23637;&#24320;&#35828;&#26126;&#19968;&#19979;&#12290;</p><ol>
<li><p><strong>&#20256;&#25773;&#24615;</strong></p>
<p>&#20107;&#21153;&#20256;&#25773;&#24615;&#20998;&#20026; 7 &#20010;&#32423;&#21035;&#65292;&#23545;&#24212;&#30340;&#65292;&#22312; <code>TransactionDefinition</code> &#20013;&#23450;&#20041;&#20102; 7 &#20010;&#24120;&#37327;&#65292;&#20855;&#20307;&#20449;&#24687;&#22914;&#34920; 6-7 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 6-7&#12288;&#20107;&#21153;&#20256;&#25773;&#24615;&#30340;&#30456;&#20851;&#23450;&#20041;&#19982;&#35828;&#26126;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#20256;&#25773;&#24615;</th><th>&#20540;</th><th>&#25551;&#36848;</th></tr><tr><td><code>PROPAGATION_REQUIRED</code></td><td><code>0</code></td><td>&#24403;&#21069;&#26377;&#20107;&#21153;&#23601;&#29992;&#24403;&#21069;&#20107;&#21153;&#65292;&#27809;&#26377;&#20107;&#21153;&#23601;&#26032;&#21551;&#21160;&#19968;&#20010;&#20107;&#21153;</td></tr><tr><td><code>PROPAGATION_SUPPORTS</code></td><td><code>1</code></td><td>&#20107;&#21153;&#19981;&#26159;&#24517;&#38656;&#30340;&#65292;&#21487;&#20197;&#26377;&#20107;&#21153;&#65292;&#20063;&#21487;&#20197;&#27809;&#26377;</td></tr><tr><td><code>PROPAGATION_MANDATORY</code></td><td><code>2</code></td><td>&#19968;&#23450;&#35201;&#23384;&#22312;&#19968;&#20010;&#20107;&#21153;&#65292;&#19981;&#28982;&#23601;&#25253;&#38169;</td></tr><tr><td><code>PROPAGATION_REQUIRES_NEW</code></td><td><code>3</code></td><td>&#26032;&#21551;&#21160;&#19968;&#20010;&#20107;&#21153;&#65292;&#22914;&#26524;&#24403;&#21069;&#23384;&#22312;&#19968;&#20010;&#20107;&#21153;&#21017;&#23558;&#20854;&#25346;&#36215;</td></tr><tr><td><code>PROPAGATION_NOT_SUPPORTED</code></td><td><code>4</code></td><td>&#19981;&#25903;&#25345;&#20107;&#21153;&#65292;&#20197;&#38750;&#20107;&#21153;&#30340;&#26041;&#24335;&#36816;&#34892;</td></tr><tr><td><code>PROPAGATION_NEVER</code></td><td><code>5</code></td><td>&#19981;&#25903;&#25345;&#20107;&#21153;&#65292;&#22914;&#26524;&#24403;&#21069;&#23384;&#22312;&#19968;&#20010;&#20107;&#21153;&#21017;&#25243;&#24322;&#24120;</td></tr><tr><td><code>PROPAGATION_NESTED</code></td><td><code>6</code></td><td>&#22914;&#26524;&#24403;&#21069;&#23384;&#22312;&#19968;&#20010;&#20107;&#21153;&#65292;&#21017;&#22312;&#35813;&#20107;&#21153;&#20869;&#20877;&#21551;&#21160;&#19968;&#20010;&#20107;&#21153;</td></tr></table>
<p>&#40664;&#35748;&#30340;&#20107;&#21153;&#20256;&#25773;&#24615;&#20250;&#20351;&#29992; <code>PROPAGATION_REQUIRED</code>&#65292;&#27491;&#24120;&#24773;&#20917;&#19979;&#36825;&#23601;&#22815;&#20102;&#12290;&#22312;&#19978;&#38754;&#30340; 7 &#31181;&#24773;&#20917;&#20013;&#65292;&#38656;&#35201;&#20877;&#29305;&#27530;&#35828;&#26126;&#19968;&#19979; <code>PROPAGATION_REQUIRES_NEW</code> &#21644; <code>PROPAGATION_NESTED</code> &#30340;&#24322;&#21516;&#28857;&#65306;&#23427;&#20204;&#37117;&#20250;&#21551;&#21160;&#20004;&#20010;&#20107;&#21153;&#65292;&#20294;&#21069;&#32773;&#30340;&#20004;&#20010;&#20107;&#21153;&#26159;&#19981;&#30456;&#20851;&#30340;&#65292;&#32780;&#21518;&#32773;&#30340;&#20004;&#20010;&#20107;&#21153;&#23384;&#22312;&#21253;&#21547;&#20851;&#31995;&#12290;&#20551;&#35774;&#20351;&#29992; <code>PROPAGATION_NESTED</code> &#26102;&#20004;&#20010;&#20107;&#21153;&#20998;&#21035;&#20026;&#20107;&#21153; A &#21644;&#20107;&#21153; B&#65292;&#20107;&#21153; A &#21253;&#21547;&#20107;&#21153; B&#65292;&#20107;&#21153; B &#22914;&#26524;&#22238;&#28378;&#20102;&#65292;&#20107;&#21153; A &#21487;&#20197;&#19981;&#21463;&#20107;&#21153; B &#30340;&#24433;&#21709;&#32487;&#32493;&#25552;&#20132;&#65292;&#20294;&#22914;&#26524;&#20107;&#21153; A &#22238;&#28378;&#20102;&#65292;&#21738;&#24597;&#20107;&#21153; B &#26159;&#25552;&#20132;&#29366;&#24577;&#20063;&#20250;&#34987;&#22238;&#28378;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#20107;&#21153;&#38548;&#31163;&#32423;&#21035;</strong></p>
<p>&#25968;&#25454;&#24211;&#30340;&#20107;&#21153;&#26377; 4 &#31181;&#38548;&#31163;&#32423;&#21035;&#65292;&#38548;&#31163;&#32423;&#21035;&#36234;&#39640;&#65292;&#19981;&#21516;&#20107;&#21153;&#30456;&#20114;&#24433;&#21709;&#30340;&#27010;&#29575;&#23601;&#36234;&#23567;&#65292;&#20855;&#20307;&#23601;&#26159;&#20986;&#29616;&#33039;&#35835;&#12289;&#19981;&#21487;&#37325;&#22797;&#35835;&#21644;&#24187;&#35835;&#30340;&#24773;&#20917;&#12290;&#36825;&#19977;&#31181;&#24773;&#20917;&#30340;&#20855;&#20307;&#25551;&#36848;&#22914;&#19979;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#33039;&#35835;</strong>&#65306;&#20107;&#21153; A &#20462;&#25913;&#20102;&#35760;&#24405; 1 &#30340;&#20540;&#20294;&#26410;&#25552;&#20132;&#20107;&#21153;&#65292;&#36825;&#26102;&#20107;&#21153; B &#35835;&#21462;&#20102;&#35760;&#24405; 1 &#23578;&#26410;&#25552;&#20132;&#30340;&#20540;&#65292;&#20294;&#21518;&#26469;&#20107;&#21153; A &#22238;&#28378;&#20102;&#65292;&#20107;&#21153; B &#35835;&#21040;&#30340;&#20540;&#24182;&#19981;&#20250;&#23384;&#22312;&#20110;&#25968;&#25454;&#24211;&#20013;&#65292;&#36825;&#23601;&#26159;&#33039;&#35835;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#19981;&#21487;&#37325;&#22797;&#35835;</strong>&#65306;&#20107;&#21153; A &#20250;&#35835;&#21462;&#35760;&#24405; 1 &#20004;&#27425;&#65292;&#22312;&#20004;&#27425;&#35835;&#21462;&#20043;&#38388;&#65292;&#20107;&#21153; B &#20462;&#25913;&#20102;&#35760;&#24405; 1 &#30340;&#20540;&#24182;&#25552;&#20132;&#20102;&#65292;&#36825;&#26102;&#20107;&#21153; A &#31532;&#19968;&#27425;&#19982;&#31532;&#20108;&#27425;&#35835;&#21462;&#21040;&#30340;&#35760;&#24405; 1 &#30340;&#20869;&#23481;&#23601;&#19981;&#19968;&#26679;&#20102;&#65292;&#36825;&#23601;&#26159;&#19981;&#21487;&#37325;&#22797;&#35835;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#24187;&#35835;</strong>&#65306;&#20107;&#21153; A &#20197;&#26576;&#31181;&#26465;&#20214;&#25805;&#20316;&#20102;&#25968;&#25454;&#34920;&#20013;&#30340;&#19968;&#25209;&#25968;&#25454;&#65292;&#36825;&#26102;&#20107;&#21153; B &#24448;&#34920;&#20013;&#25554;&#20837;&#24182;&#25552;&#20132;&#20102; 1 &#26465;&#35760;&#24405;&#65292;&#27491;&#22909;&#20063;&#31526;&#21512;&#20107;&#21153; A &#30340;&#25805;&#20316;&#26465;&#20214;&#65292;&#24403;&#20107;&#21153; A &#20877;&#27425;&#20197;&#21516;&#26679;&#30340;&#26465;&#20214;&#25805;&#20316;&#36825;&#25209;&#25968;&#25454;&#26102;&#65292;&#23601;&#20250;&#21457;&#29616;&#25805;&#20316;&#30340;&#25968;&#25454;&#38598;&#21464;&#20102;&#65292;&#36825;&#23601;&#26159;&#24187;&#35835;&#12290;&#20197; <code>SELECT count(*)</code> &#20026;&#20363;&#65292;&#21457;&#29983;&#24187;&#35835;&#26102;&#65292;&#22914;&#26524;&#20004;&#27425;&#20197;&#21516;&#26679;&#30340;&#26465;&#20214;&#26469;&#25191;&#34892;&#65292;&#32467;&#26524;&#20540;&#23601;&#20250;&#19981;&#21516;&#12290;</li>
</ul>
<p>&#19981;&#21487;&#37325;&#22797;&#35835;&#19982;&#24187;&#35835;&#30475;&#36215;&#26469;&#24456;&#20687;&#65292;&#20294;&#19981;&#21487;&#37325;&#22797;&#35835;&#24378;&#35843;&#30340;&#26159;&#21516;&#19968;&#26465;&#25968;&#25454;&#22312;&#20004;&#27425;&#35835;&#21462;&#20043;&#38388;&#34987;&#20462;&#25913;&#20102;&#65292;&#32780;&#24187;&#35835;&#24378;&#35843;&#30340;&#26159;&#25968;&#25454;&#38598;&#21457;&#29983;&#20102;&#25968;&#25454;&#22686;&#21152;&#25110;&#25968;&#25454;&#21024;&#38500;&#30340;&#24773;&#20917;&#12290;</p>
<p>&#21516;&#26679;&#30340;&#65292;<code>TransactionDefinition</code> &#20013;&#20063;&#23545;&#20107;&#21153;&#38548;&#31163;&#32423;&#21035;&#20570;&#20102;&#20855;&#20307;&#30340;&#23450;&#20041;&#65292;&#24341;&#29992;&#20102; JDBC <code>Connection</code> &#20013;&#30340;&#24120;&#37327;&#65292;&#20855;&#20307;&#20449;&#24687;&#22914;&#34920; 6-8 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 6-8&#12288;&#20107;&#21153;&#38548;&#31163;&#32423;&#21035;&#30340;&#30456;&#20851;&#23450;&#20041;&#19982;&#35828;&#26126;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#38548;&#31163;&#24615;</th><th>&#20540;</th><th>&#33039;&#35835;</th><th>&#19981;&#21487;&#37325;&#22797;&#35835;</th><th>&#24187;&#35835;</th></tr><tr><td><code>ISOLATION_READ_UNCOMMITTED</code></td><td><code>1</code></td><td>&#23384;&#22312;</td><td>&#23384;&#22312;</td><td>&#23384;&#22312;</td></tr><tr><td><code>ISOLATION_READ_COMMITTED</code></td><td><code>2</code></td><td>&#19981;&#23384;&#22312;</td><td>&#23384;&#22312;</td><td>&#23384;&#22312;</td></tr><tr><td><code>ISOLATION_REPEATABLE_READ</code></td><td><code>3</code></td><td>&#19981;&#23384;&#22312;</td><td>&#19981;&#23384;&#22312;</td><td>&#23384;&#22312;</td></tr><tr><td><code>ISOLATION_SERIALIZABLE</code></td><td><code>4</code></td><td>&#19981;&#23384;&#22312;</td><td>&#19981;&#23384;&#22312;</td><td>&#19981;&#23384;&#22312;</td></tr></table>
<p><code>TransactionDefinition</code> &#20013;&#30340;&#40664;&#35748;&#38548;&#31163;&#32423;&#21035;&#35774;&#32622;&#20026; <code>-1</code>&#65292;&#20351;&#29992;&#24213;&#23618;&#25968;&#25454;&#28304;&#30340;&#37197;&#32622;&#65292;&#27604;&#22914;&#65292;MySQL &#40664;&#35748;&#30340;&#38548;&#31163;&#32423;&#21035;&#26159; <code>REPEATABLE_READ</code>&#65292;Oracle &#40664;&#35748;&#30340;&#38548;&#31163;&#32423;&#21035;&#21017;&#26159; <code>READ_COMMITTED</code>&#12290;</p>
</li>
</ol><h3 id="nav_point_101">6.3.2&#12288;Spring &#20107;&#21153;&#30340;&#22522;&#26412;&#37197;&#32622;</h3><p>&#36890;&#36807; 6.3.1 &#33410;&#30340;&#20171;&#32461;&#65292;&#25105;&#20204;&#30693;&#36947; Spring Framework &#30340;&#26680;&#24515;&#31867;&#26159; <code>TransactionManager</code>&#65292;&#24182;&#19988;&#22312;&#19978;&#19979;&#25991;&#20013;&#38656;&#35201;&#19968;&#20010; <code>PlatformTransactionManager</code> Bean&#65292;&#20363;&#22914;&#65292;<code>DataSourceTransactionManager</code> &#25110;&#32773; <code>JpaTransactionManager</code>&#12290;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#26469;&#23450;&#20041;&#19968;&#20010; <code>PlatformTransactionManager</code>&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
public class TransactionConfiguration {
    @Bean
    public DataSourceTransactionManager transactionManager(DataSource dataSource) {
        return new DataSourceTransactionManager(dataSource);
    }
}</code></pre><p>&#36825;&#33410;&#30340;&#26631;&#39064;&#27809;&#26377;&#29992; Spring Framework &#26159;&#26377;&#21407;&#22240;&#30340;&#8212;&#8212; Spring Boot &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#19968;&#25972;&#22871;&#20107;&#21153;&#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#36825;&#36828;&#27604;&#33258;&#24049;&#21160;&#25163;&#37197;&#32622;&#26041;&#20415;&#12290;&#20027;&#35201;&#30340;&#33258;&#21160;&#37197;&#32622;&#31867;&#26159; <code>DataSourceTransactionManagerAutoConfiguration</code> &#21644; <code>TransactionAutoConfiguration</code>&#12290;</p><p><code>DataSourceTransactionManagerAutoConfiguration</code> &#30340;&#20316;&#29992;&#20027;&#35201;&#26159;&#33258;&#21160;&#37197;&#32622; <code>DataSourceTransactionManager</code>&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#25152;&#31034;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass({ JdbcTemplate.class, TransactionManager.class })
@AutoConfigureOrder(Ordered.LOWEST_PRECEDENCE)
@EnableConfigurationProperties(DataSourceProperties.class)
public class DataSourceTransactionManagerAutoConfiguration {
    @Configuration(proxyBeanMethods = false)
    @ConditionalOnSingleCandidate(DataSource.class)
    static class DataSourceTransactionManagerConfiguration {
        @Bean
        @ConditionalOnMissingBean(TransactionManager.class)
        DataSourceTransactionManager transactionManager(Environment environment, DataSource dataSource,
            ObjectProvider&lt;TransactionManagerCustomizers&gt; transactionManagerCustomizers) {
            // &#30465;&#30053;&#20855;&#20307;&#20195;&#30721;
        }
        // &#30465;&#30053;&#37096;&#20998;&#20195;&#30721;
    }
}</code></pre><p>&#24403; Spring &#19978;&#19979;&#25991;&#20013;&#25552;&#20379;&#20102;&#26126;&#30830;&#30340;&#19968;&#20010; <code>DataSource</code>&#65288;&#21482;&#26377;&#19968;&#20010;&#25110;&#32773;&#26631;&#26126;&#20102;&#19968;&#20010;&#20027;&#35201;&#30340; Bean&#65289;&#65292;&#19988;&#27809;&#26377;&#37197;&#32622; <code>PlatformTransactionManager</code> &#26102;&#65292;Spring Boot &#20250;&#33258;&#21160;&#21019;&#24314;&#19968;&#20010; <code>DataSourceTransactionManager</code>&#12290;&#36825;&#37324;&#38656;&#35201;&#29305;&#21035;&#35828;&#26126;&#19968;&#19979; <code>TransactionManagerCustomizers</code>&#65292;&#23427;&#26159; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#30041;&#19979;&#30340;&#25193;&#23637;&#28857;&#65292;&#21487;&#20197;&#35753;&#25105;&#20204;&#36890;&#36807;&#21019;&#24314; <code>TransactionManagerCustomizers</code> &#26469;&#23545;&#33258;&#21160;&#37197;&#32622;&#30340; <code>DataSourceTransactionManager</code> &#36827;&#34892;&#24494;&#35843;&#12290;&#22312; Spring Boot &#20013;&#31867;&#20284;&#30340; <code>XXXCustomizer</code> &#36824;&#26377;&#24456;&#22810;&#65292;&#27604;&#22914;&#22312; Web &#30456;&#20851;&#31456;&#33410;&#37324;&#20250;&#30475;&#21040;&#30340; <code>RestTemplateCustomizer</code>&#12290;</p><p><code>TransactionAutoConfiguration</code> &#20250;&#20026;&#20107;&#21153;&#20877;&#25552;&#20379;&#36827;&#19968;&#27493;&#30340;&#37197;&#32622;&#65292;&#23427;&#20027;&#35201;&#20570;&#20102;&#20004;&#20214;&#20107;&#65306;&#31532;&#19968;&#26159;&#21019;&#24314;&#20102;&#32534;&#31243;&#24335;&#20107;&#21153;&#38656;&#35201;&#29992;&#21040;&#30340; <code>TransactionTemplate</code>&#65307;&#31532;&#20108;&#26159;&#24320;&#21551;&#20102;&#22522;&#20110;&#27880;&#35299;&#30340;&#20107;&#21153;&#25903;&#25345;&#65292;&#36825;&#37096;&#20998;&#26159;&#30001;&#20869;&#37096;&#31867; <code>EnableTransactionManagementConfiguration</code> &#26469;&#23450;&#20041;&#30340;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnBean(TransactionManager.class)
@ConditionalOnMissingBean(AbstractTransactionManagementConfiguration.class)
public static class EnableTransactionManagementConfiguration {
    @Configuration(proxyBeanMethods = false)
    @EnableTransactionManagement(proxyTargetClass = false)
    @ConditionalOnProperty(prefix = "spring.aop", name = "proxy-target-class", havingValue = "false",
        matchIfMissing = false)
    public static class JdkDynamicAutoProxyConfiguration {}

    @Configuration(proxyBeanMethods = false)
    @EnableTransactionManagement(proxyTargetClass = true)
    @ConditionalOnProperty(prefix = "spring.aop", name = "proxy-target-class", havingValue = "true",
        matchIfMissing = true)
    public static class CglibAutoProxyConfiguration {}
}</code></pre><p>&#22312;&#37197;&#32622;&#31867;&#19978;&#28155;&#21152; <code>@EnableTransactionManagement</code> &#27880;&#35299;&#23601;&#33021;&#24320;&#21551;&#20107;&#21153;&#25903;&#25345;&#12290;Spring Framework &#30340;&#22768;&#26126;&#24335;&#20107;&#21153;&#26159;&#36890;&#36807; AOP &#26469;&#23454;&#29616;&#30340;&#65292;&#22240;&#27492;&#26681;&#25454; AOP &#37197;&#32622;&#30340;&#19981;&#21516;&#65292;&#38656;&#35201;&#36873;&#25321;&#26159;&#21542;&#24320;&#21551;&#23545;&#31867;&#30340;&#20195;&#29702;&#12290;&#24403; <code>spring.aop.proxy-target-class=true</code> &#26102;&#65292;&#21487;&#20197;&#30452;&#25509;&#23545;&#27809;&#26377;&#23454;&#29616;&#25509;&#21475;&#30340;&#31867;&#24320;&#21551;&#22768;&#26126;&#24335;&#20107;&#21153;&#25903;&#25345;&#65292;&#36825;&#20063;&#26159;&#40664;&#35748;&#30340;&#37197;&#32622;&#12290;</p><p>&#23454;&#38469;&#19978;&#65292;&#22914;&#26524;&#25105;&#20204;&#21435;&#32763;&#30475; <code>AopAutoConfiguration</code> &#30340;&#20195;&#30721;&#65292;&#20063;&#33021;&#30475;&#21040;&#20854;&#20013;&#26377;&#31867;&#20284;&#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#21487;&#35265;&#65292;&#22312; Spring Boot &#20013;&#22522;&#20110; CGLIB &#30340; AOP &#23601;&#26159;&#40664;&#35748;&#30340; AOP &#20195;&#29702;&#26041;&#24335;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnProperty(prefix = "spring.aop", name = "auto", havingValue = "true", matchIfMissing = true)
public class AopAutoConfiguration {
    @Configuration(proxyBeanMethods = false)
    @ConditionalOnClass(Advice.class)
    static class AspectJAutoProxyingConfiguration {
        @Configuration(proxyBeanMethods = false)
        @EnableAspectJAutoProxy(proxyTargetClass = false)
        @ConditionalOnProperty(prefix = "spring.aop", name = "proxy-target-class", havingValue = "false",
            matchIfMissing = false)
        static class JdkDynamicAutoProxyConfiguration {}

        @Configuration(proxyBeanMethods = false)
        @EnableAspectJAutoProxy(proxyTargetClass = true)
        @ConditionalOnProperty(prefix = "spring.aop", name = "proxy-target-class", havingValue = "true",
            matchIfMissing = true)
        static class CglibAutoProxyConfiguration {}
    }
    // &#20854;&#20182;&#20869;&#23481;&#30465;&#30053;
}</code></pre><p><code>TransactionProperties</code> &#26159;&#20107;&#21153;&#30340;&#23646;&#24615;&#37197;&#32622;&#65292;&#20854;&#20013;&#21482;&#26377;&#20004;&#20010;&#37197;&#32622;&#65306;<code>spring.transaction.default-timeout</code> &#29992;&#20110;&#37197;&#32622;&#40664;&#35748;&#36229;&#26102;&#26102;&#38388;&#65292;&#40664;&#35748;&#21333;&#20301;&#20026;&#31186;&#65307;<code>spring.transaction.rollback-on-commit-failure</code> &#37197;&#32622;&#22312;&#25552;&#20132;&#22833;&#36133;&#26102;&#26159;&#21542;&#22238;&#28378;&#12290;</p><h3 id="nav_point_102">6.3.3&#12288;&#22768;&#26126;&#24335;&#20107;&#21153;</h3><p>&#36890;&#24120;&#22312;&#27809;&#26377;&#29305;&#27530;&#38656;&#27714;&#30340;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#24314;&#35758;&#20351;&#29992; Spring Framework &#30340;&#22768;&#26126;&#24335;&#20107;&#21153;&#26469;&#31649;&#29702;&#20107;&#21153;&#12290;&#32780;&#19988;&#22914;&#26524;&#26377;&#19968;&#22823;&#22534;&#31867;&#38656;&#35201;&#37197;&#32622;&#20107;&#21153;&#65292;&#22768;&#26126;&#24335;&#20107;&#21153;&#20063;&#20250;&#27604;&#32534;&#31243;&#24335;&#20107;&#21153;&#26356;&#26041;&#20415;&#19968;&#20123;&#12290;&#25152;&#20197;&#65292;&#25105;&#20204;&#20250;&#30528;&#37325;&#20171;&#32461;&#22768;&#26126;&#24335;&#20107;&#21153;&#30340;&#20351;&#29992;&#26041;&#24335;&#12290;</p><ol>
<li><p><strong>&#22522;&#20110;&#27880;&#35299;&#30340;&#26041;&#24335;</strong></p>
<p>Spring Framework &#25552;&#20379;&#20102;&#19968;&#20010; <code>@Transactional</code> &#27880;&#35299;&#65292;&#23427;&#21487;&#20197;&#22312;&#31867;&#22411;&#21644;&#26041;&#27861;&#19978; <span class="&#27880;&#37322;&#32534;&#21495;">13</span> &#26631;&#27880;&#19982;&#20107;&#21153;&#30456;&#20851;&#30340;&#20449;&#24687;&#12290;&#21516;&#26102;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#20351;&#29992; JTA &#20013;&#30340; <code>@Transactional</code> &#27880;&#35299;&#65288;&#22312; <code>javax.transaction</code> &#21253;&#37324;&#65289;&#65292;&#20004;&#32773;&#30340;&#20316;&#29992;&#22522;&#26412;&#26159;&#19968;&#26679;&#30340;&#12290;&#22312;&#27880;&#35299;&#20013;&#21487;&#20197;&#35774;&#32622;&#24456;&#22810;&#20107;&#21153;&#23646;&#24615;&#65292;&#20855;&#20307;&#22914;&#34920; 6-9 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 6-9&#12288;<code>@Transactional</code> &#27880;&#35299;&#21487;&#20197;&#35774;&#32622;&#30340;&#20107;&#21153;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#23646;&#24615;</th><th>&#40664;&#35748;&#20540;</th><th>&#25551;&#36848;</th></tr><tr><td><code>transactionManager</code></td><td>&#40664;&#35748;&#20250;&#25214;&#21517;&#20026; <code>transactionManager</code> &#30340;&#20107;&#21153;&#31649;&#29702;&#22120;</td><td>&#25351;&#23450;&#20107;&#21153;&#31649;&#29702;&#22120;</td></tr><tr><td><code>propagation</code></td><td><code>Propagation.REQUIRED</code></td><td>&#25351;&#23450;&#20107;&#21153;&#30340;&#20256;&#25773;&#24615;</td></tr><tr><td><code>isolation</code></td><td><code>Isolation.DEFAULT</code></td><td>&#25351;&#23450;&#20107;&#21153;&#30340;&#38548;&#31163;&#24615;</td></tr><tr><td><code>timeout</code></td><td><code>-1</code>&#65292;&#21363;&#30001;&#20855;&#20307;&#30340;&#24213;&#23618;&#23454;&#29616;&#26469;&#35774;&#32622;</td><td>&#25351;&#23450;&#20107;&#21153;&#36229;&#26102;&#26102;&#38388;</td></tr><tr><td><code>readOnly</code></td><td><code>false</code></td><td>&#26159;&#21542;&#20026;&#21482;&#35835;&#20107;&#21153;</td></tr><tr><td><code>rollbackFor</code> / <code>rollbackForClassName</code></td><td>&#31354;</td><td>&#25351;&#23450;&#38656;&#35201;&#22238;&#28378;&#20107;&#21153;&#30340;&#24322;&#24120;&#31867;&#22411;</td></tr><tr><td><code>noRollbackFor</code> / <code>noRollbackForClassName</code></td><td>&#31354;</td><td>&#25351;&#23450;&#26080;&#39035;&#22238;&#28378;&#20107;&#21153;&#30340;&#24322;&#24120;&#31867;&#22411;</td></tr></table>
<blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#40664;&#35748;&#24773;&#20917;&#19979;&#65292;&#20107;&#21153;&#21482;&#20250;&#22312;&#36935;&#21040; <code>RuntimeException</code> &#21644; <code>Error</code> &#26102;&#25165;&#20250;&#22238;&#28378;&#65292;&#30896;&#21040;&#21463;&#26816;&#24322;&#24120;&#65288;checked exception&#65289;&#26102;&#24182;&#19981;&#20250;&#22238;&#28378;&#12290;&#20363;&#22914;&#65292;&#25105;&#20204;&#23450;&#20041;&#20102;&#19968;&#20010;&#19994;&#21153;&#24322;&#24120; <code>BizException</code>&#65292;&#23427;&#32487;&#25215;&#30340;&#26159; <code>Exception</code> &#31867;&#65292;&#22312;&#20195;&#30721;&#25243;&#20986;&#36825;&#20010;&#24322;&#24120;&#26102;&#65292;&#20107;&#21153;&#19981;&#20250;&#33258;&#24049;&#22238;&#28378;&#65292;&#20294;&#25105;&#20204;&#21487;&#20197;&#25163;&#21160;&#35774;&#32622;&#22238;&#28378;&#65292;&#25110;&#32773;&#22312; <code>rollbackFor</code> &#20013;&#36827;&#34892;&#35774;&#32622;&#12290;</p>
</blockquote>
<p>&#35201;&#24320;&#21551;&#27880;&#35299;&#39537;&#21160;&#30340;&#20107;&#21153;&#25903;&#25345;&#65292;&#26377;&#20004;&#31181;&#26041;&#24335;&#65292;&#22312;&#19978;&#19968;&#33410;&#37324;&#24050;&#32463;&#30475;&#21040;&#36807;&#20102;&#22312;&#37197;&#32622;&#31867;&#19978;&#28155;&#21152; <code>@EnableTransactionManagement</code> &#30340;&#26041;&#24335;&#65292;&#36825;&#37324;&#26469;&#20171;&#32461;&#19968;&#19979;&#31532;&#20108;&#31181;&#65306;&#36890;&#36807; <code>&lt;tx:annotation-driven/&gt;</code> &#36825;&#20010; XML &#26631;&#31614;&#26469;&#21551;&#29992;&#27880;&#35299;&#25903;&#25345;&#65292;&#20855;&#20307;&#22914;&#19979;&#25152;&#31034;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd"&gt;

    &lt;!-- &#24320;&#21551;&#20107;&#21153;&#27880;&#35299;&#25903;&#25345;&#65292;&#21487;&#20197;&#26126;&#30830;&#35774;&#32622;&#19968;&#20010;TransactionManager --&gt;
    &lt;tx:annotation-driven transaction-manager="txManager"/&gt;
&lt;/beans&gt;</code></pre>
<p>&#22312;&#24320;&#21551;&#27880;&#35299;&#39537;&#21160;&#20107;&#21153;&#25903;&#25345;&#26102;&#65292;&#38500;&#20102;&#37197;&#32622; <code>TransactionManager</code>&#65292;&#36824;&#21487;&#20197;&#36827;&#34892;&#19968;&#20123;&#20854;&#20182;&#37197;&#32622;&#12290;<code>@EnableTransactionManagement</code> &#21644; <code>&lt;tx:annotation-driven/&gt;</code> &#25317;&#26377;&#19968;&#20123;&#20849;&#21516;&#30340;&#37197;&#32622;&#65292;&#22914;&#34920; 6-10 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 6-10&#12288;&#27880;&#35299;&#39537;&#21160;&#20107;&#21153;&#25903;&#25345;&#30340;&#37096;&#20998;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#21547;&#20041;</th></tr><tr><td><code>mode</code></td><td><code>proxy</code></td><td>&#22768;&#26126;&#24335;&#20107;&#21153; AOP &#30340;&#25318;&#25130;&#26041;&#24335;&#65292;&#40664;&#35748; <code>proxy</code> &#26159;&#20195;&#29702;&#26041;&#24335;&#65292;&#20063;&#21487;&#20197;&#25913;&#20026; <code>aspectj</code></td></tr><tr><td><code>order</code></td><td><code>Ordered.LOWEST_PRECEDENCE</code></td><td>&#22768;&#26126;&#24335;&#20107;&#21153; AOP &#25318;&#25130;&#30340;&#39034;&#24207;&#65292;&#20540;&#36234;&#23567;&#65292;&#20248;&#20808;&#32423;&#36234;&#39640;</td></tr><tr><td><code>proxyTargetClass</code> / <code>proxy-target-class</code>&#65288;XML&#65289;</td><td><code>false</code></td><td>&#26159;&#21542;&#20351;&#29992; CGLIB &#30340;&#26041;&#24335;&#25318;&#25130;&#31867; <sup><b>14</b></sup></td></tr></table>
<blockquote>
<p><sup><b>14</b></sup>&#34429;&#28982;&#36825;&#37324;&#30340;&#40664;&#35748;&#20540;&#26159; <code>false</code>&#65292;&#20294;&#36890;&#36807; 6.3.2 &#33410;&#30340;&#20171;&#32461;&#65292;&#25105;&#20204;&#24050;&#32463;&#30693;&#36947;&#20102;&#22312; Spring Boot &#20013;&#65292;&#40664;&#35748;&#20250;&#20351;&#29992; CGLIB &#30340;&#26041;&#24335;&#26469;&#20570;&#25318;&#25130;&#12290;</p>
</blockquote>
<p>&#22312; <code>&lt;tx:annotation-driven/&gt;</code> &#20013;&#36824;&#26377;&#19968;&#20010; <code>transacation-manager</code> &#23646;&#24615;&#65292;&#22312;&#20107;&#21153;&#31649;&#29702;&#22120;&#30340;&#21517;&#23383;&#19981;&#26159; <code>transactionManager</code> &#26102;&#29992;&#26469;&#25351;&#23450;&#20107;&#21153;&#35201;&#20351;&#29992;&#30340;&#20107;&#21153;&#31649;&#29702;&#22120;&#12290;&#20294; <code>@EnableTransactionManagement</code> &#37324;&#21364;&#27809;&#26377;&#36825;&#19968;&#23646;&#24615;&#65292;&#23427;&#20250;&#26681;&#25454;&#31867;&#22411;&#26469;&#20570;&#27880;&#20837;&#12290;&#22914;&#26524;&#24076;&#26395;&#26126;&#30830;&#25351;&#23450;&#20351;&#29992;&#21738;&#20010; <code>TransactionManager</code>&#65292;&#21487;&#20197;&#35753; <code>@Configuration</code> &#31867;&#23454;&#29616; <code>TransactionManagementConfigurer</code> &#25509;&#21475;&#65292;&#22312; <code>annotationDrivenTransactionManager()</code> &#26041;&#27861;&#37324;&#36820;&#22238;&#24076;&#26395;&#20351;&#29992;&#30340;&#37027;&#20010; <code>TransactionManager</code>&#12290;</p>
<p>&#22312;&#20171;&#32461;&#20107;&#21153;&#20256;&#25773;&#24615;&#26102;&#65292;&#25105;&#20204;&#26377;&#35762;&#21040; <code>PROPAGATION_REQUIRED</code>&#12289;<code>PROPAGATION_REQUIRES_NEW</code> &#21644; <code>PROPAGATION_NESTED</code> &#30340;&#21306;&#21035;&#12290;&#19979;&#38754;&#25105;&#20204;&#36890;&#36807;&#22522;&#20110;&#27880;&#35299;&#30340;&#22768;&#26126;&#24335;&#20107;&#21153;&#26469;&#23454;&#38469;&#24863;&#21463;&#19968;&#19979;&#23427;&#20204;&#20043;&#38388;&#30340;&#24046;&#21035;&#12290;</p>
<p>&#36890;&#36807; Spring Initializr &#21019;&#24314;&#19968;&#20010;&#26032;&#24037;&#31243; <span class="&#27880;&#37322;&#32534;&#21495;">15</span>&#65292;&#20381;&#36182;&#39033;&#36873;&#25321; JDBC API&#12289;H2 &#21644; Lombok&#12290;&#22312; src/main/resources &#30446;&#24405;&#20013;&#21019;&#24314; schema.sql&#65292;&#28155;&#21152;&#20195;&#30721;&#31034;&#20363; 6-23 &#20013;&#30340;&#24314;&#34920;&#35821;&#21477;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-23</strong>&#12288;schema.sql &#20013;&#30340;&#24314;&#34920;&#35821;&#21477;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>create table t_demo (
    id bigint auto_increment,
    name varchar(128),
    create_time timestamp,
    update_time timestamp,
    primary key (id)
);</code></pre>
<p>&#25509;&#19979;&#26469;&#25105;&#20204;&#30340;&#35797;&#39564;&#23601;&#26159;&#25805;&#20316; <code>t_demo</code> &#34920;&#65292;&#22312;&#19981;&#21516;&#30340;&#20107;&#21153;&#20256;&#25773;&#24615;&#19979;&#25554;&#20837;&#35760;&#24405;&#65292;&#26597;&#30475;&#32467;&#26524;&#65292;&#23545;&#34920;&#30340;&#25805;&#20316;&#22914;&#20195;&#30721;&#31034;&#20363; 6-24 &#25152;&#31034;&#12290;&#19977;&#20010;&#25554;&#20837;&#26041;&#27861;&#20998;&#21035;&#20351;&#29992;&#19981;&#21516;&#30340;&#20107;&#21153;&#20256;&#25773;&#24615;&#65292;<code>showNames()</code> &#26041;&#27861;&#36820;&#22238;&#34920;&#20013;&#25152;&#26377;&#30340; <code>name</code> &#20869;&#23481;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-24</strong>&#12288;&#25552;&#20379;&#19981;&#21516;&#20107;&#21153;&#20256;&#25773;&#24615;&#25554;&#20837;&#26041;&#27861;&#30340; <code>DemoService</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>package learning.spring.transaction;

// &#30465;&#30053;import

@Service
public class DemoService {
    public static final String SQL =
        "insert into t_demo (name, create_time, update_time) values(?, now(), now())";
    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Transactional(readOnly = true)
    public String showNames() {
        return jdbcTemplate.queryForList("select name from t_demo;", String.class)
            .stream().collect(Collectors.joining(","));
    }

    @Transactional(propagation = Propagation.REQUIRED)
    public void insertRecordRequired() {
        jdbcTemplate.update(SQL, "one");
    }

    @Transactional(propagation = Propagation.REQUIRES_NEW)
    public void insertRecordRequiresNew() {
        jdbcTemplate.update(SQL, "two");
    }

    @Transactional(propagation = Propagation.NESTED)
    public void insertRecordNested() {
        jdbcTemplate.update(SQL, "three");
        throw new RuntimeException(); // &#35753;&#20107;&#21153;&#22238;&#28378;
    }
}</code></pre>
<p>&#20877;&#29992;&#21478;&#19968;&#20010;&#31867;&#26469;&#32452;&#21512;&#20960;&#20010;&#25554;&#20837;&#26041;&#27861;&#65292;&#19981;&#21516;&#30340;&#32452;&#21512;&#20250;&#26377;&#19981;&#21516;&#30340;&#25928;&#26524;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 6-25 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-25</strong>&#12288;&#35843;&#29992;&#25554;&#20837;&#26041;&#27861;&#30340; <code>MixService</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>package learning.spring.transaction;

// &#30465;&#30053;import

@Service
public class MixService {
    @Autowired
    private DemoService demoService;

    @Transactional
    public void trySomeMethods() {
        demoService.insertRecordRequired();
        try {
            demoService.insertRecordNested();
        } catch(Exception e) {}
    }
}</code></pre>
<p>&#24037;&#31243;&#30340;&#20027;&#31867;&#23601;&#27604;&#36739;&#31616;&#21333;&#20102;&#65292;&#25191;&#34892; <code>MixService</code> &#30340; <code>trySomeMethods()</code> &#26041;&#27861;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 6-26 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-26</strong>&#12288;<code>AnnotationDemoApplication</code> &#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@Slf4j
public class AnnotationDemoApplication implements ApplicationRunner {
    @Autowired
    private MixService mixService;
    @Autowired
    private DemoService demoService;

    public static void main(String[] args) {
        SpringApplication.run(AnnotationDemoApplication.class, args);
    }

    @Override
    public void run(ApplicationArguments args) throws Exception {
        try {
            mixService.trySomeMethods();
        } catch (Exception e) {}
        log.info("Names: {}", demoService.showNames());
    }
}</code></pre>
<p>&#22312;&#30446;&#21069;&#30340; <code>trySomeMethods()</code> &#20013;&#65292;&#31243;&#24207;&#20250;&#36755;&#20986; <code>Names: one</code>&#65292;&#20869;&#23884;&#20107;&#21153;&#22238;&#28378;&#19981;&#24433;&#21709;&#22806;&#37096;&#20107;&#21153;&#12290;&#22914;&#26524;&#23558; <code>trySomeMethods()</code> &#35843;&#25972;&#20026;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Transactional
public void trySomeMethods() {
    demoService.insertRecordRequired();
    demoService.insertRecordRequiresNew();
    throw new RuntimeException();
}</code></pre>
<p>&#37027;&#36755;&#20986;&#23601;&#20250;&#26159; <code>Names: two</code>&#65292;<code>Propagation.REQUIRES_NEW</code>&#65292;&#20250;&#26032;&#21551;&#21160;&#19968;&#20010;&#19982;&#24403;&#21069;&#20107;&#21153;&#26080;&#20851;&#30340;&#20107;&#21153;&#65292;&#25552;&#20132;&#21518;&#22914;&#26524;&#24403;&#21069;&#20107;&#21153;&#22238;&#28378;&#20102;&#65292;&#19981;&#20250;&#24433;&#21709;&#24050;&#25552;&#20132;&#20869;&#23481;&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#36890;&#24120;&#20107;&#21153;&#21152;&#22312;&#21738;&#23618;&#27604;&#36739;&#21512;&#36866;&#65311;</strong></p>
<p>Spring Framework &#34429;&#28982;&#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#22768;&#26126;&#24335;&#30340;&#20107;&#21153;&#65292;&#21487;&#20197;&#23558;&#20107;&#21153;&#19982;&#20195;&#30721;&#21093;&#31163;&#65292;&#20294;&#23427;&#24182;&#27809;&#26377;&#21578;&#35785;&#25105;&#20204;&#31350;&#31455;&#23558;&#20107;&#21153;&#25318;&#22312;&#21738;&#37324;&#26356;&#21512;&#36866;&#12290;</p>
<p>&#36890;&#24120;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#20250;&#23545;&#24212;&#29992;&#36827;&#34892;&#20998;&#23618;&#65292;&#21010;&#20998;&#20986; DAO &#23618;&#12289;Service &#23618;&#12289;View &#23618;&#31561;&#12290;&#22914;&#26524;&#20102;&#35299;&#36807;&#39046;&#22495;&#39537;&#21160;&#35774;&#35745;&#65288;Domain-Driven Design&#65292;DDD&#65289;&#65292;&#23601;&#20250;&#30693;&#36947;&#20854;&#20013;&#20063;&#26377; Repository &#21644; Service &#30340;&#27010;&#24565;&#12290;&#19968;&#27425;&#19994;&#21153;&#25805;&#20316;&#19968;&#33324;&#37117;&#20250;&#28041;&#21450;&#22810;&#24352;&#34920;&#30340;&#25968;&#25454;&#65292;&#22240;&#27492;&#22312;&#21333;&#34920;&#30340; DAO &#25110; Repository &#19978;&#22686;&#21152;&#20107;&#21153;&#65292;&#31890;&#24230;&#22826;&#32454;&#65292;&#24182;&#19981;&#33021;&#23454;&#29616;&#19994;&#21153;&#30340;&#35201;&#27714;&#12290;&#32780;&#22312;&#23545;&#22806;&#25552;&#20379;&#30340;&#26381;&#21153;&#25509;&#21475;&#19978;&#22686;&#21152;&#20107;&#21153;&#65292;&#25972;&#20010;&#20107;&#21153;&#30340;&#33539;&#22260;&#21448;&#22826;&#22823;&#65292;&#19968;&#20010;&#35831;&#27714;&#20174;&#24320;&#22987;&#21040;&#32467;&#26463;&#37117;&#22312;&#19968;&#20010;&#22823;&#20107;&#21153;&#37324;&#65292;&#30528;&#23454;&#21448;&#26377;&#20123;&#28010;&#36153;&#12290;</p>
<p>&#25152;&#20197;&#65292;&#20107;&#21153;&#19968;&#33324;&#25918;&#22312;&#20869;&#37096;&#30340;&#39046;&#22495;&#26381;&#21153;&#19978;&#65292;&#20063;&#23601;&#26159; Service &#23618;&#19978;&#20250;&#26159;&#27604;&#36739;&#24120;&#35265;&#30340;&#19968;&#20010;&#20570;&#27861;&#65292;&#20854;&#20013;&#30340;&#19968;&#20010;&#26041;&#27861;&#65292;&#20063;&#23601;&#23545;&#24212;&#20102;&#19968;&#20010;&#19994;&#21153;&#25805;&#20316;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#22522;&#20110; XML &#30340;&#26041;&#24335;</strong></p>
<p>&#30475;&#36807;&#20102;&#27880;&#35299;&#39537;&#21160;&#30340;&#20107;&#21153;&#65292;&#20877;&#26469;&#20102;&#35299;&#19968;&#19979;&#22914;&#20309;&#36890;&#36807; XML &#37197;&#32622;&#23454;&#29616;&#30456;&#21516;&#30340;&#21151;&#33021;&#12290;<code>@Transactional</code> &#27880;&#35299;&#38656;&#35201;&#28155;&#21152;&#22312;&#20195;&#30721;&#37324;&#65292;&#32780; XML &#21017;&#21487;&#20197;&#20174;&#19994;&#21153;&#20195;&#30721;&#21093;&#31163;&#65292;&#23558;&#20107;&#21153;&#37197;&#32622;&#19982;&#19994;&#21153;&#36923;&#36753;&#35299;&#32806;&#12290;</p>
<p>Spring Framework &#25552;&#20379;&#20102;&#19968;&#31995;&#21015; <code>&lt;tx/&gt;</code> &#30340; XML &#26469;&#37197;&#32622;&#20107;&#21153;&#30456;&#20851;&#30340; AOP &#36890;&#30693;&#12290;&#26377;&#20102; AOP &#36890;&#30693;&#21518;&#65292;&#25105;&#20204;&#23601;&#21487;&#20197;&#20687;&#26222;&#36890;&#30340; AOP &#37197;&#32622;&#37027;&#26679;&#23545;&#26041;&#27861;&#30340;&#25191;&#34892;&#36827;&#34892;&#25318;&#25130;&#21644;&#22686;&#24378;&#20102;&#12290;</p>
<p>&#20854;&#20013;&#65292;<code>&lt;tx:advice/&gt;</code> &#29992;&#26469;&#37197;&#32622;&#20107;&#21153;&#36890;&#30693;&#65292;&#22914;&#26524;&#20107;&#21153;&#31649;&#29702;&#22120;&#30340;&#21517;&#23383;&#26159; <code>transactionManager</code>&#65292;&#37027;&#23601;&#21487;&#20197;&#19981;&#29992;&#35774;&#32622; <code>transaction-manager</code> &#23646;&#24615;&#20102;&#12290;&#20855;&#20307;&#30340;&#20107;&#21153;&#23646;&#24615;&#21017;&#36890;&#36807; <code>&lt;tx:attributes/&gt;</code> &#21644; <code>&lt;tx:method/&gt;</code> &#26469;&#35774;&#32622;&#12290;<code>&lt;tx:method/&gt;</code> &#21487;&#20379;&#35774;&#32622;&#30340;&#23646;&#24615;&#21644; <code>@Transactional</code> &#27880;&#35299;&#30340;&#22522;&#26412;&#19968;&#26679;&#65292;&#20855;&#20307;&#35265;&#34920; 6-11&#12290;</p>
<p><strong>&#34920; 6-11&#12288;<code>&lt;tx:method/&gt;</code> &#30340;&#23646;&#24615;&#28165;&#21333;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#23646;&#24615;</th><th>&#40664;&#35748;&#20540;</th><th>&#21547;&#20041;</th></tr><tr><td><code>name</code></td><td>&#26080;</td><td>&#35201;&#25318;&#25130;&#30340;&#26041;&#27861;&#21517;&#31216;&#65292;&#21487;&#20197;&#24102;&#36890;&#37197;&#31526;&#65292;&#26159;&#21807;&#19968;&#30340;&#24517;&#36873;&#39033;</td></tr><tr><td><code>propagation</code></td><td><code>REQUIRED</code></td><td>&#20107;&#21153;&#20256;&#25773;&#24615;</td></tr><tr><td><code>isolation</code></td><td><code>DEFAULT</code></td><td>&#20107;&#21153;&#38548;&#31163;&#24615;</td></tr><tr><td><code>timeout</code></td><td><code>-1</code></td><td>&#20107;&#21153;&#36229;&#26102;&#26102;&#38388;&#65292;&#21333;&#20301;&#20026;&#31186;</td></tr><tr><td><code>read-only</code></td><td><code>false</code></td><td>&#26159;&#21542;&#26159;&#21482;&#35835;&#20107;&#21153;</td></tr><tr><td><code>rollback-for</code></td><td>&#26080;</td><td>&#20250;&#35302;&#21457;&#22238;&#28378;&#30340;&#24322;&#24120;&#28165;&#21333;&#65292;&#20197;&#36887;&#21495;&#20998;&#38548;&#65292;&#21487;&#20197;&#26159;&#20840;&#38480;&#23450;&#31867;&#21517;&#65292;&#20063;&#21487;&#20197;&#26159;&#31616;&#21333;&#31867;&#21517;</td></tr><tr><td><code>no-rollback-for</code></td><td>&#26080;</td><td>&#19981;&#35302;&#21457;&#22238;&#28378;&#30340;&#24322;&#24120;&#28165;&#21333;&#65292;&#20197;&#36887;&#21495;&#20998;&#38548;&#65292;&#21487;&#20197;&#26159;&#20840;&#38480;&#23450;&#31867;&#21517;&#65292;&#20063;&#21487;&#20197;&#26159;&#31616;&#21333;&#31867;&#21517;</td></tr></table>
<p>&#21487;&#20197;&#23558;&#21069;&#38754;&#25552;&#21040;&#30340; annotation-demo &#20462;&#25913;&#19968;&#19979;&#65292;&#21435;&#25481;&#25152;&#26377;&#30340; <code>@Transactional</code> &#27880;&#35299;&#65292;&#25913;&#29992; XML &#30340;&#26041;&#24335;&#26469;&#37197;&#32622;&#20107;&#21153;&#65292;&#20195;&#30721;&#25918;&#22312;&#31034;&#20363;&#30340; ch6/xml-transaction-demo &#20013;&#12290;&#20855;&#20307;&#30340; XML &#37197;&#32622;&#22914;&#20195;&#30721;&#31034;&#20363; 6-27 &#25152;&#31034;&#12290;&#30001;&#20110;&#29992;&#21040;&#20102; AspectJ &#30340;&#20999;&#20837;&#28857;&#65292;&#24037;&#31243;&#20013;&#36824;&#38656;&#35201;&#24341;&#20837; <code>org.springframework.boot:spring-boot-starter-aop</code> &#20381;&#36182;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-27</strong>&#12288;&#23436;&#25972;&#30340; <code>applicationContext.xml</code> &#37197;&#32622;&#31034;&#20363;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd"&gt;

    &lt;tx:advice id="demoTxAdvice"&gt;
        &lt;tx:attributes&gt;
            &lt;tx:method name="showNames" read-only="true"/&gt;
            &lt;tx:method name="insertRecordRequired" propagation="REQUIRED"/&gt;
            &lt;tx:method name="insertRecordRequiresNew" propagation="REQUIRES_NEW"/&gt;
            &lt;tx:method name="insertRecordNested" propagation="NESTED"/&gt;
        &lt;/tx:attributes&gt;
    &lt;/tx:advice&gt;

    &lt;tx:advice id="mixTxAdvice"&gt;
        &lt;tx:attributes&gt;
            &lt;tx:method name="*" /&gt;
        &lt;/tx:attributes&gt;
    &lt;/tx:advice&gt;

    &lt;aop:config&gt;
        &lt;aop:pointcut id="demoServiceMethods"
            expression="execution(* learning.spring.transaction.DemoService.*(..))"/&gt;
        &lt;aop:pointcut id="mixServiceMethods"
            expression="execution(* learning.spring.transaction.MixService.*(..))"/&gt;
        &lt;aop:advisor advice-ref="demoTxAdvice" pointcut-ref="demoServiceMethods"/&gt;
        &lt;aop:advisor advice-ref="mixTxAdvice" pointcut-ref="mixServiceMethods"/&gt;
    &lt;/aop:config&gt;
&lt;/beans&gt;</code></pre>
<p>&#19978;&#38754;&#30340; XML &#20013;&#65292;&#38024;&#23545; <code>DemoService</code> &#30340;&#19981;&#21516;&#26041;&#27861;&#37197;&#32622;&#20102;&#19981;&#21516;&#30340;&#20256;&#25773;&#24615;&#65292;&#32780; <code>DemoService</code> &#21644; <code>MixService</code> &#30340;&#20107;&#21153;&#37197;&#32622;&#20063;&#26377;&#25152;&#19981;&#21516;&#12290;&#25105;&#20204;&#21487;&#20197;&#22312;&#24037;&#31243;&#20027;&#31867;&#65292;&#25110;&#32773;&#20854;&#20182;&#24102;&#26377; <code>@Configuration</code> &#27880;&#35299;&#30340;&#37197;&#32622;&#31867;&#19978;&#22686;&#21152; <code>@ImportResource("applicationContext.xml")</code>&#65292;&#23548;&#20837; XML &#37197;&#32622;&#12290;&#31243;&#24207;&#30340;&#36816;&#34892;&#25928;&#26524;&#19982;&#20043;&#21069;&#27880;&#35299;&#39537;&#21160;&#30340;&#20107;&#21153;&#19968;&#27169;&#19968;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#22768;&#26126;&#24335;&#20107;&#21153;&#32972;&#21518;&#30340;&#21407;&#29702;</strong></p>
<p>Spring Framework &#30340;&#22768;&#26126;&#24335;&#20107;&#21153;&#65292;&#20854;&#26412;&#36136;&#26159;&#23545;&#30446;&#26631;&#31867;&#21644;&#26041;&#27861;&#36827;&#34892;&#20102; AOP &#25318;&#25130;&#65292;&#24182;&#22312;&#26041;&#27861;&#30340;&#25191;&#34892;&#21069;&#21518;&#22686;&#21152;&#20102;&#20107;&#21153;&#30456;&#20851;&#30340;&#25805;&#20316;&#65292;&#27604;&#22914;&#21551;&#21160;&#20107;&#21153;&#12289;&#25552;&#20132;&#20107;&#21153;&#21644;&#22238;&#28378;&#20107;&#21153;&#12290;</p>
<p>&#26082;&#28982;&#26159;&#36890;&#36807; AOP &#23454;&#29616;&#30340;&#65292;&#37027;&#23427;&#23601;&#24517;&#23450;&#36981;&#24490;&#20102; AOP &#30340;&#21508;&#31181;&#35268;&#21017;&#21644;&#38480;&#21046;&#12290;Spring Framework &#30340; AOP &#22686;&#24378;&#36890;&#24120;&#37117;&#26159;&#36890;&#36807;&#20195;&#29702;&#30340;&#26041;&#24335;&#26469;&#23454;&#29616;&#30340;&#65292;&#36825;&#23601;&#24847;&#21619;&#30528;&#20107;&#21153;&#20063;&#26159;&#22312;&#20195;&#29702;&#31867;&#19978;&#30340;&#12290;<strong>&#25105;&#20204;&#24517;&#39035;&#35843;&#29992;&#22686;&#24378;&#21518;&#30340;&#20195;&#29702;&#31867;&#20013;&#30340;&#26041;&#27861;&#65292;&#32780;&#38750;&#21407;&#26412;&#30340;&#23545;&#35937;&#65292;&#36825;&#26679;&#25165;&#33021;&#25317;&#26377;&#20107;&#21153;</strong>&#12290;&#20063;&#23601;&#26159;&#35828;&#35843;&#29992;&#19979;&#38754;&#30340; <code>methodWithoutTx()</code> &#24182;&#19981;&#20250;&#21551;&#21160;&#19968;&#20010;&#20107;&#21153;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class Demo {
    @Trasactional
    public void methodWithTx() {...}

    public void methodWithoutTx() {
        this.methodWithTx();
    }
}</code></pre>
<p>&#25105;&#20204;&#22312;&#31532; 3 &#31456;&#30340;<strong>&#22522;&#20110;&#20195;&#29702;&#30340;&#8220;&#23567;&#22353;&#8221;</strong>&#20013;&#20063;&#25552;&#21040;&#36807;&#31867;&#20284;&#30340;&#22330;&#26223;&#65292;&#35831;&#21153;&#24517;&#27880;&#24847;&#36991;&#20813;&#36825;&#31181;&#24773;&#20917;&#12290;&#22914;&#26524;&#19968;&#23450;&#35201;&#35843;&#29992;&#33258;&#24049;&#30340;&#26041;&#27861;&#65292;&#21487;&#20197;&#20174; <code>ApplicationContext</code> &#20013;&#33719;&#21462;&#33258;&#24049;&#30340;&#20195;&#29702;&#23545;&#35937;&#65292;&#25805;&#20316;&#36825;&#20010;&#23545;&#35937;&#19978;&#30340;&#26041;&#27861;&#65292;&#32780;&#19981;&#26159;&#20351;&#29992; <code>this</code>&#12290;&#25110;&#32773;&#65292;&#20063;&#21487;&#20197;&#22312;&#36866;&#24403;&#37197;&#32622;&#19979;&#65292;&#36890;&#36807; <code>AopContext.currentProxy()</code> &#26469;&#33719;&#24471;&#24403;&#21069;&#30340;&#20195;&#29702;&#12290;</p>
</blockquote>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">13</span>&#24314;&#35758;&#22312;&#20855;&#20307;&#30340;&#31867;&#32780;&#38750;&#25509;&#21475;&#19978;&#28155;&#21152; <code>@Transactional</code> &#27880;&#35299;&#12290;&#22312;&#26041;&#27861;&#19978;&#28155;&#21152;&#35813;&#27880;&#35299;&#26102;&#65292;&#20063;&#35831;&#21482;&#29992;&#22312;&#20462;&#39280;&#31526;&#20026; <code>public</code> &#30340;&#26041;&#27861;&#19978;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">15</span>&#36825;&#20010;&#31034;&#20363;&#20301;&#20110; ch6/annotaion-demo &#39033;&#30446;&#20013;&#12290;</p><h3 id="nav_point_103">6.3.4&#12288;&#32534;&#31243;&#24335;&#20107;&#21153;</h3><p>&#22312;&#30475;&#36807;&#20102;&#22768;&#26126;&#24335;&#20107;&#21153;&#20043;&#21518;&#65292;&#29702;&#35299;&#32534;&#31243;&#24335;&#20107;&#21153;&#23601;&#19981;&#26159;&#20160;&#20040;&#38590;&#20107;&#20102;&#12290;&#27491;&#22914;&#26412;&#33410;&#26631;&#39064;&#23383;&#38754;&#19978;&#30340;&#24847;&#24605;&#65292;Spring Framework &#36824;&#25903;&#25345;&#29992;&#32534;&#31243;&#30340;&#26041;&#24335;&#26469;&#25511;&#21046;&#20107;&#21153;&#65292;&#20294;&#32477;&#19981;&#26159;&#31616;&#21333;&#22320;&#35843;&#29992; <code>Connection</code> &#30340; <code>setAutoCommit(false)</code> &#26469;&#21551;&#21160;&#20107;&#21153;&#65292;&#32467;&#26463;&#26102;&#35843;&#29992; <code>commit()</code> &#25110; <code>rollback()</code> &#25552;&#20132;&#25110;&#22238;&#28378;&#20107;&#21153;&#65292;&#32780;&#26159;&#23558;&#36825;&#20123;&#27969;&#31243;&#22266;&#21270;&#21040;&#20102;&#27169;&#26495;&#31867;&#20013;&#12290;&#21644; <code>JdbcTemplate</code> &#31867;&#20284;&#65292;Spring Framework &#20026;&#20107;&#21153;&#25552;&#20379;&#20102;&#19968;&#20010; <code>TransacationTemplate</code>&#12290;</p><p>Spring Boot &#22312; <code>TransactionAutoConfiguration</code> &#20013;&#21253;&#21547;&#20102;&#19968;&#20010;&#20869;&#37096;&#31867; <code>TransactionTemplateConfiguration</code>&#65292;&#20250;&#33258;&#21160;&#22522;&#20110;&#26126;&#30830;&#30340; <code>PlatformTransactionManager</code> &#21019;&#24314; <code>TransactionTemplate</code>&#65292;&#25163;&#21160;&#21019;&#24314;&#20063;&#24456;&#31616;&#21333;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
public class TxConfiguration {
    @Bean
    public TransactionTemplate transactionTemplate(PlatformTransactionManager transactionManager) {
        return new TransactionTemplate(transactionManager);
    }
}</code></pre><p>&#22312;&#20351;&#29992;&#26102;&#65292;&#25105;&#20204;&#20027;&#35201;&#29992;&#23427;&#30340; <code>execute()</code> &#21644; <code>executeWithoutResult()</code> &#26041;&#27861;&#65292;&#26041;&#27861;&#30340;&#22768;&#26126;&#24418;&#24335;&#22914;&#19979;&#25152;&#31034;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public &lt;T&gt; T execute(TransactionCallback&lt;T&gt; action) throws TransactionException;
public void executeWithoutResult(Consumer&lt;TransactionStatus&gt; action) throws TransactionException;</code></pre><p><code>TransactionCallback</code> &#25509;&#21475;&#23601;&#19968;&#20010; <code>doInTransaction()</code> &#26041;&#27861;&#65292;&#36890;&#24120;&#37117;&#26159;&#30452;&#25509;&#20889;&#20010;&#21311;&#21517;&#31867;&#65292;&#25110;&#32773;&#26159; Lambda &#34920;&#36798;&#24335;&#12290;&#25105;&#20204;&#31616;&#21333;&#20462;&#25913;&#19968;&#19979;&#20195;&#30721;&#31034;&#20363; 6-24 &#20013;&#30340;&#20960;&#20010;&#26041;&#27861;&#65292;&#30475;&#30475;&#32534;&#31243;&#24335;&#20107;&#21153;&#35813;&#24590;&#20040;&#20889;&#12290;&#26597;&#35810;&#31867;&#26041;&#27861; <code>showNames()</code> &#21487;&#20197;&#25913;&#20889;&#25104;&#20195;&#30721;&#31034;&#20363; 6-28 &#30340;&#26679;&#23376;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-28</strong>&#12288;&#26597;&#35810;&#26041;&#27861;&#31034;&#20363;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>// Lambda&#24418;&#24335;
public String showNamesProgrammatically() {
    return transactionTemplate.execute(
            status -&gt; jdbcTemplate.queryForList("select name from t_demo;", String.class)
                    .stream().collect(Collectors.joining(",")));
}

// &#21311;&#21517;&#31867;&#24418;&#24335;
public String showNamesProgrammatically() {
    return transactionTemplate.execute(new TransactionCallback&lt;String&gt;() {
        @Override
        public String doInTransaction(TransactionStatus status) {
            return jdbcTemplate.queryForList("select name from t_demo;", String.class)
                    .stream().collect(Collectors.joining(","));
        }
    });
}</code></pre><p>&#22914;&#26524;&#26159;&#26356;&#26032;&#31867;&#30340;&#25805;&#20316;&#65292;&#21017;&#27809;&#26377;&#36820;&#22238;&#20540;&#65292;&#27604;&#22914; <code>insertRecordRequired()</code>&#65292;&#21487;&#20197;&#25913;&#20889;&#20026;&#20195;&#30721;&#31034;&#20363; 6-29 &#30340;&#26679;&#23376;&#12290;&#36890;&#36807;&#36825;&#20004;&#20010;&#20363;&#23376;&#65292;&#30456;&#20449;&#22823;&#23478;&#19968;&#23450;&#21457;&#29616;&#20102;&#65292;Lambda &#34920;&#36798;&#24335;&#27604;&#36215;&#21311;&#21517;&#31867;&#30340;&#24418;&#24335;&#35201;&#31616;&#27905;&#24456;&#22810;&#65292;&#22240;&#27492;&#24314;&#35758;&#22823;&#23478;&#24179;&#26102;&#22810;&#22810;&#32771;&#34385; Lambda &#34920;&#36798;&#24335;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-29</strong>&#12288;&#27809;&#26377;&#36820;&#22238;&#20540;&#30340;&#31034;&#20363;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>// Lambda&#24418;&#24335;
public void insertRecordRequiredProgrammatically() {
    transactionTemplate.executeWithoutResult(status -&gt; jdbcTemplate.update(SQL, "one"));
}

// &#21311;&#21517;&#31867;&#24418;&#24335;
public void insertRecordRequiredProgrammatically() {
    transactionTemplate.execute(new TransactionCallbackWithoutResult() {
        @Override
        protected void doInTransactionWithoutResult(TransactionStatus status) {
            jdbcTemplate.update(SQL, "one");
        }
    });
}</code></pre><p>&#22914;&#26524;&#24076;&#26395;&#20462;&#25913;&#20107;&#21153;&#30340;&#23646;&#24615;&#65292;&#21487;&#20197;&#30452;&#25509;&#35843;&#29992; <code>TransactionTemplate</code> &#30340;&#23545;&#24212;&#26041;&#27861;&#65292;&#25110;&#32773;&#22312;&#21019;&#24314;&#26102;&#23558;&#20854;&#20316;&#20026; Bean &#23646;&#24615;&#37197;&#32622;&#36827;&#21435;&#65292;&#36825;&#37324;&#24314;&#35758;&#20351;&#29992;&#23545;&#24212;&#30340;&#24120;&#37327;&#65292;&#32780;&#38750;&#20889;&#25104;&#22266;&#23450;&#30340;&#19968;&#20010;&#25968;&#23383;&#12290;&#36825;&#20123;&#23646;&#24615;&#26159;&#35774;&#32622;&#22312;&#23545;&#35937;&#19978;&#30340;&#65292;&#22914;&#26524;&#35201;&#22312;&#19981;&#21516;&#30340;&#20195;&#30721;&#20013;&#22797;&#29992;&#21516;&#19968;&#20010; <code>TransactionTemplate</code> &#23545;&#35937;&#65292;&#35831;&#30830;&#35748;&#23427;&#20204;&#21487;&#20197;&#20351;&#29992;&#30456;&#21516;&#30340;&#37197;&#32622;&#12290;</p><p>&#22312;&#20195;&#30721;&#20013;&#35774;&#32622;&#20256;&#25773;&#24615;&#19982;&#38548;&#31163;&#24615;&#65292;&#21487;&#20197;&#20351;&#29992; <code>setPropagationBehavior()</code> &#21644; <code>setIsolationLevel()</code> &#26041;&#27861;&#65292;&#22914;&#26524;&#26159;&#22312; XML &#37197;&#32622;&#20013;&#35774;&#32622; Bean &#23646;&#24615;&#65292;&#21017;&#21487;&#20197;&#36873;&#25321;&#23545;&#24212;&#30340; <code>propagationBehaviorName</code> &#21644; <code>isolationLevelName</code> &#23646;&#24615;&#12290;</p><h2 id="nav_point_104">6.4&#12288;&#24322;&#24120;&#22788;&#29702;</h2><p>&#22312;&#20351;&#29992;&#20256;&#32479;&#30340; JDBC &#25805;&#20316;&#25968;&#25454;&#24211;&#26102;&#65292;&#25105;&#20204;&#19981;&#24471;&#19981;&#38754;&#23545;&#24322;&#24120;&#22788;&#29702;&#30340;&#38382;&#39064;&#65292;&#21482;&#25429;&#33719; <code>SQLException</code> &#30340;&#31890;&#24230;&#22826;&#31895;&#65292;&#26681;&#25454;&#20854;&#20013;&#30340; <code>SQLState</code> &#21644; <code>ErrorCode</code> &#21487;&#20197;&#22823;&#33268;&#20998;&#26512;&#20986;&#29305;&#23450;&#25968;&#25454;&#24211;&#30340;&#38169;&#35823;&#65292;&#20294;&#25442;&#20102;&#19968;&#20010;&#25968;&#25454;&#24211;&#65292;&#38169;&#35823;&#30721;&#19968;&#25913;&#23601;&#24471;&#37325;&#22836;&#26469;&#36807;&#12290;</p><p>&#19981;&#21516;&#25968;&#25454;&#24211;&#30340; JDBC &#39537;&#21160;&#20013;&#20063;&#20250;&#23450;&#20041;&#19968;&#20123; <code>SQLException</code> &#30340;&#23376;&#31867;&#65292;&#21482;&#26159;&#25429;&#33719;&#29305;&#23450;&#25968;&#25454;&#24211;&#30340;&#24322;&#24120;&#31867;&#23601;&#20250;&#25226;&#20195;&#30721;&#21644;&#24213;&#23618;&#25968;&#25454;&#24211;&#24443;&#24213;&#8220;&#32465;&#27515;&#20102;&#8221;&#65292;&#19975;&#19968;&#36935;&#21040;&#21464;&#26356;&#24213;&#23618;&#25968;&#25454;&#24211;&#31867;&#22411;&#30340;&#24773;&#20917;&#65292;&#23601;&#20250;&#38750;&#24120;&#34987;&#21160;&#65292;&#20363;&#22914;&#30896;&#19978;&#20102;&#20844;&#21496;&#35201;&#8220;&#21435; O&#8221;<span class="&#27880;&#37322;&#32534;&#21495;">16</span>&#65292;&#37027;&#36825;&#20123;&#24322;&#24120;&#22788;&#29702;&#36923;&#36753;&#20960;&#20046;&#24471;&#37325;&#20889;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">16</span>&#36825;&#37324;&#30340; O &#25351;&#30340;&#26159; Oracle &#25968;&#25454;&#24211;&#65292;&#20026;&#20102;&#25903;&#25345;&#28023;&#37327;&#19994;&#21153;&#65292;&#26089;&#26399;&#22823;&#20844;&#21496;&#37117;&#20250;&#20351;&#29992;&#26114;&#36149;&#30340;&#21830;&#19994;&#30828;&#20214;&#21644;&#36719;&#20214;&#65292;&#21518;&#26469;&#22269;&#20869;&#25472;&#36215;&#20102;&#21435; IOE &#30340;&#28010;&#28526;&#65292;&#36825;&#37324;&#23601;&#26159;&#25351;&#22312;&#31995;&#32479;&#20013;&#21435;&#38500; IBM &#23567;&#22411;&#26426;&#12289;Oracle &#25968;&#25454;&#24211;&#21644; EMC &#39640;&#31471;&#23384;&#20648;&#12290;</p><p>Spring Framework &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#19968;&#22871;&#32479;&#19968;&#30340;&#25968;&#25454;&#24211;&#25805;&#20316;&#24322;&#24120;&#20307;&#31995;&#65292;&#23427;&#29420;&#31435;&#20110;&#20855;&#20307;&#30340;&#25968;&#25454;&#24211;&#20135;&#21697;&#65292;&#29978;&#33267;&#20063;&#19981;&#20381;&#36182; JDBC&#65292;&#25903;&#25345;&#32477;&#22823;&#22810;&#25968;&#24120;&#29992;&#25968;&#25454;&#24211;&#12290;&#23427;&#33021;&#23558;&#19981;&#21516;&#25968;&#25454;&#24211;&#30340;&#36820;&#22238;&#30721;&#32763;&#35793;&#25104;&#29305;&#23450;&#30340;&#31867;&#22411;&#65292;&#24320;&#21457;&#32773;&#21482;&#38656;&#25429;&#33719;&#24182;&#22788;&#29702; Spring Framework &#23553;&#35013;&#21518;&#30340;&#24322;&#24120;&#23601;&#21487;&#20197;&#20102;&#12290;</p><h3 id="nav_point_105">6.4.1&#12288;&#32479;&#19968;&#30340;&#24322;&#24120;&#25277;&#35937;</h3><p>Spring Framework &#30340;&#25968;&#25454;&#24211;&#25805;&#20316;&#24322;&#24120;&#25277;&#35937;&#20174; <code>DataAccessException</code> &#36825;&#20010;&#31867;&#24320;&#22987;&#65292;&#25152;&#26377;&#30340;&#24322;&#24120;&#37117;&#26159;&#23427;&#30340;&#23376;&#31867;&#12290;&#26080;&#35770;&#26159;&#20351;&#29992; JDBC&#65292;&#36824;&#26159;&#21518;&#32493;&#35201;&#20171;&#32461;&#21040;&#30340;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#65292;&#37117;&#20250;&#28041;&#21450;&#36825;&#22871;&#25277;&#35937;&#65292;&#22270; 6-1 &#23637;&#31034;&#20102;&#20854;&#20013;&#37096;&#20998;&#24120;&#29992;&#30340;&#24322;&#24120;&#31867;&#12290;</p><p class="&#22270;"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00764.jpeg"/></p><p class="p-img-title"><strong>&#22270; 6-1&#12288;&#32479;&#19968;&#25968;&#25454;&#24211;&#25805;&#20316;&#24322;&#24120;&#25277;&#35937;&#20013;&#37096;&#20998;&#24120;&#29992;&#30340;&#24322;&#24120;&#31867;</strong></p><p>&#21487;&#20197;&#30475;&#21040;&#65292;&#36825;&#22871;&#24322;&#24120;&#35206;&#30422;&#20102;&#32477;&#22823;&#37096;&#20998;&#30340;&#24120;&#35265;&#24322;&#24120;&#65292;&#20363;&#22914;&#65292;&#36829;&#21453;&#20102;&#21807;&#19968;&#24615;&#32422;&#26463;&#23601;&#20250;&#25243;&#20986;&#30340; <code>DataIntegrityViolationException</code>&#65292;&#38024;&#23545;&#20027;&#38190;&#20914;&#31361;&#30340;&#24322;&#24120;&#65292;&#36824;&#26377;&#19968;&#20010; <code>DuplicateKeyException</code> &#23376;&#31867;&#65292;&#25105;&#20204;&#21487;&#20197;&#26681;&#25454;&#36825;&#20123;&#24322;&#24120;&#28165;&#26224;&#22320;&#21028;&#26029;&#31350;&#31455;&#21457;&#29983;&#20102;&#20160;&#20040;&#38382;&#39064;&#12290;</p><p>&#37027; Spring Framework &#21448;&#26159;&#24590;&#20040;&#26469;&#29702;&#35299;&#21644;&#32763;&#35793;&#36825;&#20040;&#22810;&#19981;&#21516;&#31867;&#22411;&#30340;&#25968;&#25454;&#24211;&#24322;&#24120;&#30340;&#21602;&#65311;&#36825;&#32972;&#21518;&#30340;&#26680;&#24515;&#25509;&#21475;&#23601;&#26159; <code>SQLExceptionTranslator</code>&#65292;&#23427;&#36127;&#36131;&#23558;&#19981;&#21516;&#30340; <code>SQLException</code> &#36716;&#25442;&#20026; <code>DataAccessException</code>&#12290;<code>SQLExceptionTranslator</code> &#21450;&#20854;&#37325;&#35201;&#23454;&#29616;&#31867;&#30340;&#20851;&#31995;&#22914;&#22270; 6-2 &#25152;&#31034;&#12290;</p><p class="&#22270;"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00765.jpeg"/></p><p class="p-img-title"><strong>&#22270; 6-2&#12288;<code>SQLExceptionTranslator</code> &#21450;&#20854;&#37325;&#35201;&#23454;&#29616;&#31867;&#30340;&#20851;&#31995;</strong></p><p>&#22270;&#20013;&#30340; <code>SQLStateSQLExceptionTranslator</code> &#20250;&#20998;&#26512;&#24322;&#24120;&#20013;&#30340; <code>SQLState</code>&#65292;&#26681;&#25454;&#26631;&#20934; <code>SQLState</code> &#21644;&#24120;&#35265;&#30340;&#29305;&#23450;&#25968;&#25454;&#24211; <code>SQLState</code> &#36827;&#34892;&#36716;&#25442;&#65307;<code>SQLExceptionSubclassTranslator</code> &#26681;&#25454; <code>java.sql.SQLException</code> &#30340;&#23376;&#31867;&#31867;&#22411;&#36827;&#34892;&#36716;&#25442;&#65307;&#32780; <code>SQLErrorCodeSQLExceptionTranslator</code> &#21017;&#26159;&#26681;&#25454;&#24322;&#24120;&#20013;&#30340;&#38169;&#35823;&#30721;&#36827;&#34892;&#36716;&#25442;&#30340;&#12290;</p><p><code>JdbcTemplate</code> &#20013;&#20250;&#21019;&#24314;&#19968;&#20010;&#40664;&#35748;&#30340; <code>SQLErrorCodeSQLExceptionTranslator</code>&#65292;&#26681;&#25454;&#25968;&#25454;&#24211;&#31867;&#22411;&#36873;&#25321;&#19981;&#21516;&#37197;&#32622;&#26469;&#36827;&#34892;&#23454;&#38469;&#30340;&#24322;&#24120;&#36716;&#25442;&#65292;&#25152;&#20197;&#35753;&#25105;&#20204;&#26469;&#20855;&#20307;&#30475;&#30475;&#23427;&#30340;&#23454;&#29616;&#12290;<code>SQLErrorCodeSQLExceptionTranslator</code> &#20250;&#36890;&#36807; <code>SQLErrorCodesFactory</code> &#26469;&#33719;&#21462;&#29305;&#23450;&#25968;&#25454;&#24211;&#30340;&#38169;&#35823;&#30721;&#20449;&#24687;&#65292;<code>SQLErrorCodesFactory</code> &#40664;&#35748;&#20174; CLASSPATH &#30340; org/springframework/jdbc/support/sql-error-codes.xml &#25991;&#20214;&#20013;&#21152;&#36733;&#38169;&#35823;&#30721;&#37197;&#32622;&#65292;&#36825;&#26159;&#19968;&#20010; Bean &#30340;&#37197;&#32622;&#25991;&#20214;&#65292;&#20854;&#20013;&#37117;&#26159; <code>SQLErrorCodes</code> &#31867;&#22411;&#30340; Bean&#12290;&#36825;&#20010;&#25991;&#20214;&#20013;&#21253;&#21547;&#20102; MySQL&#12289;Oracle&#12289;PostgreSQL&#12289;MS-SQL &#31561; 10 &#20313;&#31181;&#24120;&#35265;&#25968;&#25454;&#24211;&#30340;&#38169;&#35823;&#30721;&#20449;&#24687;&#65292;&#20363;&#22914;&#19979;&#38754;&#23601;&#26159; MySQL &#30340;&#37197;&#32622;&#65292;&#21487;&#20197;&#30475;&#21040;&#23427;&#23558;&#38169;&#35823;&#30721;&#19982;&#20855;&#20307;&#30340;&#24322;&#24120;&#31867;&#22411;&#20851;&#32852;&#20102;&#36215;&#26469;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;bean id="MySQL" class="org.springframework.jdbc.support.SQLErrorCodes"&gt;
    &lt;property name="databaseProductNames"&gt;
        &lt;list&gt;
            &lt;value&gt;MySQL&lt;/value&gt;
            &lt;value&gt;MariaDB&lt;/value&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name="badSqlGrammarCodes"&gt;
        &lt;value&gt;1054,1064,1146&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="duplicateKeyCodes"&gt;
        &lt;value&gt;1062&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="dataIntegrityViolationCodes"&gt;
        &lt;value&gt;630,839,840,893,1169,1215,1216,1217,1364,1451,1452,1557&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="dataAccessResourceFailureCodes"&gt;
        &lt;value&gt;1&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="cannotAcquireLockCodes"&gt;
        &lt;value&gt;1205,3572&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="deadlockLoserCodes"&gt;
        &lt;value&gt;1213&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;</code></pre><p><code>SQLErrorCodeSQLExceptionTranslator</code> &#20250;&#20808;&#23581;&#35797; <code>SQLErrorCodes</code> &#20013;&#30340; <code>customSqlExceptionTranslator</code> &#26469;&#36716;&#25442;&#65292;&#25509;&#30528;&#20877;&#23581;&#35797; <code>SQLErrorCodes</code> &#20013;&#30340; <code>customTranslations</code>&#65292;&#26368;&#21518;&#20877;&#26681;&#25454;&#37197;&#32622;&#30340;&#38169;&#35823;&#30721;&#26469;&#21028;&#26029;&#12290;&#22914;&#26524;&#26368;&#21518;&#36824;&#26159;&#21305;&#37197;&#19981;&#19978;&#65292;&#23601;&#38477;&#32423;&#21040;&#20854;&#20182; <code>SQLExceptionTranslator</code> &#19978;&#12290;</p><h3 id="nav_point_106">6.4.2&#12288;&#33258;&#23450;&#20041;&#38169;&#35823;&#30721;&#22788;&#29702;&#36923;&#36753;</h3><p>Spring Framework &#38024;&#23545;&#24120;&#35265;&#25968;&#25454;&#24211;&#24322;&#24120;&#30340;&#22788;&#29702;&#24050;&#32463;&#27604;&#36739;&#23436;&#21892;&#20102;&#65292;&#20294;&#22312;&#19968;&#20123;&#29305;&#27530;&#22330;&#26223;&#20013;&#65292;&#40664;&#35748;&#30340;&#36923;&#36753;&#24182;&#19981;&#33021;&#28385;&#36275;&#25105;&#20204;&#30340;&#38656;&#27714;&#12290;&#20551;&#35774;&#22312;&#20844;&#21496;&#20869;&#37096;&#26377;&#19968;&#22871;&#33258;&#24049;&#30340;&#25968;&#25454;&#24211;&#20195;&#29702;&#20013;&#38388;&#20214;&#65292;&#33021;&#22312;&#24212;&#29992;&#19982;&#23454;&#38469;&#30340;&#25968;&#25454;&#24211;&#20043;&#38388;&#25552;&#20379;&#36830;&#25509;&#25910;&#25947;&#12289;&#35831;&#27714;&#36335;&#30001;&#12289;&#20998;&#24211;&#20998;&#34920;&#31561;&#21151;&#33021;&#65292;&#23545;&#22806;&#25552;&#20379; MySQL &#21327;&#35758;&#65292;&#20294;&#21448;&#25193;&#23637;&#20102;&#19968;&#20123;&#20854;&#20182;&#30340;&#21151;&#33021;&#65306;&#36890;&#36807;&#29305;&#23450;&#30340;&#38169;&#35823;&#30721;&#21521;&#19978;&#36820;&#22238;&#26576;&#20123;&#25193;&#23637;&#30340;&#29366;&#24577;&#65292;&#36825;&#20123;&#38169;&#35823;&#30721;&#36229;&#20986;&#20102;&#40664;&#35748;&#30340;&#33539;&#22260;&#12290;</p><p>&#22312;&#30475;&#36807;&#20102; Spring Framework &#22788;&#29702;&#25968;&#25454;&#24211;&#38169;&#35823;&#30721;&#30340;&#36923;&#36753;&#20043;&#21518;&#65292;&#25105;&#20204;&#24456;&#24555;&#23601;&#33021;&#24819;&#21040;&#21435;&#25193;&#23637; <code>SQLErrorCodes</code>&#12290;<code>SQLErrorCodesFactory</code> &#20854;&#23454;&#20063;&#39044;&#30041;&#20102;&#25193;&#23637;&#28857;&#65292;&#23427;&#20250;&#21152;&#36733; CLASSPATH &#26681;&#30446;&#24405;&#20013;&#30340; sql-error-codes.xml &#25991;&#20214;&#65292;&#29992;&#20854;&#20013;&#30340;&#37197;&#32622;&#35206;&#30422;&#40664;&#35748;&#37197;&#32622;&#12290;<code>CustomSQLErrorCodesTranslation</code> &#25552;&#20379;&#20102;&#26681;&#25454;&#38169;&#35823;&#30721;&#26469;&#26144;&#23556;&#24322;&#24120;&#30340;&#21151;&#33021;&#65292;&#20195;&#30721;&#31034;&#20363; 6-30 &#28436;&#31034;&#20102;&#22914;&#20309;&#36890;&#36807;&#23427;&#26469;&#25193;&#23637; MySQL &#30340;&#24322;&#24120;&#37197;&#32622;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 6-30</strong>&#12288;&#20351;&#29992; <code>CustomSQLErrorCodesTranslation</code> &#26469;&#25193;&#23637; MySQL &#24322;&#24120;&#30721;&#36923;&#36753;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;bean id="MySQL" class="org.springframework.jdbc.support.SQLErrorCodes"&gt;
    &lt;property name="databaseProductNames"&gt;
        &lt;list&gt;
            &lt;value&gt;MySQL&lt;/value&gt;
            &lt;value&gt;MariaDB&lt;/value&gt;
        &lt;/list&gt;
    &lt;/property&gt;
    &lt;property name="badSqlGrammarCodes"&gt;
        &lt;value&gt;1054,1064,1146&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="duplicateKeyCodes"&gt;
        &lt;value&gt;1062&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="dataIntegrityViolationCodes"&gt;
        &lt;value&gt;630,839,840,893,1169,1215,1216,1217,1364,1451,1452,1557&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="dataAccessResourceFailureCodes"&gt;
        &lt;value&gt;1&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="cannotAcquireLockCodes"&gt;
        &lt;value&gt;1205,3572&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="deadlockLoserCodes"&gt;
        &lt;value&gt;1213&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="customTranslations"&gt;
        &lt;bean class="org.springframework.jdbc.support.CustomSQLErrorCodesTranslation"&gt;
            &lt;property name="errorCodes" value="123456" /&gt;
            &lt;property name="exceptionClass" value="learning.spring.data.DbSwitchingException" /&gt;
        &lt;/bean&gt;
    &lt;/property&gt;
&lt;/bean&gt;</code></pre><p>&#24403;&#28982;&#65292;&#36824;&#26377;&#21478;&#19968;&#31181;&#20570;&#27861;&#65292;&#21363;&#30452;&#25509;&#32487;&#25215; <code>SQLErrorCodeSQLExceptionTranslator</code>&#65292;&#35206;&#30422;&#20854;&#20013;&#30340; <code>customTranslate(String task, @Nullable String sql, SQLException sqlEx)</code> &#26041;&#27861;&#65292;&#38543;&#21518;&#22312; <code>JdbcTemplate</code> &#20013;&#30452;&#25509;&#27880;&#20837;&#25105;&#20204;&#33258;&#24049;&#20889;&#30340;&#31867;&#23454;&#20363;&#12290;&#19981;&#36807;&#65292;&#22312;&#22823;&#37096;&#20998;&#24773;&#20917;&#19979;&#65292;&#21069;&#19968;&#31181;&#26041;&#27861;&#24050;&#32463;&#33021;&#22815;&#28385;&#36275;&#25105;&#20204;&#30340;&#38656;&#27714;&#20102;&#65292;&#22823;&#23478;&#21487;&#20197;&#26681;&#25454;&#23454;&#38469;&#24773;&#20917;&#26469;&#36873;&#25321;&#20855;&#20307;&#30340;&#26041;&#26696;&#12290;</p><h2 id="nav_point_107">6.5&#12288;&#23567;&#32467;</h2><p>&#26412;&#31456;&#25105;&#20204;&#23398;&#20064;&#20102; Spring Framework &#20013;&#25968;&#25454;&#24211;&#25805;&#20316;&#30340;&#22522;&#30784;&#30693;&#35782;&#65292;&#23588;&#20854;&#26159;&#32858;&#28966;&#22312;&#20102;&#25968;&#25454;&#28304;&#37197;&#32622;&#12289;JDBC &#22522;&#30784;&#25805;&#20316;&#12289;&#20107;&#21153;&#31649;&#29702;&#21644;&#24322;&#24120;&#22788;&#29702;&#36825;&#22235;&#28857;&#19978;&#12290;</p><p>&#20854;&#20013;&#65292;&#25105;&#20204;&#35814;&#32454;&#20102;&#35299;&#20102; Spring Boot 2.<em>x</em> &#25512;&#33616;&#30340; HikariCP &#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#21450;&#20854;&#37197;&#32622;&#65292;&#20197;&#21450;&#22914;&#20309;&#29992; Druid &#26469;&#26367;&#25442; HikariCP&#12290;&#24182;&#19988;&#25105;&#20204;&#36824;&#20102;&#35299;&#20102; Spring &#26159;&#22914;&#20309;&#24110;&#21161;&#25105;&#20204;&#26469;&#31616;&#21270; JDBC &#25805;&#20316;&#30340;&#65292;<code>JdbcTemplate</code> &#22312;&#21508;&#31181;&#22330;&#26223;&#20013;&#37117;&#38750;&#24120;&#22909;&#29992;&#12290;&#22312;&#20107;&#21153;&#31649;&#29702;&#21644;&#24322;&#24120;&#22788;&#29702;&#37096;&#20998;&#65292;&#19981;&#20165;&#23398;&#20064;&#21040;&#20102;&#24590;&#20040;&#36816;&#29992;&#36825;&#20123;&#19996;&#35199;&#65292;&#26356;&#26159;&#28145;&#20837;&#20102;&#35299;&#20102;&#23427;&#20204;&#32972;&#21518;&#30340;&#23454;&#29616;&#36923;&#36753;&#12290;</p><p>&#19979;&#19968;&#31456;&#65292;&#25105;&#20204;&#23558;&#20174; JDBC &#20999;&#25442;&#21040;&#36890;&#36807;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26469;&#25805;&#20316;&#25968;&#25454;&#24211;&#65292;&#30475;&#30475;&#22312; Spring &#20013;&#22914;&#20309;&#26469;&#20351;&#29992; Hibernate &#19982; MyBatis&#12290;</p><blockquote>
<p style="text-align: center"><strong>&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#39033;&#30446;&#24320;&#21457;&#23567;&#32467;</strong></p>
<p>&#26412;&#31456;&#25105;&#20204;&#20026;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#26680;&#24515;&#26381;&#21153; BinaryTea &#22686;&#21152;&#20102;&#19968;&#20010;&#25968;&#25454;&#28304;&#65292;&#22312;&#20854;&#20013;&#23384;&#20648;&#20102;&#24215;&#38138;&#20013;&#30340;&#33756;&#21333;&#20449;&#24687;&#12290;&#27492;&#22806;&#65292;&#36824;&#20026;&#33756;&#21333;&#34920;&#25552;&#20379;&#20102;&#30456;&#24212;&#30340;&#22686;&#21152;&#12289;&#21024;&#38500;&#21644;&#26597;&#35810;&#26041;&#27861;&#65292;&#24182;&#19988;&#22312;&#21551;&#21160;&#24037;&#31243;&#26102;&#36824;&#20250;&#21021;&#22987;&#21270;&#33756;&#21333;&#24182;&#25171;&#21360;&#33756;&#21333;&#30340;&#20869;&#23481;&#12290;</p>
<p>&#22312;&#23454;&#38469;&#24037;&#20316;&#20013;&#65292;&#30452;&#25509;&#20351;&#29992; JDBC &#26469;&#20570;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#24182;&#19981;&#21451;&#22909;&#65292;&#26356;&#22810;&#30340;&#24773;&#20917;&#19979;&#36824;&#26159;&#20250;&#20351;&#29992;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26694;&#26550;&#65292;&#19979;&#19968;&#31456;&#20250;&#23545;&#26412;&#31456;&#30340; JDBC &#20195;&#30721;&#36827;&#34892;&#27604;&#36739;&#22823;&#30340;&#37325;&#26500;&#12290;</p>
</blockquote><br style="page-break-after:always"/><div style="page-break-after:always"></div>