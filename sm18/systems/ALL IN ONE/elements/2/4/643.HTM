<h1 id="nav_point_119">&#31532; 8 &#31456;&#12288;&#25968;&#25454;&#35775;&#38382;&#36827;&#38454;</h1><blockquote>
<p><strong>&#26412;&#31456;&#20869;&#23481;</strong></p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36866;&#29992;&#20110;&#29983;&#20135;&#29615;&#22659;&#30340;&#36830;&#25509;&#27744;&#37197;&#32622;&#25216;&#24039;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312; Spring &#24037;&#31243;&#20013;&#20351;&#29992; Redis &#30340;&#26041;&#27861;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807; Spring &#30340;&#32531;&#23384;&#25277;&#35937;&#31616;&#21270;&#32531;&#23384;&#30340;&#20351;&#29992;</li>
</ul>
</blockquote><p>&#21069;&#20004;&#31456;&#25105;&#20204;&#37117;&#22312;&#35752;&#35770;&#22914;&#20309;&#23454;&#29616;&#22522;&#26412;&#30340;&#25968;&#25454;&#24211;&#25805;&#20316;&#65306;&#30452;&#25509;&#20351;&#29992; JDBC&#65292;&#25110;&#32773;&#36890;&#36807; ORM &#26694;&#26550;&#12290;&#20294;&#22312;&#23454;&#38469;&#30340;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#20165;&#20165;&#23454;&#29616;&#22522;&#26412;&#30340;&#25805;&#20316;&#26159;&#19981;&#22815;&#30340;&#65292;&#29978;&#33267;&#21482;&#29992;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#20063;&#26159;&#19981;&#22815;&#30340;&#65292;&#25105;&#20204;&#36824;&#38656;&#35201; NoSQL &#30340;&#24110;&#21161;&#65292;&#36935;&#21040;&#28909;&#28857;&#25968;&#25454;&#65292;&#36824;&#35201;&#22686;&#21152;&#32531;&#23384;&#20026;&#25968;&#25454;&#24211;&#20943;&#36127;&#12290;&#25152;&#20197;&#65292;&#22312;&#36825;&#19968;&#31456;&#37324;&#65292;&#25105;&#20204;&#23601;&#35201;&#26469;&#32842;&#32842;&#36825;&#20123;&#36827;&#38454;&#30340;&#20869;&#23481;&#12290;</p><h2 id="nav_point_120">8.1&#12288;&#36830;&#25509;&#27744;&#30340;&#23454;&#29992;&#37197;&#32622;</h2><p>&#22312;&#20043;&#21069;&#30340;&#31456;&#33410;&#37324;&#65292;&#25105;&#20204;&#22522;&#26412;&#37117;&#26159;&#22312;&#20351;&#29992; Spring Boot &#25552;&#20379;&#30340;&#40664;&#35748;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#37197;&#32622;&#65292;&#23427;&#33021;&#28385;&#36275;&#22522;&#26412;&#30340;&#38656;&#27714;&#12290;&#20294;&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#20250;&#36935;&#21040;&#24456;&#22810;&#23454;&#38469;&#30340;&#38382;&#39064;&#65292;&#20809;&#38752;&#22522;&#26412;&#37197;&#32622;&#23601;&#26377;&#28857;&#25417;&#35167;&#35265;&#32920;&#20102;&#65292;&#20363;&#22914;&#65292;&#36830;&#25509;&#25968;&#25454;&#24211;&#29992;&#30340;&#23494;&#30721;&#23646;&#20110;&#38656;&#35201;&#20445;&#25252;&#30340;&#25935;&#24863;&#20449;&#24687;&#65292;&#19981;&#33021;&#30452;&#25509;&#25918;&#22312;&#37197;&#32622;&#25991;&#20214;&#37324;&#35813;&#24590;&#20040;&#21150;&#65311;&#20026;&#20102;&#26041;&#20415;&#25490;&#26597;&#38382;&#39064;&#65292;&#24076;&#26395;&#33021;&#35760;&#24405;&#25191;&#34892;&#30340;&#25152;&#26377; SQL &#35813;&#24590;&#20040;&#21150;&#65311;</p><h3 id="nav_point_121">8.1.1&#12288;&#20445;&#25252;&#25935;&#24863;&#30340;&#36830;&#25509;&#37197;&#32622;</h3><p>&#36830;&#25509;&#25968;&#25454;&#24211;&#25152;&#38656;&#30340;&#20449;&#24687;&#21253;&#25324;&#19977;&#20010;&#35201;&#32032;&#8212;&#8212;JDBC URL&#12289;&#29992;&#25143;&#21517;&#21644;&#23494;&#30721;&#12290;&#25968;&#25454;&#24211;&#23494;&#30721;&#26159;&#38656;&#35201;&#37325;&#28857;&#20445;&#25252;&#30340;&#20449;&#24687;&#65292;&#25152;&#20197;&#20687;&#31532; 6 &#31456;&#30340;&#20195;&#30721;&#31034;&#20363;&#37027;&#26679;&#20197;&#26126;&#25991;&#26041;&#24335;&#23558;&#23494;&#30721;&#20889;&#22312; <code>application.properties</code> &#37324;&#26174;&#28982;&#26159;&#19981;&#21512;&#36866;&#30340;&#12290;&#20063;&#35768;&#20320;&#20250;&#35828;&#65306;&#8220;&#20026;&#37197;&#32622;&#25991;&#20214;&#35774;&#32622;&#19968;&#20010;&#26222;&#36890;&#29992;&#25143;&#19981;&#21487;&#35835;&#30340;&#26435;&#38480;&#65292;&#21482;&#26377;&#36816;&#32500;&#20154;&#21592;&#33021;&#26597;&#30475;&#20854;&#20013;&#30340;&#20869;&#23481;&#34892;&#19981;&#34892;&#65311;&#8221;&#36127;&#36131;&#23433;&#20840;&#30340;&#24037;&#20316;&#20154;&#21592;&#20250;&#21578;&#35785;&#20320;&#65306;&#8220;&#19981;&#34892;&#65281;&#8221;</p><p>&#22312;&#26412;&#33410;&#20013;&#65292;&#25105;&#20204;&#20808;&#26469;&#20102;&#35299;&#19968;&#19979;&#22914;&#20309;&#20026; HikariCP &#21644; Druid &#23454;&#29616;&#23494;&#30721;&#21152;&#23494;&#21151;&#33021;&#65292;&#32780;&#22312;&#21518;&#32493;&#30340;&#31532; 14 &#31456;&#65292;&#25105;&#20204;&#36824;&#20250;&#32842;&#21040; Spring Cloud Config &#30340;&#37197;&#32622;&#39033;&#21152;&#23494;&#21151;&#33021;&#12290;&#22914;&#26524;&#20320;&#27491;&#22312;&#20351;&#29992; Spring Cloud Config&#65292;&#38598;&#20013;&#24335;&#22320;&#31649;&#29702;&#21152;&#23494;&#23494;&#30721;&#20250;&#26159;&#19968;&#20010;&#30456;&#23545;&#26356;&#22909;&#30340;&#36873;&#25321;&#12290;</p><ol>
<li><p><strong>&#32467;&#21512; HikariCP &#19982; Jasypt &#23454;&#29616;&#23494;&#30721;&#21152;&#23494;</strong></p>
<p>HikariCP &#30340;&#20316;&#32773;&#19968;&#24515;&#24819;&#20570;&#22909;&#39640;&#24615;&#33021;&#36830;&#25509;&#27744;&#65292;&#25226;&#25152;&#26377;&#20854;&#20182;&#24037;&#20316;&#37117;&#8220;&#22806;&#21253;&#8221;&#20102;&#20986;&#21435;&#65292;&#25152;&#20197;&#37197;&#32622;&#39033;&#21152;&#23494;&#36825;&#20010;&#24046;&#20107;&#26174;&#28982;&#23601;&#38656;&#35201;&#20854;&#20182;&#24037;&#20855;&#26469;&#24110;&#24537;&#20102;&#12290;Jasypt &#30340;&#20840;&#31216;&#26159; Java Simplified Encryption&#65292;&#19968;&#30475;&#36825;&#20010;&#21517;&#23383;&#23601;&#30693;&#36947;&#23427;&#26159;&#22312; Java &#29615;&#22659;&#37324;&#22788;&#29702;&#21152;&#35299;&#23494;&#30340;&#65292;Jasypt &#21487;&#20197;&#24456;&#26041;&#20415;&#22320;&#19982; Spring &#39033;&#30446;&#38598;&#25104;&#21040;&#19968;&#36215;&#65292;&#31350;&#31455;&#26377;&#22810;&#26041;&#20415;&#21602;&#65311;&#23427;&#30452;&#25509;&#25552;&#20379;&#20102;&#19968;&#20010; <code>EncryptablePropertiesPropertySource</code>&#65292;&#21487;&#20197;&#30452;&#25509;&#35299;&#23494;&#23646;&#24615;&#20540;&#20013;&#29992; <code>ENC()</code> &#25324;&#36215;&#26469;&#30340;&#23494;&#25991;&#12290;&#32780;&#19988;&#23427;&#36824;&#26377;&#19968;&#20010; Spring Boot Starter&#65292;&#20960;&#20046;&#23601;&#26159;&#8220;&#24320;&#31665;&#21363;&#29992;&#8221;&#12290;</p>
<p>&#31532;&#19968;&#27493;&#65292;&#22312; pom.xml &#20013;&#28155;&#21152; <code>jasypt-spring-boot-starter</code> &#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt;
    &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt;
    &lt;version&gt;3.0.3&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p>&#22240;&#20026;&#25105;&#20204;&#37117;&#20250;&#24320;&#21551;&#33258;&#21160;&#37197;&#32622;&#65292;&#25152;&#20197;&#36825;&#20010;&#36215;&#27493;&#20381;&#36182;&#20250;&#33258;&#24049;&#23436;&#25104;&#21097;&#19979;&#30340;&#37197;&#32622;&#12290;&#22914;&#26524;&#27809;&#26377;&#24320;&#21551;&#33258;&#21160;&#37197;&#32622;&#65292;&#21017;&#38656;&#35201;&#22312;&#37197;&#32622;&#31867;&#19978;&#22686;&#21152; <code>@EnableEncryptableProperties</code> &#27880;&#35299;&#12290;</p>
<p>&#31532;&#20108;&#27493;&#65292;&#20462;&#25913;&#37197;&#32622;&#25991;&#20214;&#65292;&#22686;&#21152; Jasypt &#30340;&#37197;&#32622;&#65292;&#24182;&#23558;&#26126;&#25991;&#23494;&#30721;&#25913;&#20026;&#23494;&#25991;&#12290;&#20027;&#35201;&#26159;&#37197;&#32622;&#21152;&#35299;&#23494;&#20351;&#29992;&#30340;&#31639;&#27861;&#21644;&#23494;&#38053;&#65292;&#20004;&#32773;&#20998;&#21035;&#26159; <code>jasypt.encryptor.algorithm</code> &#21644; <code>jasypt.encryptor.password</code>&#65292;&#40664;&#35748;&#30340;&#31639;&#27861;&#26159; <code>PBEWITHHMACSHA512ANDAES_256</code>&#12290;&#20854;&#20027;&#35201;&#30340;&#37197;&#32622;&#22914;&#34920; 8-1 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 8-1&#12288;<code>jasypt-spring-boot-starter</code> &#30340;&#19968;&#20123;&#40664;&#35748;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>jasypt.encryptor.algorithm</code></td><td><code>PBEWITHHMACSHA512ANDAES_256</code></td><td>&#21152;&#35299;&#23494;&#31639;&#27861;</td></tr><tr><td><code>jasypt.encryptor.provider-name</code></td><td><code>SunJCE</code></td><td>&#21152;&#23494;&#25552;&#20379;&#32773;</td></tr><tr><td><code>jasypt.encryptor.salt-generator-classname</code></td><td><code>org.jasypt.salt.RandomSaltGenerator</code></td><td>&#30416;&#29983;&#25104;&#22120;</td></tr><tr><td><code>jasypt.encryptor.iv-generator-classname</code></td><td><code>org.jasypt.iv.RandomIvGenerator</code></td><td>&#21021;&#22987;&#21270;&#21521;&#37327;&#29983;&#25104;&#22120;</td></tr></table>
<p>&#35201;&#36827;&#34892;&#21152;&#23494;&#65292;&#21487;&#20197;&#30452;&#25509;&#29992; Jasypt &#30340; Jar &#21253;&#65292;&#35843;&#29992; CLI &#30340;&#31867;&#12290;&#22312; macOS &#20013;&#65292;&#21487;&#20197;&#22312; ~/.m2/repository &#30340; Maven &#26412;&#22320;&#20179;&#24211;&#37324;&#25214;&#21040; jasypt-1.9.3.jar&#65292;&#25191;&#34892;&#22914;&#19979;&#21629;&#20196;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; java -cp ./jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input=&#26126;&#25991; password=&#23494;&#38053;
algorithm=PBEWITHHMACSHA512ANDAES_256 ivGeneratorClassName=org.jasypt.iv.RandomIvGenerator
saltGeneratorClassName=org.jasypt.salt.RandomSaltGenerator</code></pre>
<p>&#20551;&#35774;&#32473;&#30340;&#26126;&#25991;&#21644;&#23494;&#38053;&#37117;&#26159; <code>binary-tea</code>&#65292;&#37027;&#25191;&#34892;&#30340;&#36755;&#20986;&#24212;&#35813;&#20250;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65288;<code>OUTPUT</code> &#37096;&#20998;&#23601;&#26159;&#21152;&#23494;&#21518;&#30340;&#23494;&#25991;&#65289;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>----ARGUMENTS-------------------

input: binary-tea
password: binary-tea
saltGeneratorClassName: org.jasypt.salt.RandomSaltGenerator
ivGeneratorClassName: org.jasypt.iv.RandomIvGenerator
algorithm: PBEWITHHMACSHA512ANDAES_256
----OUTPUT----------------------

X401LMpOiBz7+4gOXybK9cQdDOYlqX7mWXmmj6aGZPGWwjqcbf/80hj0vQWqhaqa</code></pre>
<p>&#22312; <code>application.properties</code> &#20013;&#65292;&#23558; <code>spring.datasource.password</code> &#20462;&#25913;&#20026; <code>ENC(X401LMpOiBz7+4gOXybK9cQdDOYlqX7mWXmmj6aGZPGWwjqcbf/80hj0vQWqhaqa)</code> &#23601;&#23436;&#25104;&#20102;&#37197;&#32622;&#30340;&#20462;&#25913;&#12290;</p>
<p>&#31532;&#19977;&#27493;&#65292;&#22312;&#36816;&#34892;&#26102;&#25552;&#20379;&#35299;&#23494;&#30340;&#23494;&#38053;&#12290;&#22914;&#26524;&#25226;&#23494;&#38053;&#20063;&#20889;&#22312; <code>application.properties</code> &#37324;&#65292;&#37027;&#31561;&#20110;&#25226;&#20445;&#38505;&#31665;&#38053;&#21273;&#21644;&#20445;&#38505;&#31665;&#25918;&#22312;&#20102;&#19968;&#36215;&#65292;&#25152;&#20197;&#65292;&#33267;&#23569;&#23494;&#38053;&#24212;&#35813;&#25918;&#22312;&#21478;&#19968;&#20010;&#21333;&#29420;&#30340;&#25991;&#20214;&#37324;&#12290;&#20511;&#21161; Spring Boot &#30340;&#33021;&#21147;&#65292;&#21487;&#20197;&#23558; <code>jasypt.encryptor.password</code> &#25918;&#22312;&#21629;&#20196;&#34892;&#21442;&#25968;&#25110;&#32773;&#29615;&#22659;&#21464;&#37327;&#37324;&#12290;&#30001;&#20110;&#21629;&#20196;&#34892;&#21442;&#25968;&#21487;&#20197;&#36890;&#36807;&#21629;&#20196;&#34892;&#30452;&#25509;&#35266;&#23519;&#21040;&#65292;&#25152;&#20197;&#29615;&#22659;&#21464;&#37327; <code>JASYPT_ENCRYPTOR_PASSWORD</code> &#20250;&#26159;&#20010;&#26356;&#22909;&#30340;&#36873;&#25321;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#20351;&#29992; Druid &#20869;&#32622;&#21151;&#33021;&#23454;&#29616;&#23494;&#30721;&#21152;&#23494;</strong></p>
<p>Druid &#30340;&#24605;&#36335;&#19982; HikariCP &#25130;&#28982;&#30456;&#21453;&#65292;&#36830;&#25509;&#27744;&#21487;&#33021;&#20250;&#29992;&#21040;&#30340;&#21508;&#31181;&#30456;&#20851;&#21151;&#33021;&#65292;&#23427;&#37117;&#33258;&#24049;&#23454;&#29616;&#20102;&#65292;&#21487;&#35859;&#8220;Druid &#22312;&#25163;&#65292;&#36830;&#25509;&#26080;&#24551;&#8221;&#12290;Druid &#20869;&#32622;&#20102;&#25968;&#25454;&#24211;&#23494;&#30721;&#30340;&#21152;&#23494;&#21151;&#33021;&#65292;&#20351;&#29992; RSA &#38750;&#23545;&#31216;&#31639;&#27861;&#26469;&#36827;&#34892;&#21152;&#35299;&#23494;&#65292;&#25105;&#20204;&#26080;&#39035;&#25805;&#24515;&#21508;&#31181;&#21152;&#35299;&#23494;&#30340;&#32454;&#33410;&#65292;&#23427;&#33021;&#22815;&#33258;&#24049;&#20840;&#37096;&#23553;&#35013;&#22909;&#65292;&#20363;&#22914;&#65292;&#20855;&#20307;&#25805;&#20316;&#26102;&#20869;&#37096;&#20351;&#29992; <code>RSA/ECB/PKCS1Padding</code>&#12290;&#21482;&#35201;&#29992;&#23427;&#30340;&#24037;&#20855;&#29983;&#25104;&#20844;&#31169;&#38053;&#23545;&#65292;&#24182;&#21152;&#23494;&#22909;&#26126;&#25991;&#23601;&#21487;&#20197;&#20102;&#12290;</p>
<p>&#20351;&#29992; Druid &#25552;&#20379;&#30340;&#21629;&#20196;&#34892;&#24037;&#20855;&#26469;&#29983;&#25104;&#23494;&#38053;&#21644;&#23494;&#25991;&#65292;&#21644; Jasypt &#19968;&#26679;&#65292;&#22312;&#26412;&#26426;&#30340; Maven &#20179;&#24211;&#37324;&#25214;&#21040; Druid &#30340; Jar &#21253;&#12290;&#20363;&#22914;&#65292;&#22312;&#25105;&#30340; Mac &#19978;&#65292;1.2.8 &#29256;&#26412; Jar &#21253;&#30340;&#20301;&#32622;&#26159; ~/.m2/repository/com/alibaba/druid/1.2.8&#65292;&#22312;&#36825;&#20010;&#30446;&#24405;&#37324;&#25191;&#34892;&#19979;&#38754;&#30340;&#21629;&#20196;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; java -cp druid-1.2.8.jar com.alibaba.druid.filter.config.ConfigTools &#23494;&#30721;&#26126;&#25991;</code></pre>
<p>&#20551;&#35774;&#23494;&#30721;&#26126;&#25991;&#26159; <code>binary-tea</code>&#65292;&#21017;&#36755;&#20986;&#20250;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#65292;&#20844;&#31169;&#38053;&#21644;&#23494;&#25991;&#20250;&#26377;&#25152;&#19981;&#21516;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>privateKey:MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEAggg3wZKK1/bzA4M4JQ8CtoX48+5poBLFUvMJwxBtnss1o
UEKacWbw2C0vym+WMMSMgm6R+kCrliJqZ6r8MbYuwIDAQABAkAwntQCTEIgOJVrVdBTgwZXq0aIJzhVg09HEdsvld/3RKnQa5WYBbHnw
8zEpptF7VCckVEzQDsOY2zzTmCJO0bRAiEAwUqm7RxrVlyKJ2DEoPIzpXbL+g/aW+FO4KA4pVkDq8MCIQCsN7TeYokq8gugiLNngUbz
BuCL59ovLZUcmkBIbtVnqQIgYTjvZWxaAQJi6xOdU2b/20Y5qvm2V2ioiAuO8nwngIkCIAquleBpWjq4srHtaLtV0HHIjmr/IZBlkm
coxi33+fKpAiAyiVc+QJCtRAZrf8Q5KKi8K2wP5TzxopIWAi7l15MSow==
publicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIIIN8GSitf28wODOCUPAraF+PPuaaASxVLzCcMQbZ7LNaFBCmnFm8NgtL8pvl
jDEjIJukfpAq5Yiameq/DG2LsCAwEAAQ==
password:gTCrgZfRos9fKw3OOyhkWKaKeiwDrUCTkwIskdB+MdxMQF9CGwVY4wIiIm131Aivt4nEXEHLwavWKMOJTRqjIQ==</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#35201;&#22312; <code>application.properties</code> &#20013;&#24320;&#21551;&#23494;&#30721;&#21152;&#23494;&#21151;&#33021;&#65292;&#38656;&#35201;&#35753; Druid &#21152;&#36733; <code>ConfigFilter</code> &#36825;&#20010;&#36807;&#28388;&#22120;&#65292;&#24182;&#37197;&#32622;&#35299;&#23494;&#29992;&#30340;&#23494;&#38053;&#65292;&#23601;&#20687;&#19979;&#38754;&#36825;&#26679; <span class="&#27880;&#37322;&#32534;&#21495;">1</span>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.datasource.password=gTCrgZfRos9fKw3OOyhkWKaKeiwDrUCTkwIskdB+MdxMQF9CGwVY4wIiIm131Aivt4nEXEHLwavWKMOJTRqjIQ==

spring.datasource.druid.filters=config
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${publicKey}

publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIIIN8GSitf28wODOCUPAraF+PPuaaASxVLzCcMQbZ7LNaFBCmnFm8NgtL8pvljDEjIJukfpAq5Yiameq/DG2LsCAwEAAQ==

# &#30465;&#30053;&#20854;&#20182;&#37197;&#32622;</code></pre>
<p>&#21516;&#26679;&#30340;&#65292;&#25226;&#35299;&#23494;&#30340;&#23494;&#38053;&#21644;&#23494;&#25991;&#25918;&#22312;&#19968;&#36215;&#20063;&#19981;&#22826;&#23433;&#20840;&#65292;&#26377;&#20004;&#31181;&#26041;&#24335;&#21487;&#20379;&#36873;&#25321;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312;&#21629;&#20196;&#34892;&#19978;&#35774;&#32622;&#31995;&#32479;&#23646;&#24615; <code>-Ddruid.config.decrypt.key=</code> &#23494;&#38053;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312; Druid &#19987;&#23646;&#30340;&#37197;&#32622;&#25991;&#20214;&#37324;&#35774;&#32622;&#35299;&#23494;&#23494;&#38053; <code>config.decrypt.key=</code> &#23494;&#38053;&#21644; <code>password=</code> &#23494;&#30721;&#23494;&#25991;&#65292;&#21516;&#26102;&#35201;&#20462;&#25913; <code>application.properties</code> &#20013;&#30340;&#36830;&#25509;&#23646;&#24615;&#65292;&#23601;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</li>
</ul>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.datasource.druid.connection-properties=config.decrypt=true;config.file=&#22806;&#37096; Druid &#37197;&#32622;&#25991;&#20214;&#36335;&#24452;</code></pre>
<p>Druid &#37197;&#32622;&#21152;&#23494;&#30340;&#36923;&#36753;&#22522;&#26412;&#37117;&#22312; <code>ConfigFilter</code> &#37324;&#65292;&#23427;&#30340;&#22823;&#33268;&#36923;&#36753;&#26159;&#36825;&#26679;&#30340;&#65306;</p>
<p>(1) &#22312; Druid &#21152;&#36733; <code>Filter</code> &#26102;&#65292;&#20250;&#35843;&#29992;&#20854;&#20013;&#30340; <code>init()</code> &#21021;&#22987;&#21270;&#26041;&#27861;&#65307;</p>
<p>(2) <code>init()</code> &#20250;&#20174; <code>DruidDataSource</code> &#30340; <code>connectProperties</code> &#23646;&#24615;&#65292;&#20197;&#21450;&#25351;&#23450;&#30340;&#37197;&#32622;&#25991;&#20214;&#20013;&#33719;&#21462;&#37197;&#32622;&#65307;</p>
<p>(3) &#21028;&#26029;&#26159;&#21542;&#38656;&#35201;&#35299;&#23494;&#23494;&#30721;&#65307;</p>
<p>(4) &#22914;&#26524;&#38656;&#35201;&#35299;&#23494;&#65292;&#20877;&#20174;&#31532; (2) &#27493;&#30340;&#20004;&#20010;&#20301;&#32622;&#33719;&#21462;&#35299;&#23494;&#30340;&#23494;&#38053;&#65307;</p>
<p>(5) &#35299;&#23494;&#33719;&#24471;&#23494;&#30721;&#26126;&#25991;&#24182;&#36827;&#34892;&#35774;&#32622;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">1</span>&#36890;&#24120; RSA &#21152;&#35299;&#23494;&#65292;&#37117;&#29992;&#20844;&#38053;&#21152;&#23494;&#65292;&#31169;&#38053;&#35299;&#23494;&#12290;&#27492;&#22788;&#32771;&#34385;&#21040;&#26159;&#29992;&#26469;&#21152;&#23494;&#23494;&#30721;&#65292;&#38543;&#21518;&#23558;&#23494;&#25991;&#21644;&#35299;&#23494;&#29992;&#30340;&#23494;&#38053;&#20998;&#21457;&#21040;&#21508;&#26381;&#21153;&#22120;&#19978;&#65292;&#25152;&#20197;&#21453;&#36716;&#20102;&#19968;&#19979;&#65292;&#29992;&#31169;&#38053;&#21152;&#23494;&#65292;&#20844;&#38053;&#35299;&#23494;&#12290;&#22312; <code>ConfigTools</code> &#20013;&#65292;&#26377;&#36825;&#20040;&#19968;&#27573;&#27880;&#37322;&#8212;&#8212;&#8220;&#22240;&#20026; IBM JDK &#19981;&#25903;&#25345;&#31169;&#38053;&#21152;&#23494;&#20844;&#38053;&#35299;&#23494;&#65292;&#25152;&#20197;&#35201;&#21453;&#36716;&#20844;&#31169;&#38053;&#12290;&#20063;&#23601;&#26159;&#35828;&#23545;&#20110;&#35299;&#23494;&#65292;&#21487;&#20197;&#36890;&#36807;&#20844;&#38053;&#30340;&#21442;&#25968;&#20266;&#36896;&#19968;&#20010;&#31169;&#38053;&#23545;&#35937;&#27450;&#39575; IBM JDK&#8221;&#12290;&#21487;&#35265;&#36825;&#20010;&#26426;&#21046;&#22312;&#23454;&#36341;&#20013;&#36824;&#26159;&#36393;&#36807;&#22353;&#30340;&#12290;</p><h3 id="nav_point_122">8.1.2&#12288;&#35760;&#24405; SQL &#35821;&#21477;&#25191;&#34892;&#24773;&#20917;</h3><p>&#36890;&#24120;&#22312;&#36935;&#21040;&#35831;&#27714;&#22788;&#29702;&#32531;&#24930;&#30340;&#24773;&#20917;&#26102;&#65292;&#25105;&#20204;&#20250;&#23545;&#25191;&#34892;&#30340;&#27599;&#19968;&#27493;&#36827;&#34892;&#20998;&#26512;&#65292;&#30475;&#30475;&#31350;&#31455;&#24930;&#22312;&#21738;&#37324;&#12290;&#22914;&#26524;&#26159;&#25191;&#34892; SQL &#35821;&#21477;&#65292;&#37027;&#23601;&#35201;&#25214;&#21040;&#36739;&#24930;&#30340; SQL &#36827;&#34892;&#20248;&#21270;&#65292;&#36825;&#26102;&#38656;&#35201;&#35760;&#24405;&#24930; SQL &#26085;&#24535;&#65292;DBA &#19968;&#33324;&#20063;&#20250;&#30417;&#25511;&#25968;&#25454;&#24211;&#31471;&#30340;&#24930; SQL&#12290;&#36824;&#26377;&#21478;&#19968;&#31181;&#22330;&#26223;&#65292;&#25968;&#25454;&#24211;&#37324;&#30340;&#35760;&#24405;&#20869;&#23481;&#19982;&#39044;&#26399;&#30340;&#19981;&#31526;&#65292;&#36825;&#31181;&#26102;&#20505;&#65292;&#22914;&#26524;&#33021;&#35760;&#24405;&#19979;&#27599;&#26465;&#25191;&#34892;&#30340; SQL &#35821;&#21477;&#65292;&#20877;&#22238;&#36807;&#22836;&#26469;&#20998;&#26512;&#38382;&#39064;&#23601;&#33021;&#26041;&#20415;&#24456;&#22810;&#12290;&#22240;&#27492;&#65292;&#19981;&#31649;&#20160;&#20040;&#24773;&#20917;&#65292;&#22914;&#26524;&#33021;&#22815;&#35814;&#32454;&#22320;&#35760;&#24405;&#31243;&#24207;&#25191;&#34892;&#30340; SQL &#35821;&#21477;&#65292;&#22312;&#21518;&#32493;&#21508;&#31181;&#24615;&#33021;&#20248;&#21270;&#21644;&#38382;&#39064;&#20998;&#26512;&#26102;&#37117;&#20250;&#38750;&#24120;&#26377;&#29992;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">2</span></p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">2</span>&#23545;&#24615;&#33021;&#26377;&#36861;&#27714;&#30340;&#21508;&#20301;&#19968;&#23450;&#24456;&#24819;&#30693;&#36947;&#65292;&#27599;&#26465; SQL &#37117;&#29992;&#26085;&#24535;&#25171;&#21360;&#20986;&#26469;&#20250;&#19981;&#20250;&#24456;&#24930;&#12290;&#31572;&#26696;&#26159;&#19968;&#23450;&#20250;&#27604;&#19981;&#25171;&#21360;&#26085;&#24535;&#24930;&#65292;&#20294;&#20063;&#19981;&#33267;&#20110;&#22826;&#22840;&#24352;&#12290;&#27605;&#31455;&#22825;&#19979;&#27809;&#26377;&#20813;&#36153;&#30340;&#21320;&#39184;&#65292;&#19982;&#23427;&#24102;&#26469;&#30340;&#22909;&#22788;&#30456;&#27604;&#65292;&#20184;&#20986;&#36825;&#28857;&#24930;&#30340;&#20195;&#20215;&#36824;&#26159;&#20540;&#24471;&#30340;&#12290;&#20026;&#20102;&#30830;&#20445;&#26085;&#24535;&#23545;&#24615;&#33021;&#30340;&#24433;&#21709;&#19981;&#20250;&#22826;&#22823;&#65292;&#24314;&#35758;&#19968;&#23450;&#23545; SQL &#26085;&#24535;&#24320;&#21551;&#24322;&#27493;&#26085;&#24535;&#25903;&#25345;&#12290;</p><ol>
<li><p><strong>&#32467;&#21512; HikariCP &#19982; P6SPY &#23454;&#29616; SQL &#35760;&#24405;</strong></p>
<p>HikariCP &#26412;&#36523;&#24182;&#27809;&#26377;&#25552;&#20379; SQL &#26085;&#24535;&#30340;&#21151;&#33021;&#65292;&#22240;&#27492;&#38656;&#35201;&#20511;&#21161; P6SPY<span class="&#27880;&#37322;&#32534;&#21495;">3</span> &#26469;&#35760;&#24405;&#25191;&#34892;&#30340; SQL&#12290;P6SPY &#26159;&#19968;&#22871;&#21487;&#20197;&#26080;&#32541;&#25318;&#25130;&#24182;&#35760;&#24405; SQL &#25191;&#34892;&#24773;&#20917;&#30340;&#26694;&#26550;&#65292;&#23427;&#24037;&#20316;&#22312; JDBC &#23618;&#38754;&#65292;&#25152;&#20197;&#26080;&#35770;&#25105;&#20204;&#20351;&#29992;&#20160;&#20040;&#36830;&#25509;&#27744;&#65292;&#26159;&#21542;&#20351;&#29992; ORM &#26694;&#26550;&#65292;&#37117;&#33021;&#36890;&#36807; P6SPY &#26469;&#36827;&#34892;&#25318;&#25130;&#12290;</p>
<p>&#39318;&#20808;&#65292;&#22312; pom.xml &#20013;&#24341;&#20837; P6SPY &#30340;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;p6spy&lt;/groupId&gt;
    &lt;artifactId&gt;p6spy&lt;/artifactId&gt;
    &lt;version&gt;3.9.1&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#35843;&#25972;&#36830;&#25509;&#27744;&#30340;&#37197;&#32622;&#65292;&#23558; JDBC &#39537;&#21160;&#31867;&#21517;&#25351;&#23450;&#20026; <code>com.p6spy.engine.spy.P6SpyDriver</code>&#65292;&#24182;&#20462;&#25913; URL&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.url=jdbc:p6spy:h2:mem:testdb</code></pre>
<p>P6SPY &#30340; URL &#24418;&#24335;&#22522;&#26412;&#21487;&#20197;&#24402;&#32435;&#20026;&#22312;&#21407;&#20808;&#30340; JDBC URL &#30340;&#22522;&#30784;&#19978;&#65292;&#22312; <code>jdbc:</code> &#21518;&#25554;&#20837;&#19968;&#27573; <code>p6spy:</code>&#65292;&#20854;&#20182;&#19982;&#20351;&#29992;&#25968;&#25454;&#24211;&#21407;&#29983; JDBC &#39537;&#21160;&#19968;&#33268;&#12290;&#22914;&#26524;&#26159; MySQL&#65292;&#21017; URL &#31867;&#20284; <code>jdbc:p6spy:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8</code>&#12290;</p>
<p>&#26368;&#21518;&#65292;&#25105;&#20204;&#36824;&#38656;&#35201;&#19968;&#20010; P6SPY &#30340;&#37197;&#32622;&#25991;&#20214;&#12290;&#22312; CLASSPATH &#37324;&#25918;&#19968;&#20010; <code>spy.properties</code>&#65292;&#20854;&#20013;&#26159; P6SPY &#30340;&#30456;&#20851;&#37197;&#32622; a&#12290;&#34920; 8-2 &#21015;&#20030;&#20102;&#19968;&#20123;&#22522;&#26412;&#30340;&#37197;&#32622;&#12290;</p>
<p><strong>&#34920; 8-2&#12288;P6SPY &#37197;&#32622;&#25991;&#20214;&#20013;&#30340;&#22522;&#26412;&#37197;&#32622;&#39033;</strong><span class="&#27880;&#37322;&#32534;&#21495;">4</span></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126; <sup><b>5</b></sup></th></tr><tr><td><code>dateformat</code></td><td>&#40664;&#35748;&#20351;&#29992;&#26102;&#38388;&#25139;&#30340;&#24418;&#24335;</td><td>&#26085;&#26399;&#26684;&#24335;&#65292;&#20351;&#29992; <code>SimpleDateFormat</code> &#30340;&#26684;&#24335;&#36827;&#34892;&#37197;&#32622;</td></tr><tr><td><code>logMessageFormat</code></td><td><code>com.p6spy.engine.spy.appender.SingleLineFormat</code></td><td>&#26085;&#24535;&#26684;&#24335;&#21270;&#31867;&#65292;&#21487;&#20197;&#22312; <code>SingleLineFormat</code> &#21644; <code>CustomLineFormat</code> &#20043;&#38388;&#36873;&#25321;</td></tr><tr><td><code>customLogMessageFormat</code></td><td><code>%(currentTime)|%(executionTime)|%(category)|connection%(connectionId)|%(sqlSingleLine)</code></td><td><code>CustomLineFormat</code> &#20351;&#29992;&#30340;&#36755;&#20986;&#26684;&#24335;</td></tr><tr><td><code>appender</code></td><td><code>com.p6spy.engine.spy.appender.FileLogger</code></td><td>&#25171;&#21360;&#26085;&#24535;&#20351;&#29992;&#30340; <code>Appender</code>&#65292;&#21487;&#20197;&#22312; <code>FileLogger</code>&#12289;<code>SthoutLogger</code> &#21644; <code>Slf4JLogger</code> &#20043;&#38388;&#36873;&#25321;</td></tr><tr><td><code>logfile</code></td><td>spy.log</td><td><code>FileLogger</code> &#36755;&#20986;&#30340;&#26085;&#24535;&#25991;&#20214;</td></tr><tr><td><code>outagedetection</code></td><td><code>false</code></td><td>&#26159;&#21542;&#24320;&#21551;&#24930; SQL &#26816;&#27979;&#65292;&#24403;&#36825;&#20010;&#24320;&#20851;&#24320;&#21551;&#26102;&#65292;&#38500;&#20102;&#24930;&#30340; SQL &#35821;&#21477;&#20854;&#20182;&#35821;&#21477;&#37117;&#19981;&#20250;&#20877;&#36755;&#20986;&#20102;</td></tr><tr><td><code>outagedetectioninterval</code></td><td><code>60</code></td><td>&#24930; SQL &#25191;&#34892;&#26816;&#27979;&#30340;&#38388;&#38548;&#26102;&#38388;&#65292;&#21333;&#20301;&#26159;&#31186;</td></tr><tr><td><code>realdatasourceclass</code></td><td></td><td>&#30495;&#23454;&#30340;&#25968;&#25454;&#28304;&#31867;&#21517;&#65292;&#19968;&#33324;&#37117;&#33021;&#33258;&#21160;&#26816;&#27979;&#20986;&#23454;&#38469;&#38656;&#35201;&#30340;&#39537;&#21160;&#31867;&#21517;</td></tr><tr><td><code>realdatasourceproperties</code></td><td></td><td>&#30495;&#23454;&#30340;&#25968;&#25454;&#28304;&#37197;&#32622;&#23646;&#24615;&#65292;&#37197;&#32622;&#39033;&#29992;&#38190;&#20540;&#23545;&#24418;&#24335;&#34920;&#31034;&#65292;&#38190;&#19982;&#20540;&#29992;&#20998;&#21495;&#20998;&#38548;&#65292;&#19981;&#21516;&#30340;&#38190;&#20540;&#23545;&#20043;&#38388;&#29992;&#36887;&#21495;&#20998;&#38548;</td></tr></table>
<blockquote>
<p><sup><b>5</b></sup>&#20026;&#20102;&#26041;&#20415;&#25490;&#29256;&#65292;&#36825;&#19968;&#21015;&#30340;&#31867;&#21482;&#20889;&#20102;&#31867;&#21517;&#65292;&#32780;&#22312;&#23454;&#38469;&#37197;&#32622;&#26102;&#38656;&#35201;&#20351;&#29992;&#20840;&#38480;&#23450;&#31867;&#21517;&#12290;</p>
</blockquote>
<p>&#20551;&#35774;&#25105;&#20204;&#30340; <code>spy.properties</code> &#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>appender=com.p6spy.engine.spy.appender.Slf4JLogger
dateformat=yyyyMMdd'T'HH:mm:ss</code></pre>
<p>&#22312;&#20043;&#21069;&#30340; binarytea-jpa &#20013;&#23436;&#25104;&#19978;&#36848;&#25152;&#26377;&#30340;&#20462;&#25913;&#65292;&#20851;&#38381; Hibernate &#30340; SQL &#36755;&#20986;&#65292;&#36816;&#34892;&#31243;&#24207;&#65292;&#23601;&#33021;&#22312;&#26085;&#24535;&#20013;&#30475;&#21040;&#31867;&#20284;&#19979;&#38754;&#30340;&#36755;&#20986;&#65292;&#20854;&#20013;&#21253;&#21547;&#20102; SQL &#25191;&#34892;&#26102;&#38388;&#12289;&#32791;&#26102;&#21644; SQL &#31561;&#20869;&#23481;&#65292;&#19968;&#33324;&#24314;&#35758;&#25226; P6SPY &#30340;&#26085;&#24535;&#21333;&#29420;&#37197;&#32622;&#21040;&#19968;&#20010;&#26085;&#24535;&#37324;&#21435;&#65292;&#26041;&#20415;&#26597;&#30475;&#65306;<span class="&#27880;&#37322;&#32534;&#21495;">6</span></p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2022-02-26 14:27:29.922 INFO 67257 --- [main] p6spy : 20220226T14:27:29|0|statement|connection 0|
url jdbc:p6spy:h2:mem:testdb|select count(*) as col_0_0_ from t_menu menuitem0_|select count(*) as
col_0_0_ from t_menu menuitem0_</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#20351;&#29992; Druid &#20869;&#32622;&#21151;&#33021;&#23454;&#29616; SQL &#35760;&#24405;</strong></p>
<p>Druid &#23601;&#19981;&#38656;&#35201;&#20160;&#20040;&#39069;&#22806;&#30340;&#24211;&#25903;&#25345;&#20102;&#65292;&#23427;&#33258;&#24049;&#23601;&#20869;&#32622;&#20102;&#35814;&#23613;&#30340;&#26085;&#24535;&#19982;&#32479;&#35745;&#21151;&#33021;&#65292;&#19982;&#23494;&#30721;&#21152;&#23494;&#21151;&#33021;&#19968;&#26679;&#65292;&#36825;&#20123;&#21151;&#33021;&#20063;&#26159;&#36890;&#36807; <code>Filter</code> &#26469;&#23454;&#29616;&#30340;&#12290;</p>
<p>&#20808;&#26159;&#26085;&#24535;&#36807;&#28388;&#22120; <code>LogFilter</code>&#65292;Druid &#19968;&#20849;&#20869;&#32622;&#20102;&#22235;&#20010;&#38024;&#23545;&#19981;&#21516;&#26085;&#24535;&#26694;&#26550;&#30340; <code>LogFilter</code> &#23376;&#31867;&#65292;&#22312;&#37197;&#32622;&#26102;&#21487;&#20197;&#20351;&#29992;&#23427;&#20204;&#30340;&#21035;&#21517;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#23545;&#24212; Log4j 1.<em>x</em> &#30340; <code>Log4jFilter</code>&#65292;&#21035;&#21517; <code>log4j</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#23545;&#24212; Log4j 2.<em>x</em> &#30340; <code>Log4j2Filter</code>&#65292;&#21035;&#21517; <code>log4j2</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#23545;&#24212; Commongs Logging &#30340; <code>CommonsLogFilter</code>&#65292;&#21035;&#21517; <code>commonlogging</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#23545;&#24212; SLF4J &#30340; <code>Slf4jLogFilter</code>&#65292;&#21035;&#21517; <code>slf4j</code>&#12290;</li>
</ul>
<p>Druid &#30340;&#26085;&#24535;&#36807;&#28388;&#22120;&#25171;&#21360;&#30340;&#20449;&#24687;&#24456;&#22810;&#65292;&#23427;&#20204;&#20998;&#21035;&#20351;&#29992;&#20102;&#19981;&#21516;&#30340; <code>Logger</code>&#12290;&#25105;&#20204;&#21487;&#20197;&#38024;&#23545;&#19981;&#21516;&#30340; <code>Logger</code> &#20570;&#19981;&#21516;&#30340;&#26085;&#24535;&#37197;&#32622;&#65292;&#22312;&#23454;&#38469;&#20351;&#29992;&#26102;&#24314;&#35758;&#25361;&#36873;&#20854;&#20013;&#30340;&#19968;&#20123;&#25171;&#21360;&#23601;&#21487;&#20197;&#20102;&#12290;&#20363;&#22914;&#65292;&#26681;&#25454;&#19981;&#21516;&#30340;&#26085;&#24535;&#32423;&#21035;&#65292;&#23558;&#26085;&#24535;&#36755;&#20986;&#21040;&#19981;&#21516;&#30340;&#25991;&#20214;&#65292;&#20855;&#20307;&#30340;&#26085;&#24535;&#26694;&#26550;&#37197;&#32622;&#21487;&#20197;&#21442;&#32771;&#23427;&#20204;&#30340;&#25991;&#26723;&#12290;&#34920; 8-3 &#32599;&#21015;&#20102;&#19968;&#20123;&#19982; <code>LogFilter</code> &#30456;&#20851;&#30340;&#37197;&#32622;&#12290;</p>
<p><strong>&#34920; 8-3&#12288;<code>LogFilter</code> &#20013;&#29992;&#21040;&#30340; <code>Logger</code> &#21517;&#31216;&#21644;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th><code>Logger</code> &#21517;&#31216;</th><th>&#37197;&#32622;&#39033;</th><th>&#35828;&#26126;</th></tr><tr><td><code>druid.sql.DataSource</code></td><td></td><td>&#25171;&#21360;&#20851;&#20110; <code>DataSource</code> &#30340;&#26085;&#24535;</td></tr><tr><td><code>druid.sql.Connection</code></td><td><code>druid.log.conn=true</code></td><td>&#25171;&#21360;&#20851;&#20110; <code>Connection</code> &#30340;&#26085;&#24535;</td></tr><tr><td><code>druid.sql.Statement</code></td><td><code>druid.log.stmt=true</code></td><td>&#25171;&#21360;&#20851;&#20110; <code>Statement</code> &#30340;&#26085;&#24535;</td></tr><tr><td><code>druid.sql.Statement</code></td><td><code>druid.log.stmt.executableSql=false</code></td><td>&#22312;&#24320;&#21551;&#20102; <code>Statement</code> &#30340;&#26085;&#24535;&#26102;&#65292;&#26159;&#21542;&#25171;&#21360;&#25191;&#34892;&#30340; SQL</td></tr><tr><td><code>druid.sql.ResultSet</code></td><td><code>druid.log.rs=true</code></td><td>&#25171;&#21360;&#20851;&#20110; <code>ResultSet</code> &#30340;&#26085;&#24535;</td></tr></table>
<p>&#23376;&#31867;&#65292;&#22312;&#37197;&#32622;&#26102;&#21487;&#20197;&#20351;&#29992;&#23427;&#20204;&#30340;&#21035;&#21517;&#65306;&#26597;&#30475;&#12290;&#35201;&#22312;&#25171;&#21360;&#30340;&#19968;&#22823;&#22534; SQL &#37324;&#25214;&#21040;&#24930; SQL&#65292;&#36824;&#26159;&#38656;&#35201;&#19968;&#28857;&#26102;&#38388;&#30340;&#12290;&#20026;&#27492;&#65292;Druid &#36824;&#36148;&#24515;&#22320;&#25552;&#20379;&#20102;&#19968;&#20010;&#24930; SQL &#32479;&#35745;&#30340;&#36807;&#28388;&#22120; <code>StatFilter</code>&#65292;&#21035;&#21517;&#26159; <code>stat</code>&#12290;&#23427;&#26377;&#19977;&#20010;&#21442;&#25968;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>druid.stat.logSlowSql</code>&#65292;&#26159;&#21542;&#25171;&#21360;&#24930; SQL&#65292;&#40664;&#35748;&#20540;&#20026; <code>false</code>&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>druid.stat.slowSqlMillis</code>&#65292;&#29992;&#26469;&#23450;&#20041;&#22810;&#24930;&#30340; SQL &#23646;&#20110;&#24930; SQL&#65292;&#40664;&#35748;&#20540;&#20026; <code>3000</code>&#65292;&#21333;&#20301;&#27627;&#31186;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>druid.stat.mergeSql</code>&#65292;&#22312;&#32479;&#35745;&#26102;&#26159;&#21542;&#21512;&#24182; SQL&#65292;&#40664;&#35748;&#20540;&#20026; <code>false</code>&#12290;</li>
</ul>
<p>&#22312; <code>application.properties</code> &#20013;&#65292;&#21487;&#20197;&#37197;&#32622;&#22810;&#20010;&#36807;&#28388;&#22120;&#65292;&#23601;&#20687;&#19979;&#38754;&#31034;&#20363;&#30340;&#31532;&#20108;&#34892;&#20195;&#30721;&#36825;&#26679;&#65292;&#29992;&#36887;&#21495;&#20998;&#38548;&#65292;&#38543;&#21518;&#20877;&#37197;&#32622;&#19968;&#20123;&#23646;&#24615;&#12290;&#30001;&#20110; Druid &#20013;&#27491;&#24120;&#30340; SQL &#36755;&#20986;&#20351;&#29992;&#30340;&#26159; <code>DEBUG</code> &#32423;&#21035;&#65292;&#25152;&#20197;&#25105;&#20204;&#36824;&#35201;&#35843;&#25972;&#19968;&#19979;&#30456;&#20851; <code>Logger</code> &#30340;&#26085;&#24535;&#32423;&#21035;&#25165;&#33021;&#36755;&#20986;&#26085;&#24535;&#12290;&#19979;&#38754;&#26159;&#30452;&#25509;&#22312; <code>application.properties</code> &#37324;&#20462;&#25913;&#26085;&#24535;&#32423;&#21035;&#30340;&#20195;&#30721;&#65292;&#20294;&#23454;&#36341;&#20013;&#26356;&#24314;&#35758;&#22312;&#26085;&#24535;&#26694;&#26550;&#30340;&#37197;&#32622;&#25991;&#20214;&#37324;&#20462;&#25913;&#65292;&#21644;&#20854;&#20182;&#26085;&#24535;&#37197;&#32622;&#25918;&#19968;&#36215;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>logging.level.druid.sql.*=debug

spring.datasource.druid.filters=config,slf4j,stat
spring.datasource.druid.connection-properties=druid.log.stmt.executableSql=true;druid.stat.
logSlowSql=true;druid.stat.mergeSql=true</code></pre>
<p>&#25191;&#34892;&#31243;&#24207;&#26102;&#65292;&#25105;&#20204;&#21487;&#20197;&#22312;&#26085;&#24535;&#37324;&#25214;&#21040;&#22823;&#37327;&#19982;&#25968;&#25454;&#24211;&#25805;&#20316;&#30456;&#20851;&#30340;&#26085;&#24535;&#65292;&#20854;&#20013;&#20250;&#26377;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#30340;&#26085;&#24535;&#65292;&#25171;&#21360;&#20986;&#20102; <code>PreparedStatement</code> &#30340; SQL&#12289;&#21442;&#25968;&#20540;&#30340;&#31867;&#22411;&#65292;&#20197;&#21450;&#25191;&#34892;&#32791;&#26102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2020-10-07 23:16:43.174 DEBUG 68289 --- [main] druid.sql.Statement : {conn-10001, pstmt-20014}
created. select * from t_menu where id = ?
2020-10-07 23:16:43.174 DEBUG 68289 --- [main] druid.sql.Statement : {conn-10001, pstmt-20014}
Parameters : [1]
2020-10-07 23:16:43.174 DEBUG 68289 --- [main] druid.sql.Statement : {conn-10001, pstmt-20014}
Types : [BIGINT]
2020-10-07 23:16:43.175 DEBUG 68289 --- [main] druid.sql.Statement : {conn-10001, pstmt-20014, rs-50009}
query executed. 0.293573 millis. select * from t_menu where id = ?</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">3</span>&#23448;&#26041;&#20027;&#39029;&#35265; GitHub&#65288;p6spy/p6spy&#65289;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">4</span>&#35814;&#32454;&#30340;&#37197;&#32622;&#20449;&#24687;&#21487;&#20197;&#35775;&#38382;&#23448;&#26041;&#35828;&#26126;&#65288;<a href="https://p6spy.readthedocs.io/en/latest/configandusage.html">p6spy.readthedocs.io/en/latest/configandusage.html</a>&#65289;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">6</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch8/binarytea-jpa-p6spy &#39033;&#30446;&#20013;&#12290;</p><h3 id="nav_point_123">8.1.3&#12288;Druid &#30340; <code>Filter</code> &#25193;&#23637;</h3><p>Druid &#30340; <code>Filter</code> &#26159;&#20010;&#38750;&#24120;&#26377;&#29992;&#30340;&#26426;&#21046;&#65292;&#21487;&#20197;&#25318;&#25130; <code>DruidDataSource</code>&#12289;<code>Connection</code>&#12289;<code>Statement</code>&#12289;<code>PreparedStatement</code>&#12289;<code>CallableStatement</code>&#12289;<code>ResultSet</code>&#12289;<code>ResultSetMetaData</code>&#12289;<code>Wrapper</code> &#21644; <code>Clob</code> &#19978;&#26041;&#27861;&#30340;&#25191;&#34892;&#12290;&#36825;&#20854;&#20013;&#20351;&#29992;&#20102;&#36131;&#20219;&#38142;&#27169;&#24335;&#65292;&#20063;&#23601;&#26159;&#23558;&#19981;&#21516;&#30340;&#36807;&#28388;&#22120;&#20018;&#32852;&#22312;&#19968;&#36215;&#65292;&#20197;&#23454;&#29616;&#19981;&#21516;&#30340;&#21151;&#33021;&#12290;</p><p>&#21069;&#25991;&#25552;&#21040;&#30340;&#25968;&#25454;&#24211;&#23494;&#30721;&#21152;&#23494;&#12289;&#25968;&#25454;&#24211;&#25191;&#34892;&#26085;&#24535;&#37117;&#26159; <code>Filter</code> &#30340;&#20363;&#23376;&#65292;&#22312; Druid &#37324;&#36824;&#26377;&#19968;&#20010;&#38750;&#24120;&#26377;&#29992;&#30340; <code>Filter</code>&#65292;&#37027;&#23601;&#26159; SQL &#27880;&#20837;&#38450;&#28779;&#22681;&#65292;&#21363; <code>WallFilter</code>&#65292;&#21035;&#21517;&#26159; <code>wall</code>&#12290;&#23427;&#33021;&#22815;&#26377;&#25928;&#22320;&#25511;&#21046;&#36890;&#36807; Druid &#25191;&#34892;&#30340; SQL&#65292;&#36991;&#20813;&#24694;&#24847;&#34892;&#20026;&#12290;&#36890;&#24120;&#24773;&#20917;&#19979;&#65292;&#33258;&#21160;&#35782;&#21035;&#30340;&#37197;&#32622;&#23601;&#24050;&#32463;&#22815;&#29992;&#20102;&#12290;&#22312; Spring Boot &#20013;&#65292;<code>Filter</code> &#38500;&#20102;&#20687; 8.1.1 &#33410;&#21644; 8.1.2 &#33410;&#20013;&#37027;&#26679;&#37197;&#32622;&#20043;&#22806;&#65292;&#36824;&#21487;&#20197;&#20511;&#21161; Druid Spring Boot Starter &#30340;&#24110;&#21161;&#65292;&#30452;&#25509;&#22312; <code>application.properties</code> &#37324;&#20687;&#19979;&#38754;&#36825;&#26679;&#26469;&#37197;&#32622;&#65292;&#20855;&#20307;&#30340;&#37197;&#32622;&#23454;&#29616;&#21487;&#20197;&#21442;&#32771; <code>DruidFilterConfiguration</code> &#31867;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=h2
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false
spring.datasource.druid.filter.wall.config.create-table-allow=false
spring.datasource.druid.filter.wall.config.alter-table-allow=false</code></pre><p>&#19981;&#20809;&#24456;&#22810;&#20869;&#32622;&#21151;&#33021;&#26159;&#36890;&#36807; <code>Filter</code> &#23454;&#29616;&#30340;&#65292;&#25105;&#20204;&#33258;&#24049;&#20063;&#21487;&#20197;&#36890;&#36807;&#23427;&#20570;&#20986;&#24456;&#22810;&#25193;&#23637;&#12290;&#35201;&#24320;&#21457;&#33258;&#24049;&#30340; <code>Filter</code>&#65292;&#21487;&#20197;&#30452;&#25509;&#23454;&#29616; <code>Filter</code> &#25509;&#21475;&#12290;&#20294;&#36825;&#20040;&#20570;&#22826;&#40635;&#28902;&#65292;&#26377;&#22826;&#22810;&#30340;&#26041;&#27861;&#38656;&#35201;&#25105;&#20204;&#25552;&#20379;&#31354;&#23454;&#29616;&#65292;&#32780;&#25105;&#20204;&#24448;&#24448;&#21482;&#20851;&#24515;&#20854;&#20013;&#30340;&#20960;&#20010;&#65292;&#25152;&#20197;&#32487;&#25215; <code>FilterAdapter</code> &#25110;&#32773; <code>FilterEventAdapter</code> &#20250;&#26159;&#26356;&#22909;&#30340;&#36873;&#25321;&#12290;</p><p><code>FilterAdapter</code> &#20026;&#27599;&#20010;&#26041;&#27861;&#37117;&#25552;&#20379;&#20102;&#40664;&#35748;&#23454;&#29616;&#65292;&#21487;&#20197;&#30452;&#25509;&#35843;&#29992;&#26041;&#27861;&#21442;&#25968;&#20013;&#20256;&#20837;&#30340; <code>FilterChain</code> &#30340;&#23545;&#24212;&#26041;&#27861;&#65292;&#32487;&#32493;&#25191;&#34892;&#36131;&#20219;&#38142;&#20013;&#30340;&#20854;&#20182;&#36807;&#28388;&#22120;&#26041;&#27861;&#12290;&#20363;&#22914;&#65292;<code>preparedStatement_executeUpdate()</code> &#26041;&#27861;&#30340;&#23454;&#29616;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public int preparedStatement_executeUpdate(FilterChain chain, PreparedStatementProxy statement)
throws SQLException {
    return chain.preparedStatement_executeUpdate(statement);
}</code></pre><p><code>FilterEventAdapter</code> &#26159; <code>FilterAdapter</code> &#30340;&#23376;&#31867;&#65292;&#23427;&#22312;&#25191;&#34892;&#36131;&#20219;&#38142;&#30340;&#22522;&#30784;&#20043;&#19978;&#65292;&#21448;&#22686;&#21152;&#20102;&#25191;&#34892;&#21069;&#21518;&#30340;&#21160;&#20316;&#65292;&#20197; <code>statement_execute()</code> &#20026;&#20363;&#65292;&#23427;&#30340;&#23454;&#29616;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public boolean statement_execute(FilterChain chain, StatementProxy statement, String sql,
String columnNames[]) throws SQLException {
    statementExecuteBefore(statement, sql);
    try {
        boolean firstResult = super.statement_execute(chain, statement, sql, columnNames);
        this.statementExecuteAfter(statement, sql, firstResult);
        return firstResult;
    } catch (SQLException error) {
        statement_executeErrorAfter(statement, sql, error);
        throw error;
    } catch (RuntimeException error) {
        statement_executeErrorAfter(statement, sql, error);
        throw error;
    } catch (Error error) {
        statement_executeErrorAfter(statement, sql, error);
        throw error;
    }
}</code></pre><p>&#25105;&#20204;&#21487;&#20197;&#26681;&#25454;&#33258;&#24049;&#30340;&#38656;&#35201;&#65292;&#36873;&#25321;&#24615;&#35206;&#30422; <code>statementExecuteBefore()</code>&#12289;<code>statementExecuteAfter()</code> &#25110; <code>statement_executeErrorAfter()</code> &#26041;&#27861;&#65292;&#36798;&#21040;&#22312; SQL &#35821;&#21477;&#25191;&#34892;&#21069;&#12289;&#25191;&#34892;&#21518;&#12289;&#25243;&#24322;&#24120;&#26102;&#36816;&#34892;&#33258;&#23450;&#20041;&#36923;&#36753;&#30340;&#30446;&#30340;&#12290;</p><p>&#29616;&#22312;&#65292;&#20551;&#35774;&#25105;&#20204;&#24076;&#26395;&#22312;&#25191;&#34892; <code>Connection</code> &#30340;&#36830;&#25509;&#21160;&#20316;&#21069;&#21518;&#25171;&#21360;&#19968;&#20123;&#26085;&#24535;&#65292;&#21487;&#20197;&#20687;&#20195;&#30721;&#31034;&#20363; 8-1<span class="&#27880;&#37322;&#32534;&#21495;">7</span> &#37027;&#26679;&#65292;&#32487;&#25215; <code>FilterEventAdapter</code>&#65292;&#35206;&#30422; <code>connection_connectBefore()</code> &#21644; <code>connection_connectAfter</code>&#65292;&#24182;&#22312;&#37324;&#38754;&#28155;&#21152;&#33258;&#24049;&#30340;&#36923;&#36753;&#23601;&#21487;&#20197;&#20102;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">7</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch8/binary-jpa-druid &#39033;&#30446;&#37324;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-1</strong>&#12288;<code>ConnectionConnectFilter</code> &#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
@AutoLoad // &#36825;&#20010;&#27880;&#35299;&#31245;&#21518;&#35299;&#37322;
public class ConnectionConnectFilter extends FilterEventAdapter {
    @Override
    public void connection_connectBefore(FilterChain chain, Properties info) {
        log.info("Trying to create a new Connection.");
        super.connection_connectBefore(chain, info);
    }

    @Override
    public void connection_connectAfter(ConnectionProxy connection) {
        super.connection_connectAfter(connection);
        log.info("We have a new connected Connection.");
    }
}</code></pre><p>&#22312;&#21152;&#36733; <code>Filter</code> &#26102;&#26377;&#19977;&#31181;&#26041;&#24335;&#65292;&#31532;&#19968;&#31181;&#26159;&#22312;&#37197;&#32622;&#25991;&#20214;&#20013;&#36890;&#36807;&#21035;&#21517;&#26469;&#36873;&#25321;&#35201;&#21152;&#36733;&#30340; <code>Filter</code>&#12290;&#21035;&#21517;&#19982;&#20855;&#20307;&#31867;&#30340;&#23545;&#24212;&#20851;&#31995;&#37197;&#32622;&#22312; META-INF/druid-filter.properties &#37324;&#65292;&#20869;&#32622;&#30340;&#25991;&#20214;&#20869;&#23481;&#22914;&#19979;&#25152;&#31034;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>druid.filters.default=com.alibaba.druid.filter.stat.StatFilter
druid.filters.stat=com.alibaba.druid.filter.stat.StatFilter
druid.filters.mergeStat=com.alibaba.druid.filter.stat.MergeStatFilter
druid.filters.counter=com.alibaba.druid.filter.stat.StatFilter
druid.filters.encoding=com.alibaba.druid.filter.encoding.EncodingConvertFilter
druid.filters.log4j=com.alibaba.druid.filter.logging.Log4jFilter
druid.filters.log4j2=com.alibaba.druid.filter.logging.Log4j2Filter
druid.filters.slf4j=com.alibaba.druid.filter.logging.Slf4jLogFilter
druid.filters.commonlogging=com.alibaba.druid.filter.logging.CommonsLogFilter
druid.filters.commonLogging=com.alibaba.druid.filter.logging.CommonsLogFilter
druid.filters.wall=com.alibaba.druid.wall.WallFilter
druid.filters.config=com.alibaba.druid.filter.config.ConfigFilter</code></pre><p>&#21487;&#20197;&#30475;&#21040;&#65292;&#38190;&#26159; <code>druid.filters.</code> &#21035;&#21517;&#65292;&#20540;&#26159;&#20855;&#20307;&#30340;&#20840;&#38480;&#23450;&#31867;&#21517;&#65292;&#25152;&#20197;&#21069;&#38754;&#21487;&#20197;&#29992; <code>config</code>&#12289;<code>stat</code> &#21644; <code>slf4j</code> &#36825;&#26679;&#30340;&#21035;&#21517;&#26469;&#21152;&#36733; <code>Filter</code>&#12290;</p><p>&#25105;&#20204;&#21487;&#20197;&#22312;&#33258;&#24049;&#30340;&#24037;&#31243;&#37324;&#20063;&#21019;&#24314;&#19968;&#20010; META-INF/druid-filter.properties &#25991;&#20214;&#65292;&#20869;&#23481;&#26159;&#20043;&#21069; <code>ConnectionConnectFilter</code> &#30340;&#26144;&#23556;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>druid.filters.connectLog=learning.spring.binarytea.support.ConnectionConnectFilter</code></pre><p>&#31532;&#20108;&#31181;&#26041;&#24335;&#26159;&#35753; Druid &#33258;&#21160;&#21152;&#36733; <code>Filter</code>&#12290;<code>DruidDataSource</code> &#22312;&#36890;&#36807; <code>init()</code> &#21021;&#22987;&#21270;&#26102;&#65292;&#20250;&#35843;&#29992; <code>initFromSPIServiceLoader()</code> &#26041;&#27861;&#65292;&#20351;&#29992; Java &#30340; <code>ServiceLoader</code> &#26469;&#21152;&#36733; <code>Filter</code> &#30340;&#23454;&#29616;&#31867;&#12290;&#22914;&#26524;&#31867;&#19978;&#21152;&#20102; <code>@AutoLoad</code> &#27880;&#35299;&#65292;&#21017;&#33258;&#21160;&#21152;&#36733;&#35813; <code>Filter</code>&#12290;<code>ServiceLoader</code> &#20250;&#26597;&#25214; META-INF/services/com.alibaba.druid.filter.Filter &#25991;&#20214;&#65292;&#24182;&#20174;&#25991;&#20214;&#20013;&#33719;&#21462;&#20855;&#20307;&#30340;&#20840;&#38480;&#23450;&#31867;&#21517;&#65292;&#22240;&#27492;&#25105;&#20204;&#38656;&#35201;&#25226;&#25193;&#23637;&#30340;&#31867;&#20889;&#22312;&#36825;&#20010;&#25991;&#20214;&#37324;&#12290;&#22312;&#24037;&#31243;&#20013;&#21019;&#24314;&#36825;&#20010;&#25991;&#20214;&#65292;&#20869;&#23481;&#22914;&#19979;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>learning.spring.binarytea.support.ConnectionConnectFilter</code></pre><p>&#31532;&#19977;&#31181;&#26041;&#24335;&#65292;&#23601;&#26159;&#30452;&#25509;&#22312; Spring &#19978;&#19979;&#25991;&#20013;&#37197;&#32622; <code>Filter</code> &#23545;&#24212;&#30340; Bean&#65292;&#38543;&#21518;&#23558;&#23427;&#36171;&#20540;&#32473; <code>DruidDataSource</code> &#30340; <code>proxyFilters</code> &#23646;&#24615;&#12290;&#36825;&#31181;&#26041;&#24335;&#26368;&#20026;&#28789;&#27963;&#65292;&#21487;&#20197;&#26681;&#25454;&#24773;&#20917;&#23545; Bean &#20570;&#21508;&#31181;&#35843;&#25972;&#65292;&#20294;&#37197;&#32622;&#26102;&#30456;&#23545;&#40635;&#28902;&#19968;&#20123;&#12290;</p><h2 id="nav_point_124">8.2&#12288;&#22312; Spring &#24037;&#31243;&#20013;&#35775;&#38382; Redis</h2><p>&#22914;&#26524;&#23545;&#31995;&#32479;&#30340;&#24615;&#33021;&#26377;&#25152;&#35201;&#27714;&#65292;&#36890;&#24120;&#37117;&#20250;&#22312;&#31995;&#32479;&#20013;&#24341;&#20837;&#20998;&#24067;&#24335;&#32531;&#23384;&#65292;&#22312;&#19968;&#20123;&#26497;&#31471;&#30340;&#24773;&#20917;&#19979;&#29978;&#33267;&#20250;&#25243;&#24323;&#20256;&#32479;&#30340;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#65292;&#23558;&#22823;&#37327;&#25968;&#25454;&#30452;&#25509;&#25345;&#20037;&#21270;&#22312;&#31867;&#20284; Redis &#36825;&#26679;&#30340; NoSQL<span class="&#27880;&#37322;&#32534;&#21495;">8</span> &#20013;&#12290;Redis<span class="&#27880;&#37322;&#32534;&#21495;">9</span> &#26159;&#19968;&#27454;&#20248;&#31168;&#30340;&#24320;&#28304; KV &#23384;&#20648;&#26041;&#26696;&#65292;&#19982; Memcached &#20165;&#25903;&#25345;&#31616;&#21333;&#30340; KV &#31867;&#22411;&#21644;&#25805;&#20316;&#19981;&#21516;&#65292;Redis &#25903;&#25345;&#24456;&#22810;&#19981;&#21516;&#30340;&#25968;&#25454;&#32467;&#26500;&#65292;&#20363;&#22914;&#21015;&#34920;&#12289;&#38598;&#21512;&#12289;&#25955;&#21015;&#31561;&#65292;&#36824;&#25903;&#25345;&#19981;&#23569;&#22797;&#26434;&#30340;&#25805;&#20316;&#65292;&#22240;&#27492; Redis &#22312;&#23454;&#36341;&#20013;&#24471;&#21040;&#20102;&#24191;&#27867;&#30340;&#24212;&#29992;&#12290;&#26412;&#33410;&#25105;&#20204;&#23601;&#26469;&#20102;&#35299;&#19968;&#19979;&#22914;&#20309;&#22312; Spring &#24037;&#31243;&#20013;&#26041;&#20415;&#22320;&#20351;&#29992; Redis&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">8</span>NoSQL &#36825;&#20010;&#21517;&#23383;&#26159;&#20026;&#20102;&#19982;&#20256;&#32479;&#30340;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211; SQL &#26377;&#25152;&#21306;&#20998;&#65292;&#19968;&#33324;&#35299;&#37322;&#20026;&#38750;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#12290;&#23427;&#20998;&#20026;&#20960;&#22823;&#31867;&#22411;&#65292;&#20998;&#21035;&#26159;&#38190;&#20540;&#22411;&#65288;Key Value&#65292;&#31616;&#31216; KV&#65289;&#25968;&#25454;&#24211;&#65292;&#20363;&#22914; Redis &#21644; Memcached&#65307;&#25991;&#26723;&#22411;&#25968;&#25454;&#24211;&#65292;&#20363;&#22914; MongoDB &#21644; CouchDB&#65307;&#21015;&#23384;&#20648;&#25968;&#25454;&#24211;&#65292;&#20363;&#22914; HBase &#21644; Cassandra&#65307;&#22270;&#25968;&#25454;&#24211;&#65292;&#20363;&#22914; Neo4j&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">9</span>&#20855;&#20307;&#35265; Redis &#30340;&#23448;&#32593;&#12290;</p><h3 id="nav_point_125">8.2.1&#12288;&#37197;&#32622; Redis &#36830;&#25509;</h3><p>&#35201;&#20351;&#29992; Redis&#65292;&#33258;&#28982;&#23569;&#19981;&#20102; Java &#30340; Redis &#23458;&#25143;&#31471;&#12290;&#34920; 8-4 &#20013;&#23637;&#31034;&#20102;&#30446;&#21069;&#27604;&#36739;&#20027;&#27969;&#30340;&#19977;&#20010; Redis &#23458;&#25143;&#31471;&#65292;&#36825;&#19977;&#20010;&#20063;&#26159; Redis &#23448;&#26041;&#25512;&#33616;&#30340;&#12290;</p><p><strong>&#34920; 8-4&#12288;&#20027;&#27969;&#30340; Redis &#23458;&#25143;&#31471;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#160;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">IO &#26041;&#24335;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#32447;&#31243;&#23433;&#20840;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">API</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Jedis</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#38459;&#22622;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#21542;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#36739;&#24213;&#23618;&#65292;&#19982; Redis &#21629;&#20196;&#23545;&#24212;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Lettuce</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#38750;&#38459;&#22622;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26159;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26377;&#36739;&#39640;&#25277;&#35937;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redission</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#38750;&#38459;&#22622;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26159;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26377;&#36739;&#39640;&#25277;&#35937;</p></td>
</tr>
</tbody>
</table><p>&#22312;&#39033;&#30446;&#20013;&#65292;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#20351;&#29992; Redis &#23458;&#25143;&#31471;&#26469;&#36827;&#34892;&#25805;&#20316;&#65292;&#21482;&#38656;&#23558;&#20854;&#37197;&#32622;&#20026;&#23481;&#22120;&#20013;&#30340; Bean&#65292;&#28982;&#21518;&#27880;&#20837;&#38656;&#35201;&#20351;&#29992;&#23427;&#30340;&#23545;&#35937;&#20013;&#21363;&#21487;&#12290;&#20197; Jedis &#20026;&#20363;&#65292;&#22312; Spring &#23481;&#22120;&#20013;&#37197;&#32622;&#22909; <code>JedisPool</code> Bean&#65292;&#23558;&#23427;&#27880;&#20837;&#38656;&#35201;&#30340; Bean &#20013;&#65292;&#25805;&#20316;&#26102;&#20174; <code>JedisPool</code> &#37324;&#21462;&#20986;&#19968;&#20010; <code>Jedis</code> &#23454;&#20363;&#23601;&#21487;&#20197;&#20102;&#12290;&#22914;&#26524;&#21482;&#26377;&#36825;&#31181;&#26041;&#24335;&#65292;&#37027;&#25105;&#20204;&#20063;&#19981;&#29992;&#22312;&#36825;&#37324;&#35752;&#35770;&#20102;&#12290;&#21644;&#20043;&#21069;&#30340; ORM &#26694;&#26550;&#19968;&#26679;&#65292;Spring &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#19968;&#22871;&#23545;&#24212;&#30340;&#25277;&#35937;&#8212;&#8212;Spring Data Redis&#65292;&#23427;&#23631;&#34109;&#20102;&#19981;&#21516;&#23458;&#25143;&#31471;&#20043;&#38388;&#30340;&#24046;&#24322;&#65292;&#35753;&#25105;&#20204;&#33021;&#29992;&#30456;&#20284;&#30340;&#26041;&#24335;&#26469;&#37197;&#32622;&#24182;&#25805;&#20316; Redis&#12290;</p><p>Spring Data Redis &#25903;&#25345; Redis 2.6 &#21450;&#20197;&#19978;&#29256;&#26412;&#65292;&#22312;&#23458;&#25143;&#31471;&#26041;&#38754;&#65292;&#25903;&#25345; Jedis &#21644; Lettuce&#65292;&#21518;&#32773;&#26159;&#40664;&#35748;&#23458;&#25143;&#31471;&#12290;&#24037;&#31243;&#30340; pom.xml &#20250;&#36890;&#36807;&#22914;&#19979;&#26041;&#24335;&#24341;&#20837;&#30456;&#20851;&#20381;&#36182;&#65292;&#20855;&#20307;&#30340;&#29256;&#26412;&#30001; Spring Boot &#26469;&#25511;&#21046;&#65292;&#23427;&#20250;&#20256;&#36882;&#24341;&#20837; <code>spring-data-redis</code> &#21644; <code>lettuce-core</code> &#36825;&#20004;&#20010;&#20381;&#36182;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><ol>
<li><p><strong>Spring Data Redis &#30340;&#27169;&#22411;&#25277;&#35937;</strong></p>
<p>Spring Data Redis &#36890;&#36807;&#20960;&#23618;&#25277;&#35937;&#26469;&#20026;&#24320;&#21457;&#32773;&#25552;&#20379;&#32479;&#19968;&#30340;&#20351;&#29992;&#20307;&#39564;&#65292;&#23631;&#34109;&#24213;&#23618;&#24046;&#24322;&#65292;&#19979;&#38754;&#21015;&#20986;&#30340;&#36825;&#20123;&#25509;&#21475;&#36824;&#26377;&#19968;&#20123;&#25193;&#23637;&#65292;&#23601;&#19981;&#22312;&#27492;&#19968;&#19968;&#21015;&#20030;&#20102;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>RedisCommands</code>&#65292;&#38024;&#23545;&#21629;&#20196;&#30340;&#25277;&#35937;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>RedisConnection</code>&#65292;&#38024;&#23545;&#36830;&#25509;&#30340;&#25277;&#35937;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>RedisConnectionFactory</code>&#65292;&#38024;&#23545;&#36830;&#25509;&#21019;&#24314;&#24037;&#21378;&#30340;&#25277;&#35937;&#12290;</li>
</ul>
<p>&#20174; <code>RedisConnectionFactory</code> &#36825;&#20010;&#21517;&#23383;&#23601;&#33021;&#30475;&#20986;&#65292;&#27492;&#22788;&#20351;&#29992;&#20102;&#24037;&#21378;&#27169;&#24335;&#26469;&#26500;&#36896; Redis &#36830;&#25509;&#65292;&#35813;&#25509;&#21475;&#26377;&#20004;&#20010;&#23454;&#29616;&#31867;&#8212;&#8212;<code>LettuceConnectionFactory</code> &#21644; <code>JedisConnectionFactory</code>&#65292;&#20998;&#21035;&#23545;&#24212;&#20102; Lettuce &#21644; Jedis &#20004;&#20010;&#19981;&#21516;&#30340;&#23458;&#25143;&#31471;&#12290;<code>RedisCommands</code> &#21644; <code>RedisConnection</code> &#30340;&#24773;&#20917;&#20063;&#26159;&#31867;&#20284;&#30340;&#65292;&#26368;&#32456;&#37117;&#20250;&#25552;&#20379;&#38024;&#23545;&#36825;&#20004;&#31181;&#23458;&#25143;&#31471;&#30340;&#23454;&#29616;&#12290;</p>
<p>&#26082;&#28982; Lettuce &#26159;&#40664;&#35748;&#30340;&#23458;&#25143;&#31471;&#65292;&#37027;&#23601;&#35753;&#25105;&#20204;&#20808;&#26469;&#30475;&#30475;&#23427;&#30340;&#37197;&#32622;&#12290;Spring Boot &#22312; spring-boot-autoconfigure &#20013;&#25552;&#20379;&#20102; Redis &#30456;&#20851;&#30340;&#33258;&#21160;&#37197;&#32622;&#65292;Lettuce &#30340;&#37197;&#32622;&#31867;&#26159; <code>LettuceConnectionConfiguration</code>&#65292;&#22914;&#26524; CLASSPATH &#20013;&#23384;&#22312; Lettuce &#30340; <code>RedisClient</code>&#65292;&#21017;&#35828;&#26126;&#29992;&#30340;&#26159; Lettuce &#23458;&#25143;&#31471;&#65292;&#21542;&#21017;&#35813;&#37197;&#32622;&#19981;&#29983;&#25928;&#12290;&#36825;&#20010;&#37197;&#32622;&#31867;&#26368;&#32456;&#20250;&#21019;&#24314;&#20004;&#20010; Bean&#65292;&#19968;&#20010;&#26159;&#25552;&#20379;&#26500;&#24314;&#23458;&#25143;&#31471;&#25152;&#38656;&#37197;&#32622;&#21450;&#36164;&#28304;&#30340; <code>lettuceClientResources</code>&#65292;&#21478;&#19968;&#20010;&#23601;&#26159;&#23545;&#24212; Lettuce &#30340; <code>redisConnectionFactory</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass(RedisClient.class)
class LettuceConnectionConfiguration extends RedisConnectionConfiguration {
    @Bean(destroyMethod = "shutdown")
    @ConditionalOnMissingBean(ClientResources.class)
    DefaultClientResources lettuceClientResources() {...}

    @Bean
    @ConditionalOnMissingBean(RedisConnectionFactory.class)
    LettuceConnectionFactory redisConnectionFactory(
            ObjectProvider&lt;LettuceClientConfigurationBuilderCustomizer&gt; builderCustomizers,
            ClientResources clientResources)
        throws UnknownHostException {...}

    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
<p><code>LettuceClientConfigurationBuilderCustomizer</code> &#26159;&#29992;&#26469;&#23450;&#21046; <code>LettuceClientConfigurationBuilder</code> &#30340;&#65292;&#25105;&#20204;&#21487;&#20197;&#35843;&#25972;&#20854;&#20013;&#30340;&#19968;&#20123;&#23646;&#24615;&#65292;&#20363;&#22914;&#65292;&#35753; Lettuce &#20248;&#20808;&#35835;&#21462;&#20174;&#33410;&#28857;&#30340;&#25968;&#25454;&#12290;</p>
<p>&#26681;&#25454;&#37197;&#32622;&#30340;&#19981;&#21516;&#65292;&#33258;&#21160;&#37197;&#32622;&#21487;&#20197;&#20026;&#21333;&#26426;&#27169;&#24335;&#12289;&#21736;&#20853;&#27169;&#24335;&#21644;&#38598;&#32676;&#27169;&#24335;&#30340; Redis &#21019;&#24314;&#21512;&#36866;&#30340; <code>RedisConnectionFactory</code>&#65292;&#20855;&#20307;&#30340;&#37197;&#32622;&#30001; <code>RedisProperties</code> &#31867;&#23454;&#29616;&#65292;&#37197;&#32622;&#30340;&#21069;&#32512;&#20026; <code>spring.redis</code>&#12290;&#20027;&#35201;&#30340;&#37197;&#32622;&#39033;&#22914;&#34920; 8-5 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 8-5&#12288;Spring Data Redis &#30340;&#20027;&#35201;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.redis.host</code></td><td><code>localhost</code></td><td>Redis &#26381;&#21153;&#22120;&#20027;&#26426;&#21517;</td></tr><tr><td><code>spring.redis.port</code></td><td><code>6379</code></td><td>Redis &#26381;&#21153;&#22120;&#31471;&#21475;</td></tr><tr><td><code>spring.redis.password</code></td><td></td><td>Redis &#26381;&#21153;&#22120;&#23494;&#30721;</td></tr><tr><td><code>spring.redis.timeout</code></td><td><code>60s</code></td><td>&#36830;&#25509;&#36229;&#26102;&#26102;&#38388;</td></tr><tr><td><code>spring.redis.sentinel.master</code></td><td></td><td>Redis &#26381;&#21153;&#22120;&#21517;&#31216;</td></tr><tr><td><code>spring.redis.sentinel.nodes</code></td><td></td><td>&#21736;&#20853;&#33410;&#28857;&#21015;&#34920;&#65292;&#33410;&#28857;&#29992;&#8220;<code>&#20027;&#26426;&#21517; : &#31471;&#21475;</code>&#8221;&#34920;&#31034;&#65292;&#20027;&#26426;&#20043;&#38388;&#29992;&#36887;&#21495;&#20998;&#21106;</td></tr><tr><td><code>spring.redis.sentinel.password</code></td><td></td><td>&#21736;&#20853;&#33410;&#28857;&#23494;&#30721;</td></tr><tr><td><code>spring.redis.cluster.nodes</code></td><td></td><td>&#38598;&#32676;&#33410;&#28857;&#21015;&#34920;&#65292;&#33410;&#28857;&#21487;&#20197;&#33258;&#21457;&#29616;&#65292;&#20294;&#33267;&#23569;&#35201;&#37197;&#32622;&#19968;&#20010;&#33410;&#28857;</td></tr><tr><td><code>spring.redis.cluster.maxRedirects</code></td><td><code>5</code></td><td>&#22312;&#38598;&#32676;&#20013;&#25191;&#34892;&#21629;&#20196;&#26102;&#30340;&#26368;&#22823;&#37325;&#23450;&#21521;&#27425;&#25968;</td></tr><tr><td><code>spring.redis.jedis.pool.\*</code></td><td></td><td>Jedis &#36830;&#25509;&#27744;&#37197;&#32622;</td></tr><tr><td><code>spring.redis.lettuce.\*</code></td><td></td><td>Lettuce &#29305;&#23450;&#30340;&#37197;&#32622;</td></tr></table>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;Redis &#30340;&#20960;&#31181;&#37096;&#32626;&#27169;&#24335;</strong></p>
<p>&#21333;&#26426;&#29256;&#26412;&#30340; Redis &#20165;&#33021;&#29992;&#20110;&#24320;&#21457;&#21644;&#27979;&#35797;&#65292;&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#36824;&#26159;&#38656;&#35201;&#20570;&#24456;&#22810;&#39640;&#21487;&#29992;&#30340;&#20445;&#38556;&#30340;&#12290;Redis &#23448;&#26041;&#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#20004;&#31181;&#39640;&#21487;&#29992;&#26041;&#26696;&#8212;&#21736;&#20853;&#27169;&#24335;&#65288;redis sentinel&#65289;&#21644;&#38598;&#32676;&#27169;&#24335;&#65288;redis cluster&#65289;&#12290;</p>
<p><strong>&#21736;&#20853;&#27169;&#24335;</strong>&#65292;&#21363;&#22312;&#21407;&#26377;&#30340; Redis &#20027;&#20174;&#33410;&#28857;&#20043;&#22806;&#65292;&#20877;&#25645;&#24314;&#19968;&#32452;&#21736;&#20853;&#33410;&#28857;&#65292;&#36890;&#36807;&#21736;&#20853;&#26469;&#23454;&#29616;&#23545; Redis &#33410;&#28857;&#30340;&#30417;&#25511;&#65292;&#22312;&#21457;&#29983;&#38382;&#39064;&#26102;&#36827;&#34892;&#36890;&#30693;&#24182;&#33258;&#21160;&#25191;&#34892;&#25925;&#38556;&#36801;&#31227;&#12290;&#26032;&#29256;&#26412;&#30340;&#21736;&#20853;&#27169;&#24335;&#20013;&#23458;&#25143;&#31471;&#20063;&#21487;&#20197;&#36890;&#36807;&#21736;&#20853;&#26469;&#33719;&#21462;&#24403;&#21069;&#30340;&#20027;&#33410;&#28857;&#12290;&#20986;&#20110;&#21487;&#29992;&#24615;&#26041;&#38754;&#30340;&#32771;&#34385;&#65292;&#25645;&#24314;&#39640;&#21487;&#29992;&#30340;&#21736;&#20853;&#27169;&#24335;&#33267;&#23569;&#38656;&#35201;&#19977;&#20010;&#33410;&#28857;&#65292;&#20855;&#20307;&#22914;&#22270; 8-1 &#25152;&#31034;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00767.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 8-1&#12288;Redis &#21736;&#20853;&#27169;&#24335;</strong></p>
<p><strong>&#38598;&#32676;&#27169;&#24335;</strong>&#65292;&#27604;&#21736;&#20853;&#27169;&#24335;&#26356;&#20026;&#24378;&#22823;&#12290;&#22312;&#21736;&#20853;&#27169;&#24335;&#20013;&#65292;Redis &#25968;&#25454;&#36807;&#22823;&#21518;&#38656;&#35201;&#30001;&#24320;&#21457;&#32773;&#26469;&#36127;&#36131;&#25968;&#25454;&#20998;&#29255;&#65292;&#32780;&#38598;&#32676;&#27169;&#24335;&#21017;&#20250;&#33258;&#21160;&#36827;&#34892;&#20998;&#29255;&#12290;&#36890;&#36807;&#24314;&#31435; 16 384 &#20010;&#34394;&#25311;&#27133;&#65292;&#27599;&#20010;&#27133;&#26144;&#23556;&#19968;&#37096;&#20998;&#20998;&#29255;&#33539;&#22260;&#65292;&#20877;&#23558;&#36825;&#20123;&#27133;&#20998;&#24067;&#21040;&#33410;&#28857;&#19978;&#23601;&#23454;&#29616;&#20102;&#25968;&#25454;&#20998;&#29255;&#12290;&#38598;&#32676;&#27169;&#24335;&#19979;&#65292;&#25152;&#26377;&#33410;&#28857;&#20043;&#38388;&#37117;&#20250;&#30456;&#20114;&#36890;&#20449;&#65292;&#36830;&#19978;&#19968;&#20010;&#33410;&#28857;&#23601;&#33021;&#25214;&#21040;&#25972;&#20010;&#38598;&#32676;&#12290;&#20026;&#20102;&#20445;&#35777;&#39640;&#21487;&#29992;&#24615;&#65292;&#20854;&#20013;&#20063;&#21152;&#20837;&#20102;&#20027;&#20174;&#27169;&#24335;&#65292;&#26576;&#20010;&#20027;&#33410;&#28857;&#20986;&#38382;&#39064;&#21518;&#65292;&#38598;&#32676;&#20250;&#25226;&#23545;&#24212;&#30340;&#20174;&#33410;&#28857;&#25552;&#21319;&#20026;&#20027;&#33410;&#28857;&#12290;&#19968;&#31181;&#21487;&#33021;&#30340; Redis &#38598;&#32676;&#27169;&#24335;&#22914;&#22270; 8-2 &#25152;&#31034;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00768.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 8-2&#12288;Redis &#38598;&#32676;&#27169;&#24335;</strong></p>
<p>&#22914;&#26524;&#38598;&#32676;&#33410;&#28857;&#30340;&#25968;&#37327;&#21457;&#29983;&#21464;&#21270;&#65292;&#37027;&#20040;&#27133;&#20063;&#20250;&#36827;&#34892;&#36801;&#31227;&#65292;&#36825;&#26102;&#21407;&#20808;&#32531;&#23384;&#22312;&#23458;&#25143;&#31471;&#30340;&#27133;&#20998;&#24067;&#20449;&#24687;&#23601;&#26377;&#21487;&#33021;&#19981;&#20934;&#30830;&#65292;&#25910;&#21040;&#21629;&#20196;&#30340;&#33410;&#28857;&#20250;&#35753;&#23458;&#25143;&#31471;&#37325;&#23450;&#21521;&#21040;&#27491;&#30830;&#30340;&#33410;&#28857;&#65292;&#36825;&#23601;&#26159;<strong>&#19981;&#24314;&#35758;&#25226;&#26368;&#22823;&#37325;&#23450;&#21521;&#27425;&#25968;&#35774;&#32622;&#20026;</strong> 0 &#30340;&#21407;&#22240;&#12290;</p>
<p>&#20026;&#20102;&#26368;&#22823;&#21270;&#22320;&#21033;&#29992;&#38598;&#32676;&#36164;&#28304;&#65292;&#25105;&#20204;&#21487;&#20197;&#23558;&#37096;&#20998;&#35835;&#35831;&#27714;&#21457;&#36865;&#32473;&#20174;&#33410;&#28857;&#12290;Jedis &#23545; Redis &#38598;&#32676;&#30340;&#35835;&#20889;&#20998;&#31163;&#25903;&#25345;&#24471;&#24456;&#19981;&#22909;&#65292;&#24314;&#35758;&#26377;&#36825;&#26041;&#38754;&#38656;&#27714;&#30340;&#24320;&#21457;&#32773;&#21487;&#20197;&#20351;&#29992; Lettuce&#12290;&#22312; Spring Data Redis &#37324;&#21487;&#20197;&#37197;&#32622;&#19968;&#20010; <code>LettuceClientConfigurationBuilderCustomizer</code>&#65292;&#35774;&#32622;&#20248;&#20808;&#36890;&#36807;&#20174;&#33410;&#28857;&#35835;&#21462;&#25968;&#25454;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public LettuceClientConfigurationBuilderCustomizer customizer() {
    return builder -&gt; builder.readFrom(ReadFrom.SLAVE_PREFERRED);
}</code></pre>
<p>&#21478;&#22806;&#65292;&#22240;&#20026; Redis &#29992;&#30340;&#26159;&#24322;&#27493;&#22797;&#21046;&#65292;&#25152;&#20197;&#22914;&#26524;&#26377;&#25968;&#25454;&#20889;&#21040;&#20027;&#33410;&#28857;&#65292;&#20294;&#36824;&#26469;&#19981;&#21450;&#21516;&#27493;&#21040;&#20174;&#33410;&#28857;&#19978;&#65292;&#36825;&#26102;&#20027;&#33410;&#28857;&#30340;&#25925;&#38556;&#23601;&#20250;&#23548;&#33268;&#37096;&#20998;&#25968;&#25454;&#20002;&#22833;&#12290;&#22914;&#26524;&#25968;&#25454;&#38750;&#24120;&#37325;&#35201;&#65292;&#19981;&#33021;&#20002;&#22833;&#65292;&#37027;&#24314;&#35758;&#36824;&#26159;&#19981;&#35201;&#20165;&#23384;&#25918;&#22312; Redis &#37324;&#65292;&#33267;&#23569;&#24212;&#35813;&#20877;&#22791;&#19968;&#20221;&#21040;&#20854;&#20182;&#23384;&#20648;&#19978;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#23558; Lettuce &#26367;&#25442;&#20026; Jedis</strong></p>
<p>&#22914;&#26524;&#24076;&#26395;&#20351;&#29992; Jedis &#32780;&#38750; Lettuce&#65292;&#21482;&#38656;&#31616;&#21333;&#35843;&#25972; pom.xml &#25991;&#20214;&#20013;&#30340;&#20381;&#36182;&#65292;&#23601;&#33021;&#23436;&#25104;&#26367;&#25442;&#12290;&#27604;&#22914;&#20687;&#19979;&#38754;&#36825;&#26679;&#65292;&#20808;&#25490;&#38500; spring-boot-starter-data-redis &#37324;&#30340; Lettuce &#20381;&#36182;&#65292;&#38543;&#21518;&#28155;&#21152; Jedis &#30340;&#20381;&#36182;&#65292;&#25152;&#26377;&#30340;&#29256;&#26412;&#37117;&#20132;&#30001; Spring Boot &#30340;&#20381;&#36182;&#36127;&#36131;&#31649;&#29702;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;io.lettuce&lt;/groupId&gt;
            &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;redis.clients&lt;/groupId&gt;
    &lt;artifactId&gt;jedis&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>Jedis &#30340;&#33258;&#21160;&#37197;&#32622;&#26159;&#30001; <code>JedisConnectionConfiguration</code> &#23454;&#29616;&#30340;&#65292;&#23427;&#30340;&#29983;&#25928;&#26465;&#20214;&#26159; CLASSPATH &#20013;&#21516;&#26102;&#23384;&#22312; Apache &#30340; Commons Pool2&#12289;Spring Boot Data Redis &#21644; Jedis &#30456;&#20851;&#31867;&#65288;Commons Pool2 &#26159;&#30001; Jedis &#20256;&#36882;&#20381;&#36182;&#36827;&#26469;&#30340;&#65289;&#12290;&#36825;&#20010;&#33258;&#21160;&#37197;&#32622;&#31867;&#20250;&#26681;&#25454;&#24773;&#20917;&#27880;&#20876;&#19968;&#20010; <code>redisConnectionFactory</code> Bean&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass({ GenericObjectPool.class, JedisConnection.class, Jedis.class })
class JedisConnectionConfiguration extends RedisConnectionConfiguration {
    @Bean
    @ConditionalOnMissingBean(RedisConnectionFactory.class)
    JedisConnectionFactory redisConnectionFactory(ObjectProvider&lt;JedisClientConfigurationBuilderCustomizer&gt;
builderCustomizers) throws UnknownHostException {...}
    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
<p>&#36890;&#36807;&#36825;&#20010;&#33258;&#21160;&#37197;&#32622;&#31867;&#65292;&#21518;&#32493;&#25105;&#20204;&#23601;&#33021;&#20351;&#29992; Jedis &#20316;&#20026;&#24213;&#23618;&#23458;&#25143;&#31471;&#26469;&#36827;&#34892;&#25805;&#20316;&#20102;&#12290;&#20854;&#20013; <code>JedisClientConfigurationBuilderCustomizer</code> &#30340;&#20316;&#29992;&#19982;&#20043;&#21069;&#25552;&#21040;&#30340; <code>LettuceClientConfigurationBuilderCustomizer</code> &#31867;&#20284;&#12290;</p>
</li>
</ol><h3 id="nav_point_126">8.2.2&#12288;Redis &#30340;&#22522;&#26412;&#25805;&#20316;</h3><p>&#21069;&#38754;&#22312;&#20171;&#32461;&#25968;&#25454;&#24211;&#25805;&#20316;&#26102;&#65292;&#25105;&#20204;&#25509;&#35302;&#21040;&#20102; <code>TransactionTemplate</code>&#12289;<code>JdbcTemplate</code> &#31561;&#27169;&#26495;&#31867;&#65292;Spring &#25226;&#21508;&#31867;&#21487;&#20197;&#22266;&#21270;&#30340;&#20195;&#30721;&#37117;&#23553;&#35013;&#25104;&#20102;&#27169;&#26495;&#12290;&#20854;&#23454;&#65292;Redis &#30340;&#25805;&#20316;&#20063;&#24456;&#31526;&#21512;&#36825;&#20010;&#29305;&#24449;&#65292;&#24182;&#19988; Redis &#30340;&#25805;&#20316;&#8220;&#30028;&#38754;&#8221;&#20063;&#24456;&#31526;&#21512;&#27169;&#26495;&#27169;&#24335;&#65292;&#24120;&#29992;&#25805;&#20316;&#37117;&#34987;&#23553;&#35013;&#36827;&#20102; <code>RedisTemplate</code> &#31867;&#20013;&#65292;&#30452;&#25509;&#25805;&#20316;&#36825;&#20010;&#31867;&#23601;&#33021;&#23436;&#25104; Redis &#30340;&#25805;&#20316;&#20102;&#12290;</p><p>Spring Boot &#30340; <code>RedisAutoConfiguration</code> &#20026;&#25105;&#20204;&#33258;&#21160;&#37197;&#32622;&#22909;&#20102;&#20004;&#20010; <code>RedisTemplate</code>&#65292;&#20854;&#20013;&#26377;&#19968;&#20010;&#19987;&#38376;&#29992;&#20110;&#23383;&#31526;&#20018;&#31867;&#22411;&#30340; Redis &#25805;&#20316;&#12290;&#32780;&#21019;&#24314;&#36825;&#20123; <code>RedisTemplate</code> &#25152;&#38656;&#30340; <code>RedisConnectionFactory</code>&#65292;&#23601;&#26159;&#30001;&#19978;&#25991;&#25552;&#21040;&#30340;&#37096;&#20998;&#25152;&#25552;&#20379;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass(RedisOperations.class)
@EnableConfigurationProperties(RedisProperties.class)
@Import({ LettuceConnectionConfiguration.class, JedisConnectionConfiguration.class })
public class RedisAutoConfiguration {
    @Bean
    @ConditionalOnMissingBean(name = "redisTemplate")
    public RedisTemplate&lt;Object, Object&gt; redisTemplate(RedisConnectionFactory redisConnectionFactory)
            throws UnknownHostException {
        RedisTemplate&lt;Object, Object&gt; template = new RedisTemplate&lt;&gt;();
        template.setConnectionFactory(redisConnectionFactory);
        return template;
    }

    @Bean
    @ConditionalOnMissingBean
    public StringRedisTemplate stringRedisTemplate(RedisConnectionFactory redisConnectionFactory)
            throws UnknownHostException {
        StringRedisTemplate template = new StringRedisTemplate();
        template.setConnectionFactory(redisConnectionFactory);
        return template;
    }
}</code></pre><p>&#20854;&#20013;&#65292;<code>RedisConnection</code> &#25552;&#20379;&#20102;&#19982; Redis &#20132;&#20114;&#30340;&#24213;&#23618;&#33021;&#21147;&#65292;<code>RedisTemplate</code> &#21017;&#22312;&#21069;&#32773;&#30340;&#22522;&#30784;&#19978;&#25552;&#20379;&#20102;&#24207;&#21015;&#21270;&#19982;&#36830;&#25509;&#31649;&#29702;&#33021;&#21147;&#12290;&#26681;&#25454;&#25968;&#25454;&#32467;&#26500;&#30340;&#19981;&#21516;&#65292;&#20855;&#20307;&#30340;&#25805;&#20316;&#19978;&#20063;&#20570;&#20102;&#19968;&#23450;&#30340;&#25277;&#35937;&#65292;&#35814;&#24773;&#22914;&#34920; 8-6 &#25152;&#31034;&#12290;</p><p><strong>&#34920; 8-6&#12288;<code>RedisTemplate</code> &#20013;&#23553;&#35013;&#30340;&#25805;&#20316;&#31867;&#22411;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#25805;&#20316;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#32465;&#23450;&#38190;&#21517;&#25805;&#20316;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#25551;&#36848;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ClusterOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26080;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#38598;&#32676;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>GeoOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundGeoOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#22320;&#29702;&#20301;&#32622;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>HashOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundHashOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis Hash &#31867;&#22411;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>HyperLogLogOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26080;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis HyperLogLog &#31867;&#22411; <span class="&#27880;&#37322;&#32534;&#21495;">10</span> &#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ListOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundListOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#21015;&#34920;&#31867;&#22411;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>SetOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundSetOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#38598;&#21512;&#31867;&#22411;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>StreamOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundStreamOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#27969; <span class="&#27880;&#37322;&#32534;&#21495;">11</span> &#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ValueOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundValueOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#20540;&#31867;&#22411;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ZSetOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BoundZSetOperations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Redis &#26377;&#24207;&#32467;&#21512;&#31867;&#22411;&#30340;&#30456;&#20851;&#25805;&#20316;</p></td>
</tr>
</tbody>
</table><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">10</span>HyperLogLog &#26159; Redis 2.8.9 &#29256;&#26412;&#21457;&#24067;&#26102;&#21152;&#20837;&#30340;&#25968;&#25454;&#32467;&#26500;&#65292;&#19987;&#38376;&#29992;&#26469;&#20570;&#22522;&#25968;&#32479;&#35745;&#65292;&#34429;&#28982;&#19981;&#33021; 100% &#20934;&#30830;&#22320;&#35745;&#31639;&#22522;&#25968;&#65292;&#20294;&#23427;&#30340;&#20248;&#28857;&#26159;&#21482;&#38656;&#35201;&#24456;&#23569;&#30340;&#31354;&#38388;&#23601;&#33021;&#23436;&#25104;&#23545;&#22823;&#37327;&#25968;&#25454;&#30340;&#32479;&#35745;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">11</span>&#26159; Redis 5.0 &#29256;&#26412;&#21457;&#24067;&#26102;&#21152;&#20837;&#30340;&#31867;&#22411;&#12290;&#36825;&#37324;&#25152;&#35859;&#30340;&#27969;&#65292;&#20854;&#23454;&#26356;&#20687;&#26159;&#19968;&#20010;&#28040;&#24687;&#38431;&#21015;&#65292;&#23601;&#36830; Redis &#30340;&#20316;&#32773;&#26412;&#20154;&#20063;&#25215;&#35748;&#22312;&#35774;&#35745;&#36825;&#37096;&#20998;&#26102;&#24456;&#22823;&#31243;&#24230;&#19978;&#20511;&#37492;&#20102; Kafka&#12290;</p><p>&#24403;&#25105;&#20204;&#35201;&#36827;&#34892;&#26576;&#31181;&#25968;&#25454;&#32467;&#26500;&#30340;&#25805;&#20316;&#26102;&#65292;&#35843;&#29992; <code>RedisTemplate</code> &#30340; <code>opsForXxx()</code> &#26041;&#27861;&#33719;&#24471;&#23545;&#24212;&#30340;&#25805;&#20316;&#23545;&#35937;&#65292;&#28982;&#21518;&#23601;&#33021;&#36827;&#34892;&#25805;&#20316;&#20102;&#12290;&#20363;&#22914;&#65292;&#35201;&#23545; <code>foo</code> &#38598;&#21512;&#20570;&#25805;&#20316;&#65292;&#21487;&#20197;&#35843;&#29992; <code>opsForSet()</code> &#26041;&#27861;&#65292;&#38543;&#21518;&#23601;&#33021;&#20351;&#29992;&#20854;&#20013;&#30340; <code>add()</code>&#12289;<code>remove()</code> &#21644; <code>pop()</code> &#31561;&#26041;&#27861;&#20102;&#12290;&#22914;&#26524;&#35201;&#23545;&#21516;&#19968;&#20010;&#38190;&#21517;&#30340;&#25968;&#25454;&#20570;&#22810;&#27425;&#25805;&#20316;&#65292;&#21017;&#21487;&#20197;&#20351;&#29992; <code>boundXxxOps()</code> &#26469;&#33719;&#21462; <code>BoundKeyOperations</code> &#23545;&#35937;&#65292;&#20877;&#25191;&#34892;&#21518;&#32493;&#25805;&#20316;&#12290;</p><p>&#27492;&#22806;&#65292;<code>RedisTemplate</code> &#20013;&#36824;&#30452;&#25509;&#25552;&#20379;&#20102;&#19968;&#20123;&#25805;&#20316;&#65292;&#22823;&#22810;&#26159;&#29992;&#20110;&#37027;&#20123;&#21644;&#25968;&#25454;&#32467;&#26500;&#26080;&#20851;&#30340;&#24773;&#20917;&#65292;&#20363;&#22914;&#21024;&#38500;&#12289;&#35774;&#32622;&#36807;&#26399;&#26102;&#38388;&#21644;&#21028;&#26029;&#25968;&#25454;&#26159;&#21542;&#23384;&#22312;&#31561;&#65292;&#36825;&#20123;&#25805;&#20316;&#20250;&#30452;&#25509;&#35843;&#29992; <code>delete()</code>&#12289;<code>expire()</code> &#21644; <code>hasKey()</code> &#26041;&#27861;&#65292;&#26080;&#39035;&#20877;&#33719;&#21462;&#25805;&#20316;&#23545;&#35937;&#20102;&#12290;</p><p>&#22238;&#21040;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#20363;&#23376;&#65292;&#25105;&#20204;&#26469;&#30475;&#30475; Redis &#20316;&#20026;&#19968;&#31181;&#32531;&#23384;&#26159;&#22914;&#20309;&#22312;&#24037;&#31243;&#20013;&#21457;&#25381;&#20316;&#29992;&#30340;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#22902;&#33590;&#24215;&#37324;&#30340;&#33756;&#21333;&#34429;&#28982;&#20250;&#26377;&#26356;&#26032;&#65292;&#20294;&#39057;&#29575;&#19981;&#39640;&#65292;&#36890;&#24120;&#19968;&#20010;&#26376;&#29978;&#33267;&#19968;&#20010;&#23395;&#24230;&#25165;&#20250;&#26681;&#25454;&#24773;&#20917;&#23545;&#21697;&#31867;&#21644;&#20215;&#26684;&#20570;&#20123;&#35843;&#25972;&#12290;&#22914;&#26524;&#36827;&#24215;&#30340;&#39038;&#23458;&#27604;&#36739;&#22810;&#65292;&#22823;&#23478;&#19968;&#36215;&#26597;&#30475;&#33756;&#21333;&#65292;&#23545;&#33756;&#21333;&#30340;&#35831;&#27714;&#37327;&#23601;&#20250;&#30452;&#32447;&#19978;&#21319;&#65292;&#31867;&#20284;&#24773;&#20917;&#19979;&#25968;&#25454;&#24211;&#36831;&#26089;&#20250;&#25104;&#20026;&#29942;&#39048;&#65292;&#36825;&#26102;&#65292;&#25105;&#20204;&#23601;&#38656;&#35201;&#24341;&#20837;&#26032;&#30340;&#35299;&#20915;&#26041;&#26696;&#20102;&#12290;</p>
</blockquote><p>&#36890;&#24120;&#23545;&#20110;&#37027;&#20123;&#19981;&#22826;&#20250;&#21464;&#30340;&#19996;&#35199;&#65292;&#25105;&#20204;&#19981;&#20250;&#27599;&#27425;&#35775;&#38382;&#37117;&#21435;&#26597;&#35810;&#25968;&#25454;&#24211;&#65292;&#32780;&#26159;&#23558;&#23427;&#20204;&#32531;&#23384;&#36215;&#26469;&#65292;&#20174;&#32780;&#23454;&#29616;&#22312;&#25552;&#21319;&#24615;&#33021;&#30340;&#21516;&#26102;&#38477;&#20302;&#25968;&#25454;&#24211;&#30340;&#21387;&#21147;&#12290;&#22312;&#36825;&#20010;&#20363;&#23376; <span class="&#27880;&#37322;&#32534;&#21495;">12</span> &#20013;&#65292;&#25105;&#20204;&#23436;&#20840;&#21487;&#20197;&#23558;&#25972;&#20010;&#33756;&#21333;&#32531;&#23384;&#21040; Redis &#37324;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">12</span>&#36825;&#20010;&#20363;&#23376;&#25918;&#22312;&#20195;&#30721;&#31034;&#20363;&#30340; ch8/binarytea-redis &#20013;&#65292;&#26412;&#20363;&#22522;&#20110;&#20043;&#21069;&#30340; binarytea-jpa &#36827;&#34892;&#20462;&#25913;&#65292;&#20294;&#31105;&#29992;&#20102; Hibernate &#30340; DDL &#29983;&#25104;&#65288;&#37197;&#32622; <code>spring.jpa.hibernate.ddl-auto=none</code>&#65289;&#65292;&#25913;&#29992;&#20102;&#31532; 6 &#31456;&#20013;&#20351;&#29992;&#30340; schema.sql &#21644; data.sql &#26469;&#21021;&#22987;&#21270;&#25968;&#25454;&#12290;</p><p>&#31532;&#19968;&#27493;&#65292;&#35753;&#25105;&#20204;&#20351;&#29992; Docker &#22312;&#26412;&#22320;&#21551;&#21160;&#19968;&#20010; Redis<span class="&#27880;&#37322;&#32534;&#21495;">13</span>&#65292;&#30417;&#21548; <code>6379</code> &#31471;&#21475;&#65292;&#21518;&#32493;&#23601;&#20250;&#23558;&#35813; Redis &#20316;&#20026;&#32531;&#23384;&#65306;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">13</span>&#20851;&#20110; Redis &#30340;&#38236;&#20687;&#65292;&#21487;&#20197;&#26597;&#30475; Docker Hub &#30340;&#23545;&#24212;&#39029;&#38754;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; docker pull redis
&#9656; docker run --name redis -d -p 6379:6379 redis</code></pre><p>&#31532;&#20108;&#27493;&#65292;&#20462;&#25913; <code>MenuItem</code> &#30340;&#20195;&#30721;&#65292;&#22240;&#20026; <code>RedisTemplate</code> &#20250;&#23558;&#35813;&#23545;&#35937;&#24207;&#21015;&#21270;&#21518;&#23384;&#20648;&#21040; Redis &#37324;&#65292;&#25152;&#20197;&#23427;<strong>&#24517;&#39035;&#23454;&#29616; <code>Serializable</code> &#25509;&#21475;</strong>&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class MenuItem implements Serializable {
    private static final long serialVersionUID = 8585684450527309518L;
    // &#20854;&#20182;&#20195;&#30721;&#30465;&#30053;
}</code></pre><p>&#31532;&#19977;&#27493;&#65292;&#22312;&#21551;&#21160;&#26102;&#22686;&#21152;&#19968;&#20010;&#8220;&#21152;&#36733;&#33756;&#21333;&#24182;&#23384;&#20648;&#21040; Redis&#8221;&#30340;&#21160;&#20316;&#65292;&#36825;&#37324;&#25105;&#20204;&#21516;&#26679;&#20351;&#29992; <code>ApplicationRunner</code>&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 8-2 &#25152;&#31034;&#12290;&#23427;&#20174;&#25968;&#25454;&#24211;&#20013;&#33719;&#24471;&#25152;&#26377;&#30340;&#33756;&#21333;&#39033;&#65292;&#20877;&#23558;&#20854;&#24207;&#21015;&#21270;&#23384;&#20837; Redis &#30340;&#38598;&#21512;&#20013;&#65292;&#24182;&#23558;&#36807;&#26399;&#26102;&#38388;&#35774;&#32622;&#20026; 300 &#31186;&#12290;&#36825;&#37324;&#28436;&#31034;&#20102; <code>opsForList()</code> &#21644; <code>expire()</code> &#30340;&#29992;&#27861;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-2</strong>&#12288;<code>MenuCacheRunner</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(1)
public class MenuCacheRunner implements ApplicationRunner {
    @Autowired
    private RedisTemplate redisTemplate;
    @Autowired
    private MenuRepository menuRepository;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        List&lt;MenuItem&gt; itemList = menuRepository.findAll();
        log.info("Load {} MenuItems from DB, ready to cache.", itemList.size());
        redisTemplate.opsForList().leftPushAll("binarytea-menu", itemList);
        redisTemplate.expire("binarytea-menu", 300, TimeUnit.SECONDS);
    }
}</code></pre><p>&#31532;&#22235;&#27493;&#65292;&#20462;&#25913;&#20043;&#21069;&#30340; <code>MenuPrinterRunner</code>&#12290;&#21407;&#26412;&#23427;&#21482;&#33021;&#20174;&#25968;&#25454;&#24211;&#20013;&#21462;&#24471;&#20449;&#24687;&#24182;&#36755;&#20986;&#65292;&#32780;&#26032;&#30340;&#29256;&#26412;&#20250;&#20248;&#20808;&#20174; Redis &#20013;&#33719;&#21462;&#25968;&#25454;&#65292;&#22914;&#26524;&#27809;&#26377;&#30340;&#35805;&#20877;&#20174;&#25968;&#25454;&#24211;&#21152;&#36733;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 8-3 &#25152;&#31034;&#12290;&#20026;&#20102;&#20445;&#35777; <code>MenuCacheRunner</code> &#22312; <code>MenuPrinterRunner</code> &#20043;&#21069;&#36816;&#34892;&#65292;&#20004;&#20010;&#31867;&#19978;&#37117;&#22686;&#21152;&#20102; <code>@Order</code> &#27880;&#35299;&#65292;&#24182;&#37197;&#32622;&#20102;&#25191;&#34892;&#39034;&#24207;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-3</strong>&#12288;&#20462;&#25913;&#21518;&#30340; <code>MenuPrinterRunner</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(2)
public class MenuPrinterRunner implements ApplicationRunner {
    @Autowired
    private MenuRepository menuRepository;
    @Autowired
    private RedisTemplate redisTemplate;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        long size = 0;
        List&lt;MenuItem&gt; menuItemList = null;
        if (redisTemplate.hasKey("binarytea-menu")) {
            BoundListOperations&lt;String, MenuItem&gt; operations = redisTemplate.boundListOps("binarytea-menu");
            size = operations.size();
            menuItemList = operations.range(0, -1);
            log.info("Loading menu from Redis.");
        } else {
            size = menuRepository.count();
            menuItemList = menuRepository.findAll();
            log.info("Loading menu from DB.");
        }
        log.info("&#20849;&#26377;{}&#20010;&#39278;&#21697;&#21487;&#36873;&#12290;", size);
        menuItemList.forEach(i -&gt; log.info("&#39278;&#21697;&#65306;{}", i));
    }
}</code></pre><p>Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#40664;&#35748;&#23601;&#20250;&#36830;&#25509; <code>localhost:6379</code> &#30340; Redis&#65292;&#22240;&#27492;&#25105;&#20204;&#26080;&#39035;&#22312; <code>application.properties</code> &#20013;&#20570;&#39069;&#22806;&#37197;&#32622;&#12290;&#22914;&#26524;&#19981;&#26159;&#29992;&#36825;&#20010;&#22320;&#22336;&#65292;&#20063;&#21487;&#20197;&#33258;&#24049;&#35774;&#32622;&#65292;&#20363;&#22914;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.redis.host=127.0.0.1
spring.redis.port=6379</code></pre><p>&#31243;&#24207;&#25191;&#34892;&#30340;&#36755;&#20986;&#22823;&#33268;&#20250;&#26159;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2022-02-26 22:11:31.498 INFO 97964 --- [main] l.s.binarytea.runner.MenuCacheRunner : Load 2 MenuItems
from DB, ready to cache.
2022-02-26 22:11:31.701 INFO 97964 --- [main] l.s.binarytea.runner.MenuPrinterRunner : Loading menu
from Redis.
2022-02-26 22:11:31.701 INFO 97964 --- [main] l.s.binarytea.runner.MenuPrinterRunner : &#20849;&#26377;2&#20010;&#39278;&#21697;&#21487;&#36873;&#12290;
2022-02-26 22:11:31.701 INFO 97964 --- [main] l.s.binarytea.runner.MenuPrinterRunner : &#39278;&#21697;&#65306;
MenuItem(id=2, name=Java&#21654;&#21857;, size=LARGE, price=CNY 15.00, createTime=2022-02-26 22:11:30.570549,
updateTime=2022-02-26 22:11:30.570549)
2022-02-26 22:11:31.705 INFO 97964 --- [main] l.s.binarytea.runner.MenuPrinterRunner : &#39278;&#21697;&#65306;
MenuItem(id=1, name=Java&#21654;&#21857;, size=MEDIUM, price=CNY 12.00, createTime=2022-02-26 22:11:30.567212,
updateTime=2022-02-26 22:11:30.567212)</code></pre><p>&#22914;&#26524;&#36825;&#26102;&#29992;&#23458;&#25143;&#31471;&#36830;&#19978; Redis&#65292;&#26597;&#30475;&#25105;&#20204;&#20445;&#23384;&#36827;&#21435;&#30340;&#25968;&#25454;&#65292;&#20250;&#30475;&#21040;&#19979;&#38754;&#36825;&#26679;&#30340;&#19968;&#22823;&#20018;&#20869;&#23481;&#12290;&#22914;&#26524;&#19981;&#20570;&#29305;&#27530;&#37197;&#32622;&#65292;Spring Data Redis &#40664;&#35748;&#20250;&#20351;&#29992; JDK &#33258;&#24102;&#30340;&#24207;&#21015;&#21270;&#26426;&#21046;&#36827;&#34892;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#12290;&#22914;&#26524;&#26377;&#19981;&#21516;&#35821;&#35328;&#30340;&#31995;&#32479;&#20849;&#29992;&#36825;&#20123;&#32531;&#23384;&#25968;&#25454;&#65292;&#37027;&#20250;&#22312;&#24456;&#22823;&#31243;&#24230;&#19978;&#24433;&#21709;&#32531;&#23384;&#30340;&#20351;&#29992;&#65292;&#25152;&#20197;&#21487;&#20197;&#32771;&#34385;&#25913;&#29992; JSON &#26469;&#36827;&#34892;&#24207;&#21015;&#21270;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>\xac\xed\x00\x05sr\x00(learning.spring.binarytea.model.MenuItemw&amp;z\x84\xd3Fn\xce\x02\x00\x06L\x00\
ncreateTimet\x00\x10L......</code></pre><p><code>RedisTemplate</code> &#40664;&#35748;&#20351;&#29992; <code>JdkSerializationRedisSerializer</code>&#65292;&#22914;&#26524;&#35201;&#25913;&#21464;&#36825;&#20010;&#26041;&#24335;&#65292;&#23601;&#35201;&#33258;&#24049;&#26469;&#21019;&#24314; <code>RedisTemplate</code>&#65292;&#35843;&#25972;&#24207;&#21015;&#21270;&#26041;&#24335;&#12290;Spring Data Redis &#20869;&#32622;&#20102;&#20960;&#31181;&#23454;&#29616;&#20102; <code>RedisSerializer</code> &#25509;&#21475;&#30340;&#24207;&#21015;&#21270;&#22120;&#65292;&#20855;&#20307;&#22914;&#34920; 8-7 &#25152;&#31034;&#65292;&#20854;&#20013;&#20004;&#20010; JSON &#30340;&#24207;&#21015;&#21270;&#22120;&#37117;&#26159;&#22522;&#20110; Jackson2 &#26469;&#23454;&#29616;&#30340;&#12290;</p><p><strong>&#34920; 8-7&#12288;Spring Data Redis &#20869;&#32622;&#30340;&#24207;&#21015;&#21270;&#22120;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#24207;&#21015;&#21270;&#22120;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#24555;&#25463;&#26041;&#24335;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>JdkSerializationRedisSerializer</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>RedisSerializer.java()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20351;&#29992; JDK &#30340;&#24207;&#21015;&#21270;&#26041;&#24335;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ByteArrayRedisSerializer</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>RedisSerializer.byteArray()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#30452;&#25509;&#36879;&#20256; <code>byte[]</code>&#65292;&#19981;&#20570;&#20219;&#20309;&#22788;&#29702;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>StringRedisSerializer</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>RedisSerializer.string()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26681;&#25454;&#23383;&#31526;&#38598;&#23558;&#23383;&#31526;&#20018;&#24207;&#21015;&#21270;&#20026;&#23383;&#33410;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>GenericToStringSerializer&lt;T&gt;</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#160;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20381;&#36182; Spring &#30340; <code>ConversionService</code> &#26469;&#24207;&#21015;&#21270;&#23383;&#31526;&#20018;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>GenericJackson2JsonRedisSerializer</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>RedisSerializer.json()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25353;&#29031; <code>Object</code> &#26469;&#24207;&#21015;&#21270;&#23545;&#35937;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Jackson2JsonRedisSerializer&lt;T&gt;</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#160;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26681;&#25454;&#32473;&#23450;&#30340;&#27867;&#22411;&#31867;&#22411;&#24207;&#21015;&#21270;&#23545;&#35937;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>OxmSerializer</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#160;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20381;&#36182; Spring &#30340; OXM&#65288;Object/XML Mapper&#65292;O/M &#26144;&#23556;&#22120;&#65289;&#26469;&#24207;&#21015;&#21270;&#23545;&#35937;</p></td>
</tr>
</tbody>
</table><p>&#20551;&#35774;&#25105;&#20204;&#38024;&#23545;&#38190;&#21644;&#20540;&#20351;&#29992;&#19981;&#21516;&#30340;&#24207;&#21015;&#21270;&#26041;&#24335;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#27573;&#20195;&#30721;&#19968;&#26679;&#26469;&#37197;&#32622;&#33258;&#24049;&#30340; <code>RedisTemplate</code>&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public RedisTemplate redisTemplate(RedisConnectionFactory connectionFactory) {
    RedisTemplate redisTemplate = new RedisTemplate();
    redisTemplate.setConnectionFactory(connectionFactory);
    redisTemplate.setKeySerializer(RedisSerializer.string());
    redisTemplate.setValueSerializer(RedisSerializer.json());
    return redisTemplate;
}</code></pre><p>&#20294;&#24448;&#24448;&#21482;&#36825;&#20040;&#20570;&#26159;&#19981;&#22815;&#30340;&#65292;&#22240;&#20026;&#24635;&#26377;&#20123; Jackson2 &#30340; <code>ObjectMapper</code> &#26080;&#27861;&#30452;&#25509;&#24207;&#21015;&#21270;&#30340;&#31867;&#22411;&#65292;&#27604;&#22914; <code>Money</code> &#31867;&#22411;&#23601;&#38656;&#35201;&#20570;&#20123;&#29305;&#21035;&#30340;&#22788;&#29702;&#12290;Jackson2 &#25552;&#20379;&#20102;&#26631;&#20934;&#30340;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#25509;&#21475;&#65292;&#25105;&#20204;&#21482;&#38656;&#23454;&#29616;&#36825;&#20123;&#25509;&#21475;&#23601;&#33021;&#23454;&#29616;&#29305;&#23450;&#31867;&#22411;&#30340;&#36716;&#25442;&#65292;&#32780;&#22312; Spring Boot &#25552;&#20379;&#30340; <code>@JsonComponent</code> &#27880;&#35299;&#30340;&#25903;&#25345;&#19979;&#65292;&#24102;&#20102;&#36825;&#20010;&#27880;&#35299;&#30340;&#31867;&#20250;&#30452;&#25509;&#34987;&#27880;&#20876;&#20026; Bean&#65292;&#24182;&#27880;&#20837; Spring Boot &#32500;&#25252;&#30340; <code>ObjectMapper</code> &#20013;&#65292;&#30465;&#21435;&#20102;&#25105;&#20204;&#33258;&#24049;&#37197;&#32622;&#30340;&#40635;&#28902;&#12290;</p><p>&#20854;&#23454;&#65292;&#22312;&#25972;&#20010;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#30340;&#36807;&#31243;&#20013;&#65292;&#26368;&#37325;&#35201;&#30340;&#23601;&#26159;&#26377;&#19968;&#20010;&#21512;&#36866;&#30340; <code>ObjectMapper</code>&#65292;&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#25226;&#25511;&#20854;&#20013;&#30340;&#32454;&#33410;&#65292;&#36824;&#21487;&#20197;&#27880;&#20876;&#33258;&#24049;&#30340; <code>Jackson2ObjectMapperBuilderCustomizer</code>&#65292;&#36890;&#36807;&#23427;&#26469;&#36827;&#34892;&#20010;&#24615;&#21270;&#37197;&#32622;&#12290;&#20195;&#30721;&#31034;&#20363; 8-4 &#25552;&#20379;&#20102;&#19968;&#22871;&#31616;&#21333;&#30340;&#22788;&#29702; <code>Money</code> &#31867;&#22411;&#30340;&#20195;&#30721;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">14</span></p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">14</span>&#20195;&#30721;&#31034;&#20363; 8-4 &#21644;&#20195;&#30721;&#31034;&#20363; 8-5 &#25918;&#22312;&#20195;&#30721;&#31034;&#20363;&#30340; ch8/binarytea-redis-json &#20013;&#65292;&#22522;&#20110;&#20043;&#21069;&#30340; binarytea-redis &#31245;&#20316;&#20462;&#25913;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-4</strong>&#12288;&#31616;&#21333;&#30340; <code>Money</code> &#31867;&#22411;&#22788;&#29702;&#20195;&#30721;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@JsonComponent
public class MoneySerializer extends StdSerializer&lt;Money&gt; {
    protected MoneySerializer() {
        super(Money.class);
    }

    @Override
    public void serialize(Money money, JsonGenerator jsonGenerator,
                          SerializerProvider serializerProvider) throws IOException {
        jsonGenerator.writeNumber(money.getAmount());
    }
}

@JsonComponent
public class MoneyDeserializer extends StdDeserializer&lt;Money&gt; {
    protected MoneyDeserializer() {
        super(Money.class);
    }

    @Override
    public Money deserialize(JsonParser jsonParser,
                          DeserializationContext deserializationContext)
            throws IOException, JsonProcessingException {
        return Money.of(CurrencyUnit.of("CNY"), jsonParser.getDecimalValue());
    }
}</code></pre><p>&#23454;&#38469;&#19978;&#65292;&#32771;&#34385;&#21040; Joda Money &#30340;&#20351;&#29992;&#24456;&#24191;&#27867;&#65292;Jackson JSON &#23448;&#26041;&#25552;&#20379;&#20102;&#19968;&#20010;&#38024;&#23545; <code>Money</code> &#31867;&#30340;&#24207;&#21015;&#21270;&#31867;&#22411;&#65292;&#26080;&#39035;&#25105;&#20204;&#33258;&#24049;&#26469;&#23454;&#29616;&#24207;&#21015;&#21270;&#19982;&#21453;&#24207;&#21015;&#21270;&#22120;&#65292;&#21482;&#38656;&#28155;&#21152;&#22914;&#19979;&#20381;&#36182;&#23601;&#33021;&#24341;&#20837; jackson-datatype-joda-money&#65306;<span class="&#27880;&#37322;&#32534;&#21495;">15</span></p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">15</span>&#36825;&#37324;&#30340; jackson-datatype-joda-money &#30340;&#29256;&#26412;&#24314;&#35758;&#19982;&#20351;&#29992;&#30340; Jackson2 &#29256;&#26412;&#20445;&#25345;&#19968;&#33268;&#12290;&#20363;&#22914;&#65292;Spring Boot 2.6.3 &#31649;&#29702;&#30340; Jackson2 &#29256;&#26412;&#20026; 2.13.1&#65292;&#25152;&#20197;&#25105;&#20204;&#20063;&#35201;&#24341;&#20837; 2.13.1 &#30340; jackson-datatype-joda-money&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;
    &lt;artifactId&gt;jackson-datatype-joda-money&lt;/artifactId&gt;
    &lt;version&gt;2.13.1&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p>&#38543;&#21518;&#22312; Spring &#37197;&#32622;&#31867;&#20013;&#27880;&#20876;&#36825;&#20010; JSON &#27169;&#22359;&#65292;&#35753; Spring Boot &#22312;&#33258;&#21160;&#37197;&#32622; <code>ObjectMapper</code> &#26102;&#33258;&#21160;&#27880;&#20876;&#23427;&#65292;&#20063;&#21487;&#20197;&#25163;&#21160;&#22312;&#33258;&#24049;&#30340; <code>ObjectMapper</code> &#20013;&#27880;&#20876;&#36825;&#20010;&#27169;&#22359;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public JodaMoneyModule jodaMoneyModule() {
    return new JodaMoneyModule();
}</code></pre><p>&#25509;&#19979;&#26469;&#65292;&#20877;&#35843;&#25972;&#19968;&#19979; <code>redisTemplate()</code>&#65292;&#25351;&#23450;&#25105;&#20204;&#35201;&#22788;&#29702;&#30340;&#27867;&#22411;&#31867;&#22411;&#65292;&#35753;&#23427;&#19987;&#38376;&#26469;&#22788;&#29702;&#38190;&#20026; <code>String</code> &#20540;&#20026; <code>MenuItem</code> &#30340;&#31867;&#22411;&#65292;&#24207;&#21015;&#21270;&#19982;&#21453;&#24207;&#21015;&#21270;&#37117;&#26159;&#29992; Spring Boot &#33258;&#21160;&#37197;&#32622;&#30340; <code>ObjectMapper</code>&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 8-5 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-5</strong>&#12288;&#20026; <code>MenuItem</code> &#25552;&#20379;&#20010;&#24615;&#21270;&#30340; <code>RedisTempalte</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public RedisTemplate&lt;String, MenuItem&gt; redisTemplate(RedisConnectionFactory connectionFactory,
                                                     ObjectMapper objectMapper) {
    Jackson2JsonRedisSerializer&lt;MenuItem&gt; serializer = new Jackson2JsonRedisSerializer&lt;&gt;(MenuItem.class);
    serializer.setObjectMapper(objectMapper);

    RedisTemplate&lt;String, MenuItem&gt; redisTemplate = new RedisTemplate&lt;&gt;();
    redisTemplate.setConnectionFactory(connectionFactory);
    redisTemplate.setKeySerializer(RedisSerializer.string());
    redisTemplate.setValueSerializer(serializer);
    return redisTemplate;
}</code></pre><p>&#31243;&#24207;&#25191;&#34892;&#21518;&#65292;&#20877;&#21040; Redis &#37324;&#29992; <code>LRANGE "binarytea-menu" 0 0</code> &#26597;&#30475;&#25968;&#25454;&#65292;&#30475;&#21040;&#30340; JSON &#36755;&#20986;&#22823;&#27010;&#26159;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>{\"id\":2,\"name\":\"Java\xe5\x92\x96\xe5\x95\xa1\",\"size\":\"LARGE\",\"price\":15.00,\"createTime\":
\"2020-10-15T16:59:26.037+00:00\",\"updateTime\":\"2020-10-15T16:59:26.037+00:00\"}</code></pre><blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#26412;&#22320;&#32531;&#23384; vs. &#20998;&#24067;&#24335;&#32531;&#23384;</strong></p>
<p>&#35835;&#22810;&#20889;&#23569;&#30340;&#24773;&#20917;&#19979;&#23601;&#21487;&#20197;&#29992;&#32531;&#23384;&#65292;&#27604;&#22914;&#35835;&#20889;&#27604;&#20026; 10:1 &#30340;&#24773;&#20917;&#23601;&#24456;&#21512;&#36866;&#12290;&#26412;&#33410;&#32842;&#21040;&#30340; Redis &#24456;&#36866;&#21512;&#20570;&#32531;&#23384;&#65292;&#36825;&#20854;&#23454;&#26159;&#25226; Redis &#38598;&#32676;&#24403;&#20570;&#20998;&#24067;&#24335;&#32531;&#23384;&#38598;&#32676;&#22312;&#29992;&#12290;&#19968;&#20010;&#24212;&#29992;&#38598;&#32676;&#35775;&#38382;&#21516;&#19968;&#20010;&#32531;&#23384;&#65292;&#19968;&#33324;&#19981;&#20250;&#20986;&#29616;&#32531;&#23384;&#25968;&#25454;&#19981;&#19968;&#33268;&#30340;&#24773;&#20917;&#65288;&#22914;&#26524;&#35201;&#36739;&#30495;&#19968;&#20123;&#65292;&#36824;&#26159;&#26377;&#27010;&#29575;&#20250;&#20986;&#29616;&#25968;&#25454;&#19981;&#19968;&#33268;&#30340;&#24773;&#20917;&#65292;&#20363;&#22914; Redis &#20027;&#20174;&#21516;&#27493;&#26377;&#24310;&#26102;&#65292;&#20174;&#19981;&#21516;&#33410;&#28857;&#35835;&#21462;&#25968;&#25454;&#26102;&#23601;&#21487;&#33021;&#20250;&#26377;&#38382;&#39064;&#65289;&#12290;&#20294;&#20998;&#24067;&#24335;&#32531;&#23384;&#20063;&#26159;&#26377;&#20195;&#20215;&#30340;&#65292;&#20363;&#22914;&#65292;&#32593;&#32476;&#20132;&#20114;&#30340;&#24320;&#38144;&#21644;&#24207;&#21015;&#21270;&#30340;&#24320;&#38144;&#65292;&#22914;&#26524;&#32531;&#23384;&#30340;&#23545;&#35937;&#24456;&#22823;&#65292;&#25110;&#32773;&#35775;&#38382;&#37327;&#24456;&#39640;&#65292;&#20063;&#19981;&#25490;&#38500;&#20250;&#26377;&#25171;&#28385;&#24102;&#23485;&#30340;&#24773;&#20917;&#12290;&#24635;&#20043;&#65292;&#27809;&#26377;&#21738;&#31181;&#26041;&#26696;&#26159;&#21253;&#27835;&#30334;&#30149;&#36824;&#38646;&#25104;&#26412;&#30340;&#12290;</p>
<p>&#19982;&#20854;&#30456;&#23545;&#24212;&#30340;&#26159;&#26412;&#22320;&#32531;&#23384;&#65292;&#21363;&#23558;&#25968;&#25454;&#32531;&#23384;&#22312;&#24212;&#29992;&#26412;&#22320;&#12290;&#20197; Java &#24212;&#29992;&#20026;&#20363;&#65292;&#21487;&#20197;&#23558;&#25968;&#25454;&#32531;&#23384;&#22312; JVM &#30340;&#22534;&#20869;&#23384;&#37324;&#12290;&#36825;&#26679;&#20570;&#30340;&#22909;&#22788;&#26159;&#21487;&#20197;&#19981;&#29992;&#32463;&#36807;&#32593;&#32476;&#65292;&#26080;&#39035;&#24207;&#21015;&#21270;&#65292;&#30452;&#25509;&#23601;&#33021;&#33719;&#21462;&#38656;&#35201;&#30340;&#25968;&#25454;&#12290;&#20294;&#36825;&#26679;&#20570;&#30340;&#24330;&#31471;&#20063;&#24456;&#26126;&#26174;&#65292;&#20551;&#35774;&#24212;&#29992;&#38598;&#32676;&#26377; 10 &#21488;&#26381;&#21153;&#22120;&#65292;&#27599;&#21488;&#26381;&#21153;&#22120;&#30340;&#32531;&#23384;&#21487;&#33021;&#23384;&#22312;&#24046;&#24322;&#65292;&#20309;&#26102;&#26356;&#26032;&#32531;&#23384;&#23601;&#26159;&#19968;&#38376;&#23398;&#38382;&#20102;&#12290;&#22240;&#27492;&#22914;&#26524;&#20351;&#29992;&#26412;&#22320;&#32531;&#23384;&#65292;&#23601;&#24517;&#39035;&#32771;&#34385;&#19981;&#21516;&#26381;&#21153;&#22120;&#32531;&#23384;&#19981;&#19968;&#33268;&#30340;&#24773;&#20917;&#65292;&#35201;&#33021;&#22815;&#23481;&#24525;&#36825;&#26679;&#30340;&#24046;&#24322;&#12290;</p>
<p>&#19981;&#36807;&#65292;&#36825;&#20004;&#31181;&#26041;&#24335;&#24182;&#38750;&#27700;&#28779;&#19981;&#23481;&#65292;&#19981;&#22952;&#32771;&#34385;&#36866;&#24403;&#32467;&#21512;&#20004;&#32773;&#12290;&#20363;&#22914;&#65292;&#25105;&#20204;&#21487;&#20197;&#25509;&#21463;&#32531;&#23384;&#25968;&#25454;&#22312;&#26356;&#26032;&#21518; 15 &#31186;&#20869;&#30340;&#19981;&#19968;&#33268;&#65292;&#20551;&#35774;&#24212;&#29992;&#38598;&#32676;&#26377; 100 &#21488;&#26381;&#21153;&#22120;&#65292;&#22914;&#26524;&#27599;&#21488;&#26426;&#22120;&#37117;&#27599;&#38548; 10 &#31186;&#26597;&#35810;&#19968;&#19979;&#25968;&#25454;&#24211;&#65292;&#37027;&#20040;&#36825;&#20010;&#21387;&#21147;&#20063;&#19981;&#23567;&#12290;&#24590;&#20040;&#35299;&#20915;&#21602;&#65311;&#21487;&#20197;&#22312;&#26412;&#22320;&#20570; 10 &#31186;&#30340;&#32531;&#23384;&#65292;&#28982;&#21518;&#27599;&#38548; 10 &#31186;&#26597;&#35810;&#20998;&#24067;&#24335;&#32531;&#23384;&#65292;&#24182;&#22312;&#26356;&#26032;&#25968;&#25454;&#24211;&#26102;&#23558;&#20998;&#24067;&#24335;&#32531;&#23384;&#30340;&#20540;&#30452;&#25509;&#20889;&#21040;&#32531;&#23384;&#37324;&#12290;</p>
</blockquote><h3 id="nav_point_127">8.2.3&#12288;&#36890;&#36807; <code>Repository</code> &#25805;&#20316; Redis</h3><p>&#22312;&#20171;&#32461; JPA &#26102;&#65292;Spring Data JPA &#30340; <code>Repository</code> &#21313;&#20998;&#24778;&#33395;&#65292;&#35753;&#20154;&#21360;&#35937;&#28145;&#21051;&#65292;&#21482;&#38656;&#23450;&#20041;&#25509;&#21475;&#21644;&#26041;&#27861;&#23601;&#33021;&#23454;&#29616;&#21508;&#31181;&#24120;&#29992;&#25805;&#20316;&#12290;&#20854;&#23454;&#65292;&#36825;&#24182;&#38750; JPA &#25152;&#29420;&#26377;&#30340;&#65292;Spring Data Redis &#20063;&#26377;&#31867;&#20284;&#30340;&#26426;&#21046;&#65292;&#21482;&#35201; Redis &#26381;&#21153;&#22120;&#30340;&#29256;&#26412;&#22312; 2.8.0 &#20197;&#19978;&#65292;&#19981;&#29992;&#20107;&#21153;&#65292;&#23601;&#21487;&#20197;&#36890;&#36807; <code>Repository</code> &#23454;&#29616;&#21508;&#31181;&#24120;&#29992;&#25805;&#20316;&#20102;&#12290;</p><ol>
<li><p><strong>&#23450;&#20041;&#23454;&#20307;</strong></p>
<p>&#26082;&#28982;&#26159;&#20010;&#20179;&#24211;&#65292;&#23601;&#26377;&#23545;&#24212;&#35201;&#25805;&#20316;&#30340;&#39046;&#22495;&#23545;&#35937;&#65292;&#25152;&#20197;&#25105;&#20204;&#38656;&#35201;&#20808;&#23450;&#20041;&#36825;&#20123;&#23545;&#35937;&#12290;&#34920; 8-8 &#32599;&#21015;&#20102;&#23450;&#20041; Redis &#39046;&#22495;&#23545;&#35937;&#26102;&#20250;&#29992;&#21040;&#30340;&#19968;&#20123;&#27880;&#35299;&#12290;</p>
<p><strong>&#34920; 8-8&#12288;&#23450;&#20041; Redis &#39046;&#22495;&#23545;&#35937;&#24120;&#29992;&#30340;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#27880;&#35299;</th><th>&#35828;&#26126;</th></tr><tr><td><code>@RedisHash</code></td><td>&#19982; <code>@Entity</code> &#31867;&#20284;&#65292;&#29992;&#26469;&#23450;&#20041; Redis &#30340; <code>Repository</code> &#25805;&#20316;&#30340;&#39046;&#22495;&#23545;&#35937;&#65292;&#20854;&#20013;&#30340; <code>value</code> &#23450;&#20041;&#20102;&#19981;&#21516;&#31867;&#22411;&#23545;&#35937;&#23384;&#20648;&#26102;&#20351;&#29992;&#30340;&#21069;&#32512;&#65292;&#20063;&#21483;&#20570;&#38190;&#31354;&#38388;&#65288;keyspace&#65289;&#65292;&#40664;&#35748;&#26159;&#20840;&#38480;&#23450;&#31867;&#21517;&#65292;<code>timeToLive</code> &#29992;&#26469;&#23450;&#20041;&#32531;&#23384;&#30340;&#31186;&#25968;</td></tr><tr><td><code>@Id</code></td><td>&#23450;&#20041;&#23545;&#35937;&#30340;&#26631;&#35782;&#31526;</td></tr><tr><td><code>@Indexed</code></td><td>&#23450;&#20041;&#20108;&#32423;&#32034;&#24341;&#65292;&#21152;&#22312;&#23646;&#24615;&#19978;&#21487;&#20197;&#23558;&#35813;&#23646;&#24615;&#23450;&#20041;&#20026;&#26597;&#35810;&#29992;&#30340;&#32034;&#24341;</td></tr><tr><td><code>@Reference</code></td><td>&#32531;&#23384;&#23545;&#35937;&#24341;&#29992;&#65292;&#19968;&#33324;&#24341;&#29992;&#30340;&#23545;&#35937;&#20063;&#20250;&#34987;&#23637;&#24320;&#23384;&#20648;&#22312;&#24403;&#21069;&#23545;&#35937;&#20013;&#65292;&#28155;&#21152;&#20102;&#35813;&#27880;&#35299;&#21518;&#20250;&#30452;&#25509;&#23384;&#20648;&#35813;&#23545;&#35937;&#22312; Redis &#20013;&#30340;&#24341;&#29992;</td></tr></table>
<p>&#20551;&#35774;&#25105;&#20204;&#24076;&#26395;&#36890;&#36807; <code>Repository</code> &#26469;&#32531;&#23384;&#33756;&#21333;&#65292;&#21487;&#20197;&#20687;&#20195;&#30721;&#31034;&#20363; 8-6 &#37027;&#26679;&#23450;&#20041;&#19968;&#20010;&#29992;&#20110; Redis &#30340;&#33756;&#21333;&#23545;&#35937;&#65292;&#20854;&#20013;&#25105;&#20204;&#25351;&#23450;&#20102;&#23384;&#20648;&#26102;&#30340;&#21069;&#32512;&#26159; <code>menu</code>&#65292;&#32531;&#23384; 60 &#31186;&#65292;<code>id</code> &#20026;&#26631;&#35782;&#31526;&#65292;&#36824;&#26377;&#19968;&#20010;&#20108;&#32423;&#32034;&#24341;&#26159; <code>name</code>&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">16</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-6</strong>&#12288;&#29992;&#20110; Redis &#30340; <code>RedisMenuItem</code> &#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@RedisHash(value = "menu", timeToLive = 60)
@Getter
@Setter
public class RedisMenuItem implements Serializable {
    private static final long serialVersionUID = 4442333144469925590L;

    @Id
    private Long id;
    @Indexed
    private String name;
    private Size size;
    private Money price;
}</code></pre>
<p>&#36825;&#37324;&#26377;&#19968;&#20010;&#22320;&#26041;&#38656;&#35201;&#27880;&#24847;&#65292;&#22914;&#26524;&#19981;&#26159;&#29992;&#30340; Java &#24207;&#21015;&#21270;&#65292;&#32780;&#26159; Jackson JSON&#65292;&#21017;&#26080;&#27861;&#33258;&#21160;&#22788;&#29702; <code>Money</code> &#31867;&#22411;&#65292;&#25105;&#20204;&#24517;&#39035;&#23450;&#20041;&#20004;&#20010; <code>Converter</code> &#22788;&#29702; <code>Money</code> &#19982; <code>byte[]</code> &#30340;&#20114;&#30456;&#36716;&#25442;&#12290;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 8-7 &#37027;&#26679;&#65292;&#36890;&#36807;&#19978;&#19979;&#25991;&#37324;&#30340; <code>ObjectMapper</code> &#21644; <code>Jackson2JsonRedisSerializer</code> &#26469;&#36827;&#34892;&#24207;&#21015;&#21270;&#19982;&#21453;&#24207;&#21015;&#21270;&#65292;<code>@ReadingConverter</code> &#26631;&#27880;&#30340; <code>BytesToMoneyConverter</code> &#36127;&#36131;&#22312;&#35835;&#21462;&#26102;&#23558;&#23383;&#33410;&#36716;&#25442;&#20026; <code>Money</code>&#65292;&#20889;&#36827; Redis &#26102;&#21017;&#20351;&#29992; <code>@WritingConverter</code> &#26631;&#27880;&#30340; <code>MoneyToBytesConverter</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-7</strong>&#12288;&#29992;&#20110;&#22788;&#29702; <code>Money</code> &#31867;&#22411;&#30340; <code>Converter</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@ReadingConverter
public class BytesToMoneyConverter implements Converter&lt;byte[], Money&gt; {
    private Jackson2JsonRedisSerializer&lt;Money&gt; serializer;

    public BytesToMoneyConverter(ObjectMapper objectMapper) {
        serializer = new Jackson2JsonRedisSerializer&lt;Money&gt;(Money.class);
        serializer.setObjectMapper(objectMapper);
    }

    @Override
    public Money convert(byte[] source) {
        return serializer.deserialize(source);
    }
}

@WritingConverter
public class MoneyToBytesConverter implements Converter&lt;Money, byte[]&gt;{
    private Jackson2JsonRedisSerializer&lt;Money&gt; serializer;

    public MoneyToBytesConverter(ObjectMapper objectMapper) {
        serializer = new Jackson2JsonRedisSerializer&lt;Money&gt;(Money.class);
        serializer.setObjectMapper(objectMapper);
    }

    @Override
    public byte[] convert(Money source) {
        return serializer.serialize(source);
    }
}</code></pre>
<p>&#36825;&#20004;&#20010;&#31867;&#38656;&#35201;&#20570;&#20010;&#31616;&#21333;&#30340;&#27880;&#20876;&#65292;&#21363;&#38656;&#35201;&#22312;&#19978;&#19979;&#25991;&#20013;&#37197;&#32622;&#19968;&#20010; <code>RedisCustomConversions</code>&#65292;&#23558;&#23427;&#20204;&#28155;&#21152;&#36827;&#21435;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 8-8 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-8</strong>&#12288;&#37197;&#32622; <code>RedisCustomConversions</code> Bean</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public RedisCustomConversions redisCustomConversions(ObjectMapper objectMapper) {
    return new RedisCustomConversions( Arrays.asList(new MoneyToBytesConverter(objectMapper),
new BytesToMoneyConverter(objectMapper)));
}</code></pre>
<p>&#36825;&#26102;&#20351;&#29992;&#30340; <code>RedisTemplate</code> &#21487;&#20197;&#19981;&#29992;&#25351;&#23450;&#27867;&#22411;&#31867;&#22411;&#65292;&#29992; <code>GenericJackson2JsonRedisSerializer</code> &#23601;&#22815;&#20102;&#12290;&#25105;&#20204;&#36824;&#26159;&#25226;&#38190;&#24207;&#21015;&#21270;&#25104;&#23383;&#31526;&#20018;&#65292;&#20540;&#24207;&#21015;&#21270;&#25104; JSON&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 8-9 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-9</strong>&#12288;&#23450;&#21046; <code>RedisTemplate</code> Bean</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public RedisTemplate redisTemplate(RedisConnectionFactory connectionFactory,ObjectMapper objectMapper) {
    GenericJackson2JsonRedisSerializer serializer = new GenericJackson2JsonRedisSerializer(objectMapper);
    RedisTemplate redisTemplate = new RedisTemplate();
    redisTemplate.setConnectionFactory(connectionFactory);
    redisTemplate.setKeySerializer(RedisSerializer.string());
    redisTemplate.setValueSerializer(serializer);
    return redisTemplate;
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#23450;&#20041;&#25509;&#21475;</strong></p>
<p>&#29992;&#20110; Redis &#30340; <code>Repository</code> &#25509;&#21475;&#30340;&#23450;&#20041;&#19982; JPA &#30340;&#22914;&#20986;&#19968;&#36761;&#65292;&#22522;&#26412;&#23601;&#26159;&#19968;&#20010;&#27169;&#23376;&#37324;&#21051;&#20986;&#26469;&#30340;&#65292;&#32487;&#25215;&#19968;&#26679;&#30340;&#29238;&#25509;&#21475;&#65292;&#29992;&#19968;&#26679;&#30340;&#35268;&#21017;&#26469;&#23450;&#20041;&#25509;&#21475;&#65292;&#22914;&#26524;&#20320;&#19981;&#22826;&#35760;&#24471;&#30340;&#35805;&#65292;&#21487;&#20197;&#22238;&#39038;&#19968;&#19979; 7.1.4 &#33410;&#12290;&#20195;&#30721;&#31034;&#20363; 8-10 &#23450;&#20041;&#20102;&#19968;&#20010;&#38024;&#23545; <code>RedisMenuItem</code> &#30340; <code>Repository</code> &#25509;&#21475;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-10</strong>&#12288;&#38024;&#23545; Redis &#20462;&#25913;&#36807;&#30340; <code>Repository</code> &#25509;&#21475;&#23450;&#20041;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface RedisMenuRepository extends CrudRepository&lt;RedisMenuItem, Long&gt; {
    List&lt;RedisMenuItem&gt; findByName(String name);
}</code></pre>
<p>&#35201;&#28608;&#27963;&#38024;&#23545; Redis &#30340; <code>Repository</code> &#25509;&#21475;&#25903;&#25345;&#65292;&#38656;&#35201;&#22312;&#37197;&#32622;&#31867;&#19978;&#28155;&#21152; <code>@EnableRedisRepositories</code> &#27880;&#35299;&#12290;&#19982; JPA &#19968;&#26679;&#65292;Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#31867; <code>RedisRepositoriesAutoConfiguration</code>&#65288;&#30830;&#20999;&#22320;&#35828;&#26159;&#23427;&#23548;&#20837;&#30340; <code>RedisRepositoriesRegistrar</code>&#65289;&#24050;&#32463;&#33258;&#21160;&#28155;&#21152;&#20102;&#36825;&#20010;&#27880;&#35299;&#65292;&#21482;&#35201;&#28385;&#36275;&#26465;&#20214;&#65292;&#23601;&#19981;&#29992;&#25105;&#20204;&#33258;&#24049;&#21160;&#25163;&#20102;&#12290;</p>
<p>&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#26469;&#25913;&#36896;&#19968;&#19979;&#20043;&#21069;&#30340; <code>MenuCacheRunner</code> &#21644; <code>MenuPrinterRunner</code>&#65292;&#20174;&#30452;&#25509;&#20351;&#29992; <code>RedisTemplate</code> &#25913;&#20026;&#20351;&#29992; <code>RedisMenuRepository</code> &#26469;&#25805;&#20316; Redis&#12290;&#20195;&#30721;&#31034;&#20363; 8-11 &#26159; <code>MenuCacheRunner</code> &#31867;&#65292;&#23427;&#20174; <code>MenuRepository</code> &#20013;&#33719;&#21462;&#20840;&#37096;&#30340;&#33756;&#21333;&#39033;&#65292;&#36716;&#25442;&#20026; <code>RedisMenuItem</code> &#21518;&#20445;&#23384;&#36827; Redis&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-11</strong>&#12288;&#25913;&#36896;&#21518;&#30340; <code>MenuCacheRunner</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(1)
public class MenuCacheRunner implements ApplicationRunner {
    @Autowired
    private MenuRepository menuRepository;
    @Autowired
    private RedisMenuRepository redisMenuRepository;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        List&lt;MenuItem&gt; itemList = menuRepository.findAll();
        log.info("Load {} MenuItems from DB, ready to cache.", itemList.size());

        itemList.forEach(i -&gt; {
            RedisMenuItem rmi = new RedisMenuItem();
            BeanUtils.copyProperties(i, rmi);
            redisMenuRepository.save(rmi);
        });
    }
}</code></pre>
<p>&#20195;&#30721;&#31034;&#20363; 8-12 &#26159; <code>MenuPrinterRunner</code> &#31867;&#65306;<code>redisMenuRepository</code> &#20013;&#22914;&#26524;&#23384;&#20648;&#20102;&#20869;&#23481;&#65292;&#21017; <code>count()</code> &#20250;&#36820;&#22238;&#23384;&#20648;&#30340;&#23545;&#35937;&#25968;&#37327;&#65292;&#22823;&#20110; <code>0</code> &#23601;&#36208;&#32531;&#23384;&#65292;&#21542;&#21017;&#23601;&#36208;&#25968;&#25454;&#24211;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-12</strong>&#12288;&#25913;&#36896;&#21518;&#30340; <code>MenuPrinterRunner</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(2)
public class MenuPrinterRunner implements ApplicationRunner {
    @Autowired
    private MenuRepository menuRepository;
    @Autowired
    private RedisMenuRepository redisMenuRepository;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        long size = 0;
        Iterable&lt;?&gt; menuList;
        if (redisMenuRepository.count() &gt; 0) {
            log.info("Loading menu from Redis.");
            size = redisMenuRepository.count();
            menuList = redisMenuRepository.findAll();
            log.info("Java&#21654;&#21857;&#32531;&#23384;&#20102;{}&#26465;", redisMenuRepository.findByName("Java&#21654;&#21857;").size());
        } else {
            log.info("Loading menu from DB.");
            size = menuRepository.count();
            menuList = menuRepository.findAll();
        }
        log.info("&#20849;&#26377;{}&#20010;&#39278;&#21697;&#21487;&#36873;&#12290;", size);
        menuList.forEach(i -&gt; log.info("&#39278;&#21697;&#65306;{}", i));
    }
}</code></pre>
<p>&#31243;&#24207;&#36816;&#34892;&#21518;&#65292;&#22312; Redis &#37324;&#26597;&#35810;&#21040;&#30340;&#20869;&#23481;&#20250;&#26159;&#31867;&#20284;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; redis-cli
127.0.0.1:6379&gt; keys *
1) "menu:1:phantom"
2) "menu:2"
3) "menu:1:idx"
4) "menu:2:idx"
5) "menu"
6) "menu:2:phantom"
7) "menu:1"
8) "menu:name:Java\xe5\x92\x96\xe5\x95\xa1"

127.0.0.1:6379&gt; hgetall menu:1
 1) "_class"
 2) "learning.spring.binarytea.model.RedisMenuItem"
 3) "id"
 4) "1"
 5) "name"
 6) "Java\xe5\x92\x96\xe5\x95\xa1"
 7) "size"
 8) "MEDIUM"
 9) "price"
10) "{\"amount\":12.00,\"currency\":\"CNY\"}"
127.0.0.1:6379&gt;</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#22810;&#31181;&#19981;&#21516;&#30340; <code>Repository</code> &#22914;&#20309;&#20849;&#23384;</strong></p>
<p>&#19981;&#30693;&#36947;&#22823;&#23478;&#26377;&#27809;&#26377;&#36825;&#26679;&#30340;&#30097;&#38382;&#65306;&#24037;&#31243;&#37324;&#21516;&#26102;&#23384;&#22312; JPA &#21644; Redis &#20004;&#31181;&#31867;&#22411;&#30340; <code>Repository</code> &#25509;&#21475;&#65292;Spring Data &#24590;&#20040;&#30693;&#36947;&#23427;&#20204;&#20998;&#21035;&#36866;&#29992;&#20110;&#20160;&#20040;&#31867;&#22411;&#30340;&#23384;&#20648;&#65292;&#21448;&#35813;&#22914;&#20309;&#23454;&#20363;&#21270;&#21602;&#65311;</p>
<p>Spring Data &#20013;&#23450;&#20041;&#20102;&#22914;&#19979;&#19968;&#20123;&#35268;&#21017;&#65292;&#26469;&#24110;&#21161;&#25105;&#20204;&#21306;&#20998;&#12290;</p>
<p>(1) &#39046;&#22495;&#23545;&#35937;&#19978;&#28155;&#21152;&#30340;&#27880;&#35299;&#12290;&#36890;&#36807;&#36825;&#26465;&#22522;&#26412;&#23601;&#24050;&#32463;&#21487;&#20197;&#20805;&#20998;&#21306;&#20998;&#20102;&#65292;JPA &#30340;&#39046;&#22495;&#23545;&#35937;&#29992; <code>@Entity</code>&#65292;Redis &#30340;&#39046;&#22495;&#23545;&#35937;&#29992; <code>@RedisHash</code>&#65292;&#36824;&#26377; MongoDB &#30340;&#39046;&#22495;&#23545;&#35937;&#29992; <code>@Document</code>&#12290;</p>
<p>(2) &#25509;&#21475;&#32487;&#25215;&#30340;&#29238;&#25509;&#21475;&#12290;Spring Data &#20013;&#26377;&#19968;&#20123;&#38024;&#23545;&#29305;&#23450;&#24213;&#23618;&#25216;&#26415;&#30340;&#25509;&#21475;&#65292;&#20363;&#22914;&#38024;&#23545; JPA &#30340; <code>JpaRepository</code> &#25110;&#32773;&#38024;&#23545; MongoDB &#30340; <code>MongoRepository</code>&#12290;&#37117;&#29992;&#20102;&#36825;&#20123;&#25509;&#21475;&#20102;&#65292;&#37027;&#19968;&#23450;&#26159;&#36866;&#37197;&#36825;&#20123;&#25216;&#26415;&#30340;&#12290;</p>
<p>(3) &#21253;&#36335;&#24452;&#12290;<code>@EnableJpaRepositories</code> &#21644; <code>@EnableRedisRepositories</code> &#27880;&#35299;&#37324;&#37117;&#26377; <code>basePackage</code> &#23646;&#24615;&#29992;&#20110;&#37197;&#32622;&#25195;&#25551;&#30340;&#21253;&#36335;&#24452;&#65292;&#36890;&#36807;&#23427;&#21487;&#20197;&#26126;&#30830;&#22320;&#21306;&#20998;&#19981;&#21516;&#30340;&#25509;&#21475;&#12290;</p>
<p>&#22914;&#26524;&#21487;&#20197;&#30340;&#35805;&#65292;&#24314;&#35758;&#20351;&#29992;&#31532;(1)&#26465;&#35268;&#21017;&#65292;&#22240;&#20026;&#23427;&#26368;&#20026;&#28165;&#26224;&#26126;&#20102;&#12290;</p>
</blockquote>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">16</span>&#36825;&#37096;&#20998;&#30340;&#20363;&#23376;&#25918;&#22312;&#20102; ch8/binarytea-redis-repository &#20013;&#12290;</p><h2 id="nav_point_128">8.3&#12288;Spring &#30340;&#32531;&#23384;&#25277;&#35937;</h2><p>&#25105;&#20204;&#19968;&#33324;&#26159;&#25353;&#29031;&#22270; 8-3 &#30340;&#27493;&#39588;&#26469;&#20351;&#29992;&#32531;&#23384;&#25968;&#25454;&#30340;&#65306;&#31532;&#19968;&#27425;&#36827;&#20837;&#20195;&#30721;&#27573;&#65292;&#21028;&#26029;&#32531;&#23384;&#20013;&#26159;&#21542;&#26377;&#38656;&#35201;&#30340;&#25968;&#25454;&#65292;&#22914;&#26524;&#23384;&#22312;&#23601;&#29992;&#32531;&#23384;&#37324;&#30340;&#65292;&#22914;&#26524;&#19981;&#23384;&#22312;&#23601;&#20174;&#25968;&#25454;&#24211;&#25110;&#20854;&#20182;&#22320;&#26041;&#35835;&#21462;&#25968;&#25454;&#24182;&#25918;&#20837;&#32531;&#23384;&#65292;&#36825;&#26679;&#19979;&#27425;&#23601;&#33021;&#20174;&#32531;&#23384;&#33719;&#21462;&#25968;&#25454;&#20102;&#12290;&#24403;&#28982;&#65292;&#36825;&#37324;&#36824;&#35201;&#32771;&#34385;&#32531;&#23384;&#20869;&#23481;&#36807;&#26399;&#12289;&#36229;&#36807;&#32531;&#23384;&#19978;&#38480;&#26102;&#20869;&#23481;&#28120;&#27760;&#12289;&#25968;&#25454;&#20889;&#20837;&#32531;&#23384;&#26102;&#26159;&#21542;&#21152;&#38145;&#31561;&#38382;&#39064;&#12290;</p><p class="&#22270;"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00769.jpeg"/></p><p class="p-img-title"><strong>&#22270; 8-3&#12288;&#19968;&#33324;&#30340;&#32531;&#23384;&#25805;&#20316;&#27969;&#31243;</strong></p><p>&#25105;&#20204;&#23558;&#36825;&#20010;&#36807;&#31243;&#25277;&#35937;&#19968;&#19979;&#65292;&#32531;&#23384;&#30340;&#24120;&#35265;&#25805;&#20316;&#26080;&#38750;&#23601;&#26159;&#21028;&#26029;&#26159;&#21542;&#23384;&#22312;&#12289;&#35835;&#21462;&#12289;&#20889;&#20837;&#21644;&#28120;&#27760;&#65292;&#30495;&#24076;&#26395;&#26377;&#19968;&#22871;&#26694;&#26550;&#33021;&#33258;&#21160;&#32531;&#23384;&#29305;&#23450;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#65292;&#36825;&#26679;&#23601;&#19981;&#29992;&#25105;&#20204;&#20877;&#33258;&#24049;&#20889;&#20195;&#30721;&#20102;&#12290;Spring Framework &#24688;&#22909;&#23601;&#25552;&#20379;&#20102;&#36825;&#20040;&#19968;&#23618;&#32531;&#23384;&#25277;&#35937;&#12290;</p><h3 id="nav_point_129">8.3.1&#12288;&#22522;&#20110;&#27880;&#35299;&#30340;&#26041;&#27861;&#32531;&#23384;</h3><p>Spring Framework 3.1 &#24341;&#20837;&#20102;&#19968;&#22871;&#32531;&#23384;&#25277;&#35937;&#65292;&#23427;&#36890;&#36807;&#27880;&#35299;&#25110;&#32773; XML &#30340;&#26041;&#24335;&#37197;&#32622;&#21040;&#26041;&#27861;&#19978;&#65292;&#27599;&#27425;&#25191;&#34892;&#26041;&#27861;&#23601;&#20250;&#22312;&#32531;&#23384;&#37324;&#20570;&#19968;&#27425;&#26816;&#26597;&#65292;&#30475;&#30475;&#26159;&#21542;&#24050;&#32463;&#29992;&#24403;&#21069;&#21442;&#25968;&#35843;&#29992;&#36807;&#36825;&#20010;&#26041;&#27861;&#20102;&#65292;&#22914;&#26524;&#35843;&#29992;&#36807;&#24182;&#19988;&#26377;&#32467;&#26524;&#22312;&#32531;&#23384;&#37324;&#20102;&#65292;&#23601;&#19981;&#20877;&#25191;&#34892;&#23454;&#38469;&#30340;&#26041;&#27861;&#35843;&#29992;&#65292;&#32780;&#26159;&#30452;&#25509;&#36820;&#22238;&#32531;&#23384;&#20540;&#65307;&#22914;&#26524;&#27809;&#35843;&#29992;&#36807;&#65292;&#23601;&#36827;&#34892;&#35843;&#29992;&#65292;&#24182;&#32531;&#23384;&#32467;&#26524;&#12290;&#36825;&#26679;&#19968;&#26469;&#65292;&#23601;&#21487;&#20197;&#33258;&#21160;&#36991;&#20813;&#21453;&#22797;&#25191;&#34892;&#19968;&#20123;&#24320;&#38144;&#24456;&#22823;&#30340;&#26041;&#27861;&#20102;&#12290;</p><blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#36825;&#37324;&#26377;&#20004;&#28857;&#38656;&#35201;&#30528;&#37325;&#35828;&#26126;&#19968;&#19979;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36825;&#22871;&#32531;&#23384;&#25277;&#35937;&#32972;&#21518;&#26159;&#36890;&#36807; AOP &#26469;&#23454;&#29616;&#30340;&#65292;&#21363;&#22312;&#23454;&#38469;&#23545;&#35937;&#22806;&#38754;&#21253;&#20102;&#19968;&#23618;&#20195;&#29702;&#65292;&#30001;&#20195;&#29702;&#26469;&#23436;&#25104;&#32531;&#23384;&#25805;&#20316;&#65292;&#25152;&#20197;&#24517;&#39035;&#35775;&#38382;&#20195;&#29702;&#21518;&#30340;&#23545;&#35937;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#21482;&#26377;&#37027;&#20123;<strong>&#21487;&#24130;&#31561;&#25805;&#20316;</strong>&#30340;&#26041;&#27861;&#25165;&#36866;&#29992;&#20110;&#36825;&#22871;&#25277;&#35937;&#65292;&#22240;&#20026;&#24517;&#39035;&#35201;&#20445;&#35777;&#30456;&#21516;&#30340;&#21442;&#25968;&#25317;&#26377;&#19968;&#26679;&#30340;&#36820;&#22238;&#20540;&#12290;</li>
</ul>
</blockquote><p>&#20174; Spring Framework 4.1 &#29256;&#26412;&#24320;&#22987;&#65292;&#36825;&#22871;&#32531;&#23384;&#25277;&#35937;&#36824;&#25552;&#20379;&#20102;&#23545; JSR-107 &#27880;&#35299;&#30340;&#25903;&#25345;&#12290;&#22312;&#26412;&#33410;&#20013;&#65292;&#25105;&#20204;&#23601;&#30528;&#37325;&#35752;&#35770;&#22522;&#20110;&#27880;&#35299;&#30340;&#26041;&#27861;&#32531;&#23384;&#12290;</p><ol>
<li><p><strong>&#24120;&#29992;&#27880;&#35299;&#20171;&#32461;</strong></p>
<p>&#34920; 8-9 &#20013;&#21015;&#20030;&#20102;&#22312; Spring &#30340;&#32531;&#23384;&#25277;&#35937;&#20013;&#25552;&#20379;&#30340;&#27880;&#35299;&#65292;&#20197;&#21450;&#23427;&#20204;&#19982; JSR-107 &#27880;&#35299;&#30340;&#23545;&#24212;&#20851;&#31995;&#12290;</p>
<p><strong>&#34920; 8-9&#12288;Spring &#30340;&#32531;&#23384;&#25277;&#35937;&#20013;&#25552;&#20379;&#30340;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>Spring &#27880;&#35299;</th><th>JSR-107 &#23545;&#24212;&#27880;&#35299;</th><th>&#35828;&#26126;</th></tr><tr><td><code>@Cacheable</code></td><td><code>@CacheResult</code></td><td>&#20174;&#32531;&#23384;&#20013;&#33719;&#21462;&#23545;&#24212;&#30340;&#32531;&#23384;&#20540;&#65292;&#27809;&#26377;&#30340;&#35805;&#23601;&#25191;&#34892;&#26041;&#27861;&#24182;&#32531;&#23384;&#65292;&#28982;&#21518;&#36820;&#22238;&#65292;&#20854;&#20013; <code>sync</code> &#22914;&#26524;&#20026; <code>true</code>&#65292;&#22312;&#35843;&#29992;&#26041;&#27861;&#26102;&#20250;&#38145;&#20303;&#32531;&#23384;&#65292;&#30456;&#21516;&#30340;&#21442;&#25968;&#21482;&#26377;&#19968;&#20010;&#32447;&#31243;&#20250;&#35745;&#31639;&#65292;&#20854;&#20182;&#32447;&#31243;&#31561;&#24453;&#32467;&#26524;</td></tr><tr><td><code>@CachePut</code></td><td><code>@CachePut</code></td><td>&#30452;&#25509;&#29992;&#26041;&#27861;&#36820;&#22238;&#26356;&#26032;&#32531;&#23384;&#65292;&#19981;&#20570;&#21028;&#26029;</td></tr><tr><td><code>@CacheEvict</code></td><td><code>@CacheRemove</code> / <code>@CacheRemoveAll</code></td><td>&#28165;&#38500;&#32531;&#23384;&#65292;&#20854;&#20013;&#30340; <code>allEntries</code> &#22914;&#26524;&#35774;&#32622;&#20026; <code>true</code>&#65292;&#21017;&#28165;&#38500;&#25351;&#23450;&#32531;&#23384;</td></tr><tr><td><code>@Caching</code></td><td>&#26080;</td><td>&#21487;&#20197;&#29992;&#26469;&#32452;&#21512;&#22810;&#20010;&#32531;&#23384;&#25277;&#35937;&#30340;&#27880;&#35299;&#65292;&#27604;&#22914;&#20004;&#20010; <code>@CacheEvict</code></td></tr><tr><td><code>@CacheConfig</code></td><td><code>@CacheDefaults</code></td><td>&#28155;&#21152;&#22312;&#31867;&#19978;&#65292;&#20026;&#36825;&#20010;&#31867;&#37324;&#30340;&#32531;&#23384;&#25277;&#35937;&#27880;&#35299;&#25552;&#20379;&#20844;&#20849;&#37197;&#32622;&#65292;&#20363;&#22914;&#32479;&#19968;&#30340; <code>cacheNames</code> &#21644; <code>cacheManager</code></td></tr></table>
<p>&#36825;&#20123;&#27880;&#35299;&#20013;&#26377;&#24456;&#22810;&#19968;&#26679;&#30340;&#23646;&#24615;&#65288;&#38500;&#20102; <code>@Caching</code>&#65289;&#65292;&#20855;&#20307;&#22914;&#19979;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong><code>cacheNames</code></strong>&#65292;&#29992;&#26469;&#35774;&#32622;&#25805;&#20316;&#30340;&#32531;&#23384;&#21015;&#34920;&#65292;&#20363;&#22914; <code>cacheNames="menu"</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong><code>key</code></strong>&#65292;&#35745;&#31639;&#32531;&#23384;&#38190;&#21517;&#30340; SpEL &#34920;&#36798;&#24335;&#65292;&#22914;&#26524;&#19981;&#35774;&#32622;&#65292;&#40664;&#35748;&#20540;&#26159; <code>""</code>&#65292;&#21363;&#25152;&#26377;&#21442;&#25968;&#37117;&#21442;&#19982;&#35745;&#31639;&#65292;&#20849;&#21516;&#20915;&#23450;&#38190;&#21517;&#12290;&#36890;&#36807; <code>{#root.args[0]}</code> &#26469;&#24341;&#29992;&#26041;&#27861;&#30340;&#31532; 1 &#20010;&#21442;&#25968;&#65292;&#27492;&#22788;&#20063;&#21487;&#20197;&#26367;&#25442;&#20026;&#21442;&#25968;&#21517;&#65292;&#20363;&#22914; <code>#foo</code>&#65307;<code>#result</code> &#21487;&#20197;&#35775;&#38382;&#26041;&#27861;&#30340;&#36820;&#22238;&#23545;&#35937;&#65292;&#22914;&#26524;&#27880;&#35299;&#26377; <code>beforeInvocation</code> &#23646;&#24615;&#65292;&#37197;&#32622;&#20026; <code>true</code> &#26102; <code>#result</code> &#19981;&#21487;&#29992;&#65307;<code>#root.methodName</code> &#21644; <code>#root.targetClass</code> &#21487;&#20197;&#35775;&#38382;&#26041;&#27861;&#21517;&#21644;&#30446;&#26631;&#31867;&#30340;&#31867;&#21517;&#65292;&#30456;&#24212;&#22320;&#65292;<code>#root.method</code> &#21644; <code>#root.target</code> &#21017;&#35775;&#38382;&#23545;&#24212;&#30340;&#23545;&#35937;&#65307;<code>#root.caches</code> &#21487;&#20197;&#33719;&#24471;&#35201;&#25805;&#20316;&#30340;&#32531;&#23384;&#21015;&#34920;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong><code>keyGenerator</code></strong>&#65292;&#33258;&#23450;&#20041;&#30340; <code>KeyGenerator</code> Bean &#21517;&#31216;&#65292;&#29992;&#26469;&#29983;&#25104;&#32531;&#23384;&#38190;&#21517;&#65292;&#19982; <code>key</code> &#23646;&#24615;&#20114;&#26021;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong><code>cacheManager</code></strong>&#65292;&#32531;&#23384;&#31649;&#29702;&#22120;&#30340; Bean &#21517;&#31216;&#65292;&#36127;&#36131;&#31649;&#29702;&#23454;&#38469;&#30340;&#32531;&#23384;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong><code>cacheResolver</code></strong>&#65292;&#32531;&#23384;&#35299;&#26512;&#22120;&#30340; Bean &#21517;&#31216;&#65292;&#19982; <code>cacheManager</code> &#23646;&#24615;&#20114;&#26021;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong><code>condition</code></strong>&#65292;&#25805;&#20316;&#32531;&#23384;&#30340;&#26465;&#20214;&#65292;&#20063;&#26159;&#29992; SpEL &#34920;&#36798;&#24335;&#26469;&#35745;&#31639;&#30340;&#12290;</li>
</ul>
<p>&#21069;&#38754;&#35828;&#36807;&#65292;<code>key</code> &#21644; <code>keyGenerator</code> &#26159;&#29992;&#26469;&#35745;&#31639;&#32531;&#23384;&#38190;&#21517;&#30340;&#65292;&#40664;&#35748;&#24773;&#20917;&#19979;&#65292;<code>SimpleKeyGenerator</code> &#20250;&#26681;&#25454;&#21442;&#25968;&#26469;&#29983;&#25104;&#38190;&#21517;&#65292;&#31574;&#30053;&#22914;&#19979;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#27809;&#26377;&#21442;&#25968;&#65292;&#30452;&#25509;&#36820;&#22238; <code>SimpleKey.EMPTY</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#21482;&#26377;&#19968;&#20010;&#21442;&#25968;&#65292;&#19988;&#21442;&#25968;&#19981;&#20026; <code>null</code>&#65292;&#20063;&#19981;&#26159;&#25968;&#32452;&#31867;&#22411;&#65292;&#30452;&#25509;&#36820;&#22238;&#36825;&#20010;&#21442;&#25968;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#26159;&#20854;&#20182;&#24773;&#20917;&#65292;&#36820;&#22238;&#21253;&#21547;&#25152;&#26377;&#21442;&#25968;&#30340; <code>SimpleKey</code> &#23454;&#20363;&#12290;</li>
</ul>
<p><code>condition</code> &#29992;&#26469;&#35745;&#31639;&#25805;&#20316;&#26465;&#20214;&#65292;&#23427;&#21487;&#20197;&#26159;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Cacheable(cacheNames="menu", condition="#name.length() &lt; 16")
public MenuItem findByName(String name) {...}</code></pre>
<p>&#36824;&#26377;&#19968;&#20010; <code>unless</code> &#21442;&#25968;&#65292;&#24182;&#19981;&#26159;&#25152;&#26377;&#27880;&#35299;&#37117;&#26377;&#65292;&#23427;&#26159;&#29992;&#26469;&#25237;&#21542;&#20915;&#31080;&#30340;&#12290;<code>unless</code> &#20165;&#22312;&#26041;&#27861;&#25191;&#34892;&#21518;&#26377;&#25928;&#65292;&#21487;&#20197;&#25343;&#21040;&#25191;&#34892;&#32467;&#26524; <code>#result</code>&#12290;&#24403; <code>unless</code> &#30340;&#34920;&#36798;&#24335;&#35745;&#31639;&#20026; <code>true</code> &#26102;&#21017;&#19981;&#25918;&#20837;&#32531;&#23384;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#22914;&#20309;&#28608;&#27963;&#32531;&#23384;&#25277;&#35937;</strong></p>
<p>&#20102;&#35299;&#20102;&#19978;&#38754;&#30340;&#36825;&#20123;&#27880;&#35299;&#21518;&#65292;&#21448;&#35813;&#24590;&#20040;&#28608;&#27963; Spring Framework &#23545;&#23427;&#20204;&#30340;&#25903;&#25345;&#21602;&#65311;&#28608;&#27963;&#30340;&#26041;&#27861;&#19982;&#20107;&#21153;&#31867;&#20284;&#65292;&#21487;&#20197;&#22312;&#37197;&#32622;&#31867;&#19978;&#22686;&#21152; <code>@EnableCaching</code> &#27880;&#35299;&#65292;&#20363;&#22914;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
@EnableCaching
public class Config {}</code></pre>
<p>&#20063;&#21487;&#20197;&#22312; XML &#37197;&#32622;&#25991;&#20214;&#20013;&#20351;&#29992; <code>&lt;cache:annotation-driven/&gt;</code> &#26631;&#31614;&#65292;&#20363;&#22914;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:cache="http://www.springframework.org/schema/cache"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        https://www.springframework.org/schema/cache/spring-cache.xsd"&gt;

    &lt;cache:annotation-driven/&gt;
&lt;/beans&gt;</code></pre>
<p>&#21069;&#25991;&#25552;&#21040;&#30340;&#21508;&#31181;&#27880;&#35299;&#37117;&#21487;&#20197;&#22312; <code>&lt;cache/&gt;</code> &#20013;&#25214;&#21040;&#23545;&#24212;&#30340;&#37197;&#32622;&#26041;&#27861;&#65292;&#27492;&#22788;&#23601;&#19981;&#23637;&#24320;&#20102;&#65292;&#25105;&#20204;&#36824;&#26159;&#20197;&#27880;&#35299;&#30340;&#29992;&#27861;&#20026;&#20027;&#12290;</p>
<p>&#29616;&#22312;&#65292;&#22238;&#21040;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#20363;&#23376;&#20013;&#65292;8.2 &#33410;&#30340;&#38656;&#27714;&#25551;&#36848;&#20013;&#24050;&#32463;&#35828;&#26126;&#20102;&#33756;&#21333;&#26159;&#38271;&#26102;&#38388;&#30340;&#65292;&#23646;&#20110;&#35835;&#22810;&#20889;&#23569;&#30340;&#20869;&#23481;&#65292;&#22240;&#27492;&#38750;&#24120;&#36866;&#21512;&#20570;&#32531;&#23384;&#12290;&#25105;&#20204;&#21487;&#20197;&#23558;&#25972;&#20010;&#33756;&#21333;&#32531;&#23384;&#36215;&#26469;&#65292;&#20943;&#23569;&#23545;&#25968;&#25454;&#24211;&#30340;&#25805;&#20316;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">17</span> &#20808;&#28155;&#21152;&#19968;&#20010;&#33756;&#21333;&#26381;&#21153;&#31867; <code>MenuService</code>&#65292;&#29992;&#23427;&#26469;&#23553;&#35013; <code>Repository</code> &#30340;&#25805;&#20316;&#65292;&#21516;&#26102;&#22312;&#20854;&#26041;&#27861;&#19978;&#28155;&#21152;&#30456;&#24212;&#30340;&#27880;&#35299;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 8-13 &#25152;&#31034;&#12290;&#20854;&#23454;&#65292;<strong>&#19968;&#33324;&#37117;&#25512;&#33616;&#23558;&#19994;&#21153;&#36923;&#36753;&#23553;&#35013;&#21040; <code>Service</code> &#20013;</strong>&#65292;&#19968;&#20010;&#26381;&#21153;&#22312;&#20855;&#20307;&#23454;&#29616;&#36807;&#31243;&#20013;&#21487;&#33021;&#20250;&#28041;&#21450;&#22810;&#20010;&#19981;&#21516;&#34920;&#30340;&#25805;&#20316;&#65292;&#25152;&#20197;&#25105;&#20204;&#23558;&#20107;&#21153;&#20063;&#28155;&#21152;&#22312; <code>Service</code> &#19978;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-13</strong>&#12288;<code>MenuService</code> &#21450; <code>MenuRepository</code> &#30340;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@CacheConfig(cacheNames = "menu")
public class MenuService {
    @Autowired
    private MenuRepository menuRepository;

    @Cacheable
    public List&lt;MenuItem&gt; getAllMenu() {
        return menuRepository.findAll();
    }

    @Cacheable(key = "#root.methodName + '-' + #name + '-' + #size")
    public Optional&lt;MenuItem&gt; getByNameAndSize(String name, Size size) {
        return menuRepository.findByNameAndSize(name, size);
    }
}

// MenuRepository&#31245;&#20570;&#35843;&#25972;&#65292;&#22686;&#21152;&#20102;&#19968;&#20010;&#26041;&#27861;
public interface MenuRepository extends JpaRepository&lt;MenuItem, Long&gt;{
    Optional&lt;MenuItem&gt; findByNameAndSize(String name, Size size);
}</code></pre>
<p>&#19978;&#38754;&#36825;&#27573;&#20195;&#30721;&#20013;&#65292;&#31867;&#19978;&#28155;&#21152;&#30340; <code>@CacheConfig</code> &#27880;&#35299;&#37197;&#32622;&#20102;&#20844;&#20849;&#30340; <code>cacheNames</code>&#65292;&#22240;&#27492;&#23601;&#19981;&#29992;&#20877;&#22312;&#20004;&#20010;&#26041;&#27861;&#19978;&#20570;&#37197;&#32622;&#20102;&#65307;<code>getByNameAndSize()</code> &#19978;&#30340; <code>@Cacheable</code> &#27880;&#35299;&#20013;&#37197;&#32622;&#20102; <code>key</code> &#23646;&#24615;&#65292;&#27492;&#22788;&#23558;&#26041;&#27861;&#21517;&#12289;<code>name</code> &#21442;&#25968;&#19982; <code>size</code> &#21442;&#25968;&#29992;&#8220;<code>-</code>&#8221;&#25340;&#25509;&#22312;&#19968;&#36215;&#20316;&#20026;&#32531;&#23384;&#30340;&#38190;&#21517;&#12290;</p>
<p>&#26377;&#20102;&#33756;&#21333;&#26381;&#21153;&#65292;&#25509;&#19979;&#26469;&#38656;&#35201;&#21021;&#22987;&#21270;&#19968;&#19979;&#25105;&#20204;&#30340;&#32531;&#23384;&#65292;&#20570;&#20010;&#8220;&#39044;&#28909;&#8221;&#65292;&#20195;&#30721;&#31034;&#20363; 8-14 &#23601;&#36215;&#21040;&#20102;&#36825;&#20010;&#20316;&#29992;&#12290;&#20808;&#35843;&#29992; <code>getAllMenu()</code> &#32531;&#23384;&#23436;&#25972;&#30340;&#33756;&#21333;&#21015;&#34920;&#65292;&#20877;&#35843;&#29992; <code>getByNameAndSize()</code> &#32531;&#23384;&#21333;&#20010;&#33756;&#21333;&#39033;&#12290;&#19968;&#33324;&#24773;&#20917;&#19979;&#22312;&#26377;&#20102;&#23436;&#25972;&#25968;&#25454;&#21518;&#65292;&#21487;&#20197;&#36890;&#36807;&#31616;&#21333;&#22788;&#29702;&#26469;&#33719;&#24471;&#37324;&#38754;&#30340;&#20869;&#23481;&#65292;&#36825;&#37324;&#20986;&#20110;&#28436;&#31034;&#30340;&#30446;&#30340;&#21448;&#21152;&#20102;&#20123;&#20854;&#20182;&#26041;&#27861;&#65292;&#22312;&#23454;&#36341;&#20013;&#21487;&#20197;&#37196;&#24773;&#32771;&#34385;&#21512;&#29702;&#20351;&#29992;&#32531;&#23384;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-14</strong>&#12288;&#29992;&#20110;&#8220;&#39044;&#28909;&#8221;&#32531;&#23384;&#30340; <code>MenuCacheRunner</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(1)
@Slf4j
public class MenuCacheRunner implements ApplicationRunner {
    @Autowired
    private MenuService menuService;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        log.info("&#20174;&#25968;&#25454;&#24211;&#21152;&#36733;&#33756;&#21333;&#21015;&#34920;&#65292;&#21518;&#32493;&#24212;&#35813;&#23601;&#22312;&#32531;&#23384;&#37324;&#20102;");
        List&lt;MenuItem&gt; list = menuService.getAllMenu();
        log.info("&#20849;&#21462;&#24471;{}&#20010;&#26465;&#30446;&#12290;", list.size());
        menuService.getByNameAndSize("Java&#21654;&#21857;", Size.MEDIUM).ifPresent(m -&gt; log.info("&#21152;&#36733;&#20013;&#26479;Java&#21654;&#21857;&#65292;&#25918;&#20837;&#32531;&#23384;&#65292;ID={}", m.getId()));
    }
}</code></pre>
<p>&#32531;&#23384;&#8220;&#39044;&#28909;&#8221;&#21518;&#65292;&#20877;&#36935;&#21040;&#35843;&#29992;&#23545;&#24212;&#26041;&#27861;&#30340;&#24773;&#20917;&#65292;&#21482;&#35201;&#32531;&#23384;&#26410;&#22833;&#25928;&#65292;&#23601;&#19981;&#20250;&#25191;&#34892;&#30495;&#27491;&#30340;&#35843;&#29992;&#65292;&#32780;&#26159;&#30452;&#25509;&#36820;&#22238;&#32531;&#23384;&#30340;&#20540;&#12290;&#35843;&#25972;&#21518;&#30340; <code>MenuPrinterRunner</code> &#20250;&#20351;&#29992; <code>MenuService</code> &#26469;&#33719;&#21462;&#33756;&#21333;&#20449;&#24687;&#65292;&#21152;&#36733;&#21040; data.sql &#20013;&#39044;&#20808;&#25554;&#20837;&#30340;&#20004;&#26465;&#25968;&#25454;&#21518;&#65292;&#20877;&#37325;&#26032;&#36890;&#36807; <code>getByNameAndSize()</code> &#26469;&#20570;&#36941;&#21382;&#65292;&#36825;&#26102;&#22240;&#20026;&#22312; <code>MenuCacheRunner</code> &#20013;&#32531;&#23384;&#36807;&#8220;&#20013;&#26479; Java &#21654;&#21857;&#8221;&#65292;&#23427;&#20250;&#30452;&#25509;&#20174;&#32531;&#23384;&#20013;&#33719;&#21462;&#65292;&#32780;&#22823;&#26479;&#21654;&#21857;&#21017;&#36824;&#38656;&#35201;&#35775;&#38382;&#25968;&#25454;&#24211;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 8-15 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-15</strong>&#12288;&#32463;&#36807;&#35843;&#25972;&#30340; <code>MenuPrinterRunner</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(2)
@Slf4j
public class MenuPrinterRunner implements ApplicationRunner {
    @Autowired
    private MenuService menuService;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        log.info("&#20877;&#27425;&#21152;&#36733;&#33756;&#21333;&#21015;&#34920;&#65292;&#24212;&#35813;&#19981;&#20250;&#35775;&#38382;&#25968;&#25454;&#24211;");
        List&lt;MenuItem&gt; list = menuService.getAllMenu();
        log.info("&#20849;&#26377;{}&#20010;&#39278;&#21697;&#21487;&#36873;&#12290;", list.size());
        list.forEach(i -&gt; log.info("&#37325;&#26032;&#26597;&#35810;&#33756;&#21333;&#39033;({})&#65306;{}", i.getId(),
            menuService.getByNameAndSize(i.getName(), i.getSize())));
    }
}</code></pre>
<p>&#30001;&#20110;&#24320;&#21551;&#20102; Hibernate &#30340; SQL &#25171;&#21360;&#21151;&#33021;&#65292;&#22312;&#36816;&#34892;&#31243;&#24207;&#26102;&#65292;&#36890;&#36807;&#35266;&#23519;&#26085;&#24535;&#20013;&#30340; SQL &#25191;&#34892;&#24773;&#20917;&#65292;&#23601;&#21487;&#20197;&#24456;&#26041;&#20415;&#22320;&#21028;&#26029;&#26159;&#21542;&#21629;&#20013;&#32531;&#23384;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">17</span>&#36825;&#37324;&#30340;&#20363;&#23376;&#22312; ch8/binarytea-cache &#20013;&#12290;</p><h3 id="nav_point_130">8.3.2&#12288;&#26367;&#25442;&#19981;&#21516;&#30340;&#32531;&#23384;&#23454;&#29616;</h3><p>&#22312;&#19978;&#19968;&#33410;&#30340;&#20363;&#23376;&#20013;&#65292;&#25105;&#20204;&#20351;&#29992;&#20102; Spring Framework &#25552;&#20379;&#30340;&#40664;&#35748;&#32531;&#23384;&#65292;&#23427;&#30340;&#32972;&#21518;&#26159; Java &#30340; <code>ConcurrentHashMap</code>&#12290;&#20854;&#23454; Spring &#30340;&#32531;&#23384;&#25277;&#35937;&#33021;&#22815;&#25903;&#25345;&#22810;&#31181;&#19981;&#21516;&#30340;&#21518;&#31471;&#32531;&#23384;&#23454;&#29616;&#65292;&#23427;&#26377;&#19968;&#23618; <code>CacheManager</code> &#25277;&#35937;&#65292;&#22312;&#20854;&#20013;&#32500;&#25252;&#20102;&#22810;&#20010; <code>Cache</code>&#65292;&#25105;&#20204;&#35201;&#32531;&#23384;&#30340;&#20869;&#23481;&#23601;&#26159;&#20445;&#23384;&#22312; <code>Cache</code> &#37324;&#30340;&#65292;&#32780;&#20043;&#21069;&#27880;&#35299;&#30340; <code>cacheNames</code> &#20013;&#25351;&#23450;&#30340;&#23601;&#26159;&#36825;&#37324;&#30340; <code>Cache</code>&#12290;</p><p>&#21482;&#38656;&#36873;&#25321;&#19981;&#21516;&#30340; <code>CacheManager</code> &#23454;&#29616;&#31867;&#65292;&#23601;&#33021;&#26367;&#25442;&#20855;&#20307;&#20351;&#29992;&#30340;&#32531;&#23384;&#12290;&#34920; 8-9 &#21015;&#20986;&#20102; Spring Framework &#20013;&#20869;&#32622;&#30340;&#20960;&#20010; <code>CacheManager</code> &#23454;&#29616;&#12290;</p><p><strong>&#34920; 8-10&#12288;&#20869;&#32622;&#30340; <code>CacheManager</code> &#23454;&#29616;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#23454;&#29616;&#31867;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#24213;&#23618;&#23454;&#29616;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ConcurrentMapCacheManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ConcurrentHashMap</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24314;&#35758;&#20165;&#29992;&#20110;&#27979;&#35797;&#30446;&#30340;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>NoOpCacheManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26080;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#19981;&#20570;&#20219;&#20309;&#32531;&#23384;&#25805;&#20316;&#65292;&#21487;&#20197;&#35270;&#20026;&#20851;&#38381;&#32531;&#23384;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>CompositeCacheManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26080;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#29992;&#20110;&#32452;&#21512;&#22810;&#20010;&#19981;&#21516;&#30340; <code>CacheManager</code>&#65292;&#20250;&#22312;&#20854;&#20013;&#36941;&#21382;&#35201;&#25214;&#30340;&#32531;&#23384;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>EhCacheCacheManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">EhCache</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#36866;&#29992;&#20110; EhCache</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>CaffeineCacheManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Caffeine</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#36866;&#29992;&#20110; Caffeine</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>JCacheCacheManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">JCache</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#36866;&#29992;&#20110;&#36981;&#24490; JSR-107 &#35268;&#33539;&#30340;&#32531;&#23384;</p></td>
</tr>
</tbody>
</table><p>spring-context &#36825;&#20010; Jar &#21253;&#20013;&#21482;&#26377;&#20960;&#20010;&#31616;&#21333;&#30340;&#23454;&#29616;&#65292;&#20687; EhCache&#12289;Caffeine &#21644; JCache &#36825;&#26679;&#30340;&#25903;&#25345;&#37117;&#22312; spring-context-support &#37324;&#12290;&#25105;&#20204;&#21487;&#20197;&#25163;&#21160;&#24341;&#20837;&#21518;&#32773;&#65292;&#20294;&#22312; Spring Boot &#30340;&#24110;&#21161;&#19979;&#65292;&#32531;&#23384;&#25277;&#35937;&#30340;&#24341;&#20837;&#20063;&#21464;&#24471;&#21644;&#20854;&#20182;&#21508;&#31181;&#33021;&#21147;&#19968;&#26679;&#65292;&#26377;&#23545;&#24212;&#30340;&#36215;&#27493;&#20381;&#36182;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-cache&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p>&#32780; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#25903;&#25345;&#30340;&#32531;&#23384;&#31867;&#22411;&#23601;&#26356;&#22810;&#20102;&#65292;&#38500;&#20102;&#34920; 8-10 &#20013;&#25552;&#21040;&#30340;&#65292;&#36824;&#26377;&#19979;&#38754;&#30340;&#20960;&#31181;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Redis</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Couchbase</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Hazelcast</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">Infinispan</li>
</ul><p><code>CacheProperties</code> &#25552;&#20379;&#20102;&#19968;&#20123;&#22522;&#26412;&#30340;&#37197;&#32622;&#65292;&#22312;&#37197;&#32622;&#25991;&#20214;&#20013;&#20351;&#29992;&#30340;&#21069;&#32512;&#26159; <code>spring.cache</code>&#65292;&#20363;&#22914; <code>spring.cache.type=redis</code> &#21487;&#20197;&#25351;&#23450;&#32531;&#23384;&#30340;&#31867;&#22411;&#65292;<code>spring.cache.cache-names=foo,bar</code> &#21487;&#20197;&#38480;&#23450;&#21482;&#29992; <code>foo</code> &#21644; <code>bar</code> &#36825;&#20004;&#20010;&#32531;&#23384;&#21517;&#31216;&#65292;&#19981;&#33021;&#21160;&#24577;&#21019;&#24314;&#20854;&#20182;&#30340;&#32531;&#23384;&#12290;</p><ol>
<li><p><strong>&#26367;&#25442;&#20026; Caffeine</strong></p>
<p>&#35201;&#23558;&#40664;&#35748;&#30340; <code>ConcurrentMapCacheManager</code> &#26367;&#25442;&#20026; <code>CaffeineCacheManager</code>&#65292;&#39318;&#20808;&#38656;&#35201;&#22312; pom.xml &#20013;&#24341;&#20837; Caffeine &#30340;&#20381;&#36182;&#65292;&#20855;&#20307;&#30340;&#29256;&#26412;&#20132;&#32473; Spring Boot &#26469;&#31649;&#29702;&#65288;&#24403;&#28982;&#65292;&#20063;&#21487;&#20197;&#30001;&#25105;&#20204;&#33258;&#24049;&#25351;&#23450;&#65289;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.github.ben-manes.caffeine&lt;/groupId&gt;
    &lt;artifactId&gt;caffeine&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622; <code>CaffeineCacheConfiguration</code> &#20250;&#22312;&#19979;&#38754;&#30340;&#26465;&#20214;&#19979;&#29983;&#25928;&#65292;&#21019;&#24314;&#19968;&#20010; <code>CaffeineCacheManager</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass({ Caffeine.class, CaffeineCacheManager.class })
@ConditionalOnMissingBean(CacheManager.class)
@Conditional({ CacheCondition.class })
class CaffeineCacheConfiguration {}</code></pre>
<p>&#22312;&#37197;&#32622;&#25991;&#20214;&#20013;&#21487;&#20197;&#20687;&#36825;&#26679;&#26469;&#35774;&#32622;&#32531;&#23384;&#65292;&#20855;&#20307;&#30340; <code>spec</code> &#20869;&#23481;&#21487;&#20197;&#21442;&#32771; <code>CaffeineSpec</code> &#31867;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.cache.caffeine.spec=initialCapacity=10,maximumSize=50,expireAfterAccess=60s</code></pre>
<p>8.3.1 &#33410;&#20013;&#30340;&#20363;&#23376;&#65292;&#21482;&#38656;&#20570;&#22914;&#19978;&#30340;&#35843;&#25972;&#65292;&#23601;&#33021;&#30452;&#25509;&#20351;&#29992; Caffeine &#36816;&#34892;&#36215;&#26469;&#65292;&#22312;&#20195;&#30721;&#23618;&#38754;&#23454;&#29616;&#38646;&#25913;&#21160;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">18</span> &#25105;&#20204;&#20063;&#21487;&#20197;&#20889;&#19968;&#20010;&#20195;&#30721;&#31034;&#20363; 8-16 &#36825;&#26679;&#30340;&#27979;&#35797;&#29992;&#20363;&#65292;&#30475;&#30475;&#26159;&#21542;&#30495;&#30340;&#33258;&#21160;&#20351;&#29992;&#20102; Caffeine &#20570;&#20102;&#32531;&#23384;&#12290;&#30001;&#20110;&#25105;&#20204;&#30340;&#27979;&#35797;&#22312;&#36816;&#34892;&#21069;&#20250;&#20808;&#36816;&#34892; <code>MenuCacheRunner</code>&#65292;&#25152;&#20197;&#25105;&#20204;&#21482;&#38656;&#35201;&#22312;&#21333;&#20803;&#27979;&#35797;&#37324;&#20570;&#20123;&#31616;&#21333;&#30340;&#21028;&#26029;&#23601;&#34892;&#20102;&#65292;&#27604;&#22914;&#26159;&#19981;&#26159;&#29992;&#20102; <code>CaffeineCacheManager</code>&#65292;&#32531;&#23384;&#37324;&#26377;&#27809;&#26377;&#20043;&#21069;&#23384;&#36827;&#21435;&#30340;&#20869;&#23481;&#31561;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-16</strong>&#12288;&#38024;&#23545; Caffine &#30340; <code>MenuCacheRunnerTest</code> &#27979;&#35797;&#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuCacheRunnerTest {
    @Autowired
    private CacheManager cacheManager;

    @Test
    void testCache() {
        Cache cache = cacheManager.getCache("menu");
        assertTrue(cacheManager instanceof CaffeineCacheManager);
        assertTrue(cache instanceof CaffeineCache);
        assertNotNull(cache.get("getByNameAndSize-Java&#21654;&#21857;-MEDIUM"));
    }
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#26367;&#25442;&#20026; Redis</strong></p>
<p>&#22914;&#26524;&#35201;&#23558;&#32531;&#23384;&#25277;&#35937;&#30340;&#24213;&#23618;&#32531;&#23384;&#23454;&#29616;&#26356;&#25442;&#20026; Redis&#65292;&#26041;&#27861;&#21644;&#20043;&#21069;&#31867;&#20284;&#65306;&#24341;&#20837; Spring Data Redis &#30340;&#20381;&#36182;&#65292;&#38543;&#21518; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#31867; <code>RedisCacheConfiguration</code> &#20250;&#26681;&#25454;&#26465;&#20214;&#29983;&#25928;&#65292;&#22312;&#19978;&#19979;&#25991;&#20013;&#27880;&#20876;&#19968;&#20010; <code>RedisCacheManager</code> Bean&#12290;</p>
<p><code>CacheProperties</code> &#20013;&#38024;&#23545; Redis &#26377;&#19968;&#20123;&#37197;&#32622;&#65292;&#21487;&#20197;&#21442;&#32771; <code>CacheProperties.Redis</code> &#36825;&#20010;&#20869;&#37096;&#31867;&#65292;&#20855;&#20307;&#22914;&#34920; 8-11 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 8-11&#12288;<code>spring.cache.redis</code> &#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.cache.redis.time-to-live</code></td><td>&#19981;&#36807;&#26399;</td><td>&#36807;&#26399;&#26102;&#38388;</td></tr><tr><td><code>spring.cache.redis.cache-null-values</code></td><td><code>true</code></td><td>&#26159;&#21542;&#21487;&#20197;&#32531;&#23384;&#31354;&#20540;</td></tr><tr><td><code>spring.cache.redis.key-prefix</code></td><td>&#26080;&#21069;&#32512;</td><td>&#32531;&#23384;&#20013;&#38190;&#30340;&#21069;&#32512;</td></tr><tr><td><code>spring.cache.redis.use-key-prefix</code></td><td><code>true</code></td><td>&#20889;&#20837;&#32531;&#23384;&#26102;&#26159;&#21542;&#28155;&#21152;&#38190;&#30340;&#21069;&#32512;</td></tr></table>
<p>&#19982;&#21069;&#38754;&#20351;&#29992; Caffeine &#26102;&#19968;&#26679;&#65292;&#20808;&#20462;&#25913; pom.xml&#65292;&#23558; Caffeine &#30340;&#20381;&#36182;&#25442;&#25481; <span class="&#27880;&#37322;&#32534;&#21495;">19</span>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>&#25105;&#20204;&#21487;&#20197;&#20687; 8.2 &#33410;&#37027;&#26679;&#23545; Redis &#30340;&#25805;&#20316;&#36827;&#34892;&#35774;&#32622;&#65292;&#35843;&#25972;&#24207;&#21015;&#21270;&#26041;&#24335;&#65292;&#36825;&#37324;&#30340;&#28436;&#31034;&#23601;&#19981;&#20570;&#36807;&#22810;&#30340;&#35843;&#25972;&#20102;&#12290;&#38500;&#20102; <code>spring.cache.redis.time-to-live=60s</code> &#20197;&#22806;&#65292;&#20854;&#20182;&#37197;&#32622;&#20808;&#20840;&#37096;&#20351;&#29992;&#40664;&#35748;&#20540;&#65292;&#36830;&#25509;&#30417;&#21548;&#22312; <code>localhost:6379</code> &#19978;&#30340; Redis&#12290;&#22312;&#36816;&#34892;&#31243;&#24207;&#21518;&#65292;&#21487;&#20197;&#35775;&#38382; Redis &#32531;&#23384;&#65292;&#26597;&#30475;&#25968;&#25454;&#65292;&#30475;&#21040;&#30340;&#32467;&#26524;&#20250;&#19982;&#19979;&#38754;&#30340;&#36755;&#20986;&#31867;&#20284;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code># redis-cli
127.0.0.1:6379&gt; keys *
1) "menu:name:Java\xe5\x92\x96\xe5\x95\xa1"
2) "menu::getByNameAndSize-Java\xe5\x92\x96\xe5\x95\xa1-MEDIUM"
3) "menu::SimpleKey []"
4) "menu::getByNameAndSize-Java\xe5\x92\x96\xe5\x95\xa1-LARGE"
5) "menu:1:idx"
6) "menu:2:idx"
7) "menu"
127.0.0.1:6379&gt; type "menu::getByNameAndSize-Java\xe5\x92\x96\xe5\x95\xa1-MEDIUM"
string
127.0.0.1:6379&gt;</code></pre>
<p>&#36825;&#37324;&#30340;&#24207;&#21015;&#21270;&#26041;&#24335;&#20854;&#23454;&#37117;&#26159;&#22312; <code>RedisCacheConfiguration</code> &#20013;&#37197;&#32622;&#30340;&#65292;&#20854;&#20013;&#30340; <code>keySerializationPair</code> &#21644; <code>valueSerializationPair</code> &#40664;&#35748;&#26159;&#29992; <code>RedisSerializer.string()</code> &#21644; <code>RedisSerializer.java()</code> &#26469;&#26500;&#36896;&#30340;&#12290;&#35201;&#23545;&#23427;&#20204;&#36827;&#34892;&#35843;&#25972;&#26377;&#20004;&#31181;&#26041;&#24335;&#65292;&#20855;&#20307;&#22914;&#19979;&#25152;&#31034;&#65288;&#22914;&#26524;&#26159;&#35201;&#35843;&#25972;&#24207;&#21015;&#21270;&#26041;&#24335;&#65292;&#24314;&#35758;&#29992;&#31532;&#19968;&#31181;&#65289;&#65306;</p>
<p>(1) &#22312;&#19978;&#19979;&#25991;&#20013;&#37197;&#32622;&#19968;&#20010;&#25105;&#20204;&#33258;&#24049;&#30340; <code>RedisCacheConfiguration</code> Bean&#65292;&#22312;&#37324;&#38754;&#23436;&#25104;&#33258;&#23450;&#20041;&#65307;</p>
<p>(2) &#22312;&#19978;&#19979;&#25991;&#20013;&#37197;&#32622;&#19968;&#20010;&#25105;&#20204;&#33258;&#24049;&#30340; <code>RedisCacheManagerBuilderCustomizer</code> &#23454;&#29616;&#65292;&#23545; <code>RedisCacheManager</code> &#36827;&#34892;&#35843;&#25972;&#12290;</p>
<p>&#20195;&#30721;&#31034;&#20363; 8-16 &#30340;&#27979;&#35797;&#31867;&#20063;&#35201;&#31245;&#20570;&#35843;&#25972;&#65292;<code>Cache</code> &#24212;&#35813;&#21028;&#26029;&#26159;&#21542;&#20026; <code>RedisCache</code> &#30340;&#23454;&#20363;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 8-17 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 8-17</strong>&#12288;&#38024;&#23545; Redis &#25913;&#20889;&#30340; <code>MenuCacheRunnerTest</code> &#27979;&#35797;&#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuCacheRunnerTest {
    @Autowired
    private CacheManager cacheManager;

    @Test
    void testCache() {
        Cache cache = cacheManager.getCache("menu");
        assertTrue(cacheManager instanceof RedisCacheManager);
        assertTrue(cache instanceof RedisCache);
        assertNotNull(cache.get("getByNameAndSize-Java&#21654;&#21857;-MEDIUM"));
    }
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">18</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch8/binarytea-cache-caffine &#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">19</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch8/binarytea-cache-redis &#20013;&#12290;</p><h2 id="nav_point_131">8.4&#12288;&#23567;&#32467;</h2><p>&#22312;&#36825;&#19968;&#31456;&#37324;&#65292;&#25105;&#20204;&#26356;&#22810;&#22320;&#36824;&#26159;&#22312;&#32842;&#19968;&#20123;&#19982;&#25968;&#25454;&#25805;&#20316;&#23454;&#25112;&#30456;&#20851;&#30340;&#35805;&#39064;&#65292;&#20363;&#22914;&#65292;&#22312;&#23454;&#38469;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#25968;&#25454;&#24211;&#36830;&#25509;&#27744;&#38500;&#20102;&#31649;&#29702;&#36830;&#25509;&#65292;&#36824;&#24212;&#35813;&#25645;&#37197;&#21738;&#20123;&#21151;&#33021;&#8212;&#8212;&#21487;&#33021;&#26159;&#20854;&#20869;&#32622;&#30340;&#21151;&#33021;&#65292;&#20063;&#21487;&#33021;&#26159;&#19982;&#20854;&#20182;&#32452;&#20214;&#32467;&#21512;&#65292;&#20687;&#23494;&#30721;&#21152;&#23494;&#23601;&#26159;&#20010;&#24517;&#22791;&#30340;&#33021;&#21147;&#12290;&#38500;&#20102;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#65292;&#25105;&#20204;&#36824;&#20250;&#22312;&#24037;&#31243;&#20013;&#22823;&#37327;&#22320;&#20351;&#29992;&#38750;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#65292;Redis &#23601;&#26159;&#20854;&#20013;&#27604;&#36739;&#24120;&#29992;&#30340;&#12290;&#20320;&#24212;&#35813;&#20307;&#20250;&#21040;&#20102;&#65292;&#22312; Spring Boot &#21644; Spring Data Redis &#30340;&#24110;&#21161;&#19979;&#65292;Redis &#30340;&#20351;&#29992;&#26082;&#36731;&#26494;&#21448;&#24812;&#24847;&#12290;&#26368;&#21518;&#25105;&#20204;&#36824;&#32842;&#20102;&#32842; Spring Framework &#25552;&#20379;&#30340;&#32531;&#23384;&#25277;&#35937;&#65292;&#23427;&#22312;&#19968;&#23450;&#31243;&#24230;&#19978;&#31616;&#21270;&#20102;&#26041;&#27861;&#36820;&#22238;&#20540;&#32531;&#23384;&#30340;&#22797;&#26434;&#24615;&#65292;&#22312;&#24037;&#20316;&#20013;&#21313;&#20998;&#22909;&#29992;&#12290;</p><p>&#26412;&#31456;&#25105;&#20204;&#32842;&#23436;&#20102;&#25968;&#25454;&#24211;&#30456;&#20851;&#30340;&#35805;&#39064;&#65292;&#19979;&#19968;&#31456;&#23558;&#35201;&#24320;&#21551;&#19968;&#20010;&#26032;&#31687;&#31456; &#8212;&#8212; &#24590;&#20040;&#23454;&#29616; Web &#30456;&#20851;&#30340;&#38656;&#27714;&#12290;</p><blockquote>
<p style="text-align: center"><strong>&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#39033;&#30446;&#24320;&#21457;&#23567;&#32467;</strong></p>
<p>&#21040;&#36825;&#19968;&#31456;&#20026;&#27490;&#65292;Spring &#20013;&#30340;&#25968;&#25454;&#25805;&#20316;&#37096;&#20998;&#23601;&#32467;&#26463;&#20102;&#65292;&#38454;&#27573;&#24615;&#22320;&#23567;&#32467;&#19968;&#19979;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30446;&#21069;&#30340;&#24773;&#20917;&#12290;&#22312;&#31532; 5 &#31456;&#23567;&#32467;&#30340;&#22522;&#30784;&#19978;&#65292;&#30446;&#21069; BinaryTea &#24037;&#31243;&#22312;&#25216;&#26415;&#23618;&#38754;&#21448;&#23454;&#29616;&#20102;&#22914;&#19979;&#21151;&#33021;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#33756;&#21333;&#12289;&#35746;&#21333;&#31561;&#23545;&#35937;&#24314;&#27169;</strong>&#65292;&#32467;&#21512; JPA &#27880;&#35299;&#19982; Lombok &#27880;&#35299;&#65292;Model &#23618;&#30340;&#23545;&#35937;&#21487;&#20197;&#30452;&#25509;&#36890;&#36807; ORM &#26694;&#26550;&#19982;&#25968;&#25454;&#24211;&#20013;&#30340;&#34920;&#24314;&#31435;&#26144;&#23556;&#20851;&#31995;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#24120;&#35268;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#25805;&#20316;</strong>&#65292;Spring Data &#30340; <code>Repository</code> &#21487;&#20197;&#26041;&#20415;&#22320;&#23454;&#29616;&#26368;&#22522;&#26412;&#30340;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#65292;&#23450;&#20041;&#25509;&#21475;&#21363;&#33021;&#23454;&#29616;&#25193;&#23637;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#33756;&#21333;&#25968;&#25454;&#32531;&#23384;</strong>&#65292;&#36890;&#36807; Spring &#30340;&#32531;&#23384;&#25277;&#35937;&#65292;&#33021;&#22815;&#36879;&#26126;&#22320;&#26356;&#25442;&#24213;&#23618;&#30340;&#32531;&#23384;&#23454;&#29616;&#12290;</li>
</ul>
<p>&#22312;&#39033;&#30446;&#36827;&#23637;&#36807;&#31243;&#20013;&#65292;&#25105;&#20204;&#36824;&#20132;&#26367;&#28436;&#31034;&#20102; JDBC&#12289;Hibernate &#21450; MyBatis &#30340;&#22522;&#26412;&#20351;&#29992;&#26041;&#27861;&#65307;&#22312;&#28436;&#31034; Spring Data Redis &#26102;&#65292;&#20063;&#20999;&#25442;&#20102; Lettuce &#21644; Jedis &#23458;&#25143;&#31471;&#65307;&#20171;&#32461;&#32531;&#23384;&#25277;&#35937;&#26102;&#65292;&#23558;&#22522;&#20110; <code>ConcurrentHashMap</code> &#30340;&#32531;&#23384;&#26367;&#25442;&#20026;&#20102; Caffeine &#21644; Redis&#12290;&#22312; Spring &#23478;&#26063;&#21508;&#31181;&#32452;&#20214;&#30340;&#24110;&#21161;&#19979;&#65292;&#36825;&#31181;&#20999;&#25442;&#20960;&#20046;&#26159;&#26080;&#32541;&#30340;&#65292;&#23545;&#19994;&#21153;&#20195;&#30721;&#30340;&#25913;&#21160;&#24494;&#20046;&#20854;&#24494;&#12290;</p>
</blockquote><br style="page-break-after:always"/><div style="page-break-after:always"></div>