<h1 id="nav_point_108">&#31532; 7 &#31456;&#12288;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;</h1><blockquote>
<p><strong>&#26412;&#31456;&#20869;&#23481;</strong></p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Hibernate &#19982; JPA &#30340;&#22522;&#30784;&#30693;&#35782;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807; Spring Data &#30340; <code>Repository</code> &#25805;&#20316;&#25968;&#25454;&#24211;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">MyBatis &#30340;&#22522;&#26412;&#29992;&#27861;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807;&#24037;&#20855;&#25552;&#21319; MyBatis &#30340;&#20351;&#29992;&#20307;&#39564;</li>
</ul>
</blockquote><p>&#22312;&#31532; 6 &#31456;&#20013;&#65292;&#25105;&#20204;&#22823;&#27010;&#20102;&#35299;&#20102;&#22914;&#20309;&#36890;&#36807; JDBC &#26469;&#36827;&#34892;&#31616;&#21333;&#30340;&#25968;&#25454;&#24211;&#25805;&#20316;&#12290;&#36890;&#36807; SQL &#26469;&#25191;&#34892;&#25805;&#20316;&#34429;&#28982;&#19981;&#31639;&#22797;&#26434;&#65292;&#20294;&#22312;&#38754;&#21521;&#23545;&#35937;&#30340;&#35821;&#35328;&#20013;&#65292;&#36825;&#31867;&#25805;&#20316;&#22810;&#23569;&#26174;&#24471;&#26377;&#20123;&#26684;&#26684;&#19981;&#20837;&#65292;&#27605;&#31455;&#25105;&#20204;&#37117;&#26159;&#22312;&#19982;&#8220;&#23545;&#35937;&#8221;&#25171;&#20132;&#36947;&#12290;&#25226;&#23545;&#35937;&#19982;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#20851;&#32852;&#36215;&#26469;&#65292;&#23601;&#26377;&#20102;&#25105;&#20204;&#35201;&#35752;&#35770;&#30340;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#65288;Object-Relational Mapping&#65292;ORM&#65289;&#12290;&#32780; Hibernate &#21644; MyBatis &#26159;&#30446;&#21069;&#36739;&#20026;&#20027;&#27969;&#30340;&#20004;&#31181; ORM &#26694;&#26550;&#65292;&#26412;&#31456;&#20027;&#35201;&#20171;&#32461;&#22914;&#20309;&#22312;&#39033;&#30446;&#20013;&#20351;&#29992;&#23427;&#20204;&#12290;</p><h2 id="nav_point_109">7.1&#12288;&#36890;&#36807; Hibernate &#25805;&#20316;&#25968;&#25454;&#24211;</h2><p>&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#29992; Java &#26469;&#24320;&#21457;&#19968;&#20010; MVC &#27169;&#22411;&#30340;&#24212;&#29992;&#65292;&#23601;&#19968;&#23450;&#31163;&#19981;&#24320; SSH &#32452;&#21512;&#12290;&#26089;&#26399;&#19977;&#20010;&#23383;&#27597; SSH &#20998;&#21035;&#20195;&#34920;&#20102;&#24212;&#29992;&#30340;&#26680;&#24515;&#26694;&#26550; Spring Framework&#12289;&#24320;&#21457; Web &#21151;&#33021;&#30340; Struts&#65292;&#20197;&#21450;&#24320;&#21457;&#25968;&#25454;&#23618;&#30340; Hibernate ORM<span class="&#27880;&#37322;&#32534;&#21495;">1</span>&#12290;&#38543;&#30528;&#26102;&#38388;&#30340;&#25512;&#31227;&#65292;Struts &#24930;&#24930;&#28129;&#20986;&#20102;&#20154;&#20204;&#30340;&#35270;&#37326;&#65292;Spring MVC &#21462;&#20195;&#20102;&#36825;&#20010; S &#30340;&#20301;&#32622; <span class="&#27880;&#37322;&#32534;&#21495;">2</span>&#65292;&#26032;&#30340; SSH &#21464;&#20026; Spring Framework&#12289;Spring MVC &#19982; Hibernate&#12290;&#22312;&#36825;&#20010;&#32452;&#21512;&#20013;&#65292;Hibernate &#30340;&#35282;&#33394;&#19982;&#22320;&#20301;&#19968;&#30452;&#27809;&#26377;&#21457;&#29983;&#36807;&#21464;&#21270;&#65292;&#22240;&#27492;&#65292;&#26412;&#31456;&#25105;&#20204;&#20250;&#20808;&#26469;&#20102;&#35299;&#19968;&#19979; Hibernate&#12290;&#30001;&#20110;&#26412;&#20070;&#30340;&#20027;&#35201;&#23545;&#35937;&#26159; Spring &#32780;&#38750; Hibernate&#65292;&#25152;&#20197;&#36825;&#37324;&#25105;&#20204;&#19981;&#20250;&#36807;&#22810;&#22320;&#28145;&#20837;&#35752;&#35770;&#65292;&#23545; Hibernate &#24863;&#20852;&#36259;&#30340;&#21516;&#23398;&#65292;&#21487;&#20197;&#35775;&#38382;&#23427;&#30340;&#23448;&#32593;&#20102;&#35299;&#26356;&#22810;&#32454;&#33410;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">1</span>Hibernate ORM&#65292;&#36890;&#24120;&#31616;&#31216;&#20026; Hibernate&#12290;&#26089;&#26399; Hibernate &#19979;&#21482;&#26377; ORM &#24037;&#20855;&#19968;&#20010;&#39033;&#30446;&#65292;&#21518;&#26469;&#25165;&#36880;&#27493;&#21457;&#23637;&#20986;&#20102;&#24456;&#22810;&#23376;&#39033;&#30446;&#65292;&#20363;&#22914; Hibernate Validator&#12289;Hibernate Search &#31561;&#12290;&#22312; Hibernate 4.1 &#29256;&#26412;&#21457;&#24067;&#21069;&#65292;&#23427;&#36824;&#21483; Hibernate Core&#65292;&#21518;&#26469;&#25913;&#21517;&#20026; Hibernate ORM&#12290;&#20986;&#20110;&#20064;&#24815;&#65292;&#25105;&#20204;&#36824;&#26159;&#32463;&#24120;&#29992; Hibernate &#26469;&#34920;&#31034; Hibernate ORM&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">2</span>Struts &#36824;&#23384;&#22312;&#22823;&#37327;&#30340;&#23433;&#20840;&#38382;&#39064;&#65292;&#21363;&#20351;&#19981;&#29992; Spring MVC&#65292;&#20063;&#19981;&#24314;&#35758;&#22823;&#23478;&#20877;&#20351;&#29992; Struts &#26694;&#26550;&#12290;</p><h3 id="nav_point_110">7.1.1&#12288;Hibernate &#19982; JPA</h3><p>Hibernate &#26159;&#19968;&#27454;&#22522;&#20110; Java &#35821;&#35328;&#30340;&#24320;&#28304;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26694;&#26550;&#12290;&#25152;&#35859;<strong>&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;</strong>&#65292;&#31616;&#21333;&#26469;&#35828;&#23601;&#26159;&#23558;&#38754;&#21521;&#23545;&#35937;&#30340;&#39046;&#22495;&#27169;&#22411;&#19982;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#20013;&#30340;&#34920;&#20114;&#30456;&#26144;&#23556;&#36215;&#26469;&#12290;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#24456;&#22909;&#22320;&#35299;&#20915;&#20102;&#23545;&#35937;&#19982;&#20851;&#31995;&#38388;&#30340;&#38459;&#25239;&#19981;&#21305;&#37197;&#65288;impedance mismatch&#65289;&#38382;&#39064; <span class="&#27880;&#37322;&#32534;&#21495;">3</span>&#12290;&#34429;&#28982;&#26377;&#19968;&#20123;&#19981;&#22826;&#21327;&#35843;&#30340;&#22320;&#26041;&#65292;&#20294;&#20004;&#32773;&#20043;&#38388;&#36824;&#26159;&#21487;&#20197;&#30456;&#20114;&#34701;&#21512;&#30340;&#65292;&#34920; 7-1 &#31616;&#21333;&#36827;&#34892;&#20102;&#19968;&#20123;&#23545;&#27604;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">3</span>&#35814;&#32454;&#30340;&#20869;&#23481;&#21487;&#20197;&#22312;&#32500;&#22522;&#30334;&#31185;&#19978;&#26597;&#30475;&#65288;Object-relational impedance mismatch&#65289;&#12290;</p><p><strong>&#34920; 7-1&#12288;&#38754;&#21521;&#23545;&#35937;&#19982;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#30340;&#31616;&#21333;&#23545;&#27604;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#23545;&#27604;&#32500;&#24230;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#38754;&#21521;&#23545;&#35937;&#27010;&#24565;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#31890;&#24230;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25509;&#21475;&#12289;&#31867;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#34920;&#12289;&#35270;&#22270;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#32487;&#25215;&#19982;&#22810;&#24577;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26377;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#27809;&#26377;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#21807;&#19968;&#24615;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>a == b</code> &#25110; <code>a.equals(b)</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20027;&#38190;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20851;&#32852;&#20851;&#31995;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24341;&#29992;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#22806;&#38190;</p></td>
</tr>
</tbody>
</table><p>Hibernate &#19981;&#20165;&#23558; Java &#23545;&#35937;&#19982;&#25968;&#25454;&#34920;&#20114;&#30456;&#26144;&#23556;&#36215;&#26469;&#65292;&#36824;&#24314;&#31435;&#20102; Java &#25968;&#25454;&#31867;&#22411;&#21040; SQL &#25968;&#25454;&#31867;&#22411;&#30340;&#26144;&#23556;&#65292;&#25552;&#20379;&#20102;&#25968;&#25454;&#26597;&#35810;&#19982;&#25805;&#20316;&#30340;&#33021;&#21147;&#65292;&#33021;&#22815;&#33258;&#21160;&#26681;&#25454;&#25805;&#20316;&#26469;&#29983;&#25104; SQL &#35843;&#29992;&#12290;&#23427;&#23558;&#24320;&#21457;&#32773;&#20174;&#22823;&#37327;&#32321;&#29712;&#30340;&#25968;&#25454;&#23618;&#25805;&#20316;&#20013;&#37322;&#25918;&#20102;&#20986;&#26469;&#65292;&#25552;&#21319;&#20102;&#22823;&#23478;&#30340;&#24320;&#21457;&#25928;&#29575;&#12290;</p><p>&#35828;&#21040; Hibernate &#30340;&#21382;&#21490;&#65292;&#36824;&#24471;&#36861;&#28335;&#21040; 2001 &#24180;&#12290;&#24403;&#26102;&#24320;&#21457; Java EE&#65288;&#37027;&#26102;&#36824;&#21483; J2EE&#65289;&#24212;&#29992;&#31243;&#24207;&#38656;&#35201;&#20351;&#29992; EJB&#65292;&#32780;&#28595;&#22823;&#21033;&#20122;&#31243;&#24207;&#21592; Gavin King &#23545; EJB &#20013;&#30340;&#23454;&#20307; Bean &#24182;&#26080;&#22909;&#24863;&#65292;&#20110;&#26159;&#20182;&#22312; 2001 &#24180;&#24320;&#21457;&#20102; Hibernate &#30340;&#31532;&#19968;&#20010;&#29256;&#26412;&#12290;&#21518;&#26469;&#38543;&#30528; Spring Framework &#21019;&#22987;&#20154; Rod Johnson &#30340;&#37027;&#26412; <em>Expert One-on- One J2EE Development without EJB</em> &#30340;&#20986;&#29256;&#65292;&#20316;&#20026;&#36731;&#37327;&#32423;&#26694;&#26550;&#20195;&#34920;&#20043;&#19968;&#30340; Hibernate &#20063;&#36880;&#27493;&#24471;&#21040;&#20102;&#22823;&#23478;&#30340;&#35748;&#21487;&#12290;</p><p>2006 &#24180;&#65292;Java &#30340;&#25345;&#20037;&#21270;&#26631;&#20934; JPA&#65288;Java Persistent API&#65292;Java &#25345;&#20037;&#21270; API&#65289;&#27491;&#24335;&#21457;&#24067;&#12290;&#23427;&#30340;&#30446;&#26631;&#23601;&#26159;&#23631;&#34109;&#19981;&#21516;&#25345;&#20037;&#21270; API &#20043;&#38388;&#30340;&#24046;&#24322;&#65292;&#31616;&#21270;&#25345;&#20037;&#21270;&#20195;&#30721;&#30340;&#24320;&#21457;&#24037;&#20316;&#12290;&#24403;&#26102;&#30340; JPA &#26631;&#20934;&#22522;&#26412;&#23601;&#26159;&#20197; Hibernate &#20316;&#20026;&#34013;&#26412;&#26469;&#21046;&#23450;&#30340;&#65292;&#32780; Gavin King &#20063;&#24403;&#20161;&#19981;&#35753;&#22320;&#22312;&#36825;&#20010;&#35268;&#33539;&#30340;&#19987;&#23478;&#32452;&#20013;&#12290;Hibernate &#20174; 3.2 &#29256;&#26412;&#24320;&#22987;&#20860;&#23481; JPA&#12290;2010 &#24180;&#65292;Hibernate 3.5 &#25104;&#20026;&#20102; JPA 2.0 &#30340;&#35748;&#35777;&#23454;&#29616;&#12290;&#34920; 7-2 &#23545; Hibernate &#19982; JPA &#30340;&#25509;&#21475;&#20570;&#20102;&#19968;&#20010;&#27604;&#36739;&#12290;</p><p><strong>&#34920; 7-2&#12288;Hibernate &#19982; JPA &#25509;&#21475;&#30340;&#23545;&#24212;&#20851;&#31995;&#19982;&#23454;&#29616;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">JPA &#25509;&#21475;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">Hibernate &#25509;&#21475;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#23454;&#29616;&#31867;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#20316;&#29992;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>EntityManagerFactory</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>SessionFactory</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>SessionFactoryImpl</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#31649;&#29702;&#39046;&#22495;&#27169;&#22411;&#19982;&#25968;&#25454;&#24211;&#30340;&#26144;&#23556;&#20851;&#31995;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>EntityManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Session</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>SessionImpl</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#22522;&#26412;&#30340;&#24037;&#20316;&#21333;&#20803;&#65292;&#23553;&#35013;&#20102;&#36830;&#25509;&#19982;&#20107;&#21153;&#30456;&#20851;&#30340;&#20869;&#23481;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>EntityTransaction</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Transaction</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>TransactionImpl</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#29992;&#26469;&#25277;&#35937;&#24213;&#23618;&#30340;&#20107;&#21153;&#32454;&#33410;</p></td>
</tr>
</tbody>
</table><p>&#34429;&#28982; <code>SessionFactory</code> &#25110; <code>EntityManagerFactory</code> &#30340;&#21019;&#24314;&#25104;&#26412;&#27604;&#36739;&#39640;&#65292;&#22909;&#22312;&#23427;&#20204;&#26159;&#32447;&#31243;&#23433;&#20840;&#30340;&#12290;&#19968;&#33324;&#24212;&#29992;&#31243;&#24207;&#20013;&#21482;&#26377;&#19968;&#20010;&#23454;&#20363;&#65292;&#32780;&#19988;&#20250;&#22312;&#31243;&#24207;&#20013;&#20849;&#20139;&#12290;</p><p>Spring Framework &#23545; Hibernate &#25552;&#20379;&#20102;&#27604;&#36739;&#22909;&#30340;&#25903;&#25345;&#65292;&#21518;&#26469;&#26377;&#20102; Spring Data JPA &#39033;&#30446;&#65292;&#26356;&#26159;&#25552;&#20379;&#20102;&#32479;&#19968;&#30340; <code>Repository</code> &#25805;&#20316;&#23553;&#35013;&#65292;&#24320;&#21457;&#32773;&#21482;&#38656;&#23450;&#20041;&#25509;&#21475;&#23601;&#33021;&#33258;&#21160;&#23454;&#29616;&#31616;&#21333;&#30340;&#25805;&#20316;&#12290;&#22312;&#21518;&#32493;&#30340;&#20869;&#23481;&#20013;&#65292;&#25105;&#20204;&#20250;&#20102;&#35299;&#21040;&#30456;&#20851;&#30340;&#20351;&#29992;&#26041;&#27861;&#12290;&#29616;&#22312;&#65292;&#31532;&#19968;&#27493;&#35201;&#20570;&#30340;&#23601;&#26159;&#22312; pom.xml &#30340; <code>&lt;dependencies/&gt;</code> &#20013;&#24341;&#20837; Hibernate &#19982; JPA &#30456;&#20851;&#30340;&#20381;&#36182;&#12290;&#36825;&#19968;&#27493;&#36890;&#36807; Spring Boot &#30340;&#36215;&#27493;&#20381;&#36182;&#23601;&#33021;&#20570;&#21040;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><h3 id="nav_point_111">7.1.2&#12288;&#23450;&#20041;&#23454;&#20307;&#23545;&#35937;</h3><p>&#22312;&#26089;&#26399;&#65292;&#24320;&#21457;&#32773;&#20204;&#37117;&#26159;&#36890;&#36807; XML &#26469;&#20570;&#21508;&#31181;&#37197;&#32622;&#30340;&#65292;&#20854;&#20013;&#20063;&#21253;&#25324; Hibernate &#30340;&#26144;&#23556;&#37197;&#32622;&#12290;&#20294;&#26102;&#33267;&#20170;&#26085;&#65292;&#22823;&#23478;&#26089;&#23601;&#20064;&#24815;&#20102;&#20351;&#29992;&#27880;&#35299;&#26469;&#36827;&#34892;&#37197;&#32622;&#65292;&#29978;&#33267;&#20250;&#8220;<strong>&#32422;&#23450;&#20248;&#20110;&#37197;&#32622;</strong>&#8221;&#65288;convention over configuration&#65289;&#65292;&#36861;&#27714;&#8220;&#38646;&#8221;&#37197;&#32622;&#12290;&#22312;&#36825;&#19968;&#33410;&#20013;&#65292;&#25105;&#20204;&#21482;&#20250;&#28041;&#21450;&#27880;&#35299;&#30340;&#37197;&#32622;&#26041;&#24335;&#65292;&#30475;&#30475;&#22914;&#20309;&#36890;&#36807; JPA &#30340;&#27880;&#35299; <span class="&#27880;&#37322;&#32534;&#21495;">4</span> &#26469;&#36827;&#34892;&#24120;&#35268;&#30340;&#37197;&#32622;&#65292;&#20854;&#20013;&#36824;&#20250;&#32467;&#21512;&#23569;&#35768; Hibernate &#30340;&#29305;&#26377;&#27880;&#35299;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">4</span>JPA &#27880;&#35299;&#37117;&#22312; <code>javax.persistence</code> &#21253;&#37324;&#12290;&#20174; Spring Framework 6.0 &#24320;&#22987;&#65292;Spring &#35201;&#20860;&#23481; Jakarta EE 9 &#23601;&#38656;&#35201;&#20351;&#29992; <code>jakarta.persistence</code> &#21253;&#37324;&#30340;&#27880;&#35299;&#20102;&#65292;&#26080;&#27861;&#38646;&#20462;&#25913;&#23454;&#29616;&#20860;&#23481;&#12290;&#26412;&#20070;&#20351;&#29992;&#30340;&#36824;&#26159; Spring Framework 5.3&#65292;&#25152;&#20197;&#23545;&#24212;&#27880;&#35299;&#20173;&#22312; <code>javax.persistence</code> &#37324;&#12290;</p><ol>
<li><p><strong>&#23454;&#20307;&#21450;&#20027;&#38190;</strong></p>
<p>&#26082;&#28982;&#26159;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#65292;&#37027;&#33258;&#28982;&#38656;&#35201;&#23450;&#20041;&#28165;&#26970;&#8220;&#23545;&#35937;&#8221;&#19982;&#8220;&#20851;&#31995;&#8221;&#20043;&#38388;&#30340;&#20851;&#31995;&#12290;&#36825;&#23618;&#20851;&#31995;&#26159;&#30001;&#23454;&#20307;&#23545;&#35937;&#21450;&#20854;&#19978;&#28155;&#21152;&#30340;&#27880;&#35299;&#26469;&#25215;&#36733;&#30340;&#65292;&#34920; 7-3 &#20013;&#23637;&#31034;&#20102;&#29992;&#26469;&#23450;&#20041;&#23454;&#20307;&#21450;&#20854;&#20027;&#38190;&#30340;&#22235;&#20010;&#27880;&#35299;&#12290;</p>
<p><strong>&#34920; 7-3&#12288;&#23450;&#20041;&#23454;&#20307;&#21450;&#20854;&#20027;&#38190;&#30340;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#27880;&#35299;</th><th>&#20316;&#29992;</th><th>&#37325;&#28857;&#23646;&#24615;&#35828;&#26126;</th></tr><tr><td><code>@Entity</code></td><td>&#26631;&#35782;&#31867;&#26159;&#23454;&#20307;&#31867;</td><td><code>name</code>&#65292;&#40664;&#35748;&#20026;&#38750;&#38480;&#23450;&#31867;&#21517;&#65292;&#29992;&#22312; HQL&#65288;Hibernate query language&#65292;Hibernate &#26597;&#35810;&#35821;&#35328;&#65289;&#26597;&#35810;&#20013;&#26631;&#35782;&#23454;&#20307;</td></tr><tr><td><code>@Table</code></td><td>&#25351;&#23450;&#23454;&#20307;&#23545;&#24212;&#30340;&#25968;&#25454;&#34920;&#65292;&#19981;&#21152;&#30340;&#35805;&#40664;&#35748;&#23558;&#31867;&#21517;&#20316;&#20026;&#34920;&#21517;</td><td><code>name</code>&#65292;&#40664;&#35748;&#26159;&#23454;&#20307;&#21517;&#65307;<code>schema</code>&#65292;&#40664;&#35748;&#26159;&#29992;&#25143;&#30340;&#40664;&#35748; Schema</td></tr><tr><td><code>@Id</code></td><td>&#25351;&#23450;&#23383;&#27573;&#26159;&#23454;&#20307;&#30340;&#20027;&#38190;</td><td></td></tr><tr><td><code>@GeneratedValue</code></td><td>&#25351;&#23450;&#20027;&#38190;&#30340;&#29983;&#25104;&#31574;&#30053;</td><td><code>strategy</code>&#65292;&#25351;&#23450;&#29983;&#25104;&#31574;&#30053;&#65292;&#20849;&#26377;&#22235;&#31181;&#31574;&#30053;&#8212;<code>TABLE</code>&#12289;<code>SEQUENCE</code>&#12289;<code>IDENTITY</code> &#21644; <code>AUTO</code>&#65307;<code>generator</code>&#65292;&#25351;&#23450;&#29983;&#25104;&#22120;&#65292;&#29992;&#20110; <code>TABLE</code> &#21644; <code>SEQUENCE</code> &#36825;&#20004;&#31181;&#31574;&#30053;&#20013;</td></tr></table>
<p>&#25105;&#20204;&#21487;&#20197;&#23558;&#20043;&#21069;&#30340; <code>MenuItem</code> &#31867;&#31245;&#20316;&#20462;&#25913;&#65292;&#29992; JPA &#27880;&#35299;&#26469;&#36827;&#34892;&#26631;&#27880;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 7-1<span class="&#27880;&#37322;&#32534;&#21495;">5</span> &#25152;&#31034;&#12290;&#31867;&#19978;&#20849;&#26377;&#20845;&#20010;&#27880;&#35299; <span class="&#27880;&#37322;&#32534;&#21495;">6</span>&#65292;&#21069;&#22235;&#20010;&#27880;&#35299;&#37117;&#26159; Lombok &#30340;&#65292;&#29992;&#26469;&#20943;&#23569;&#27169;&#26495;&#21270;&#30340;&#20195;&#30721;&#65292;&#20026;&#31867;&#22686;&#21152;&#26500;&#24314;&#22120;&#12289;&#26500;&#36896;&#26041;&#27861;&#12289;<code>Getter</code> &#19982; <code>Setter</code> &#31561;&#26041;&#27861;&#65307;<code>@Entity</code> &#35828;&#26126;&#36825;&#26159;&#19968;&#20010;&#23454;&#20307;&#31867;&#65307;<code>@Table</code> &#25351;&#23450;&#35813;&#23454;&#20307;&#31867;&#23545;&#24212;&#30340;&#25968;&#25454;&#34920;&#26159; <code>t_menu</code>&#12290;<code>id</code> &#19978;&#30340;&#27880;&#35299;&#34920;&#26126;&#20102;&#23427;&#26159;&#34920;&#30340;&#20027;&#38190;&#65292;&#24182;&#19988;&#26159;&#33258;&#21160;&#29983;&#25104;&#20027;&#38190;&#20540;&#30340;&#8212;&#8212;&#36890;&#24120;&#20687; MySQL &#36825;&#26679;&#30340;&#25968;&#25454;&#24211;&#25105;&#20204;&#37117;&#20250;&#23450;&#20041;&#19968;&#20010;&#33258;&#22686;&#20027;&#38190;&#65292;&#40664;&#35748;&#31574;&#30053;&#23601;&#26159; <code>IDENTITY</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-1</strong>&#12288;&#22686;&#21152;&#20102; JPA &#27880;&#35299;&#30340; <code>MenuItem</code> &#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "t_menu")
public class MenuItem {
    @Id
    @GeneratedValue
    private Long id;
    // &#20197;&#19979;&#30465;&#30053;
}</code></pre>
<p>&#38500;&#20102;&#33258;&#22686;&#20027;&#38190;&#65292;&#36824;&#21487;&#20197;&#29992; <code>@SequenceGenerator</code> &#21644; <code>@TableGenerator</code> &#26469;&#25351;&#23450;&#22522;&#20110;&#24207;&#21015;&#21644;&#34920;&#29983;&#25104;&#20027;&#38190;&#12290;&#20197; <code>@SequenceGenerator</code> &#20026;&#20363;&#65292;&#20551;&#35774;&#25105;&#20204;&#26377;&#20010;&#24207;&#21015; <code>seq_menu</code>&#65292;&#19978;&#38754;&#30340; <code>MenuItem</code> &#21487;&#20197;&#35843;&#25972;&#25104;&#20195;&#30721;&#31034;&#20363; 7-2 &#36825;&#26679;&#12290;&#33267;&#20110; <code>@TableGenerator</code>&#65292;&#23601;&#30041;&#32473;&#22823;&#23478;&#26597;&#38405;&#25991;&#26723;&#21435;&#20102;&#35299;&#21543;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-2</strong>&#12288;&#26681;&#25454;&#27880;&#35299;&#29983;&#25104;&#20027;&#38190;&#30340; <code>MenuItem</code> &#31867;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "t_menu")
public class MenuItem {
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequence-generator")
    @SequenceGenerator(name = "sequence-generator", sequenceName = "seq_menu")
    private Long id;
    // &#20197;&#19979;&#30465;&#30053;
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#23383;&#27573;</strong></p>
<p>&#22312;&#23450;&#20041;&#23436;&#23454;&#20307;&#21644;&#20027;&#38190;&#21518;&#65292;&#23601;&#35813;&#36718;&#21040;&#21508;&#20010;&#23383;&#27573;&#20102;&#12290;&#34920; 7-4 &#32599;&#21015;&#20102;&#19968;&#20123;&#23383;&#27573;&#30456;&#20851;&#30340;&#24120;&#29992;&#27880;&#35299;&#12290;</p>
<p><strong>&#34920; 7-4&#12288;&#19968;&#20123;&#23383;&#27573;&#30456;&#20851;&#30340;&#24120;&#29992;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#27880;&#35299;</th><th>&#20316;&#29992;</th><th>&#37325;&#28857;&#23646;&#24615;&#35828;&#26126;</th></tr><tr><td><code>@Basic</code></td><td>&#26144;&#23556;&#31616;&#21333;&#31867;&#22411;&#65292;&#20363;&#22914; Java &#21407;&#23376;&#31867;&#22411;&#21450;&#20854;&#23553;&#35013;&#31867;&#12289;&#26085;&#26399;&#26102;&#38388;&#31867;&#22411;&#31561;&#65292;&#19968;&#33324;&#19981;&#29992;&#28155;&#21152;&#35813;&#27880;&#35299;&#65292;&#40664;&#35748;&#23601;&#26377;&#21516;&#26679;&#30340;&#25928;&#26524;</td><td></td></tr><tr><td><code>@Column</code></td><td>&#25551;&#36848;&#23383;&#27573;&#20449;&#24687;</td><td><code>name</code>&#65292;&#23383;&#27573;&#21517;&#31216;&#65292;&#40664;&#35748;&#21516;&#23646;&#24615;&#21517;&#65307;<code>unique</code> &#26159;&#21542;&#21807;&#19968;&#65307;<code>nullable</code> &#26159;&#21542;&#21487;&#20026; <code>null</code>&#65307;<code>insertable</code> &#26159;&#21542;&#20986;&#29616;&#22312; <code>INSERT</code> &#35821;&#21477;&#20013;&#65307;<code>updatable</code> &#26159;&#21542;&#20986;&#29616;&#22312; <code>UPDATE</code> &#35821;&#21477;&#20013;</td></tr><tr><td><code>@Enumerated</code></td><td>&#26144;&#23556;&#26522;&#20030;&#31867;&#22411;</td><td><code>value</code>&#65292;&#26144;&#23556;&#26041;&#24335;&#65292;&#40664;&#35748;&#26159; <code>ORDINAL</code>&#65292;&#20351;&#29992;&#26522;&#20030;&#30340;&#24207;&#21495;&#65292;&#20063;&#21487;&#20197;&#29992; <code>STRING</code>&#65292;&#20351;&#29992;&#26522;&#20030;&#20540;</td></tr><tr><td><code>@Type</code></td><td>&#23450;&#20041; Hibernate &#30340;&#31867;&#22411;&#26144;&#23556;&#65292;&#36825;&#26159; Hibernate &#30340;&#27880;&#35299;</td><td><code>type</code>&#65292;Hibernate &#31867;&#22411;&#23454;&#29616;&#30340;&#20840;&#38480;&#23450;&#31867;&#21517;&#65307;<code>parameters</code>&#65292;&#31867;&#22411;&#25152;&#38656;&#30340;&#21442;&#25968;</td></tr><tr><td><code>@Temporal</code></td><td>&#26144;&#23556;&#26085;&#26399;&#19982;&#26102;&#38388;&#31867;&#22411;&#65292;&#36866;&#29992;&#20110; <code>java.util.Date</code> &#21644; <code>java.util.Calendar</code></td><td><code>value</code>&#65292;&#35201;&#26144;&#23556;&#30340;&#20869;&#23481;&#65292;<code>DATE</code> &#23545;&#24212; <code>java.sql.Date</code>&#65292;<code>TIME</code> &#23545;&#24212; <code>java.sql.Time</code>&#65292;<code>TIMESTAMP</code> &#23545;&#24212; <code>java.sql.Timestamp</code></td></tr><tr><td><code>@CreationTimestamp</code></td><td>&#25554;&#20837;&#26102;&#20256;&#20837;&#24403;&#21069;&#26102;&#38388;&#65292;&#36825;&#26159; Hibernate &#30340;&#27880;&#35299;</td><td></td></tr><tr><td><code>@UpdateTimestamp</code></td><td>&#26356;&#26032;&#26102;&#20256;&#20837;&#24403;&#21069;&#26102;&#38388;&#65292;&#36825;&#26159; Hibernate &#30340;&#27880;&#35299;</td><td></td></tr></table>
<p>&#22312;&#20102;&#35299;&#20102;&#26144;&#23556;&#23383;&#27573;&#20449;&#24687;&#30340;&#27880;&#35299;&#21518;&#65292;&#25105;&#20204;&#20877;&#23545; <code>MenuItem</code> &#31867;&#20570;&#36827;&#19968;&#27493;&#30340;&#35843;&#25972;&#65292;&#20855;&#20307;&#25913;&#21160;&#21518;&#30340;&#24773;&#20917;&#22914;&#20195;&#30721;&#31034;&#20363; 7-3 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-3</strong>&#12288;&#26032;&#22686;&#30340;&#26479;&#22411; <code>Size</code> &#26522;&#20030;&#19982;&#20462;&#25913;&#21518;&#30340; <code>MenuItem</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public enum Size {
    SMALL, MEDIUM, LARGE
}

@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "t_menu")
public class MenuItem {
    @Id
    @GeneratedValue
    private Long id;
    private String name;

    @Enumerated(EnumType.STRING)
    private Size size;

    @Type(type = "org.jadira.usertype.moneyandcurrency.joda.PersistentMoneyMinorAmount",
            parameters = {@org.hibernate.annotations.Parameter(name = "currencyCode", value = "CNY")})
    private Money price;

    @Column(updatable = false)
    @Temporal(TemporalType.TIMESTAMP)
    @CreationTimestamp
    private Date createTime;

    @Temporal(TemporalType.TIMESTAMP)
    @UpdateTimestamp
    private Date updateTime;
}</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#26377;&#20960;&#22788;&#20855;&#20307;&#30340;&#21464;&#21160;&#12290;</p>
<p>(1) <code>size</code> &#20174; <code>String</code> &#31867;&#22411;&#25913;&#20026;&#20102;&#26522;&#20030;&#12290;&#36890;&#36807; <code>@Enumerated(EnumType.STRING)</code> &#25351;&#26126;&#29992;&#26522;&#20030;&#20540;&#26469;&#20570;&#26144;&#23556;&#65292;&#20063;&#23601;&#26159;&#35828;&#25968;&#25454;&#24211;&#37324;&#30340;&#20540;&#20250;&#26159; <code>SMALL</code>&#12289;<code>MEDIUM</code> &#21644; <code>LARGE</code>&#12290;</p>
<p>(2) <code>price</code> &#20174; <code>BigDecimal</code> &#25442;&#25104;&#20102; Joda-Money &#24211; <span class="&#27880;&#37322;&#32534;&#21495;">7</span> &#20013;&#30340; <code>Money</code> &#31867;&#22411;&#12290;&#36890;&#36807; <code>@Type</code> &#22768;&#26126;&#20102;&#22914;&#20309;&#23558;&#25968;&#25454;&#24211;&#20013; <code>Long</code> &#31867;&#22411;&#30340;&#20540;&#36716;&#25442;&#20026; <code>Money</code>&#65292;&#36825;&#37324;&#29992;&#21040;&#20102;&#19968;&#20010;&#24320;&#28304;&#30340;&#36716;&#25442;&#31867;&#65292;&#22914;&#26524;&#25968;&#25454;&#24211;&#37324;&#23384;&#30340;&#26159;&#23567;&#25968;&#31867;&#22411;&#65292;&#21487;&#20197;&#32771;&#34385;&#25226; <code>PersistentMoneyMinorAmount</code> &#26367;&#25442;&#20026; <code>PersistentMoneyAmount</code>&#12290;</p>
<p>(3) <code>createTime</code> &#26631;&#35760;&#20026;&#19981;&#21487;&#20462;&#25913;&#30340;&#65292;&#22312;&#21019;&#24314;&#26102;&#20250;&#22635;&#20837;&#24403;&#21069;&#26102;&#38388;&#25139;&#12290;<code>@CreationTimestamp</code> &#26159; Hibernate &#30340;&#27880;&#35299;&#65292;&#22312;&#27492;&#22788; <code>@Temporal(TemporalType.TIMESTAMP)</code> &#20854;&#23454;&#26159;&#21487;&#20197;&#30465;&#30053;&#30340;&#12290;</p>
<p>(4) <code>updateTime</code> &#20250;&#22312;&#27599;&#27425;&#20462;&#25913;&#26102;&#22635;&#20837;&#24403;&#21069;&#26102;&#38388;&#25139;&#12290;<code>@UpdateTimestamp</code> &#26159; Hibernate &#30340;&#27880;&#35299;&#65292;&#22312;&#27492;&#22788; <code>@Temporal(TemporalType.TIMESTAMP)</code> &#20063;&#26159;&#21487;&#20197;&#30465;&#30053;&#30340;&#12290;</p>
<p>&#20851;&#20110; Joda-Money &#21644;&#23545;&#24212;&#30340; Hibernate &#31867;&#22411; <code>PersistentMoneyMinorAmount</code>&#65292;&#20004;&#32773;&#22343;&#38656;&#35201;&#22312; pom.xml &#20013;&#21152;&#20837;&#19979;&#38754;&#20004;&#20010;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.joda&lt;/groupId&gt;
    &lt;artifactId&gt;joda-money&lt;/artifactId&gt;
    &lt;version&gt;1.0.1&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.jadira.usertype&lt;/groupId&gt;
    &lt;artifactId&gt;usertype.core&lt;/artifactId&gt;
    &lt;version&gt;6.0.1.GA&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p><code>usertype.core</code> &#37324;&#36824;&#26377;&#19981;&#23569;&#20854;&#20182;&#26377;&#29992;&#30340;&#31867;&#65292;&#23454;&#29992;&#24615;&#38750;&#24120;&#24378;&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#20026;&#20160;&#20040;&#19968;&#23450;&#35201;&#29992; <code>Money</code> &#31867;&#26469;&#34920;&#31034;&#37329;&#39069;</strong></p>
<p>&#22312;&#22788;&#29702;&#37329;&#39069;&#26102;&#65292;&#21315;&#19975;&#19981;&#35201;&#24819;&#24403;&#28982;&#22320;&#20351;&#29992; <code>float</code> &#25110;&#32773; <code>double</code> &#31867;&#22411;&#12290;&#21407;&#22240;&#26159;&#22312;&#36935;&#21040;&#28014;&#28857;&#25968;&#36816;&#31639;&#26102;&#65292;&#31934;&#24230;&#30340;&#20002;&#22833;&#21487;&#33021;&#24102;&#26469;&#24040;&#22823;&#30340;&#24046;&#24322;&#65292;&#29978;&#33267;&#20250;&#36896;&#25104;&#36164;&#37329;&#25439;&#22833;&#12290;&#34429;&#28982; <code>BigDecimal</code> &#22312;&#35745;&#31639;&#26102;&#33021;&#39034;&#21033;&#36807;&#20851;&#65292;&#20294;&#37329;&#39069;&#30340;&#20869;&#23481;&#21364;&#19981;&#27490;&#26159;&#19968;&#20010;&#25968;&#20540;&#65292;&#36824;&#26377;&#19982;&#20043;&#20851;&#32852;&#30340;&#24065;&#31181;&#65288;ISO-4217&#65289;&#12289;&#21333;&#20301;&#31561;&#20869;&#23481;&#12290;</p>
<p>&#20197;&#20154;&#27665;&#24065;&#20026;&#20363;&#65292;&#26631;&#20934;&#30340;&#24065;&#31181;&#31616;&#20889;&#26159; CNY&#65292;&#26368;&#23567;&#21333;&#20301;&#65288;&#20195;&#30721;&#20013;&#29992; <code>Minor</code> &#34920;&#31034;&#65289;&#26159;&#20998;&#65292;&#20027;&#35201;&#21333;&#20301;&#65288;&#20195;&#30721;&#20013;&#29992; <code>Major</code> &#34920;&#31034;&#65289;&#26159;&#20803;&#12290;&#32654;&#20803;&#12289;&#27431;&#20803;&#12289;&#26085;&#20803;&#31561;&#36135;&#24065;&#37117;&#26377;&#21508;&#33258;&#30340;&#35268;&#33539;&#12290;&#22312;&#19981;&#21516;&#30340;&#36135;&#24065;&#20043;&#38388;&#65292;&#36824;&#26377;&#36135;&#24065;&#36716;&#25442;&#30340;&#38656;&#27714;&#12290;&#25152;&#20197;&#35828;&#65292;&#25105;&#20204;&#38656;&#35201;&#19968;&#20010;&#19987;&#38376;&#29992;&#26469;&#34920;&#31034;&#37329;&#39069;&#30340;&#31867;&#65292;&#32780; Joda-Money &#23601;&#26159;&#19968;&#20010;&#22909;&#30340;&#36873;&#25321;&#12290;&#20030;&#20010;&#20363;&#23376;&#65292;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807; <code>Money.ofMinor(CurrencyUnit.of("CNY"), 1234)</code>&#65292;&#21019;&#24314;&#20195;&#34920;&#20154;&#27665;&#24065; 12.34 &#20803;&#30340;&#23545;&#35937;&#65292;<code>Money.of(CurrencyUnit.of("CNY"), 12.34)</code> &#19982;&#20043;&#31561;&#20215;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#20851;&#32852;&#20851;&#31995;</strong></p>
<p>&#25105;&#20204;&#22312;&#23398;&#20064;&#25968;&#25454;&#24211;&#30340;&#33539;&#24335;&#26102;&#65292;&#20026;&#20102;&#36866;&#24403;&#22320;&#38477;&#20302;&#20887;&#20313;&#65292;&#25552;&#21319;&#25805;&#20316;&#25928;&#29575;&#65292;&#20250;&#21435;&#35774;&#35745;&#19981;&#21516;&#30340;&#34920;&#20043;&#38388;&#30340;&#20851;&#31995;&#12290;&#22312;&#20570;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26102;&#65292;&#36825;&#31181;&#20851;&#31995;&#20063;&#38656;&#35201;&#20307;&#29616;&#20986;&#26469;&#12290;&#34920; 7-5 &#20013;&#32599;&#21015;&#20102;&#24120;&#29992;&#30340;&#20960;&#31181;&#20851;&#31995;&#21450;&#20854;&#23545;&#24212;&#30340;&#27880;&#35299;&#12290;</p>
<p><strong>&#34920; 7-5&#12288;&#24120;&#35265;&#20851;&#31995;&#21450;&#20854;&#23545;&#24212;&#30340;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#20851;&#31995;</th><th>&#25968;&#25454;&#24211;&#30340;&#23454;&#29616;&#26041;&#24335;</th><th>&#27880;&#35299;</th></tr><tr><td>1:1</td><td>&#22806;&#38190;</td><td><code>@OneToOne</code></td></tr><tr><td>1:<i>n</i></td><td>&#22806;&#38190;</td><td><code>@OneToMany</code>&#12289;<code>@JoinColumn</code>&#12289;<code>@OrderBy</code></td></tr><tr><td><i>n</i>:1</td><td>&#22806;&#38190;</td><td><code>@ManyToOne</code>&#12289;<code>@JoinColumn</code></td></tr><tr><td><i>n</i>:<i>n</i></td><td>&#20851;&#32852;&#34920;</td><td><code>@ManyToMany</code>&#12289;<code>@JoinTable</code>&#12289;<code>@OrderBy</code></td></tr></table>
<p>&#20026;&#20102;&#26041;&#20415;&#22823;&#23478;&#29702;&#35299;&#36825;&#20123;&#27880;&#35299;&#30340;&#29992;&#27861;&#65292;&#25105;&#20204;&#32467;&#21512;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#20363;&#23376;&#26469;&#30475;&#30475;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#22312;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#20013;&#65292;&#25105;&#20204;&#20250;&#23558;&#39038;&#23458;&#28857;&#21333;&#30340;&#20449;&#24687;&#35760;&#24405;&#22312;&#35746;&#21333;&#65288;&#21363; <code>Order</code>&#65289;&#37324;&#12290;&#24215;&#20869;&#20027;&#35201;&#27969;&#36716;&#30340;&#20449;&#24687;&#23601;&#26159;&#35746;&#21333;&#65292;&#25105;&#20204;&#36890;&#36807;&#35746;&#21333;&#26469;&#39537;&#21160;&#21518;&#32493;&#30340;&#24037;&#20316;&#12290;&#19968;&#20010;&#35746;&#21333;&#20250;&#26377;&#22810;&#20010;&#26465;&#30446;&#65288;&#21363; <code>MenuItem</code>&#65289;&#65292;&#27599;&#20010;&#35746;&#21333;&#21448;&#20250;&#30001;&#19968;&#21517;&#35843;&#33590;&#24072;&#65288;&#21363; <code>TeaMaker</code>&#65289;&#36127;&#36131;&#23436;&#25104;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">8</span> &#23427;&#20204;&#20043;&#38388;&#30340;&#20851;&#31995;&#22914;&#22270; 7-1 &#25152;&#31034;&#65292;&#35746;&#21333;&#19982;&#35843;&#33590;&#24072;&#26159;&#22810;&#23545;&#19968;&#20851;&#31995;&#65292;&#32780;&#35746;&#21333;&#19982;&#26465;&#30446;&#26159;&#22810;&#23545;&#22810;&#20851;&#31995;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00766.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 7-1&#12288;&#35746;&#21333;&#31867;&#19982;&#20854;&#20182;&#31867;&#30340;&#20027;&#35201;&#20851;&#32852;&#20851;&#31995;</strong></p>
</blockquote>
<p>&#20854;&#20013;&#65292;<code>TeaMaker</code> &#31867;&#30340;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 7-4 &#25152;&#31034;&#65292;&#22823;&#37096;&#20998;&#20869;&#23481;&#19982; <code>MenuItem</code> &#22823;&#21516;&#23567;&#24322;&#65292;&#20294;&#20854;&#20013;&#26377;&#19968;&#20010;&#19968;&#23545;&#22810;&#20851;&#31995;&#30340; <code>orders</code> &#23646;&#24615;&#38656;&#35201;&#29305;&#21035;&#35828;&#26126;&#19968;&#19979;&#12290;<code>orders</code> &#23646;&#24615;&#21487;&#20197;&#30452;&#25509;&#33719;&#21462;&#19982;&#24403;&#21069;&#35843;&#33590;&#24072;&#20851;&#32852;&#30340;&#35746;&#21333;&#21015;&#34920;&#12290;<code>@OneToMany</code> &#30340;&#33719;&#21462;&#26041;&#24335;&#40664;&#35748;&#26159;&#25042;&#21152;&#36733;&#65292;&#21363;&#22312;&#20351;&#29992;&#26102;&#25165;&#20250;&#21152;&#36733;&#65292;<code>mappedBy</code> &#26631;&#26126;&#20102;&#26681;&#25454; <code>Order.maker</code> &#23646;&#24615;&#26469;&#36827;&#34892;&#26144;&#23556;&#12290;<code>@OrderBy</code> &#20250;&#23545;&#21462;&#24471;&#30340;&#32467;&#26524;&#36827;&#34892;&#25490;&#24207;&#65292;&#40664;&#35748;&#25353;&#20027;&#38190;&#25490;&#24207;&#65292;&#20063;&#21487;&#20197;&#25351;&#23450;&#22810;&#20010;&#23383;&#27573;&#65292;&#29992;&#36887;&#21495;&#20998;&#38548;&#65292;&#40664;&#35748;&#26159;&#21319;&#24207;&#65288;&#21363; <code>asc</code>&#65289;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-4</strong>&#12288;<code>TeaMaker</code> &#30340;&#20027;&#35201;&#20195;&#30721;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Builder
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "t_tea_maker")
public class TeaMaker {
    @Id
    @GeneratedValue
    private Long id;
    private String name;

    @OneToMany(mappedBy = "maker")
    @OrderBy("id desc")
    private List&lt;Order&gt; orders = new ArrayList&lt;&gt;();

    @Column(updatable = false)
    @CreationTimestamp
    private Date createTime;

    @UpdateTimestamp
    private Date updateTime;
}</code></pre>
<p>&#25509;&#30528;&#65292;&#35753;&#25105;&#20204;&#26469;&#23450;&#20041;&#35746;&#21333;&#23545;&#35937;&#12290;&#27599;&#31508;&#35746;&#21333;&#37117;&#26377;&#33258;&#24049;&#30340;&#29366;&#24577;&#65292;&#22240;&#27492;&#35201;&#20808;&#23450;&#20041;&#19968;&#20010;&#26522;&#20030;&#26469;&#34920;&#31034;&#35746;&#21333;&#30340;&#29366;&#24577;&#26426;&#12290;<code>OrderStatus</code> &#20013;&#26377;&#20116;&#31181;&#29366;&#24577;&#65292;&#20998;&#21035;&#26159;&#24050;&#19979;&#21333;&#12289;&#24050;&#25903;&#20184;&#12289;&#21046;&#20316;&#20013;&#12289;&#24050;&#23436;&#25104;&#21644;&#24050;&#21462;&#36135;&#65292;&#23454;&#38469;&#24773;&#20917;&#20013;&#21487;&#33021;&#36824;&#26377;&#36864;&#27454;&#12289;&#21462;&#28040;&#31561;&#29366;&#24577;&#65292;&#22312;&#26412;&#20363;&#20013;&#23601;&#19968;&#20999;&#20174;&#31616;&#20102;&#12290;&#35746;&#21333;&#21450;&#20854;&#26522;&#20030;&#30340;&#23450;&#20041;&#22914;&#20195;&#30721;&#31034;&#20363; 7-5 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-5</strong>&#12288;&#35746;&#21333;&#23545;&#35937;&#21450;&#35746;&#21333;&#29366;&#24577;&#26522;&#20030;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public enum OrderStatus {
    ORDERED, PAID, MAKING, FINISHED, TAKEN;
}

@Builder
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "t_order")
public class Order {
    @Id
    @GeneratedValue
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "maker_id")
    private TeaMaker maker;

    @ManyToMany
    @JoinTable(name = "t_order_item", joinColumns = @JoinColumn(name = "item_id"),
            inverseJoinColumns = @JoinColumn(name = "order_id"))
    @OrderBy
    private List&lt;MenuItem&gt; items;

    @Embedded
    private Amount amount;

    @Enumerated
    private OrderStatus status;

    @Column(updatable = false)
    @CreationTimestamp
    private Date createTime;

    @UpdateTimestamp
    private Date updateTime;
}</code></pre>
<p><code>maker</code> &#25351;&#21521;&#20102;&#35746;&#21333;&#30340;&#35843;&#33590;&#24072;&#65292;&#36890;&#36807; <code>@ManyToOne</code> &#25351;&#23450;&#20102;&#22810;&#23545;&#19968;&#30340;&#20851;&#31995;&#65292;&#36825;&#37324;&#30340; <code>fetch</code> &#40664;&#35748;&#26159;&#31215;&#26497;&#21152;&#36733;&#65288;<code>EAGER</code>&#65289;&#30340;&#65292;&#25105;&#20204;&#23558;&#20854;&#35774;&#23450;&#20026;&#20102;&#25042;&#21152;&#36733;&#65288;<code>LAZY</code>&#65289;&#12290;<code>@JoinColumn</code> &#26631;&#26126;&#20102;&#25968;&#25454;&#34920;&#20013;&#35760;&#24405;&#26144;&#23556;&#20851;&#31995;&#30340;&#23383;&#27573;&#21517;&#31216;&#12290;<code>items</code> &#26159;&#35746;&#21333;&#20013;&#30340;&#20855;&#20307;&#20869;&#23481;&#65292;&#19982; <code>MenuItem</code> &#26159;&#22810;&#23545;&#22810;&#20851;&#31995;&#65292;&#20108;&#32773;&#36890;&#36807;&#20851;&#32852;&#34920; <code>t_order_item</code> &#36827;&#34892;&#20851;&#32852;&#65292;&#25105;&#20204;&#25351;&#23450;&#20102;&#34920;&#20013;&#29992;&#21040;&#30340;&#20855;&#20307;&#23383;&#27573;&#65292;&#36824;&#35201;&#27714;&#23545; <code>List</code> &#36827;&#34892;&#25490;&#24207;&#12290;</p>
<blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;Lombok &#30340; <code>@Data</code> &#27880;&#35299;&#30456;&#24403;&#20110;&#28155;&#21152;&#20102;&#22909;&#22810;&#27880;&#35299;&#12290;&#20854;&#20013;&#20043;&#19968;&#26159; <code>@ToString</code> &#27880;&#35299;&#65292;&#21363;&#25552;&#20379;&#20102;&#26356;&#21487;&#35835;&#30340; <code>toString()</code> &#26041;&#27861;&#65292;&#36755;&#20986;&#30340;&#20869;&#23481;&#20250;&#21253;&#21547;&#25104;&#21592;&#21464;&#37327;&#30340;&#20869;&#23481;&#12290;&#20026;&#20102;&#36991;&#20813; <code>toString()</code> &#35302;&#21457; Hibernate &#21152;&#36733;&#37027;&#20123;&#25042;&#21152;&#36733;&#30340;&#23545;&#35937;&#65292;&#22312; <code>TeaMaker</code> &#21644; <code>Order</code> &#19978;&#23558; <code>@Data</code> &#25913;&#20026;&#20102; <code>@Getter</code> &#21644; <code>@Setter</code>&#12290;</p>
</blockquote>
<p>&#35746;&#21333;&#30340;&#37329;&#39069;&#20449;&#24687;&#34987;&#25105;&#20204;&#21093;&#31163;&#21040;&#20102;&#21333;&#29420;&#30340;&#19968;&#20010;&#23545;&#35937;&#37324;&#65292;&#27492;&#26102;&#30340; <code>amount</code> &#23601;&#26159;&#19968;&#20010;&#23884;&#22871;&#23545;&#35937;&#65292;&#29992; <code>@Embedded</code> &#26469;&#21152;&#20197;&#35828;&#26126;&#12290;&#32780;&#22312; <code>Amount</code> &#23545;&#35937;&#19978;&#20063;&#38656;&#35201;&#21152;&#19978; <code>@Embeddable</code>&#65292;&#35828;&#26126;&#23427;&#26159;&#21487;&#20197;&#34987;&#23884;&#22871;&#21040;&#20854;&#20182;&#23454;&#20307;&#20013;&#30340;&#12290;&#20855;&#20307;&#35265;&#20195;&#30721;&#31034;&#20363; 7-6&#65292;&#20854;&#20013;&#20063;&#29992;&#21040;&#20102;&#21069;&#38754;&#35828;&#21040;&#30340;&#37329;&#39069;&#31867;&#22411;&#36716;&#25442;&#22120; <code>PersistentMoneyMinorAmount</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-6</strong>&#12288;&#35746;&#21333;&#30340;&#37329;&#39069;&#20449;&#24687;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@Embeddable
public class Amount {
    @Column(name = "amount_discount")
    private int discount;

    @Column(name = "amount_total")
    @Type(type = "org.jadira.usertype.moneyandcurrency.joda.PersistentMoneyMinorAmount",
            parameters = {@org.hibernate.annotations.Parameter(name = "currencyCode", value = "CNY")})
    private Money totalAmount;

    @Column(name = "amount_pay")
    @Type(type = "org.jadira.usertype.moneyandcurrency.joda.PersistentMoneyMinorAmount",
            parameters = {@org.hibernate.annotations.Parameter(name = "currencyCode", value = "CNY")})
    private Money payAmount;
}</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;OpenSessionInView &#38382;&#39064;</strong></p>
<p>Hibernate &#30340;&#25042;&#21152;&#36733;&#26426;&#21046;&#26377;&#26102;&#23601;&#20687;&#19968;&#25226;&#21452;&#20995;&#21073;&#65292;&#34429;&#28982;&#24615;&#33021;&#26377;&#25152;&#25552;&#21319;&#65292;&#20294;&#20598;&#23572;&#20063;&#20250;&#24102;&#26469;&#20123;&#40635;&#28902;&#65292;&#27604;&#22914; OpenSessionInView &#36825;&#20010;&#38382;&#39064;&#12290;</p>
<p>&#25152;&#35859; <strong>OpenSessionInView</strong>&#65292;&#26159;&#25351; Hibernate &#22312;&#21152;&#36733;&#26102;&#24182;&#26410;&#25226;&#25968;&#25454;&#21152;&#36733;&#19978;&#26469;&#23601;&#20851;&#38381;&#20102; Session&#65292;&#22312;&#35201;&#29992;&#21040;&#36825;&#20123;&#25968;&#25454;&#26102;&#65292;Hibernate &#23601;&#20250;&#23581;&#35797;&#20351;&#29992;&#20043;&#21069;&#30340; Session&#65292;&#20294;&#27492;&#26102; Session &#24050;&#32463;&#20851;&#38381;&#65292;&#25152;&#20197;&#20250;&#23548;&#33268;&#25253;&#38169;&#12290;&#36825;&#31181;&#24773;&#20917;&#22312;&#20256;&#32479;&#30340; MVC &#32467;&#26500;&#24212;&#29992;&#20013;&#20250;&#27604;&#36739;&#24120;&#35265;&#65292;OpenSessionInView &#20013;&#30340; View &#25351;&#30340;&#23601;&#26159; MVC &#20013;&#30340;&#35270;&#22270;&#23618;&#65292;&#20063;&#23601;&#26159;&#35270;&#22270;&#23618;&#20250;&#23581;&#35797;&#21152;&#36733;&#20043;&#21069;&#34987;&#24310;&#26102;&#21152;&#36733;&#30340;&#20869;&#23481;&#65292;&#38543;&#21518;&#25253;&#38169;&#12290;</p>
<p>Spring Framework &#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#23545;&#24212;&#30340;&#35299;&#20915;&#26041;&#26696;&#65306;&#22312; web.xml &#20013;&#37197;&#32622; <code>OpenSessionInViewFilter</code>&#65292;&#25110;&#32773;&#22312; Spring &#30340; Web &#19978;&#19979;&#25991;&#20013;&#37197;&#32622; <code>OpenSessionInViewInterceptor</code>&#65292;&#20004;&#32773;&#37117;&#21487;&#20197;&#23454;&#29616;&#22312;&#35270;&#22270;&#23618;&#22788;&#29702;&#32467;&#26463;&#21518;&#25165;&#20851;&#38381; Session &#30340;&#25928;&#26524;&#12290;</p>
<p>&#22914;&#26524;&#29992;&#30340;&#26159; JPA&#65292;&#37027; Spring Framework &#20013;&#20063;&#26377;&#23545;&#24212;&#30340; <code>OpenEntityManagerInViewInterceptor</code> &#25318;&#25130;&#22120;&#21487;&#20379;&#24320;&#21457;&#32773;&#20351;&#29992;&#12290;</p>
</blockquote>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">5</span>&#26412;&#23567;&#33410;&#30340;&#31034;&#20363;&#37117;&#25918;&#22312; ch7/binarytea-hibernate &#39033;&#30446;&#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">6</span><code>@Data</code> &#30456;&#24403;&#20110;&#28155;&#21152;&#20102; <code>@Getter</code>&#12289;<code>@Setter</code>&#12289;<code>@RequiredArgsConstructor</code>&#12289;<code>@ToString</code> &#21644; <code>@EqualsAndHashCode</code> &#27880;&#35299;&#65292;&#22240;&#27492;&#25105;&#20204;&#38656;&#35201;&#39069;&#22806;&#20877;&#21152;&#19968;&#20010; <code>@NoArgsConstructor</code> &#26469;&#25552;&#20379;&#26080;&#21442;&#25968;&#30340;&#26500;&#36896;&#26041;&#27861;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">7</span>Joda Project &#25552;&#20379;&#20102;&#19981;&#23569;&#23454;&#29992;&#30340;&#24037;&#20855;&#24211;&#65292;&#27604;&#22914;&#22788;&#29702;&#36135;&#24065;&#30340; Joda-Money&#65292;&#22788;&#29702;&#26102;&#38388;&#30340; Joda-Time&#65292;&#21518;&#32773;&#25104;&#20102; JDK &#30340;&#19968;&#37096;&#20998;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">8</span>&#23454;&#38469;&#24773;&#20917;&#19979;&#65292;&#36890;&#24120;&#19968;&#20010;&#22902;&#33590;&#24215;&#26377;&#22810;&#21517;&#21592;&#24037;&#65292;&#19968;&#24352;&#35746;&#21333;&#20250;&#30001;&#22810;&#20154;&#19968;&#36215;&#21046;&#20316;&#23436;&#25104;&#12290;&#27492;&#22806;&#65292;&#30001;&#20110;&#35746;&#21333;&#37324;&#30340;&#21830;&#21697;&#20250;&#38543;&#30528;&#26102;&#38388;&#30340;&#21464;&#21270;&#32780;&#21457;&#29983;&#21464;&#21270;&#65292;&#22240;&#32780;&#20445;&#38505;&#36215;&#35265;&#65292;&#24212;&#35813;&#22312;&#35746;&#21333;&#20013;&#20445;&#23384;&#21830;&#21697;&#30340;&#24555;&#29031;&#65292;&#32780;&#19981;&#26159;&#29992;&#21830;&#21697; ID &#26469;&#20570;&#35760;&#24405;&#12290;&#20294;&#25105;&#20204;&#36825;&#37324;&#26159;&#20570;&#28436;&#31034;&#65292;&#20808;&#24573;&#30053;&#36825;&#20123;&#32454;&#33410;&#12290;</p><h3 id="nav_point_112">7.1.3&#12288;&#36890;&#36807; Hibernate API &#25805;&#20316;&#25968;&#25454;&#24211;</h3><p>&#26377;&#20102;&#23450;&#20041;&#22909;&#30340;&#23454;&#20307;&#23545;&#35937;&#21518;&#65292;&#23601;&#21487;&#20197;&#36890;&#36807;&#23545;&#24212;&#30340; API &#26469;&#25805;&#20316;&#23427;&#20204;&#65292;&#20174;&#32780;&#23454;&#29616;&#23545;&#25968;&#25454;&#24211;&#30340;&#25805;&#20316;&#12290;&#20294;&#22312;&#20351;&#29992;&#21069;&#65292;&#25105;&#20204;&#38656;&#35201;&#20808;&#22312; Spring &#19978;&#19979;&#25991;&#20013;&#20570;&#19968;&#20123;&#31616;&#21333;&#30340;&#37197;&#32622;&#12290;&#30001;&#20110; Hibernate &#20063;&#26159; JPA &#30340;&#21442;&#32771;&#23454;&#29616;&#65292;&#20004;&#32773;&#26377;&#24456;&#22810;&#37197;&#32622;&#37117;&#26159;&#30456;&#20284;&#30340;&#65292;&#22240;&#32780;&#34920; 7-6 &#23558; Hibernate &#19982; JPA &#25152;&#38656;&#30340;&#37197;&#32622;&#25918;&#21040;&#19968;&#36215;&#26469;&#23637;&#31034;&#12290;</p><p><strong>&#34920; 7-6&#12288;Hibernate &#19982; JPA &#38656;&#35201;&#37197;&#32622;&#30340;&#20869;&#23481;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#37197;&#32622;&#20869;&#23481;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">Hibernate</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">JPA</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20250;&#35805;&#24037;&#21378;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>LocalSessionFactoryBean</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>LocalEntityManagerFactoryBean</code> / <code>LocalContainerEntityManagerFactoryBean</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20107;&#21153;&#31649;&#29702;&#22120;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>HibernateTransactionManager</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>JpaTransactionManager</code></p></td>
</tr>
</tbody>
</table><p>Spring Boot &#30340; <code>HibernateJpaConfiguration</code> &#25552;&#20379;&#20102;&#19968;&#25972;&#22871;&#23436;&#25972;&#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#22914;&#26524;&#25105;&#20204;&#19981;&#24819;&#33258;&#24049;&#21160;&#25163;&#65292;&#21487;&#20197;&#25226;&#37197;&#32622;&#30340;&#24037;&#20316;&#20132;&#32473; Spring Boot&#65292;&#21482;&#38656;&#35201;&#30830;&#20445;&#26377;&#19968;&#20010;&#26126;&#30830;&#30340;&#20027; <code>DataSource</code> Bean &#21363;&#21487;&#12290;&#20195;&#30721;&#31034;&#20363; 7-7 &#28436;&#31034;&#20102;&#22914;&#20309;&#25163;&#21160;&#37197;&#32622; Hibernate &#30340;&#30456;&#20851; Bean&#65292;<code>LocalSessionFactoryBean</code> &#20013;&#35774;&#32622;&#20102;&#35201;&#25195;&#25551;&#30340;&#21253;&#36335;&#24452;&#65292;&#22312;&#36825;&#20010;&#36335;&#24452;&#20013;&#26597;&#25214;&#35201;&#26144;&#23556;&#30340;&#23454;&#20307;&#65292;&#38500;&#27492;&#20043;&#22806;&#65292;&#36824;&#35774;&#32622;&#20102;&#19968;&#20123; Hibernate &#30340;&#23646;&#24615;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>hibernate.hbm2ddl.auto</code>&#65292;&#33258;&#21160;&#26681;&#25454;&#23454;&#20307;&#31867;&#29983;&#25104; DDL &#35821;&#21477;&#24182;&#25191;&#34892;&#12290;&#19968;&#33324;&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#25968;&#25454;&#24211;&#37117;&#26159;&#30001; DBA &#26469;&#36816;&#32500;&#30340;&#65292;&#19981;&#20250;&#29992;&#31243;&#24207;&#21019;&#24314;&#34920;&#32467;&#26500;&#65292;&#20294;&#24320;&#21457;&#32773;&#22312;&#24320;&#21457;&#26102;&#20598;&#23572;&#36824;&#26159;&#20250;&#29992;&#21040;&#36825;&#20010;&#21151;&#33021;&#12290;&#22312;&#26412;&#33410;&#30340;&#28436;&#31034;&#20013;&#25105;&#20204;&#23601;&#38656;&#35201;&#38752;&#23427;&#26469;&#29983;&#25104;&#34920;&#32467;&#26500;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>hibernate.show_sql</code>&#65292;&#25171;&#21360; Hibernate &#20855;&#20307;&#25191;&#34892;&#30340; SQL &#35821;&#21477;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>hibernate.format_sql</code>&#65292;&#23545;&#35201;&#25171;&#21360;&#30340; SQL &#36827;&#34892;&#26684;&#24335;&#21270;&#12290;</li>
</ul><p>Hibernate &#26377;&#24456;&#22810;&#21487;&#20197;&#35774;&#32622;&#30340;&#23646;&#24615;&#65292;&#21508;&#20301;&#35835;&#32773;&#22914;&#26524;&#24819;&#35201;&#20102;&#35299;&#26356;&#22810;&#20869;&#23481;&#65292;&#21487;&#20197;&#26597;&#35810; Hibernate &#30340;&#23448;&#26041;&#25991;&#26723;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-7</strong>&#12288;&#25163;&#21160;&#22312;&#20027;&#31867;&#20013;&#37197;&#32622; Hibernate &#30456;&#20851; Bean</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
public class BinaryTeaApplication {

    public static void main(String[] args) {
        SpringApplication.run(BinaryTeaApplication.class, args);
    }

    @Bean
    public LocalSessionFactoryBean sessionFactory(DataSource dataSource) {
        Properties properties = new Properties();
        // &#22312;H2&#20869;&#23384;&#25968;&#25454;&#24211;&#20013;&#29983;&#25104;&#23545;&#24212;&#34920;&#32467;&#26500;
        properties.setProperty("hibernate.hbm2ddl.auto", "create-drop");
        properties.setProperty("hibernate.show_sql", "true");
        properties.setProperty("hibernate.format_sql", "true");

        LocalSessionFactoryBean factoryBean = new LocalSessionFactoryBean();
        factoryBean.setDataSource(dataSource);
        factoryBean.setHibernateProperties(properties);
        factoryBean.setPackagesToScan("learning.spring.binarytea.model");
        return factoryBean;
    }

    @Bean
    public PlatformTransactionManager transactionManager(SessionFactory sessionFactory) {
        return new HibernateTransactionManager(sessionFactory);
    }
}</code></pre><p>&#22312;&#31532; 6 &#31456;&#20013;&#65292;&#25105;&#20204;&#20171;&#32461;&#20102; Spring Framework &#20026;&#21508;&#31181;&#27169;&#26495;&#21270;&#30340;&#25805;&#20316;&#25552;&#20379;&#20102;&#27169;&#26495;&#31867;&#65292;&#20107;&#21153;&#25805;&#20316;&#26377; <code>TransactionTemplate</code>&#65292;JDBC &#25805;&#20316;&#26377; <code>JdbcTemplate</code>&#65292;&#32780; Hibernate &#25805;&#20316;&#20063;&#26377;&#19987;&#38376;&#30340; <code>HibernateTemplate</code>&#12290;&#20026;&#20102;&#26041;&#20415;&#20351;&#29992;&#65292;Spring Framework &#36824;&#26356;&#36827;&#19968;&#27493;&#25552;&#20379;&#20102;&#19968;&#20010; <code>HibernateDaoSupport</code> &#36741;&#21161;&#31867;&#12290;&#20195;&#30721;&#31034;&#20363; 7-8 &#21644;&#20195;&#30721;&#31034;&#20363; 7-9 &#28436;&#31034;&#20102;&#22914;&#20309;&#36890;&#36807; Spring Framework &#30340;&#36741;&#21161;&#31867;&#36827;&#34892;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-8</strong>&#12288;&#36890;&#36807; Hibernate &#37325;&#26032;&#23454;&#29616; <code>MenuRepository</code> &#30340;&#26597;&#35810;&#25805;&#20316;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Repository
@Transactional
public class MenuRepository extends HibernateDaoSupport {
    // &#20256;&#20837;SessionFactory
    public MenuRepository(SessionFactory sessionFactory) {
        super.setSessionFactory(sessionFactory);
    }

    public long countMenuItems() {
        // &#36825;&#37324;&#30340;&#26159;HQL&#65292;&#19981;&#26159;SQL&#35821;&#21477;
        return getSessionFactory().getCurrentSession()
                .createQuery("select count(t) from MenuItem t", Long.class).getSingleResult();
    }

    public List&lt;MenuItem&gt; queryAllItems() {
        return getHibernateTemplate().loadAll(MenuItem.class);
    }

    public MenuItem queryForItem(Long id) {
        return getHibernateTemplate().get(MenuItem.class, id);
    }
    // &#30465;&#30053;&#25554;&#20837;&#12289;&#20462;&#25913;&#12289;&#21024;&#38500;&#26041;&#27861;
}</code></pre><p>&#19978;&#38754;&#30340;&#20195;&#30721;&#28436;&#31034;&#20102;&#36890;&#36807; <code>getHibernateTemplate()</code> &#33719;&#21462; <code>HibernateTemplate</code> &#21518;&#36827;&#34892;&#30340;&#21508;&#31181;&#26597;&#35810;&#31867;&#25805;&#20316;&#65292;&#32780; <code>countMenuItems()</code> &#37324;&#21017;&#30452;&#25509;&#21487;&#20197;&#33719;&#21462; Session&#65288;&#36890;&#36807; HQL &#35821;&#21477;&#36827;&#34892;&#25805;&#20316;&#65289;&#12290;&#25105;&#20204;&#22312; <code>MenuRepository</code> &#19978;&#28155;&#21152;&#20102; <code>@Transactional</code> &#27880;&#35299;&#65292;&#24320;&#21551;&#20102;&#20107;&#21153;&#12290;&#23454;&#36341;&#20013;&#25105;&#20204;&#19968;&#33324;&#20250;&#25226;&#20107;&#21153;&#21152;&#22312; Service &#23618;&#19978;&#65292;&#36825;&#37324;&#20063;&#21482;&#26159;&#20026;&#20102;&#28436;&#31034;&#65292;&#27492;&#22806;&#65292;<code>getCurrentSession()</code> &#20063;&#38656;&#35201;&#36816;&#34892;&#22312;&#20107;&#21153;&#37324;&#12290;&#20195;&#30721;&#31034;&#20363; 7-9 &#26159; <code>MenuRepository</code> &#20013;&#30340;&#22686;&#21152;&#12289;&#20462;&#25913;&#21644;&#21024;&#38500;&#25805;&#20316;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-9</strong>&#12288;&#36890;&#36807; Hibernate &#37325;&#26032;&#23454;&#29616; <code>MenuRepository</code> &#30340;&#22686;&#21024;&#25913;&#25805;&#20316;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Repository
@Transactional
public class MenuRepository extends HibernateDaoSupport {
    public void insertItem(MenuItem item) {
        getHibernateTemplate().save(item);
    }

    public void updateItem(MenuItem item) {
        getHibernateTemplate().update(item);
    }

    public void deleteItem(Long id) {
        MenuItem item = getHibernateTemplate().get(MenuItem.class, id);
        if (item != null) {
            getHibernateTemplate().delete(item);
        }
    }
}</code></pre><p>&#20026;&#20102;&#28436;&#31034;&#36825;&#20010; <code>MenuRepository</code> &#30340;&#20351;&#29992;&#25928;&#26524;&#65292;&#25105;&#20204;&#38656;&#35201;&#19968;&#20010;&#31616;&#21333;&#30340;&#21333;&#20803;&#27979;&#35797;&#65292;&#21487;&#20197;&#23545; <code>MenuRepositoryTest</code> &#31245;&#20316;&#20462;&#25913;&#12290;&#20195;&#30721;&#31034;&#20363; 7-10 &#26159;&#23545;&#25554;&#20837;&#25805;&#20316;&#30340;&#27979;&#35797;&#12290;&#36825;&#20010;&#27979;&#35797;&#30340;&#36923;&#36753;&#22823;&#33268;&#26159;&#36825;&#26679;&#30340;&#65306;&#20808;&#36890;&#36807; <code>MenuRepository</code> &#26469;&#36827;&#34892;&#25805;&#20316;&#65292;&#38543;&#21518;&#20877;&#29992; <code>JdbcTemplate</code> &#25191;&#34892; SQL &#35821;&#21477;&#26469;&#39564;&#35777;&#25191;&#34892;&#30340;&#25928;&#26524;&#12290;<code>testInsertItem()</code> &#20808;&#25554;&#20837;&#20102; 3 &#26465;&#35760;&#24405;&#65292;&#36890;&#36807; Lombok &#29983;&#25104;&#30340; <code>Builder</code> &#26469;&#21019;&#24314; <code>MenuItem</code>&#12290;&#22312;&#35774;&#32622; <code>price</code> &#26102;&#65292;&#25105;&#20204;&#28436;&#31034;&#20102;&#22914;&#20309;&#21019;&#24314;&#20195;&#34920;&#20154;&#27665;&#24065; 12 &#20803;&#30340; <code>Money</code> &#23545;&#35937;&#12290;&#26126;&#32454;&#26680;&#23545;&#30340;&#26041;&#27861;&#34987;&#21333;&#29420;&#25918;&#22312;&#20102; <code>assertItem()</code> &#37324;&#65292;&#20197;&#20415;&#21518;&#38754;&#30340;&#29992;&#20363;&#20013;&#33021;&#22815;&#22797;&#29992;&#12290;&#27492;&#22788;&#65292;&#19982;&#31532; 6 &#31456;&#30340;&#20363;&#23376;&#26377;&#19968;&#20010;&#21306;&#21035;&#65292;&#24403;&#26102;&#25105;&#20204;&#20351;&#29992; schema.sql &#21644; data.sql &#26469;&#21021;&#22987;&#21270;&#34920;&#32467;&#26500;&#21644;&#25968;&#25454;&#65292;&#36825;&#37324;&#20026;&#20102;&#20445;&#35777;&#27979;&#35797;&#25968;&#25454;&#19981;&#21463;&#22806;&#37096;&#24433;&#21709;&#65292;Spring Boot &#30340;&#21021;&#22987;&#21270;&#65292;&#30001; Hibernate &#26469;&#23454;&#29616;&#34920;&#32467;&#26500;&#30340;&#21021;&#22987;&#21270;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-10</strong>&#12288;<code>MenuRepositoryTest</code> &#20013;&#38024;&#23545;&#25554;&#20837;&#25805;&#20316;&#30340;&#21333;&#20803;&#27979;&#35797;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest(properties = {"spring.sql.init.mode=never", "spring.jpa.hibernate.ddl-auto=create-drop"})
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
class MenuRepositoryTest {
    @Autowired
    private MenuRepository menuRepository;
    @Autowired
    private DataSource dataSource;
    private JdbcTemplate jdbcTemplate;

    @BeforeEach
    public void setUp() {
        jdbcTemplate = new JdbcTemplate(dataSource);
    }

    @AfterEach
    public void tearDown() {
        jdbcTemplate = null;
    }

    @Test
    @Order(1)
    void testInsertItem() {
        List&lt;MenuItem&gt; items = Stream.of("Go&#27225;&#27713;", "Python&#27668;&#27873;&#27700;", "JavaScript&#33487;&#25171;&#27700;")
                .map(n -&gt; MenuItem.builder().name(n).size(Size.MEDIUM)
                        .price(Money.ofMinor(CurrencyUnit.of("CNY"), 1200)).build())
                .peek(m -&gt; menuRepository.insertItem(m)).collect(Collectors.toList());
        for (int i = 0; i &lt; 3; i++) {
            assertEquals(i + 1, items.get(i).getId());
            assertItem(i + 1L, items.get(i).getName());
        }
    }

    private void assertItem(Long id, String name) {
        Map&lt;String, Object&gt; result = jdbcTemplate.queryForMap("select * from t_menu where id = ?", id);
        assertEquals(name, result.get("name"));
        assertEquals(Size.MEDIUM.name(), result.get("size"));
        assertEquals(1200L, result.get("price"));
    }
    // &#30465;&#30053;&#20854;&#20182;&#27979;&#35797;&#29992;&#20363;
}</code></pre><p>&#20195;&#30721;&#31034;&#20363; 7-11 &#26159;&#38024;&#23545;&#26597;&#35810;&#26041;&#27861;&#30340;&#30456;&#20851;&#27979;&#35797;&#65292;&#25105;&#20204;&#21487;&#20197;&#30475;&#21040;&#20854;&#20013;&#30340;&#26680;&#23545;&#22823;&#37096;&#20998;&#22797;&#29992;&#20102; <code>assertItem()</code>&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-11</strong>&#12288;<code>MenuRepositoryTest</code> &#20013;&#38024;&#23545;&#26597;&#35810;&#25805;&#20316;&#30340;&#21333;&#20803;&#27979;&#35797;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest(properties = {"spring.sql.init.mode=never", "spring.jpa.hibernate.ddl-auto=create-drop"})
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
class MenuRepositoryTest {
    @Test
    @Order(2)
    void testCountMenuItems() {
        assertEquals(3, menuRepository.countMenuItems());
    }

    @Test
    @Order(3)
    void testQueryForItem() {
        MenuItem item = menuRepository.queryForItem(1L);
        assertNotNull(item);
        assertItem(1L, "Go&#27225;&#27713;");
    }

    @Test
    @Order(4)
    void testQueryAllItems() {
        List&lt;MenuItem&gt; items = menuRepository.queryAllItems();
        assertNotNull(items);
        assertFalse(items.isEmpty());
        assertEquals(3, items.size());
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p>&#20195;&#30721;&#31034;&#20363; 7-12 &#26159;&#19982;&#20462;&#25913;&#21644;&#21024;&#38500;&#30456;&#20851;&#30340;&#27979;&#35797;&#29992;&#20363;&#65306;<code>testUpdateItem()</code> &#20013;&#20808;&#26597;&#20986;&#20102; ID &#20026; <code>1</code> &#30340;&#33756;&#21333;&#39033;&#65292;&#23558;&#20854;&#20013;&#30340;&#20215;&#26684;&#20462;&#25913;&#20026;&#20102; 11 &#20803;&#65292;&#26356;&#26032;&#22238;&#25968;&#25454;&#24211;&#21518;&#21448;&#29992; <code>jdbcTemplate</code> &#25226;&#35760;&#24405;&#26597;&#35810;&#20986;&#26469;&#36827;&#34892;&#20102;&#26680;&#23545;&#65307;<code>testDeleteItem()</code> &#21017;&#27604;&#36739;&#31616;&#21333;&#65292;&#30452;&#25509;&#21024;&#38500; ID &#20026; <code>2</code> &#30340;&#35760;&#24405;&#65292;&#38543;&#21518;&#20877;&#36890;&#36807;&#26597;&#35810;&#25805;&#20316;&#26469;&#30475;&#19968;&#19979;&#25968;&#25454;&#22312;&#19981;&#22312;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-12</strong>&#12288;<code>MenuRepositoryTest</code> &#20013;&#38024;&#23545;&#20462;&#25913;&#21644;&#21024;&#38500;&#25805;&#20316;&#30340;&#21333;&#20803;&#27979;&#35797;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest(properties = {"spring.sql.init.mode=never", "spring.jpa.hibernate.ddl-auto=create-drop"})
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
class MenuRepositoryTest {
    @Test
    @Order(5)
    void testUpdateItem() {
        MenuItem item = menuRepository.queryForItem(1L);
        item.setPrice(Money.ofMinor(CurrencyUnit.of("CNY"), 1100));
        menuRepository.updateItem(item);
        Long price = jdbcTemplate.queryForObject("select price from t_menu where id = 1", Long.class);
        assertEquals(1100L, price);
    }

    @Test
    @Order(6)
    void testDeleteItem() {
        menuRepository.deleteItem(2L);
        assertNull(menuRepository.queryForItem(2L));
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p>&#38656;&#35201;&#27880;&#24847;&#20004;&#28857;&#65306;&#31532;&#19968;&#65292;&#36825;&#20010;&#27979;&#35797;&#24517;&#39035;&#25353;&#29031;&#25351;&#23450;&#30340;&#39034;&#24207;&#25191;&#34892;&#65292;&#22240;&#20026;&#27979;&#35797;&#25968;&#25454;&#26159;&#36890;&#36807; <code>testInsertItem()</code> &#25554;&#20837;&#30340;&#65307;&#31532;&#20108;&#65292;&#36825;&#21482;&#26159;&#19968;&#20010;&#28436;&#31034;&#29992;&#30340;&#21333;&#20803;&#27979;&#35797;&#65292;&#22312;&#23454;&#38469;&#24037;&#20316;&#20013;&#65292;&#25105;&#20204;&#36824;&#35201;&#32771;&#34385;&#21508;&#31181;&#36793;&#30028;&#26465;&#20214;&#12290;</p><p>Spring Framework &#38024;&#23545;&#28041;&#21450;&#25968;&#25454;&#24211;&#30340;&#25805;&#20316;&#36824;&#25552;&#20379;&#20102;&#19987;&#38376;&#30340;&#27979;&#35797;&#25903;&#25345;&#65292;&#21487;&#20197;&#22312;&#27599;&#20010;&#27979;&#35797;&#25191;&#34892;&#21518;&#22238;&#28378;&#25968;&#25454;&#24211;&#20013;&#30340;&#21508;&#31181;&#20462;&#25913;&#65292;&#27492;&#22788;&#26242;&#19988;&#36890;&#36807;&#31616;&#21333;&#30340;&#26041;&#24335;&#26469;&#20570;&#12290;&#26356;&#22797;&#26434;&#30340;&#29992;&#27861;&#22823;&#23478;&#21487;&#20197;&#36890;&#36807; Spring Framework &#30340;&#23448;&#26041;&#25163;&#20876;&#36827;&#34892;&#20102;&#35299;&#12290;</p><h3 id="nav_point_113">7.1.4&#12288;&#36890;&#36807; Spring Data &#30340; <code>Repository</code> &#25805;&#20316;&#25968;&#25454;&#24211;</h3><p>&#34429;&#28982;&#19982;&#30452;&#25509;&#20351;&#29992; SQL &#30340;&#26041;&#24335;&#30456;&#27604;&#65292;Hibernate &#26041;&#20415;&#20102;&#19981;&#23569;&#65292;&#20294;&#24191;&#22823;&#24320;&#21457;&#32773;&#23545;&#25928;&#29575;&#30340;&#36861;&#27714;&#26159;&#26080;&#27490;&#22659;&#30340;&#12290;&#19981;&#23569;&#26085;&#24120;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#30340;&#20195;&#30721;&#37117;&#8220;&#38271;&#24471;&#24046;&#19981;&#22810;&#8221;&#65292;&#32780;&#19988;&#23545;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#12289;NoSQL &#25968;&#25454;&#24211;&#37117;&#26377;&#31867;&#20284;&#30340;&#25805;&#20316;&#65292;&#37027;&#20040;&#26159;&#21542;&#36824;&#21487;&#20197;&#36827;&#19968;&#27493;&#31616;&#21270;&#21602;&#65311;&#31572;&#26696;&#26159;&#32943;&#23450;&#30340;&#65292;Spring Data &#39033;&#30446;&#23601;&#20026;&#19981;&#21516;&#30340;&#24120;&#35265;&#25968;&#25454;&#24211;&#25552;&#20379;&#20102;&#32479;&#19968;&#30340; Repository &#25277;&#35937;&#23618;&#12290;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#32422;&#23450;&#22909;&#30340;&#26041;&#24335;&#23450;&#20041;&#25509;&#21475;&#65292;&#20351;&#29992;&#20854;&#20013;&#30340;&#26041;&#27861;&#26469;&#22768;&#26126;&#38656;&#35201;&#30340;&#25805;&#20316;&#65292;&#21097;&#19979;&#30340;&#23454;&#29616;&#24037;&#20316;&#23436;&#20840;&#20132;&#30001; Spring Data &#26469;&#23436;&#25104;&#12290;Spring Data &#30340;&#26680;&#24515;&#25509;&#21475;&#26159; <code>Repository&lt;T, ID&gt;</code>&#65292;<code>T</code> &#26159;&#23454;&#20307;&#31867;&#22411;&#65292;<code>ID</code> &#26159;&#20027;&#38190;&#31867;&#22411;&#65292;&#19968;&#33324;&#25105;&#20204;&#20250;&#20351;&#29992;&#23427;&#30340;&#23376;&#25509;&#21475; <code>CrudRepository&lt;T, ID&gt;</code> &#25110;&#32773; <code>PagingAndSortingRepository&lt;T, ID&gt;</code>&#12290;<code>CrudRepository&lt;T, ID&gt;</code> &#30340;&#23450;&#20041;&#22914;&#19979;&#25152;&#31034;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@NoRepositoryBean
public interface CrudRepository&lt;T, ID&gt; extends Repository&lt;T, ID&gt; {
    &lt;S extends T&gt; S save(S var1);
    &lt;S extends T&gt; Iterable&lt;S&gt; saveAll(Iterable&lt;S&gt; var1);

    Optional&lt;T&gt; findById(ID var1);
    boolean existsById(ID var1);
    Iterable&lt;T&gt; findAll();
    Iterable&lt;T&gt; findAllById(Iterable&lt;ID&gt; var1);

    long count();

    void deleteById(ID var1);
    void delete(T var1);
    void deleteAll(Iterable&lt;? extends T&gt; var1);
    void deleteAll();
}</code></pre><p>&#21487;&#20197;&#30475;&#21040;&#20854;&#20013;&#24050;&#32463;&#21253;&#21547;&#20102;&#19968;&#20123;&#36890;&#29992;&#30340;&#26041;&#27861;&#65292;&#27604;&#22914;&#26032;&#22686;&#21644;&#21024;&#38500;&#23454;&#20307;&#65292;&#36824;&#26377;&#26681;&#25454; ID &#26597;&#25214;&#23454;&#20307;&#31561;&#12290;<code>PagingAndSortingRepository&lt;T, ID&gt;</code> &#21017;&#26159;&#22312;&#27492;&#22522;&#30784;&#20043;&#19978;&#21448;&#22686;&#21152;&#20102;&#20998;&#39029;&#21644;&#25490;&#24207;&#21151;&#33021;&#12290;</p><p>Spring Data JPA &#26159;&#19987;&#38376;&#38024;&#23545; JPA &#30340;&#12290;&#22312; pom.xml &#20013;&#24341;&#20837; <code>org.springframework.boot:spring-boot-starter-data-jpa</code> &#23601;&#33021;&#28155;&#21152;&#25152;&#38656;&#30340;&#20381;&#36182;&#12290;&#20854;&#20013;&#25552;&#20379;&#20102;&#19968;&#20010;&#19987;&#23646;&#30340; <code>JpaRepository&lt;T, ID&gt;</code> &#25509;&#21475;&#65292;&#21487;&#20197;&#22312;&#37197;&#32622;&#31867;&#19978;&#22686;&#21152; <code>@EnableJpaRepositories</code> &#26469;&#24320;&#21551; JPA &#30340;&#25903;&#25345;&#65292;&#36890;&#36807;&#36825;&#20010;&#27880;&#35299;&#36824;&#21487;&#20197;&#37197;&#32622;&#19968;&#20123;&#20010;&#24615;&#21270;&#30340;&#20449;&#24687;&#65292;&#27604;&#22914;&#35201;&#25195;&#25551; <code>Repository</code> &#25509;&#21475;&#30340;&#21253;&#12290;</p><p>Spring Boot &#30340; <code>JpaRepositoriesAutoConfiguration</code> &#25552;&#20379;&#20102; <code>JpaRepository</code> &#30456;&#20851;&#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#21482;&#35201;&#31526;&#21512;&#26465;&#20214;&#23601;&#33021;&#23436;&#25104;&#37197;&#32622;&#12290;&#23427;&#36890;&#36807; <code>@Import</code> &#27880;&#35299;&#23548;&#20837;&#20102; <code>JpaRepositoriesRegistrar</code> &#31867;&#65292;&#20854;&#20013;&#30452;&#25509;&#23450;&#20041;&#20102;&#19968;&#20010;&#38745;&#24577;&#20869;&#37096;&#31867; <code>EnableJpaRepositoriesConfiguration</code>&#65292;&#19978;&#38754;&#28155;&#21152;&#20102; <code>@EnableJpaRepositories</code>&#65292;&#25152;&#20197;&#22312; Spring Boot &#39033;&#30446;&#37324;&#26080;&#39035;&#33258;&#24049;&#28155;&#21152;&#35813;&#27880;&#35299;&#65292;&#21482;&#35201;&#26377;&#30456;&#24212;&#30340;&#20381;&#36182;&#65292;Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#23601;&#33021;&#24110;&#24537;&#23436;&#25104;&#21097;&#19979;&#30340;&#24037;&#20316;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnBean(DataSource.class)
@ConditionalOnClass(JpaRepository.class)
@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class, JpaRepositoryConfigExtension.class })
@ConditionalOnProperty(prefix = "spring.data.jpa.repositories", name = "enabled", havingValue = "true",
    matchIfMissing = true)
@Import(JpaRepositoriesRegistrar.class)
@AutoConfigureAfter({ HibernateJpaAutoConfiguration.class, TaskExecutionAutoConfiguration.class })
public class JpaRepositoriesAutoConfiguration { ... }</code></pre><p>&#35201;&#23450;&#20041;&#33258;&#24049;&#30340; <code>Repository</code> &#21482;&#38656;&#25193;&#23637; <code>CrudRepository&lt;T, ID&gt;</code>&#12289;<code>PagingAndSortingRepository&lt;T, ID&gt;</code> &#25110; <code>JpaRepository&lt;T, ID&gt;</code>&#65292;&#24182;&#26126;&#30830;&#25351;&#23450;&#27867;&#22411;&#31867;&#22411;&#21363;&#21487;&#12290;&#20363;&#22914;&#65292;<code>MenuItem</code> &#21644; <code>TeaMaker</code> &#30340; <code>Repository</code> &#22823;&#27010;&#23601;&#26159;&#20195;&#30721;&#31034;&#20363; 7-13<span class="&#27880;&#37322;&#32534;&#21495;">9</span> &#36825;&#26679;&#30340;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">9</span>&#26412;&#33410;&#20013; Spring Data JPA &#30340;&#31034;&#20363;&#37117;&#22312; ch7/binarytea-jpa &#39033;&#30446;&#20013;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-13</strong>&#12288;<code>MenuItem</code> &#21644; <code>TeaMaker</code> &#30340; <code>Repository</code> &#23450;&#20041;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface MenuRepository extends JpaRepository&lt;MenuItem, Long&gt; {}
public interface TeaMakerRepository extends JpaRepository&lt;TeaMaker, Long&gt; {}</code></pre><p>&#36890;&#29992;&#30340;&#26041;&#27861;&#22522;&#26412;&#33021;&#28385;&#36275;&#22823;&#37096;&#20998;&#38656;&#27714;&#65292;&#20294;&#26159;&#24635;&#20250;&#26377;&#19968;&#20123;&#19994;&#21153;&#25152;&#38656;&#30340;&#29305;&#27530;&#26597;&#35810;&#38656;&#35201;&#26159;&#36890;&#29992;&#30340;&#26041;&#27861;&#25152;&#19981;&#33021;&#28385;&#36275;&#30340;&#12290;&#22312; Spring Data &#30340;&#24110;&#21161;&#19979;&#65292;&#25105;&#20204;&#21482;&#38656;&#35201;&#26681;&#25454;&#23427;&#30340;&#35201;&#27714;&#23450;&#20041;&#26041;&#27861;&#65292;&#26080;&#39035;&#32534;&#20889;&#20855;&#20307;&#30340;&#23454;&#29616;&#65292;&#36825;&#23601;&#30465;&#21364;&#20102;&#24456;&#22810;&#24037;&#20316;&#12290;&#20197;&#19979;&#20960;&#31181;&#24418;&#24335;&#30340;&#26041;&#27861;&#21517;&#37117;&#21487;&#20197;&#35270;&#20026;&#26377;&#25928;&#30340;&#26597;&#35810;&#26041;&#27861;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>find...By...</code></li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>read...By...</code></li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>query...By...</code></li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>get...By...</code></li>
</ul><p>&#22914;&#26524;&#21482;&#26159;&#24819;&#35201;&#32479;&#35745;&#25968;&#37327;&#65292;&#19981;&#29992;&#36820;&#22238;&#20855;&#20307;&#20869;&#23481;&#65292;&#21487;&#20197;&#20351;&#29992; <code>count...By...</code> &#30340;&#24418;&#24335;&#12290;</p><p>&#20854;&#20013;&#65292;&#31532;&#19968;&#27573;&#8220;<code>...</code>&#8221;&#30340;&#20869;&#23481;&#26159;&#38480;&#23450;&#36820;&#22238;&#30340;&#32467;&#26524;&#26465;&#25968;&#65292;&#27604;&#22914;&#29992; <code>TopN</code>&#12289;<code>FirstN</code> &#34920;&#31034;&#36820;&#22238;&#22836; <em>N</em> &#20010;&#32467;&#26524;&#65292;&#36824;&#21487;&#20197;&#29992; <code>Distinct</code> &#36215;&#21040; SQL &#35821;&#21477;&#20013; <code>distinct</code> &#20851;&#38190;&#35789;&#30340;&#25928;&#26524;&#12290;&#31532;&#20108;&#27573;&#8220;<code>...</code>&#8221;&#30340;&#20869;&#23481;&#26159;&#26597;&#35810;&#30340;&#26465;&#20214;&#65292;&#20063;&#23601;&#26159; SQL &#35821;&#21477;&#20013; <code>where</code> &#30340;&#37096;&#20998;&#65292;&#26465;&#20214;&#25152;&#38656;&#30340;&#20869;&#23481;&#19982;&#26041;&#27861;&#30340;&#21442;&#25968;&#21015;&#34920;&#23545;&#24212;&#65292;&#21487;&#20197;&#36890;&#36807; <code>And</code>&#12289;<code>Or</code> &#20851;&#38190;&#35789;&#32452;&#21512;&#22810;&#20010;&#26465;&#20214;&#65292;&#29992; <code>Not</code> &#20851;&#38190;&#35789;&#21462;&#21453;&#12290;Spring Data &#26041;&#27861;&#25903;&#25345;&#22810;&#31181;&#24418;&#24335;&#30340;&#26465;&#20214;&#65292;&#20855;&#20307;&#35265;&#34920; 7-7&#12290;</p><p><strong>&#34920; 7-7&#12288;Spring Data &#26597;&#35810;&#26041;&#27861;&#25903;&#25345;&#30340;&#20851;&#38190;&#35789;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#20316;&#29992;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#20851;&#38190;&#35789;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#20363;&#23376;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#30456;&#31561;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Is</code>&#12289;<code>Equals</code>&#65292;&#19981;&#20889;&#30340;&#35805;&#40664;&#35748;&#23601;&#26159;&#30456;&#31561;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByNameIs(String name)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#27604;&#36739;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>LessThan</code>&#12289;<code>LessThanEqual</code>&#12289;<code>GreaterThan</code>&#12289;<code>GreaterThanEqual</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByNumberLessThan(int number)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#27604;&#36739;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Between</code>&#65292;&#29992;&#20110;&#26085;&#26399;&#26102;&#38388;&#30340;&#27604;&#36739;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByStartDateBetween(Date d1, Date d2)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#27604;&#36739;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Before</code>&#12289;<code>After</code>&#65292;&#29992;&#20110;&#26085;&#26399;&#26102;&#38388;&#30340;&#27604;&#36739;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByEndDateBefore(Date date)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26159;&#21542;&#20026;&#31354;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Null</code>&#12289;<code>IsNull</code>&#12289;<code>NotNull</code>&#12289;<code>IsNotNull</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findBySizeIsNotNull()</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#30456;&#20284;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>Like</code>&#12289;<code>NotLike</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByNameNotLike(String name)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23383;&#31526;&#20018;&#21028;&#26029;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>StartingWith</code>&#12289;<code>EndingWith</code>&#12289;<code>Containing</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByNameContaining(String name)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24573;&#30053;&#23383;&#31526;&#20018;&#22823;&#23567;&#20889;&#36827;&#34892;&#21028;&#26029;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>IgnoreCase</code>&#12289;<code>AllIgnoreCase</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByLastnameAndFirstnameAllIgnoreCase(String lastname, String firstname)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#38598;&#21512;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>In</code>&#12289;<code>NotIn</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findBySizeIn(List&lt;Size&gt; sizeList)</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24067;&#23572;&#21028;&#26029;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>True</code>&#12289;<code>False</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>findByActiveFalse()</code></p></td>
</tr>
</tbody>
</table><p>&#23545;&#20110;&#20250;&#36820;&#22238;&#22810;&#26465;&#32467;&#26524;&#30340;&#26041;&#27861;&#65292;&#21487;&#20197;&#22312;&#26041;&#27861;&#21517;&#32467;&#23614;&#22788;&#22686;&#21152; <code>OrderBy</code> &#20851;&#38190;&#35789;&#25351;&#23450;&#25490;&#24207;&#30340;&#23383;&#27573;&#65292;&#36890;&#36807; <code>Asc</code> &#21644; <code>Desc</code> &#25351;&#23450;&#21319;&#24207;&#25110;&#32773;&#38477;&#24207;&#65288;&#40664;&#35748;&#20026; <code>Asc</code>&#65289;&#12290;&#20363;&#22914; <code>findByNameOrderByIdDesc(String name)</code>&#65292;&#36825;&#37324;&#20063;&#25903;&#25345;&#22810;&#20010;&#23383;&#27573;&#25490;&#24207;&#30340;&#32452;&#21512;&#65292;&#20363;&#22914; <code>findByNameOrderByUpdateTimeDescId(String name)</code>&#12290;&#20063;&#21487;&#20197;&#22312;&#21442;&#25968;&#20013;&#22686;&#21152;&#19968;&#20010; <code>Sort</code> &#31867;&#22411;&#30340;&#21442;&#25968;&#26469;&#28789;&#27963;&#22320;&#20256;&#20837;&#26399;&#26395;&#30340;&#25490;&#24207;&#26041;&#24335;&#65292;&#20363;&#22914;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Sort sort = Sort.by("name").descending().and(Sort.by("id").ascending());</code></pre><p>&#21478;&#19968;&#20010;&#24120;&#35265;&#30340;&#38656;&#27714;&#26159;&#20998;&#39029;&#12290;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#21487;&#20197;&#26159; <code>Page&lt;T&gt;</code> &#25110;&#38598;&#21512;&#31867;&#22411;&#65292;&#36890;&#36807;&#20256;&#20837; <code>Pageable</code> &#31867;&#22411;&#30340;&#21442;&#25968;&#26469;&#25351;&#23450;&#20998;&#39029;&#20449;&#24687;&#12290;</p><p>Spring Data &#30340; <code>Repository</code> &#25509;&#21475;&#26041;&#27861;&#25903;&#25345;&#24456;&#22810;&#31181;&#36820;&#22238;&#31867;&#22411;&#65306;&#21333;&#20010;&#36820;&#22238;&#20540;&#30340;&#65292;&#38500;&#20102;&#24120;&#35265;&#30340; <code>T</code> &#31867;&#22411;&#65292;&#20063;&#21487;&#20197;&#26159; <code>Optional&lt;T&gt;</code>&#65307;&#38598;&#21512;&#31867;&#22411;&#38500;&#20102; <code>Iterable</code> &#30456;&#20851;&#30340;&#31867;&#22411;&#65292;&#36824;&#21487;&#20197;&#26159; <code>Streamable</code> &#30340;&#65292;&#26041;&#20415;&#20570;&#27969;&#24335;&#22788;&#29702;&#12290;</p><p>&#26082;&#28982;&#36825;&#37324;&#29992;&#30340;&#26159; JPA &#30340; <code>Repository</code> &#25509;&#21475;&#65292;&#33258;&#28982;&#23601;&#35201;&#29992; JPA &#30456;&#20851;&#30340;&#37197;&#32622;&#12290;&#20043;&#21069;&#25105;&#20204;&#20570;&#30340; Hibernate &#30340;&#37197;&#32622;&#23601;&#21487;&#20197;&#26367;&#25442;&#19968;&#19979;&#65292;&#26368;&#31616;&#21333;&#30340;&#23601;&#26159;&#25226;&#37197;&#32622;&#37117;&#21024;&#20102;&#65292;&#23436;&#20840;&#38752; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#20043;&#21069; Hibernate &#37197;&#32622;&#30340;&#19968;&#20123;&#23646;&#24615;&#65292;&#21487;&#20197;&#20889;&#21040; <code>application.properties</code> &#37324;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 7-14 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-14</strong>&#12288;<code>application.properties</code> &#20013;&#30340;&#19968;&#20123;&#37197;&#32622;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.show_sql=true
spring.jpa.show-sql=true</code></pre><p>&#36825;&#19977;&#20010;&#37197;&#32622;&#30340;&#25928;&#26524;&#65292;&#31561;&#21516;&#20110;&#20195;&#30721;&#31034;&#20363; 7-7 &#20013;&#29992;&#20195;&#30721;&#20570;&#30340;&#37197;&#32622;&#65292;&#20854;&#20013; <code>spring.jpa.properties.hibernate.show_sql</code> &#19982; <code>spring.jpa.show-sql</code> &#30340;&#25928;&#26524;&#30456;&#21516;&#12290;</p><p>&#23545;&#20110;&#35746;&#21333;&#30340;&#25805;&#20316;&#65292;&#25105;&#20204;&#21487;&#20197;&#23450;&#20041;&#19968;&#20010; <code>OrderRepository</code> &#25509;&#21475;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 7-15 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-15</strong>&#12288;&#25805;&#20316;&#35746;&#21333;&#30340; <code>OrderRepository</code> &#25509;&#21475;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface OrderRepository extends JpaRepository&lt;Order, Long&gt; {
    List&lt;Order&gt; findByStatusOrderById(OrderStatus status);
    List&lt;Order&gt; findByMaker_NameLikeIgnoreCaseOrderByUpdateTimeDescId(String name);
}</code></pre><p>&#19978;&#38754;&#30340;&#31532;&#19968;&#20010;&#26041;&#27861;&#26681;&#25454; <code>Order.status</code> &#36827;&#34892;&#26597;&#25214;&#65292;&#32467;&#26524;&#25353;&#29031; <code>id</code> &#21319;&#24207;&#25490;&#21015;&#65307;&#31532;&#20108;&#20010;&#26041;&#27861;&#27604;&#36739;&#22797;&#26434;&#65292;&#26681;&#25454; <code>Order.maker.name</code> &#36827;&#34892;&#30456;&#20284;&#21305;&#37197;&#65292;&#19988;&#24573;&#30053;&#22823;&#23567;&#20889;&#65292;&#32467;&#26524;&#20808;&#25353;&#29031; <code>updateTime</code> &#38477;&#24207;&#25490;&#21015;&#65292;&#22914;&#26524;&#30456;&#21516;&#20877;&#25353; <code>id</code> &#21319;&#24207;&#25490;&#21015;&#12290;&#23545;&#20110; <code>Order.maker.name</code> &#36825;&#26679;&#30340;&#23646;&#24615;&#65292;&#21487;&#20197;&#20687;&#19978;&#38754;&#36825;&#26679;&#29992; <code>_</code> &#26126;&#30830;&#22320;&#34920;&#31034; <code>name</code> &#26159; <code>Maker</code> &#30340;&#23646;&#24615;&#65292;&#20063;&#21487;&#20197;&#19981;&#21152; <code>_</code>&#65292;&#35753; Spring Data &#33258;&#34892;&#21028;&#26029;&#12290;&#22823;&#23478;&#21487;&#20197;&#23581;&#35797;&#20889;&#19968;&#19979;&#36825;&#20010;&#25509;&#21475;&#30340;&#21333;&#20803;&#27979;&#35797;&#65292;&#20063;&#21487;&#20197;&#21442;&#32771;&#25105;&#20204;&#25552;&#20379;&#30340;&#20195;&#30721;&#31034;&#20363;&#20013;&#30340; <code>OrderRepositoryTest</code> &#31867;&#65292;&#27492;&#22788;&#23601;&#19981;&#20877;&#23637;&#24320;&#20102;&#12290;&#22312;&#21462;&#21040; <code>Order</code> &#21518;&#65292;&#20854;&#20013;&#25042;&#21152;&#36733;&#30340;&#20869;&#23481;&#26377;&#21487;&#33021;&#27809;&#26377;&#34987;&#21152;&#36733;&#19978;&#26469;&#65292;&#22240;&#27492;&#25105;&#20204;&#22312;&#35775;&#38382;&#26102;&#38656;&#35201;&#22686;&#21152;&#19968;&#20010;&#20107;&#21153;&#65292;&#20445;&#35777;&#22312;&#25805;&#20316;&#26102;&#33021;&#22815;&#21462;&#24471;&#24403;&#21069;&#20250;&#35805;&#12290;</p><p>&#22914;&#26524;&#26377;&#19968;&#20123;&#20844;&#20849;&#30340;&#26041;&#27861;&#24076;&#26395;&#33021;&#21093;&#31163;&#21040;&#20844;&#20849;&#25509;&#21475;&#37324;&#65292;&#20294;&#21448;&#19981;&#24076;&#26395;&#36825;&#20010;&#20844;&#20849;&#25509;&#21475;&#34987;&#21019;&#24314;&#25104; <code>Repository</code> &#30340; Bean&#65292;&#36825;&#26102;&#23601;&#21487;&#20197;&#22312;&#25509;&#21475;&#19978;&#28155;&#21152; <code>@NoRepositoryBean</code> &#27880;&#35299;&#12290;<code>JpaRepository</code> &#25509;&#21475;&#23601;&#26159;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@NoRepositoryBean
public interface JpaRepository&lt;T, ID&gt; extends PagingAndSortingRepository&lt;T, ID&gt;, QueryByExampleExecutor&lt;T&gt; {}</code></pre><p>&#36825;&#37324;&#65292;&#25105;&#20204;&#21516;&#26679;&#35201;&#20026; <code>OrderRepository</code> &#20013;&#30340;&#20004;&#20010;&#26041;&#27861;&#28155;&#21152;&#19968;&#20123;&#31616;&#21333;&#30340;&#21333;&#20803;&#27979;&#35797;&#65292;&#36825;&#20123;&#27979;&#35797;&#38656;&#35201;&#29992;&#21040;&#19968;&#20123;&#27979;&#35797;&#25968;&#25454;&#65292;&#23427;&#20204;&#21487;&#20197;&#21644; <code>TeaMakerRepository</code> &#30340;&#27979;&#35797;&#22797;&#29992;&#65292;&#22240;&#27492;&#21487;&#20197;&#23558;&#27979;&#35797;&#25968;&#25454;&#30340;&#20934;&#22791;&#24037;&#20316;&#21333;&#29420;&#21093;&#31163;&#20986;&#26469;&#65292;&#25918;&#21040; <code>src/test/java</code> &#23545;&#24212;&#30340;&#20301;&#32622;&#65292;&#20195;&#30721;&#20869;&#23481;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 7-16 &#25152;&#31034;&#12290;&#20855;&#20307;&#30340;&#36923;&#36753;&#26159;&#20808;&#25554;&#20837; 3 &#26465; <code>MenuItem</code> &#21644; 2 &#26465; <code>TeaMaker</code> &#35760;&#24405;&#65292;&#38543;&#21518;&#29992;&#23427;&#20204;&#26469;&#21019;&#24314;&#35746;&#21333;&#65292;&#20004;&#26465;&#35746;&#21333;&#20043;&#38388;&#38388;&#38548; 200 &#27627;&#31186;&#65292;&#36825;&#26679;&#22312;&#25353;&#29031;&#35746;&#21333;&#26102;&#38388;&#25490;&#24207;&#26102;&#21487;&#20197;&#26377;&#26126;&#30830;&#30340;&#39034;&#24207;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-16</strong>&#12288;&#36827;&#34892;&#27979;&#35797;&#25968;&#25454;&#20934;&#22791;&#30340; <code>DataInitializationRunner</code> &#31867;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class DataInitializationRunner implements ApplicationRunner {
    @Autowired
    private TeaMakerRepository makerRepository;
    @Autowired
    private MenuRepository menuRepository;
    @Autowired
    private OrderRepository orderRepository;

    @Override
    @Transactional
    public void run(ApplicationArguments args) throws Exception {
        List&lt;MenuItem&gt; menuItemList = Stream.of("Go&#27225;&#27713;", "Python&#27668;&#27873;&#27700;", "JavaScript&#33487;&#25171;&#27700;")
                .map(n -&gt; MenuItem.builder().name(n).size(Size.MEDIUM)
                        .price(Money.ofMinor(CurrencyUnit.of("CNY"), 1200)).build())
                .map(m -&gt; {
             menuRepository.save(m);
             return m;
        }).collect(Collectors.toList());

        List&lt;TeaMaker&gt; makerList = Stream.of("LiLei", "HanMeimei")
                .map(n -&gt; TeaMaker.builder().name(n).build())
                .map(m -&gt; {
            makerRepository.save(m);
            return m;
        }).collect(Collectors.toList());

        Order order = Order.builder().maker(makerList.get(0))
                                     .amount(Amount.builder()
                                     .discount(90).totalAmount(Money.ofMinor(CurrencyUnit.of("CNY"), 1200))
                                     .payAmount(Money.ofMinor(CurrencyUnit.of("CNY"), 1080)).build())
                                     .items(List.of(menuItemList.get(0))).status(OrderStatus.ORDERED).build();
        orderRepository.save(order);

        try {
            Thread.sleep(200);
        } catch (InterruptedException e) {
        }

        order = Order.builder().maker(makerList.get(0)).amount(Amount.builder().discount(100)
                .totalAmount(Money.ofMinor(CurrencyUnit.of("CNY"), 1200))
                .payAmount(Money.ofMinor(CurrencyUnit.of("CNY"), 1200)).build())
            .items(List.of(menuItemList.get(1)))
            .status(OrderStatus.ORDERED).build();
        orderRepository.save(order);
    }
}</code></pre><p>&#19978;&#38754;&#30340; <code>DataInitializationRunner</code> &#31867;&#19978;&#24182;&#26410;&#28155;&#21152;&#20219;&#20309; Spring Bean &#30456;&#20851;&#30340;&#27880;&#35299;&#65292;&#25152;&#20197;&#23427;&#24182;&#19981;&#20250;&#34987;&#33258;&#21160;&#25195;&#25551;&#21152;&#36733;&#20026; Bean&#12290;&#30001;&#20110;&#20195;&#30721;&#31034;&#20363; 7-12 &#20013;&#30340; <code>MenuRepositoryTest</code> &#24182;&#19981;&#38656;&#35201;&#23427;&#30340;&#25968;&#25454;&#65292;&#35753;&#23427;&#36305;&#36215;&#26469;&#21453;&#32780;&#36824;&#20250;&#30772;&#22351;&#21407;&#26469;&#30340;&#27979;&#35797;&#65292;&#25152;&#20197;&#25105;&#20204;&#21487;&#20197;&#26377;&#26465;&#20214;&#22320;&#36873;&#25321;&#24615;&#25191;&#34892;&#36825;&#27573;&#21021;&#22987;&#21270;&#36923;&#36753;&#12290;&#20195;&#30721;&#31034;&#20363; 7-17 &#23601;&#26159;&#23545;&#24212;&#30340;&#37197;&#32622;&#31867;&#65292;&#36890;&#36807; <code>@ConditionalOnProperty</code> &#21487;&#20197;&#23454;&#29616;&#26681;&#25454; <code>data.init.enable</code> &#23646;&#24615;&#30340;&#20540;&#26469;&#30830;&#23450;&#26159;&#21542;&#21019;&#24314; <code>DataInitializationRunner</code> Bean&#65306;&#21482;&#26377;&#20540;&#20026; <code>true</code> &#26102;&#25165;&#20250;&#21019;&#24314;&#65292;&#20026;&#20854;&#20182;&#20540;&#25110;&#27809;&#26377;&#35774;&#32622;&#26102;&#37117;&#19981;&#20250;&#26377;&#20219;&#20309;&#25928;&#26524;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-17</strong>&#12288;&#26681;&#25454;&#29305;&#23450;&#23646;&#24615;&#29983;&#25928;&#30340; <code>DataInitializationConfig</code> &#37197;&#32622;&#31867;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
@ConditionalOnProperty(name = "data.init.enable", havingValue = "true")
public class DataInitializationConfig {
    @Bean
    public DataInitializationRunner dataInitializationRunner() {
        return new DataInitializationRunner();
    }
}</code></pre><p>&#20195;&#30721;&#31034;&#20363; 7-18 &#23601;&#26159;&#38024;&#23545; <code>OrderRepository</code> &#30340;&#27979;&#35797;&#31867;&#65292;&#22312; <code>@SpringBootTest</code> &#19978;&#22686;&#21152;&#20102;&#19968;&#20010; <code>data.init.enable=true</code> &#30340;&#23646;&#24615;&#37197;&#32622;&#65292;&#36825;&#26679;&#23601;&#33021;&#29992;&#19978;&#21069;&#38754;&#20934;&#22791;&#30340;&#27979;&#35797;&#25968;&#25454;&#21021;&#22987;&#21270;&#36923;&#36753;&#20102;&#12290;&#38543;&#21518;&#30340;&#20004;&#20010;&#27979;&#35797;&#26041;&#27861;&#20869;&#23481;&#27604;&#36739;&#30452;&#35266;&#65292;&#23601;&#19981;&#20877;&#20570;&#36807;&#22810;&#35828;&#26126;&#20102;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-18</strong>&#12288;&#38024;&#23545; <code>OrderRepository</code> &#30340;&#27979;&#35797;&#31867;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest(properties = {"data.init.enable=true",
        "spring.sql.init.mode=never", "spring.jpa.hibernate.ddl-auto=create-drop"})
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
class OrderRepositoryTest {
    @Autowired
    private OrderRepository orderRepository;

    @Test
    @Transactional
    public void testFindByStatusOrderById() {
        assertTrue(orderRepository.findByStatusOrderById(OrderStatus.FINISHED).isEmpty());
        List&lt;Order&gt; list = orderRepository.findByStatusOrderById(OrderStatus.ORDERED);
        assertEquals(2, list.size());
        assertEquals("Go&#27225;&#27713;", list.get(0).getItems().get(0).getName());
        assertEquals("Python&#27668;&#27873;&#27700;", list.get(1).getItems().get(0).getName());
        assertTrue(list.get(0).getId() &lt; list.get(1).getId());
        assertEquals("LiLei", list.get(0).getMaker().getName());
        assertEquals("LiLei", list.get(1).getMaker().getName());
    }

    @Test
    public void testFindByMaker_NameLikeOrderByUpdateTimeDescId() {
        assertTrue(orderRepository.findByMaker_NameLikeIgnoreCaseOrderByUpdateTimeDescId("%han%").isEmpty());
        List&lt;Order&gt; list = orderRepository.findByMaker_NameLikeIgnoreCaseOrderByUpdateTimeDescId("%lei%");
        assertEquals(2, list.size());
        assertTrue(list.get(0).getUpdateTime().getTime() &gt;= list.get(1).getUpdateTime().getTime());
        assertTrue(list.get(0).getId() &gt; list.get(1).getId());
    }
}</code></pre><blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;<code>JpaRepository</code> &#32972;&#21518;&#30340;&#21407;&#29702;</strong></p>
<p>&#22312;&#27491;&#25991;&#20013;&#26377;&#25552;&#21040;&#65292;Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#23548;&#20837;&#20102; <code>JpaRepositoriesRegistrar</code>&#65292;&#36825;&#20010;&#31867;&#30340;&#20869;&#37096;&#31867;&#28155;&#21152;&#20102; <code>@EnableJpaRepositories</code>&#65292;&#24320;&#21551;&#20102;&#23545; JPA <code>Repository</code> &#30340;&#25903;&#25345;&#12290;&#30456;&#20851;&#30340;&#25193;&#23637;&#37197;&#32622;&#21017;&#26159;&#30001; <code>JpaRepositoryConfigExtension</code> &#25552;&#20379;&#30340;&#65292;&#20854;&#20013;&#27880;&#20876;&#20102;&#24456;&#22810; Bean&#65292;&#20363;&#22914;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>EntityManagerBeanDefinitionRegistrarPostProcessor</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>JpaMetamodelMappingContextFactoryBean</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>PersistenceAnnotationBeanPostProcessor</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>DefaultJpaContext</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>JpaMetamodelCacheCleanup</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>JpaEvaluationContextExtension</code></li>
</ul>
<p>&#27492;&#22806;&#65292;&#25195;&#25551;&#25214;&#21040;&#30340; <code>Repository</code> &#25509;&#21475;&#37117;&#20250;&#23545;&#24212;&#22320;&#37197;&#32622;&#19968;&#20010; <code>JpaRepositoryFactoryBean</code> &#31867;&#22411;&#30340;&#24037;&#21378; Bean&#12290;&#21487;&#20197;&#36890;&#36807;&#36825;&#20010;&#24037;&#21378; Bean &#26469;&#33719;&#24471;&#20855;&#20307;&#30340; <code>JpaRepositoryFactory</code>&#65292;&#23427;&#26159; <code>RepositoryFactorySupport</code> &#30340;&#23376;&#31867;&#65292;&#20854;&#20013;&#30340; <code>getRepository(Class&lt;T&gt; repositoryInterface, RepositoryFragments fragments)</code> &#20250;&#36820;&#22238;&#26368;&#32456;&#30340; <code>Repository</code> &#23454;&#29616;&#12290;</p>
<p><code>getRepository()</code> &#26041;&#27861;&#20026;&#25105;&#20204;&#30340;&#25509;&#21475;&#21019;&#24314;&#20102;&#19968;&#20010;&#25193;&#23637;&#20102; <code>SimpleJpaRepository&lt;T, ID&gt;</code> &#30340;&#23454;&#29616;&#65292;&#23427;&#21253;&#21547;&#20102;&#26368;&#22522;&#30784;&#30340;&#22686;&#21024;&#25913;&#26597;&#26041;&#27861;&#30340;&#23454;&#29616;&#12290;&#21478;&#22806; <code>getRepository()</code> &#36820;&#22238;&#30340; Bean &#36824;&#28155;&#21152;&#20102;&#19968;&#23618;&#21160;&#24577;&#20195;&#29702;&#65292;&#20854;&#20013;&#28155;&#21152;&#20102;&#19968;&#20123; AOP &#36890;&#30693;&#65292;&#26681;&#25454;&#19981;&#21516;&#24773;&#20917;&#65292;&#21487;&#33021;&#20250;&#26377;&#20197;&#19979;&#20960;&#31181;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>MethodInvocationValidator</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>ExposeInvocationInterceptor</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>DefaultMethodInvokingMethodInterceptor</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>QueryExecutorMethodInterceptor</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>ImplementationMethodExecutionInterceptor</code></li>
</ul>
<p>&#22312;&#36825;&#20123;&#36890;&#30693;&#20013;&#65292;<code>QueryExecutorMethodInterceptor</code> &#23601;&#36127;&#36131;&#20026;&#25105;&#20204;&#33258;&#23450;&#20041;&#30340;&#21508;&#31181;&#26597;&#35810;&#26041;&#27861;&#25552;&#20379;&#23454;&#29616;&#12290;<code>PartTree</code> &#23450;&#20041;&#20102;&#26597;&#35810;&#26041;&#27861;&#35813;&#22914;&#20309;&#35299;&#26512;&#65292;&#20851;&#38190;&#35789;&#20449;&#24687;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>private static final String KEYWORD_TEMPLATE = "(%s)(?=(\\p{Lu}|\\P{InBASIC_LATIN}))";
private static final String QUERY_PATTERN = "find|read|get|query|search|stream";
private static final String COUNT_PATTERN = "count";
private static final String EXISTS_PATTERN = "exists";
private static final String DELETE_PATTERN = "delete|remove";</code></pre>
<p><code>Part</code> &#31867;&#20013;&#30340;&#20869;&#37096;&#26522;&#20030; <code>Type</code> &#20013;&#23450;&#20041;&#20102;&#21508;&#24335;&#26465;&#20214;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>private static final List&lt;Part.Type&gt; ALL = Arrays.asList(IS_NOT_NULL, IS_NULL, BETWEEN, LESS_THAN,
    LESS_THAN_EQUAL, GREATER_THAN, GREATER_THAN_EQUAL, BEFORE, AFTER, NOT_LIKE, LIKE,
    STARTING_WITH, ENDING_WITH, IS_NOT_EMPTY, IS_EMPTY, NOT_CONTAINING, CONTAINING, NOT_IN, IN,
    NEAR, WITHIN, REGEX, EXISTS, TRUE, FALSE, NEGATING_SIMPLE_PROPERTY, SIMPLE_PROPERTY);</code></pre>
<p><code>AbstractJpaQuery</code> &#23376;&#31867;&#20013;&#30340; <code>execute(Object[] parameters)</code> &#26041;&#27861;&#36127;&#36131;&#25191;&#34892;&#20855;&#20307;&#30340;&#26597;&#35810;&#12290;</p>
<p>&#32463;&#36807;&#36825;&#26679;&#30340;&#19968;&#36335;&#20998;&#26512;&#65292;&#21487;&#20197;&#21457;&#29616;&#25972;&#20010; JPA &#30340; <code>Repository</code> &#30340;&#23454;&#29616;&#24182;&#27809;&#26377;&#22826;&#22810;&#39640;&#28145;&#30340;&#22320;&#26041;&#65292;&#20381;&#38752;&#21160;&#24577;&#20195;&#29702;&#21644;&#23545;&#21508;&#31181;&#24773;&#20917;&#30340;&#39044;&#20808;&#32534;&#30721;&#65292;&#26368;&#21518;&#30340;&#25928;&#26524;&#23601;&#26159;&#25105;&#20204;&#30475;&#21040;&#30340;&#65306;&#36890;&#36807;&#23450;&#20041;&#25509;&#21475;&#26469;&#23454;&#29616;&#26684;&#24335;&#25805;&#20316;&#12290;</p>
</blockquote><h2 id="nav_point_114">7.2&#12288;&#36890;&#36807; MyBatis &#25805;&#20316;&#25968;&#25454;&#24211;</h2><p>MyBatis &#26159;&#19968;&#27454;&#20248;&#31168;&#30340;&#25345;&#20037;&#21270;&#26694;&#26550;&#65292;&#23427;&#25903;&#25345;&#33258;&#23450;&#20041; SQL&#12289;&#23384;&#20648;&#36807;&#31243;&#21644;&#39640;&#32423;&#26144;&#23556;&#12290;&#19982; Hibernate &#19968;&#26679;&#65292;&#25105;&#20204;&#20960;&#20046;&#19981;&#20877;&#38656;&#35201;&#25163;&#20889; JDBC &#20195;&#30721;&#65292;&#23601;&#33021;&#23436;&#25104;&#24120;&#35265;&#30340;&#25968;&#25454;&#24211;&#25805;&#20316;&#12290;&#34920; 7-8 &#23545;&#20004;&#31181;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26694;&#26550;&#20570;&#20102;&#19968;&#20010;&#31616;&#21333;&#30340;&#23545;&#27604;&#12290;</p><p><strong>&#34920; 7-8&#12288;MyBatis &#19982; Hibernate &#30340;&#31616;&#21333;&#23545;&#27604; <sup><b>10</b> <b>11</b></sup></strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#160;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">MyBatis</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">Hibernate</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">XML &#26041;&#24335;&#37197;&#32622;&#26144;&#23556;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#27880;&#35299;&#26041;&#24335;&#37197;&#32622;&#26144;&#23556;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#33258;&#21160;&#29983;&#25104;&#30446;&#26631; SQL</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#19981;&#25903;&#25345; <span class="&#27880;&#37322;&#32534;&#21495;">10</span></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#22797;&#26434;&#30340; SQL &#25805;&#20316;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#37096;&#20998;&#25903;&#25345; <span class="&#27880;&#37322;&#32534;&#21495;">11</span></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">SQL &#20248;&#21270;&#38590;&#26131;&#31243;&#24230;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26041;&#20415;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#19981;&#26041;&#20415;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#24213;&#23618;&#25968;&#25454;&#24211;&#30340;&#21487;&#31227;&#26893;&#24615;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26144;&#23556; SQL &#19982;&#25968;&#25454;&#24211;&#32465;&#23450;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26377;&#28789;&#27963;&#30340;&#8220;&#26041;&#35328;&#8221;&#25903;&#25345;</p></td>
</tr>
</tbody>
</table><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">10</span>MyBatis &#26412;&#36523;&#26159;&#38656;&#35201;&#25163;&#20889; SQL &#35821;&#21477;&#30340;&#65292;&#20294;&#26159;&#26377;&#24037;&#20855;&#21487;&#20197;&#24110;&#21161;&#25105;&#20204;&#29983;&#25104;&#26144;&#23556;&#25991;&#20214;&#65292;&#38477;&#20302;&#24037;&#20316;&#37327;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">11</span>Hibernate &#21487;&#20197;&#36890;&#36807;&#33258;&#23450;&#20041; HQL &#30340;&#26041;&#24335;&#36827;&#34892;&#22797;&#26434;&#30340;&#26597;&#35810;&#12290;</p><p>&#36890;&#36807; Google Trends&#65292;&#25105;&#20204;&#21487;&#20197;&#30475;&#21040;&#19968;&#20010;&#26377;&#36259;&#30340;&#29616;&#35937;&#65306;&#36807;&#21435; 5 &#24180;&#37324; <span class="&#27880;&#37322;&#32534;&#21495;">12</span>&#65292;&#22312;&#20840;&#29699;&#33539;&#22260;&#20869;&#65292;Hibernate &#30340;&#25628;&#32034;&#28909;&#24230;&#26159; MyBatis &#30340; 5.7 &#20493;&#65307;&#32780;&#22312;&#20013;&#22269;&#65292;&#24773;&#20917;&#24688;&#24688;&#30456;&#21453;&#65292;MyBatis &#30340;&#25628;&#32034;&#28909;&#24230;&#26159; Hibernate &#30340; 2.7 &#20493;&#24038;&#21491;&#12290;&#25353;&#29031;&#23545; MyBatis &#20851;&#38190;&#35789;&#30340;&#20851;&#27880;&#24230;&#25490;&#24207;&#30340;&#35805;&#65292;&#21069; 5 &#20010;&#22478;&#24066;&#20998;&#21035;&#26159;&#26477;&#24030;&#12289;&#21271;&#20140;&#12289;&#28145;&#22323;&#12289;&#19978;&#28023;&#21644;&#24191;&#24030;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">12</span>&#20889;&#36825;&#19968;&#33410;&#21021;&#31295;&#30340;&#26102;&#38388;&#26159; 2020 &#24180; 9 &#26376;&#65292;&#25152;&#20197;&#36825;&#37324;&#30340;&#32479;&#35745;&#20063;&#25130;&#27490;&#21040; 2020 &#24180; 9 &#26376;&#12290;</p><p>&#20854;&#23454;&#65292;&#36825;&#20010;&#29616;&#35937;&#36824;&#26159;&#27604;&#36739;&#23481;&#26131;&#35299;&#37322;&#30340;&#65292;&#22312;&#20013;&#22269;&#65292;&#20114;&#32852;&#32593;&#22823;&#21378;&#26222;&#36941;&#26356;&#21916;&#27426;&#20351;&#29992; MyBatis&#12290;&#22312;&#38463;&#37324;&#65292;&#32477;&#22823;&#22810;&#25968; Java &#39033;&#30446;&#37117;&#20351;&#29992; MyBatis &#32780;&#38750; Hibernate&#65292;&#33509;&#37197;&#21512;&#19968;&#20123;&#24037;&#20855;&#65292;MyBatis &#30340;&#26041;&#20415;&#31243;&#24230;&#19981;&#20122;&#20110; Hibernate&#65292;&#32780;&#19988;&#19987;&#19994;&#30340; DBA &#21487;&#20197;&#23545; SQL &#20570;&#21508;&#31181;&#20248;&#21270;&#65292;&#28789;&#27963;&#24230;&#24456;&#39640;&#12290;</p><p>&#22240;&#27492;&#65292;&#36825;&#19968;&#33410;&#65292;&#25105;&#20204;&#20250;&#19968;&#36215;&#26469;&#31616;&#21333;&#30475;&#19968;&#19979;&#22914;&#20309;&#22312; Spring &#39033;&#30446;&#20013;&#20351;&#29992; MyBatis&#12290;&#26356;&#22810;&#35814;&#32454;&#30340;&#20869;&#23481;&#65292;&#24863;&#20852;&#36259;&#30340;&#21516;&#23398;&#21487;&#20197;&#26597;&#38405;&#23448;&#26041;&#25991;&#26723;&#12290;&#23448;&#26041;&#20063;&#26377;&#27604;&#36739;&#35814;&#32454;&#30340;&#20013;&#25991;&#29256;&#26412;&#12290;</p><h3 id="nav_point_115">7.2.1&#12288;&#23450;&#20041; MyBatis &#26144;&#23556;</h3><p>MyBatis &#25903;&#25345;&#36890;&#36807; XML &#21644;&#27880;&#35299;&#20004;&#31181;&#26041;&#24335;&#26469;&#37197;&#32622;&#26144;&#23556;&#12290;&#20174;&#26089;&#26399;&#30340; iBatis &#24320;&#22987;&#65292;XML &#30340;&#21151;&#33021;&#23601;&#24050;&#32463;&#24456;&#40784;&#20840;&#20102;&#65292;&#27880;&#35299;&#30340;&#26041;&#24335;&#26159;&#21518;&#26469;&#25165;&#20986;&#29616;&#30340;&#12290;&#22240;&#20026;&#22312;&#20171;&#32461; JPA &#26102;&#25105;&#20204;&#23601;&#20351;&#29992;&#20102;&#27880;&#35299;&#30340;&#26041;&#24335;&#65292;&#25152;&#20197;&#36825;&#37324;&#25105;&#20204;&#20063;&#36890;&#36807;&#27880;&#35299;&#26469;&#20570;&#26144;&#23556;&#12290;</p><ol>
<li><p><strong>&#36890;&#36807;&#27880;&#35299;&#23450;&#20041;&#24120;&#29992;&#25805;&#20316;&#26144;&#23556;</strong></p>
<p>&#22312;&#20351;&#29992; JPA &#26102;&#65292;&#25105;&#20204;&#30340;&#26144;&#23556;&#20851;&#31995;&#26159;&#23450;&#20041;&#22312;&#23454;&#20307;&#31867;&#19978;&#30340;&#65307;&#20294;&#22312; MyBatis &#20013;&#65292;&#25105;&#20204;&#23545;&#23454;&#20307;&#31867;&#27809;&#26377;&#20160;&#20040;&#35201;&#27714;&#65292;&#20063;&#26080;&#39035;&#28155;&#21152;&#29305;&#23450;&#30340;&#27880;&#35299;&#65292;&#21508;&#31181;&#26144;&#23556;&#37117;&#26159;&#36890;&#36807; <code>Mapper</code> &#25509;&#21475;&#26469;&#23450;&#20041;&#30340;&#12290;&#20195;&#30721;&#31034;&#20363; 7-19<span class="&#27880;&#37322;&#32534;&#21495;">13</span> &#26159;&#19982;&#20195;&#30721;&#31034;&#20363; 7-3 &#23545;&#24212;&#30340;&#23454;&#20307;&#31867;&#65292;&#21482;&#20445;&#30041;&#20102; Lombok &#27880;&#35299;&#65292;&#27809;&#26377;&#20854;&#20182;&#39069;&#22806;&#30340;&#20869;&#23481;&#65292;&#20854;&#20182;&#20960;&#20010;&#23454;&#20307;&#31867;&#30340;&#25913;&#21160;&#26159;&#19968;&#26679;&#30340;&#65292;&#23601;&#19981;&#20877;&#35828;&#26126;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-19</strong>&#12288;MyBatis &#20013;&#20351;&#29992;&#30340;&#37096;&#20998;&#23454;&#20307;&#31867;&#23450;&#20041;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public enum Size {
    SMALL, MEDIUM, LARGE
}

@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
    public class MenuItem {
    private Long id;
    private String name;
    private Size size;
    private Money price;
    private Date createTime;
    private Date updateTime;
}</code></pre>
<p>&#19982;&#20043;&#21305;&#37197;&#30340; <code>Mapper</code> &#25509;&#21475;&#22914;&#20195;&#30721;&#31034;&#20363; 7-20 &#25152;&#31034;&#65292;&#20854;&#20013;&#21253;&#21547;&#20102;&#24120;&#29992;&#30340;&#22686;&#21024;&#25913;&#26597;&#26041;&#27861;&#65292;&#20004;&#31181;&#23454;&#29616;&#26041;&#24335;&#19979;&#23427;&#20204;&#30340;&#21151;&#33021;&#26159;&#22522;&#26412;&#31867;&#20284;&#30340;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-20</strong>&#12288;&#28155;&#21152;&#20102; MyBatis &#27880;&#35299;&#30340; <code>Mapper</code> &#25509;&#21475;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Mapper
public interface MenuItemMapper {
    @Select("select count(*) from t_menu")
    long count();

    @Insert("insert into t_menu (name, price, size, create_time, update_time) " +
            "values (#{name}, #{price}, #{size}, now(), now())")
    @Options(useGeneratedKeys = true, keyProperty = "id")
    int save(MenuItem menuItem);

    @Update("update t_menu set name = #{name}, price = #{price}, size = #{size}, update_time = now() " +
            "where id = #{id}")
    int update(MenuItem menuItem);

    @Select("select * from t_menu where id = #{id}")
        @Results(id = "menuItem", value = {
        @Result(column = "id", property = "id", id = true),
        @Result(column = "size", property = "size", typeHandler = EnumTypeHandler.class),
        @Result(column = "price", property = "price", typeHandler = MoneyTypeHandler.class),
        @Result(column = "create_time", property = "createTime"),
        @Result(column = "update_time", property = "updateTime")
    })
    MenuItem findById(@Param("id") Long id);

    @Delete("delete from t_menu where id = #{id}")
    int deleteById(@Param("id") Long id);

    @Select("select * from t_menu")
    List&lt;MenuItem&gt; findAll();

    @Select("select m.* from t_menu m, t_order_item i where m.id = i.item_id and i.order_id = #{orderId}")
    List&lt;MenuItem&gt; findByOrderId(Long orderId);
}</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#35753;&#25105;&#20204;&#35814;&#32454;&#22320;&#20102;&#35299;&#19968;&#19979;&#19978;&#36848;&#20195;&#30721;&#20013;&#29992;&#21040;&#30340;&#27880;&#35299;&#65292;&#20855;&#20307;&#22914;&#34920; 7-9 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 7-9&#12288;MyBatis &#20013;&#30340;&#24120;&#29992;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#27880;&#35299;</th><th>&#20316;&#29992;</th><th>&#37325;&#28857;&#23646;&#24615;&#35828;&#26126;</th></tr><tr><td><code>@Insert</code></td><td>&#23450;&#20041;&#25554;&#20837;&#25805;&#20316;</td><td><code>value</code> &#20026;&#20855;&#20307;&#20351;&#29992;&#30340; SQL &#35821;&#21477;</td></tr><tr><td><code>@Delete</code></td><td>&#23450;&#20041;&#21024;&#38500;&#25805;&#20316;</td><td>&#21516;&#19978;</td></tr><tr><td><code>@Update</code></td><td>&#23450;&#20041;&#26356;&#26032;&#25805;&#20316;</td><td>&#21516;&#19978;</td></tr><tr><td><code>@Select</code></td><td>&#23450;&#20041;&#26597;&#35810;&#25805;&#20316;</td><td>&#21516;&#19978;</td></tr><tr><td><code>@Param</code></td><td>&#25351;&#23450;&#21442;&#25968;&#21517;&#31216;&#65292;&#26041;&#20415;&#22312; SQL &#20013;&#20351;&#29992;&#23545;&#24212;&#21442;&#25968;&#65288;&#19968;&#33324;&#19981;&#29992;&#25351;&#23450;&#65289;</td><td></td></tr><tr><td><code>@Results</code></td><td>&#25351;&#23450;&#36820;&#22238;&#23545;&#35937;&#30340;&#26144;&#23556;&#26041;&#24335;&#65292;&#20855;&#20307;&#20869;&#23481;&#36890;&#36807; <code>@Result</code> &#27880;&#35299;&#35774;&#32622;</td><td><code>id</code> &#29992;&#26469;&#35774;&#32622;&#32467;&#26524;&#26144;&#23556;&#30340; ID&#65292;&#20197;&#20415;&#22797;&#29992;</td></tr><tr><td><code>@Result</code></td><td>&#25351;&#23450;&#20855;&#20307;&#23383;&#27573;&#12289;&#23646;&#24615;&#30340;&#26144;&#23556;&#20851;&#31995;</td><td></td></tr><tr><td><code>@ResultMap</code></td><td>&#24341;&#29992;&#20854;&#20182;&#22320;&#26041;&#24050;&#20107;&#20808;&#23450;&#20041;&#22909;&#30340;&#26144;&#23556;&#20851;&#31995;</td><td></td></tr><tr><td><code>@Options</code></td><td>&#35774;&#32622;&#24320;&#20851;&#21644;&#37197;&#32622;&#36873;&#39033;</td><td><code>useGeneratedKeys</code>&#8212;&#8212;&#20351;&#29992;&#29983;&#25104;&#30340;&#20027;&#38190;&#65292;<code>keyProperty</code>&#8212;&#8212;&#20027;&#38190;&#23646;&#24615;&#21517;&#65292;<code>fetchSize</code>&#8212;&#8212;&#33719;&#21462;&#32467;&#26524;&#38598;&#30340;&#26465;&#25968;&#65292;<code>timeout</code>&#8212;&#8212;&#36229;&#26102;&#26102;&#38388;</td></tr><tr><td><code>@One</code></td><td>&#25351;&#23450;&#22797;&#26434;&#30340;&#21333;&#20010;&#23646;&#24615;&#26144;&#23556;</td><td><code>Select</code>&#8212;&#8212;&#25351;&#23450;&#26597;&#35810;&#20351;&#29992;&#30340; Java &#26041;&#27861;</td></tr><tr><td><code>@Many</code></td><td>&#25351;&#23450;&#22797;&#26434;&#30340;&#38598;&#21512;&#23646;&#24615;&#26144;&#23556;</td><td>&#21516;&#19978;</td></tr></table>
<p>&#160;</p>
</li>
<li><p><strong>&#33258;&#23450;&#20041;&#31867;&#22411;&#26144;&#23556;</strong></p>
<p>MyBatis &#26159;&#36890;&#36807; <code>TypeHandler</code> &#26469;&#23454;&#29616;&#29305;&#27530;&#31867;&#22411;&#30340;&#22788;&#29702;&#30340;&#12290;&#22312;&#20195;&#30721;&#31034;&#20363; 7-17 &#20013;&#65292;&#26377;&#19968;&#27573;&#20195;&#30721;&#23450;&#20041;&#20102;&#29305;&#27530;&#31867;&#22411;&#30340;&#26144;&#23556;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Result(column = "size", property = "size", typeHandler = EnumTypeHandler.class),
@Result(column = "price", property = "price", typeHandler = MoneyTypeHandler.class),</code></pre>
<p><code>size</code> &#23646;&#24615;&#26159;&#19968;&#20010;&#26522;&#20030;&#65292;&#36890;&#24120;&#26522;&#20030;&#22312;&#25968;&#25454;&#24211;&#20013;&#26377;&#20004;&#31181;&#20445;&#23384;&#26041;&#24335;&#65292;&#19968;&#31181;&#26159;&#20445;&#23384;&#26522;&#20030;&#21517;&#65292;&#29992;&#30340;&#23601;&#26159; <code>EnumTypeHandler</code>&#65292;&#20363;&#22914;&#65292;<code>size</code> &#26522;&#20030;&#30340; <code>SMALL</code>&#12289;<code>MEDIUM</code> &#21644; <code>LARGE</code>&#65307;&#21478;&#19968;&#31181;&#26159;&#20445;&#23384;&#26522;&#20030;&#30340;&#39034;&#24207;&#65292;&#29992;&#30340;&#26159; <code>EnumOrdinalTypeHandler</code>&#65292;&#20363;&#22914;&#65292;<code>0</code>&#12289;<code>1</code> &#21644; <code>2</code> &#20998;&#21035;&#23545;&#24212;&#20102;&#21069;&#38754; <code>size</code> &#26522;&#20030;&#30340; <code>SMALL</code>&#12289;<code>MEDIUM</code> &#21644; <code>LARGE</code>&#12290;MyBatis &#20013;&#40664;&#35748;&#20351;&#29992; <code>EnumTypeHandler</code> &#26469;&#22788;&#29702;&#26522;&#20030;&#31867;&#22411;&#12290;</p>
<p><code>price</code> &#23646;&#24615;&#30340;&#31867;&#22411;&#26159; <code>Money</code>&#65292;&#36825;&#20010;&#31867; MyBatis &#27809;&#26377;&#25552;&#20379;&#20869;&#32622;&#30340; <code>TypeHandler</code>&#65292;&#22240;&#27492;&#38656;&#35201;&#25105;&#20204;&#33258;&#24049;&#26469;&#23454;&#29616;&#19968;&#20010;&#38024;&#23545; <code>Money</code> &#31867;&#22411;&#30340;&#22788;&#29702;&#22120;&#12290;MyBatis &#25552;&#20379;&#20102; <code>BaseTypeHandler</code> &#25277;&#35937;&#31867;&#65292;&#36890;&#36807;&#23427;&#21487;&#20197;&#26041;&#20415;&#22320;&#23454;&#29616; <code>TypeHandler</code>&#12290;<code>MoneyTypeHandler</code> &#30340;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 7-21 &#25152;&#31034;&#65292;&#23427;&#30340;&#20316;&#29992;&#26159;&#23558;&#37329;&#39069;&#25353;&#20998;&#20026;&#21333;&#20301;&#65292;&#36716;&#25442;&#20026; <code>Long</code> &#31867;&#22411;&#20445;&#23384;&#21040;&#25968;&#25454;&#24211;&#20013;&#65292;&#22312;&#21462;&#20986;&#26102;&#21017;&#20197;&#20154;&#27665;&#24065;&#20026;&#24065;&#31181;&#36824;&#21407;&#20026; <code>Money</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-21</strong>&#12288;&#22788;&#29702; <code>Money</code> &#31867;&#22411;&#30340; <code>MoneyTypeHandler</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class MoneyTypeHandler extends BaseTypeHandler&lt;Money&gt; {
    @Override
    public void setNonNullParameter(PreparedStatement ps, int i,
                                    Money parameter, JdbcType jdbcType) throws SQLException {
        ps.setLong(i, parameter.getAmountMinorLong());
    }

    @Override
    public Money getNullableResult(ResultSet rs, String columnName) throws SQLException {
        return parseMoney(rs.getLong(columnName));
    }

    @Override
    public Money getNullableResult(ResultSet rs, int columnIndex) throws SQLException {
        return parseMoney(rs.getLong(columnIndex));
    }

    @Override
    public Money getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {
        return parseMoney(cs.getLong(columnIndex));
    }

    private Money parseMoney(Long value) {
        return Money.ofMinor(CurrencyUnit.of("CNY"), value);
    }
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#19968;&#23545;&#22810;&#19982;&#22810;&#23545;&#22810;&#20851;&#31995;</strong></p>
<p>&#22312;&#22788;&#29702;&#23545;&#35937;&#26102;&#65292;&#25105;&#20204;&#36824;&#26377;&#19968;&#23545;&#19968;&#12289;&#19968;&#23545;&#22810;&#21644;&#22810;&#23545;&#22810;&#36825;&#26679;&#30340;&#20851;&#31995;&#65292;&#22312; JPA &#20013;&#26377;&#23545;&#24212;&#30340;&#27880;&#35299;&#21487;&#20197;&#36827;&#34892;&#37197;&#32622;&#65292;&#22312; MyBatis &#20013;&#20063;&#26377;&#31867;&#20284;&#30340;&#21151;&#33021;&#12290;&#34920; 7-9 &#20013;&#24050;&#32463;&#20171;&#32461;&#36807;&#20102; <code>@One</code> &#21644; <code>@Many</code> &#27880;&#35299;&#65292;&#29616;&#22312;&#23601;&#35753;&#25105;&#20204;&#19968;&#36215;&#26469;&#30475;&#19968;&#19979;&#23427;&#20204;&#30340;&#20855;&#20307;&#20351;&#29992;&#26041;&#27861;&#12290;</p>
<p><code>TeaMaker</code> &#20013;&#30340; <code>orders</code> &#21015;&#34920;&#20445;&#23384;&#30340;&#26159;&#36825;&#20301;&#35843;&#33590;&#24072;&#25152;&#36127;&#36131;&#30340;&#35746;&#21333;&#20449;&#24687;&#65292;&#22312; <code>Order</code> &#20013;&#21017;&#36890;&#36807; <code>maker</code> &#23646;&#24615;&#20445;&#23384;&#20102;&#35746;&#21333;&#25152;&#23545;&#24212;&#30340;&#35843;&#33590;&#24072;&#20449;&#24687;&#12290;&#36825;&#26159;&#19968;&#20010;&#20856;&#22411;&#30340;&#19968;&#23545;&#22810;&#26144;&#23556;&#65292;&#36825;&#20010;&#20851;&#31995;&#22312;&#25968;&#25454;&#24211;&#20013;&#26159;&#30001; <code>t_order</code> &#34920;&#30340; <code>maker_id</code> &#23383;&#27573;&#26469;&#20570;&#25345;&#20037;&#21270;&#30340;&#12290;&#20195;&#30721;&#31034;&#20363; 7-22 &#28436;&#31034;&#20102;&#22914;&#20309;&#23450;&#20041; <code>TeaMaker</code> &#20197;&#21450;&#35813;&#22914;&#20309;&#21152;&#36733; <code>orders</code> &#38598;&#21512;&#12290;&#21487;&#20197;&#30475;&#21040; <code>@Many</code> &#20013;&#32473;&#23450;&#30340;&#26159;&#20855;&#20307;&#33719;&#21462;&#26041;&#27861;&#30340;&#20840;&#38480;&#23450;&#31867;&#21517;&#21152;&#26041;&#27861;&#21517;&#65292;&#26041;&#27861;&#30340;&#21442;&#25968;&#23601;&#26159;&#25351;&#23450;&#30340;&#23383;&#27573;&#20869;&#23481;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-22</strong>&#12288;&#22312; <code>TeaMakerMapper</code> &#20013;&#23450;&#20041;&#19968;&#23545;&#22810;&#30340;&#19968;&#26041;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Mapper
public interface TeaMakerMapper {
    @Select("select * from t_tea_maker where id = #{id}")
    @Results(id = "teaMakerMap", value = {
        @Result(column = "id", property = "id"),
        @Result(column = "id", property = "orders",
                many = @Many(select = "learning.spring.binarytea.repository.OrderMapper.findByMakerId"))
    })
    TeaMaker findById(Long id);
    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
<p>&#20195;&#30721;&#31034;&#20363; 7-23 &#28436;&#31034;&#20102;&#22312; <code>Order</code> &#20013;&#22914;&#20309;&#26681;&#25454; <code>maker_id</code> &#21152;&#36733; <code>TeaMaker</code>&#65292;<code>@One</code> &#20013;&#21516;&#26679;&#25552;&#20379;&#20102;&#20855;&#20307;&#30340;&#26597;&#35810;&#26041;&#27861;&#12290;&#27492;&#22806;&#65292;&#35746;&#21333;&#30340;&#20855;&#20307;&#26465;&#30446;&#21644;&#35746;&#21333;&#20043;&#38388;&#26159;&#19968;&#20010;&#22810;&#23545;&#22810;&#20851;&#31995;&#65292;&#21363; <code>Order</code> &#23545;&#35937;&#21644; <code>MenuItem</code> &#23545;&#35937;&#20043;&#38388;&#23384;&#22312;&#22810;&#23545;&#22810;&#20851;&#31995;&#65292;&#20855;&#20307;&#30340;&#20851;&#31995;&#20445;&#23384;&#22312; <code>t_order_item</code> &#34920;&#20013;&#12290;&#25105;&#20204;&#21487;&#20197;&#30475;&#21040; <code>Order</code> &#30340; <code>items</code> &#21015;&#34920;&#20351;&#29992;&#20102; <code>@Many</code> &#26469;&#25351;&#23450;&#26597;&#35810; <code>MenuItem</code> &#38598;&#21512;&#30340;&#26041;&#27861;&#65292;&#36825;&#20010; <code>MenuItemMapper.findByOrderId()</code> &#24050;&#32463;&#22312;&#20195;&#30721;&#31034;&#20363; 7-20 &#20013;&#25552;&#20379;&#20102;&#12290;&#20195;&#30721;&#31034;&#20363; 7-23 &#30340; <code>findByMakerId()</code> &#26041;&#27861;&#36824;&#28436;&#31034;&#20102; <code>@ResultMap</code> &#27880;&#35299;&#30340;&#29992;&#27861;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-23</strong>&#12288;&#22312; <code>OrderMapper</code> &#20013;&#23450;&#20041;&#22810;&#23545;&#19968;&#21644;&#22810;&#23545;&#22810;&#20851;&#31995;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Mapper
public interface OrderMapper {
    @Select("select * from t_order where id = #{id}")
    @Results(id = "orderMap", value = {
        @Result(column = "status", property = "status", typeHandler = EnumOrdinalTypeHandler.class),
        @Result(column = "amount_discount", property = "amount.discount"),
        @Result(column = "amount_total", property = "amount.totalAmount"),
        @Result(column = "amount_pay", property = "amount.payAmount"),
        @Result(column = "maker_id", property = "maker",
                one = @One(select = "learning.spring.binarytea.repository.TeaMakerMapper.findById")),
        @Result(column = "id", property = "items",
                many = @Many(select = "learning.spring.binarytea.repository.MenuItemMapper.findByOrderId"))
    })
    Order findById(Long id);

    @Select("select * from t_order where maker_id = #{makerId}")
    @ResultMap("orderMap")
    List&lt;Order&gt; findByMakerId(Long makerId);
    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
<p>&#38500;&#20102;&#26597;&#35810;&#65292;&#22810;&#23545;&#22810;&#20851;&#31995;&#30340;&#20445;&#23384;&#20063;&#38656;&#35201;&#29305;&#27530;&#22788;&#29702;&#65292;&#20195;&#30721;&#31034;&#20363; 7-24 &#23601;&#26159;&#20855;&#20307;&#30340;&#20869;&#23481;&#12290;<code>OrderMapper</code> &#30340; <code>save()</code> &#26041;&#27861;&#21487;&#20197;&#30452;&#25509;&#20445;&#23384;&#22823;&#37096;&#20998;&#30340;&#35746;&#21333;&#20449;&#24687;&#65292;&#21253;&#25324;&#20854;&#20013;&#19982; <code>TeaMaker</code> &#30340;&#20851;&#31995;&#12290;<code>t_order</code> &#34920;&#22312;&#20445;&#23384; <code>status</code> &#26102;&#23601;&#26159;&#20351;&#29992;&#30340; <code>EnumOrdinalTypeHandler</code> &#31867;&#22411;&#22788;&#29702;&#22120;&#65292;&#23427;&#33021;&#22815;&#20445;&#23384;&#24207;&#21495;&#12290;<code>addOrderItem()</code> &#26041;&#27861;&#29992;&#26469;&#28155;&#21152;&#35746;&#21333;&#20013;&#30340;&#20855;&#20307;&#26465;&#30446;&#65292;&#20855;&#20307;&#30340; SQL &#21017;&#26159;&#21521; <code>t_order_item</code> &#34920;&#20013;&#25554;&#20837;&#35760;&#24405; <span class="&#27880;&#37322;&#32534;&#21495;">14</span>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-24</strong>&#12288;&#22312; <code>OrderRepository</code> &#20013;&#20445;&#23384;&#35746;&#21333;&#21450;&#23545;&#24212;&#20869;&#23481;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Mapper
public interface OrderMapper {
    @Insert("insert into t_order " +
            "(maker_id, status, amount_discount, amount_pay, amount_total, create_time, update_time) " +
            "values (#{maker.id}, #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, " +
            "#{amount.discount}, #{amount.payAmount}, #{amount.totalAmount}, now(), now())")
    @Options(useGeneratedKeys = true, keyProperty = "id")
    int save(Order order);

    @Insert("insert into t_order_item (order_id, item_id) values (#{orderId}, #{item.id})")
    int addOrderItem(Long orderId, MenuItem item);
    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">13</span>&#26412;&#33410;&#20013; MyBatis &#30340;&#20195;&#30721;&#31034;&#20363;&#37117;&#22312; ch7/binarytea-mybatis &#39033;&#30446;&#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">14</span>&#36890;&#24120;&#25105;&#20204;&#20250;&#24314;&#35758;&#22312;&#27599;&#24352;&#34920;&#20013;&#37117;&#22686;&#21152;&#29992;&#26469;&#35760;&#24405;&#21019;&#24314;&#26102;&#38388;&#21644;&#20462;&#25913;&#26102;&#38388;&#30340;&#23383;&#27573;&#12290;&#27492;&#22788;&#30340; <code>t_order_item</code> &#20026;&#20102;&#20445;&#25345;&#21644;&#20043;&#21069; JPA &#33258;&#21160;&#29983;&#25104;&#30340;&#34920;&#32467;&#26500;&#19968;&#33268;&#65292;&#24182;&#26410;&#22686;&#21152; <code>create_time</code> &#21644; <code>update_time</code> &#23383;&#27573;&#65292;&#36825;&#24182;&#19981;&#26159;&#25105;&#20204;&#25512;&#33616;&#30340;&#20570;&#27861;&#65292;&#36824;&#26159;&#24314;&#35758;&#22823;&#23478;&#22312;&#23454;&#38469;&#29983;&#20135;&#29615;&#22659;&#30340;&#34920;&#20013;&#22686;&#21152;&#20197;&#19978;&#20004;&#20010;&#23383;&#27573;&#12290;&#27492;&#22806;&#65292;&#22312; MySQL &#31561;&#25968;&#25454;&#24211;&#20013;&#65292;&#27599;&#24352;&#34920;&#36824;&#24314;&#35758;&#22686;&#21152;&#19968;&#20010;&#20027;&#38190;&#23383;&#27573;&#65292;&#27492;&#22788;&#20165;&#20026;&#28436;&#31034;&#20316;&#29992;&#65292;&#20063;&#27809;&#26377;&#28155;&#21152;&#12290;&#25152;&#20197;&#35813;&#34920;&#30340;&#35774;&#35745;&#24182;&#19981;&#26159;&#29305;&#21035;&#21512;&#29702;&#65292;&#35831;&#21247;&#22312;&#29983;&#20135;&#29615;&#22659;&#36825;&#26679;&#35774;&#35745;&#12290;</p><h3 id="nav_point_116">7.2.2&#12288;&#22312; Spring &#20013;&#37197;&#32622;&#24182;&#20351;&#29992; MyBatis</h3><p>&#23450;&#20041;&#22909;&#20102;&#26144;&#23556;&#20851;&#31995;&#65292;&#25509;&#19979;&#26469;&#30340;&#38382;&#39064;&#23601;&#26159;&#22914;&#20309;&#22312;&#24037;&#31243;&#20013;&#20351;&#29992;&#23427;&#20204;&#12290;MyBatis-Spring &#20026; MyBatis &#25552;&#20379;&#20102;&#19982; Spring Framework &#26080;&#32541;&#38598;&#25104;&#30340;&#33021;&#21147;&#65292;&#20854;&#20013;&#21253;&#25324;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#19982; Spring &#20107;&#21153;&#30340;&#38598;&#25104;&#65292;&#20027;&#35201;&#38752; <code>SpringManagedTransaction</code> &#19982; <code>SpringManagedTransactionFactory</code> &#26469;&#23454;&#29616;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>SqlSession</code> &#30340;&#26500;&#24314;&#65292;&#20027;&#35201;&#38752; <code>SqlSessionFactoryBean</code> &#23454;&#29616;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><code>Mapper</code> &#30340;&#26500;&#24314;&#65292;&#25163;&#21160;&#26500;&#24314;&#38752; <code>MapperFactoryBean</code>&#65292;&#20063;&#21487;&#20197;&#36890;&#36807; <code>MapperScannerConfigurer</code> &#26469;&#33258;&#21160;&#25195;&#25551;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#24322;&#24120;&#30340;&#35299;&#26512;&#19982;&#36716;&#25442;&#65292;&#30001; <code>MyBatisExceptionTranslator</code> &#23454;&#29616;&#12290;</li>
</ul><p>&#22312;&#23454;&#38469;&#20351;&#29992;&#26102;&#65292;&#25105;&#20204;&#21482;&#38656;&#35201;&#22312; Spring Framework &#30340;&#19978;&#19979;&#25991;&#20013;&#37197;&#32622;&#20960;&#20010; Bean &#23601;&#21487;&#20197;&#20102;&#65292;&#20363;&#22914;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;
    &lt;property name="dataSource" ref="dataSource" /&gt;
&lt;/bean&gt;

&lt;!-- &#25353;&#38656;&#23450;&#20041;Mapper Bean --&gt;
&lt;bean id="menuItemMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"&gt;
    &lt;property name="mapperInterface" value="learning.spring.binarytea.repository.MenuItemMapper" /&gt;
    &lt;property name="sqlSessionFactory" ref="sqlSessionFactory" /&gt;
&lt;/bean&gt;</code></pre><p>&#22312; <code>Mapper</code> &#22810;&#30340;&#26102;&#20505;&#65292;&#21487;&#20197;&#30452;&#25509;&#36890;&#36807;&#25195;&#25551;&#26469;&#23454;&#29616; <code>Mapper</code> &#30340;&#33258;&#21160;&#27880;&#20876;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd"&gt;

    &lt;mybatis:scan base-package="learning.spring.binarytea.repository" /&gt;

    &lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;
        &lt;property name="dataSource" ref="dataSource" /&gt;
    &lt;/bean&gt;

    &lt;!-- &#20854;&#20182;Bean&#37197;&#32622; --&gt;
&lt;/beans&gt;</code></pre><p>&#24403;&#28982;&#65292;&#36824;&#26377;&#26356;&#26041;&#20415;&#30340;&#27880;&#35299;&#65292;&#21487;&#20197;&#29992;&#26469;&#25351;&#23450;&#25195;&#25551;&#33539;&#22260;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@MapperScan("learning.spring.binarytea.repository")
public class Config {}</code></pre><p>&#20851;&#20110; MyBatis-Spring &#30340;&#26356;&#22810;&#37197;&#32622;&#32454;&#33410;&#23601;&#30041;&#32473;&#22823;&#23478;&#24930;&#24930;&#21435;&#23448;&#26041;&#25991;&#26723; <span class="&#27880;&#37322;&#32534;&#21495;">15</span> &#20013;&#25506;&#32034;&#21543;&#12290;&#20854;&#23454;&#36825;&#26679;&#30340;&#37197;&#32622;&#24050;&#32463;&#21313;&#20998;&#31616;&#21333;&#20102;&#65292;&#20294;&#26159;&#22312; Spring Boot &#30340;&#21152;&#25345;&#19979;&#65292;&#37197;&#32622;&#36824;&#21487;&#20197;&#36827;&#19968;&#27493;&#31616;&#21270;&#12290;&#20110;&#26159;&#23601;&#35813; MyBatis-Spring-Boot-Starter &#30331;&#22330;&#20102;&#65292;&#23427;&#21487;&#20197;&#24110;&#21161;&#25105;&#20204;&#20960;&#20046;&#28040;&#38500;&#27169;&#26495;&#24335;&#30340;&#20195;&#30721;&#21644; XML &#37197;&#32622;&#25991;&#20214;&#12290;&#32780;&#25105;&#20204;&#38656;&#35201;&#20570;&#30340;&#21482;&#26159;&#22312; pom.xml &#25991;&#20214;&#20013;&#22686;&#21152;&#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#21097;&#19979;&#30340;&#23601;&#20132;&#32473; <code>MybatisAutoConfiguration</code> &#21644; <code>MybatisLanguageDriverAutoConfiguration</code> &#26469;&#20570;&#33258;&#21160;&#37197;&#32622;&#21363;&#21487;&#65306;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">15</span>&#25991;&#26723;&#35265; MyBatis &#23448;&#32593;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;
    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;
    &lt;version&gt;2.2.2&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p>&#25105;&#20204;&#21487;&#20197;&#36890;&#36807; <code>application.properties</code> &#26469;&#23450;&#21046;&#19968;&#20123;&#37197;&#32622;&#65292;&#20363;&#22914;&#34920; 7-10 &#20013;&#32599;&#21015;&#30340;&#36825;&#20123;&#12290;</p><p><strong>&#34920; 7-10&#12288;MyBatis-Spring-Boot-AutoConfigure &#25903;&#25345;&#30340;&#19968;&#20123;&#37197;&#32622;&#39033;</strong><span class="&#27880;&#37322;&#32534;&#21495;">16</span></p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">16</span>&#21363;&#23558; <code>xxx_yyy</code> &#26144;&#23556;&#20026; <code>xxxYyy</code> &#30340;&#24418;&#24335;&#12290;</p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#37197;&#32622;&#39033;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybatis.type-aliases-package</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26144;&#23556;&#30340; POJO &#31867;&#22411;&#25918;&#32622;&#30340;&#21253;&#36335;&#24452;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybatis.type-handlers-package</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#31867;&#22411;&#26144;&#23556;&#25152;&#38656;&#30340; <code>TypeHandler</code> &#25918;&#32622;&#30340;&#21253;&#36335;&#24452;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybatis.config-location</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">MyBatis &#37197;&#32622;&#25991;&#20214;&#30340;&#20301;&#32622;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybaits.mapper-locations</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26144;&#23556;&#25991;&#20214;&#30340;&#20301;&#32622;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybatis.configuration.*</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">MyBatis &#26680;&#24515;&#37197;&#32622;&#65292;&#20363;&#22914;&#19979;&#38754;&#20004;&#20010;&#65292;&#19981;&#33021;&#21644; <code>mybatis.config-location</code> &#19968;&#36215;&#20351;&#29992;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybatis.configuration.map-underscore-to-camel-case</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26159;&#21542;&#23558;&#19979;&#21010;&#32447;&#26144;&#23556;&#20026;&#39548;&#23792;&#35268;&#21017; 11</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>mybatis.configuration.default-statement-timeout</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#40664;&#35748;&#35821;&#21477;&#36229;&#26102;&#26102;&#38388;</p></td>
</tr>
</tbody>
</table><p>&#20363;&#22914;&#65292;&#22312;&#25105;&#20204;&#30340; <code>application.properties</code> &#37197;&#32622;&#25991;&#20214;&#37324;&#23601;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#20570;&#37197;&#32622;&#65292;&#20877;&#32467;&#21512;&#24102;&#26377; <code>@MapperScan</code> &#27880;&#35299;&#30340;&#37197;&#32622;&#31867;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>mybatis.type-handlers-package=learning.spring.binarytea.support.handler
mybatis.type-aliases-package=learning.spring.binarytea.model
mybatis.configuration.map-underscore-to-camel-case=true</code></pre><p>&#20026;&#20102;&#35753;&#31243;&#24207;&#33021;&#22815;&#39034;&#21033;&#25191;&#34892;&#65292;&#25105;&#20204;&#36824;&#38656;&#35201;&#20107;&#20808;&#26032;&#24314;&#22909;&#23545;&#24212;&#30340;&#34920;&#65292;&#25554;&#20837;&#20960;&#26465;&#27979;&#35797;&#25968;&#25454;&#12290;&#26082;&#28982;&#20351;&#29992;&#20102; H2 &#20869;&#23884;&#25968;&#25454;&#24211;&#65292;&#33258;&#28982;&#23601;&#21487;&#20197;&#20381;&#36182; 6.1.2 &#33410;&#20013;&#30340;&#20869;&#23884;&#25968;&#25454;&#24211;&#21021;&#22987;&#21270;&#36923;&#36753;&#12290;schema.sql &#20013;&#30340;&#34920;&#32467;&#26500;&#26159;&#26681;&#25454; 7.1 &#33410; Hibernate &#33258;&#21160;&#21019;&#24314;&#30340;&#34920;&#32467;&#26500;&#31616;&#21333;&#20462;&#25913;&#32780;&#26469;&#30340;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 7-25 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-25</strong>&#12288;&#29992;&#20110; MyBatis &#28436;&#31034;&#30340; src/main/resources/schema.sql &#25991;&#20214;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>drop table if exists t_menu;
drop table if exists t_order;
drop table if exists t_order_item;
drop table if exists t_tea_maker;

create table t_menu (
    id bigint not null auto_increment, name varchar(255), price bigint, size varchar(255),
    create_time timestamp, update_time timestamp, primary key (id)
);

create table t_order (
    id bigint not null auto_increment, amount_discount integer, amount_pay bigint, amount_total bigint,
    status integer, maker_id bigint, create_time timestamp, update_time timestamp, primary key (id)
);

create table t_order_item (
    item_id bigint not null, order_id bigint not null
);

create table t_tea_maker (
    id bigint not null auto_increment, name varchar(255), create_time timestamp, update_time timestamp,
    primary key (id)
);</code></pre><p>&#32780;&#21021;&#22987;&#21270;&#30340;&#25968;&#25454;&#21017;&#25918;&#22312; data.sql &#20013;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 7-26 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-26</strong>&#12288;&#29992;&#20110; MyBatis &#28436;&#31034;&#30340; src/main/resources/data.sql &#25991;&#20214;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>insert into t_menu (name, size, price, create_time, update_time) values ('Java&#21654;&#21857;', 'MEDIUM', 1200, now(), now());
insert into t_menu (name, size, price, create_time, update_time) values ('Java&#21654;&#21857;', 'LARGE', 1500, now(), now());

insert into t_tea_maker (name, create_time, update_time) values ('LiLei', now(), now());
insert into t_tea_maker (name, create_time, update_time) values ('HanMeimei', now(), now());

insert into t_order (maker_id, status, amount_discount, amount_pay, amount_total, create_time, update_time) values (1, 0, 100, 1200, 1200, now(), now());

insert into t_order_item (order_id, item_id) values (1, 1);</code></pre><p>&#21644;&#20043;&#21069;&#19968;&#26679;&#65292;&#25105;&#20204;&#20351;&#29992;&#19968;&#27573;&#21333;&#20803;&#27979;&#35797;&#26469;&#39564;&#35777;&#25105;&#20204;&#30340;&#20195;&#30721;&#12290;&#20195;&#30721;&#31034;&#20363; 7-27 &#30340;&#36923;&#36753;&#26159;&#36825;&#26679;&#30340;&#65306;</p><p>(1) &#26500;&#24314;&#24182;&#20445;&#23384;&#19968;&#20010;&#35746;&#21333;&#23545;&#35937; <code>Order</code>&#65307;</p><p>(2) &#25554;&#20837;&#23545;&#24212;&#30340;&#35746;&#21333;&#20869;&#23481;&#65307;</p><p>(3) &#26681;&#25454;&#31532; (1) &#27493;&#36820;&#22238;&#30340;&#35746;&#21333; ID&#65292;&#37325;&#26032;&#26597;&#35810;&#33719;&#24471;&#35746;&#21333;&#23545;&#35937;&#65292;&#39564;&#35777;&#23545;&#24212;&#30340;&#20540;&#26159;&#21542;&#27491;&#30830;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-27</strong>&#12288;&#29992;&#20110;&#27979;&#35797; <code>OrderMapper</code> &#30340;&#21333;&#20803;&#27979;&#35797;&#29255;&#27573;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class OrderMapperTest {
    @Autowired
    private OrderMapper orderMapper;
    @Autowired
    private TeaMakerMapper makerRepository;
    @Autowired
    private MenuItemMapper menuItemMapper;

    @Test
    @Transactional
    @Rollback
    public void testSaveAndFind() {
        TeaMaker maker = makerRepository.findById(2L);
        Order order = Order.builder()
                .status(OrderStatus.ORDERED)
                .maker(maker)
                .amount(Amount.builder()
                        .discount(90)
                        .totalAmount(Money.ofMinor(CurrencyUnit.of("CNY"), 1200))
                        .payAmount(Money.ofMinor(CurrencyUnit.of("CNY"), 1080))
                        .build())
                .build();
        assertEquals(1, orderMapper.save(order));

        Long orderId = order.getId();
        assertNotNull(orderId);
        assertEquals(1, orderMapper.addOrderItem(orderId, menuItemMapper.findById(2L)));

        order = orderMapper.findById(orderId);
        assertEquals(OrderStatus.ORDERED, order.getStatus());
        assertEquals(90, order.getAmount().getDiscount());
        assertEquals(maker.getId(), order.getMaker().getId());
        assertEquals(1, order.getItems().size());
        assertEquals(2L, order.getItems().get(0).getId());
    }
    // &#30465;&#30053;&#20854;&#20182;&#27979;&#35797;
}</code></pre><p>&#22312;&#19978;&#38754;&#30340;&#20195;&#30721;&#20013;&#65292;&#38656;&#35201;&#29305;&#21035;&#35828;&#26126;&#19968;&#19979;&#21152;&#22312; <code>testSaveAndFind()</code> &#19978;&#30340; <code>@Rollback</code> &#27880;&#35299;&#12290;Spring Framework &#20026;&#27979;&#35797;&#25552;&#20379;&#20102;&#24378;&#22823;&#30340;&#25903;&#25345;&#65292;&#22312;&#28041;&#21450;&#25968;&#25454;&#24211;&#25805;&#20316;&#30340;&#26102;&#20505;&#65292;&#20026;&#20102;&#20445;&#35777;&#27599;&#20010;&#27979;&#35797;&#30340;&#36816;&#34892;&#19981;&#20250;&#32473;&#21035;&#30340;&#27979;&#35797;&#24102;&#26469;&#24433;&#21709;&#65292;&#23427;&#30452;&#25509;&#21487;&#20197;&#22238;&#28378;&#27979;&#35797;&#20013;&#30340;&#25805;&#20316;&#65292;&#32780;&#19988;&#36825;&#20063;&#26159;&#40664;&#35748;&#30340;&#36923;&#36753;&#65292;&#20063;&#23601;&#26159;&#35828;&#25105;&#20204;&#19981;&#29992;&#28155;&#21152; <code>@Rollback</code> &#20063;&#26159;&#19968;&#26679;&#30340;&#25928;&#26524;&#12290;&#22914;&#26524;&#24076;&#26395;&#33021;&#22815;&#35753;&#27979;&#35797;&#20195;&#30721;&#30340;&#21464;&#21160;&#34987;&#25552;&#20132;&#21040;&#25968;&#25454;&#24211;&#20013;&#65292;&#21487;&#20197;&#20351;&#29992; <code>@Commit</code> &#25110;&#32773; <code>@Rollback(false)</code>&#12290;&#24403;&#28982;&#65292;&#36825;&#37324;&#19968;&#20999;&#30340;&#21069;&#25552;&#26159;&#20808;&#26377;&#20107;&#21153;&#65292;&#36825;&#20063;&#23601;&#26159;&#20026;&#20160;&#20040;&#20250;&#22312; <code>testSaveAndFind()</code> &#19978;&#28155;&#21152; <code>@Transactional</code> &#30340;&#21407;&#22240;&#12290;</p><h3 id="nav_point_117">7.2.3&#12288;&#25552;&#21319; MyBatis &#30340;&#24320;&#21457;&#25928;&#29575;</h3><p>&#36890;&#36807;&#21069;&#38754;&#30340;&#20869;&#23481;&#65292;&#30456;&#20449;&#22823;&#23478;&#20063;&#38544;&#32422;&#24863;&#35273;&#21040;&#20102;&#65292;&#30456;&#27604; JPA&#65292;MyBatis &#38656;&#35201;&#33258;&#24049;&#23454;&#29616;&#30340;&#20869;&#23481;&#22810;&#20102;&#19968;&#28857;&#28857;&#12290;&#20294;&#20854;&#23454;&#22312;&#19968;&#20123;&#24320;&#28304;&#24037;&#20855;&#30340;&#24110;&#21161;&#19979;&#65292;MyBatis &#30340;&#24320;&#21457;&#25928;&#29575;&#20063;&#19981;&#20122;&#20110; JPA&#12290;&#26377;&#20123;&#24037;&#20855;&#26159;&#23448;&#26041;&#25552;&#20379;&#30340;&#65292;&#20063;&#26377;&#19968;&#20123;&#26159;&#38750;&#23448;&#26041;&#30340;&#31038;&#21306;&#25552;&#20379;&#30340;&#65292;&#22823;&#23478;&#30340;&#30446;&#30340;&#37117;&#26159;&#35753;&#24320;&#21457;&#20307;&#39564;&#8220;&#22914;&#19997;&#33324;&#39034;&#28369;&#8221;&#12290;</p><ol>
<li><p><strong>MyBatis &#26144;&#23556;&#29983;&#25104;&#24037;&#20855;</strong></p>
<p>MyBatis &#30340;&#20351;&#29992;&#31163;&#19981;&#24320;&#22823;&#37327;&#30340;&#37197;&#32622;&#65292;&#23588;&#20854;&#26159; XML &#25110;&#27880;&#35299;&#24418;&#24335;&#37117;&#38656;&#35201;&#25163;&#20889; SQL&#12290;&#37027;&#20040;&#26159;&#21542;&#26377;&#20160;&#20040;&#21150;&#27861;&#33021;&#35753;&#36825;&#20010;&#36807;&#31243;&#19981;&#37027;&#20040;&#32321;&#29712;&#21602;&#65311;&#31572;&#26696;&#26159;&#32943;&#23450;&#30340;&#12290;MyBatis &#23448;&#26041;&#20026;&#27492;&#25552;&#20379;&#20102;&#19968;&#22871;&#29983;&#25104;&#24037;&#20855;&#8212;&#8212; MyBatis Generator<span class="&#27880;&#37322;&#32534;&#21495;">17</span>&#12290;</p>
<p>&#36825;&#22871;&#24037;&#20855;&#21487;&#20197;&#26681;&#25454;&#25968;&#25454;&#24211;&#30340;&#20803;&#25968;&#25454;&#21644;&#37197;&#32622;&#25991;&#20214;&#65292;&#20026;&#25105;&#20204;&#29983;&#25104;&#22914;&#19979;&#20869;&#23481;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#19982;&#25968;&#25454;&#34920;&#23545;&#24212;&#30340; POJO &#31867;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Mapper &#25509;&#21475;&#65292;&#22914;&#26524;&#29992;&#27880;&#35299;&#25110;&#28151;&#21512;&#26041;&#24335;&#37197;&#32622;&#26144;&#23556;&#65292;&#25509;&#21475;&#19978;&#20250;&#26377;&#23545;&#24212;&#30340;&#27880;&#35299;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">SQLMap &#26144;&#23556; XML &#25991;&#20214;&#65288;&#20165;&#22312; XML &#26041;&#24335;&#25110;&#28151;&#21512;&#26041;&#24335;&#26102;&#29983;&#25104;&#65289;&#12290;</li>
</ul>
<p>&#20854;&#20013;&#20250;&#21253;&#21547;&#21508;&#31181;&#24120;&#29992;&#30340;&#25805;&#20316;&#65292;&#20174;&#26576;&#31181;&#31243;&#24230;&#19978;&#33021;&#20943;&#23569;&#24320;&#21457;&#30340;&#24037;&#20316;&#37327;&#12290;&#35813;&#24037;&#20855;&#22312;&#20351;&#29992;&#26102;&#38656;&#35201;&#25552;&#20379;&#19968;&#20010; XML &#37197;&#32622;&#25991;&#20214;&#65292;&#19982;&#20195;&#30721;&#31034;&#20363; 7-28 &#31867;&#20284;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-28</strong>&#12288;MyBatis Generator &#37197;&#32622;&#31034;&#20363;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;

&lt;generatorConfiguration&gt;
    &lt;context id="H2Tables" targetRuntime="MyBatis3"&gt;
        &lt;plugin type="org.mybatis.generator.plugins.FluentBuilderMethodsPlugin" /&gt;
        &lt;plugin type="org.mybatis.generator.plugins.ToStringPlugin" /&gt;
        &lt;plugin type="org.mybatis.generator.plugins.SerializablePlugin" /&gt;
        &lt;plugin type="org.mybatis.generator.plugins.RowBoundsPlugin" /&gt;

        &lt;jdbcConnection driverClass="org.h2.Driver" connectionURL="jdbc:h2:mem:testdb" userId="sa" password=""&gt;
        &lt;/jdbcConnection&gt;

        &lt;javaModelGenerator targetPackage="learning.spring.binarytea.model" targetProject="./src/main/java"&gt;
            &lt;property name="enableSubPackages" value="true" /&gt;
            &lt;property name="trimStrings" value="true" /&gt;
        &lt;/javaModelGenerator&gt;

        &lt;sqlMapGenerator targetPackage="learning.spring.binarytea.repository"
                         targetProject="./src/main/resources/mapper"&gt;
            &lt;property name="enableSubPackages" value="true" /&gt;
        &lt;/sqlMapGenerator&gt;

        &lt;javaClientGenerator type="MIXEDMAPPER" targetPackage="learning.spring.binarytea.repository"
                             targetProject="./src/main/java"&gt;
            &lt;property name="enableSubPackages" value="true" /&gt;
        &lt;/javaClientGenerator&gt;

        &lt;table tableName="t_menu" domainObjectName="MenuItem" &gt;
            &lt;generatedKey column="id" sqlStatement="CALL IDENTITY()" identity="true" /&gt;
            &lt;columnOverride column="price" javaType="org.joda.money.Money" jdbcType="BIGINT"
                            typeHandler="learning.spring.binarytea.support.handler.MoneyTypeHandler"/&gt;
        &lt;/table&gt;
    &lt;/context&gt;
&lt;/generatorConfiguration&gt;</code></pre>
<p><code>&lt;context/&gt;</code> &#20013;&#30340;&#20869;&#23481;&#38656;&#35201;&#25353;&#29031;&#39034;&#24207;&#37197;&#32622;&#65292;&#20174;&#19978;&#24448;&#19979;&#20998;&#21035;&#20026;&#65306;</p>
<p>(1) <code>&lt;plugin/&gt;</code>&#65292;&#25554;&#20214;&#37197;&#32622;&#65292;&#20363;&#23376;&#20013;&#37197;&#32622;&#20102;&#29983;&#25104;&#26500;&#24314;&#22120;&#30340;&#25554;&#20214;&#65288;&#31867;&#20284; Lombok &#30340; <code>@Builder</code>&#65289;&#12289;&#29983;&#25104; <code>toString()</code> &#26041;&#27861;&#30340;&#25554;&#20214;&#12289;&#20998;&#39029;&#25554;&#20214;&#31561;&#65307;</p>
<p>(2) <code>&lt;jdbcConnection/&gt;</code>&#65292;JDBC &#36830;&#25509;&#20449;&#24687;&#65307;</p>
<p>(3) <code>&lt;javaModelGenerator/&gt;</code>&#65292;POJO &#23545;&#35937;&#29983;&#25104;&#20449;&#24687;&#65307;</p>
<p>(4) <code>&lt;sqlMapGenerator/&gt;</code>&#65292;SQLMap &#29983;&#25104;&#20449;&#24687;&#65307;</p>
<p>(5) <code>&lt;javaClientGenerator/&gt;</code>&#65292;Java &#23458;&#25143;&#31471;&#65292;&#21363; Mapper &#25509;&#21475;&#30340;&#29983;&#25104;&#20449;&#24687;&#65307;</p>
<p>(6) <code>&lt;table/&gt;</code>&#65292;&#35201;&#29983;&#25104;&#30340;&#25968;&#25454;&#34920;&#37197;&#32622;&#12290;</p>
<p>&#20540;&#24471;&#27880;&#24847;&#30340;&#26159;&#37197;&#32622;&#20013;&#30340;&#30446;&#26631;&#20301;&#32622;&#26082;&#21487;&#20197;&#26159;&#32477;&#23545;&#36335;&#24452;&#65292;&#20063;&#21487;&#20197;&#26159;&#30456;&#23545;&#24403;&#21069;&#25191;&#34892;&#30446;&#24405;&#30340;&#30456;&#23545;&#36335;&#24452;&#65292;&#32780;&#19988;<strong>&#22312;&#29983;&#25104;&#21069;&#38656;&#35201;&#20808;&#30830;&#20445;&#30446;&#24405;&#23384;&#22312;</strong>&#12290;</p>
<p>MyBatis Generator &#25903;&#25345;&#22810;&#31181;&#36816;&#34892;&#26041;&#24335;&#65292;&#20363;&#22914;&#65292;&#21629;&#20196;&#34892;&#24037;&#20855;&#12289;Maven &#25554;&#20214;&#12289;ANT &#20219;&#21153;&#12289;Eclipse &#25554;&#20214;&#31561;&#12290;&#22312;&#21629;&#20196;&#34892;&#37324;&#21487;&#20197;&#36816;&#34892;&#22914;&#19979;&#21629;&#20196;&#65292;JAR &#21253;&#38656;&#35201;&#20026;&#20855;&#20307;&#29256;&#26412;&#30340;&#21253;&#65292;&#21516;&#26102;&#25552;&#20379;&#37197;&#32622;&#25991;&#20214;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>java -jar mybatis-generator-core-x.x.x.jar -configfile generatorConfig.xml</code></pre>
<p>&#20851;&#20110;&#36825;&#20010;&#24037;&#20855;&#30340;&#26356;&#22810;&#35814;&#32454;&#20869;&#23481;&#65292;&#22823;&#23478;&#21487;&#20197;&#36890;&#36807;&#23448;&#26041;&#25991;&#26723;&#36827;&#19968;&#27493;&#20102;&#35299;&#65292;&#26412;&#20070;&#23601;&#19981;&#23637;&#24320;&#20102;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>MyBatis &#20998;&#39029;&#25554;&#20214;</strong></p>
<p>&#20998;&#39029;&#26597;&#35810;&#26159;&#19968;&#20010;&#24456;&#24120;&#35265;&#30340;&#38656;&#27714;&#65292;&#22312; MyBatis &#37324;&#30340;&#20998;&#39029;&#33258;&#28982;&#20063;&#19981;&#20250;&#24456;&#22256;&#38590;&#65292;&#23427;&#20381;&#25176;&#20110;&#25554;&#20214;&#26426;&#21046;&#65292;&#21487;&#20197;&#36890;&#36807;&#20998;&#39029;&#25554;&#20214;&#26469;&#23454;&#29616;&#20998;&#39029;&#26597;&#35810;&#12290;&#36825;&#37324;&#23601;&#35201;&#20171;&#32461;&#19968;&#20010;&#22269;&#20154;&#32534;&#20889;&#30340; MyBatis &#20998;&#39029;&#25554;&#20214; PageHelper<span class="&#27880;&#37322;&#32534;&#21495;">18</span>&#65292;&#23427;&#25903;&#25345; 3.1.0 &#20197;&#19978;&#30340; MyBatis &#29256;&#26412;&#65292;&#25903;&#25345;&#21313;&#20313;&#31181;&#25968;&#25454;&#24211;&#30340;&#29289;&#29702;&#20998;&#39029;&#65292;&#36824;&#26377;&#23545;&#24212;&#30340; Spring Boot Starter&#65292;&#20165;&#38656;&#31616;&#21333;&#20960;&#20010;&#37197;&#32622;&#23601;&#33021;&#30452;&#25509;&#20351;&#29992;&#12290;</p>
<p>&#39318;&#20808;&#65292;&#22312; pom.xml &#20013;&#28155;&#21152;&#23545;&#24212;&#30340;&#20381;&#36182;&#65292;&#20363;&#22914;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;
    &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;
    &lt;version&gt;1.4.1&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#22312; <code>application.properties</code> &#20013;&#28155;&#21152;&#19968;&#20123;&#35774;&#32622;&#65292;&#24120;&#29992;&#30340;&#35774;&#32622;&#22914;&#34920; 7-11 &#25152;&#31034; <span class="&#27880;&#37322;&#32534;&#21495;">19</span>&#65292;&#34920;&#20013;&#23646;&#24615;&#30340;&#40664;&#35748;&#20540;&#22343;&#20026; <code>false</code>&#12290;&#25105;&#20204;&#26080;&#39035;&#25163;&#21160;&#35774;&#32622;&#20998;&#39029;&#35201;&#29992;&#21040;&#30340;&#35821;&#27861;&#65292;&#22240;&#20026; PageHelper &#20250;&#33258;&#21160;&#36827;&#34892;&#20390;&#27979;&#12290;</p>
<p><strong>&#34920; 7-11&#12288;PageHelper &#22312; Spring Boot &#20013;&#30340;&#19968;&#20123;&#35774;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#35828;&#26126;</th></tr><tr><td><code>pagehelper.offsetAsPageNum</code></td><td>&#22312;&#20351;&#29992; <code>RowBounds</code> &#20316;&#20026;&#20998;&#39029;&#21442;&#25968;&#26102;&#65292;&#23558; <code>offset</code> &#20316;&#20026;&#39029;&#30721;</td></tr><tr><td><code>pagehelper.rowBoundsWithCount</code></td><td>&#22312;&#20351;&#29992; <code>RowBounds</code> &#20316;&#20026;&#20998;&#39029;&#21442;&#25968;&#26102;&#65292;&#20063;&#20250;&#25191;&#34892; <code>count</code> &#25805;&#20316;</td></tr><tr><td><code>pagehelper.pageSizeZero</code></td><td>&#22914;&#26524;&#20998;&#39029;&#22823;&#23567;&#20026; <code>0</code>&#65292;&#21017;&#36820;&#22238;&#25152;&#26377;&#32467;&#26524;</td></tr><tr><td><code>pagehelper.reasonable</code></td><td>&#21512;&#29702;&#21270;&#20998;&#39029;&#65292;&#20256;&#20837;&#30340;&#39029;&#30721;&#23567;&#20110;&#31561;&#20110; <code>0</code> &#26102;&#36820;&#22238;&#31532;&#19968;&#39029;&#65292;&#22823;&#20110;&#26368;&#22823;&#39029;&#26102;&#36820;&#22238;&#26368;&#21518;&#19968;&#39029;</td></tr><tr><td><code>pagehelper.supportMethodsArguments</code></td><td>&#20174;&#26041;&#27861;&#30340;&#21442;&#25968;&#20013;&#33719;&#21462;&#20998;&#39029;&#25152;&#38656;&#30340;&#20449;&#24687;</td></tr></table>
<p>&#19979;&#38754;&#25105;&#20204;&#36890;&#36807;&#20960;&#20010;&#27979;&#35797;&#26469;&#20102;&#35299;&#19968;&#19979; PageHelper &#30340;&#20855;&#20307;&#29992;&#27861;&#12290;&#21487;&#20197;&#36890;&#36807;&#38745;&#24577;&#26041;&#27861; <code>PageHelper.startPage()</code> &#35774;&#32622;&#20998;&#39029;&#20449;&#24687;&#65292;&#35813;&#20449;&#24687;&#26159;&#20445;&#23384;&#22312; <code>ThreadLocal</code> &#21464;&#37327;&#20013;&#30340;&#65292;&#22240;&#27492;&#25805;&#20316;&#38656;&#35201;&#22312;&#19968;&#20010;&#32447;&#31243;&#20013;&#65292;&#20363;&#22914;&#20687;&#20195;&#30721;&#31034;&#20363; 7-29 &#30340;&#21333;&#20803;&#27979;&#35797;&#37027;&#26679;&#65292;&#26597;&#35810;&#31532; 1 &#39029;&#65292;&#27599;&#39029; 1 &#26465;&#35760;&#24405;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-29</strong>&#12288;&#38024;&#23545;&#20998;&#39029;&#21151;&#33021;&#27979;&#35797;&#30340; <code>MenuItemMapperTest</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
public class MenuItemMapperTest {
    @Autowired
    private MenuItemMapper menuItemMapper;

    @Test
    public void testPagination() {
        // &#19981;&#20998;&#39029;
        List&lt;MenuItem&gt; list = menuItemMapper.findAll();
        assertEquals(2, list.size());

        // &#20998;&#39029;
        PageHelper.startPage(1, 1);
        list = menuItemMapper.findAll();
        assertEquals(1, list.size());
        assertTrue(list instanceof Page);
        PageInfo&lt;MenuItem&gt; pageInfo = new PageInfo&lt;&gt;(list);
        assertEquals(2, pageInfo.getPages()); // &#24635;&#39029;&#25968;
        assertEquals(1, pageInfo.getPageSize()); // &#27599;&#39029;&#22823;&#23567;
        assertEquals(1, pageInfo.getPageNum()); // &#24403;&#21069;&#39029;&#30721;
        assertEquals(2, pageInfo.getNextPage()); // &#19979;&#39029;&#39029;&#30721;
    }
}</code></pre>
<p>&#20063;&#21487;&#20197;&#25442;&#31181;&#29992;&#27861;&#65292;&#36890;&#36807; <code>RowBounds</code> &#23545;&#35937;&#25110;&#32773;&#30452;&#25509;&#22312;&#26041;&#27861;&#21442;&#25968;&#20013;&#25351;&#23450;&#20998;&#39029;&#20449;&#24687;&#12290;&#20195;&#30721;&#31034;&#20363; 7-30 &#26159;&#20462;&#25913;&#21518;&#30340; <code>TeaMakerMapper</code> &#30340;&#37096;&#20998;&#30456;&#20851;&#20195;&#30721;&#65292;&#22312;&#20195;&#30721;&#31034;&#20363; 7-31 &#20013;&#21017;&#26159;&#23545;&#24212;&#30340;&#20351;&#29992;&#26041;&#27861;&#65292;&#20063;&#26159;&#36890;&#36807;&#21333;&#20803;&#27979;&#35797;&#30340;&#24418;&#24335;&#26469;&#28436;&#31034;&#30340;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-30</strong>&#12288;&#21253;&#21547;&#20998;&#39029;&#36923;&#36753;&#30340; <code>TeaMakerMapper</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Mapper
public interface TeaMakerMapper {
    @Select("select * from t_tea_maker")
    @ResultMap("teaMakerMap")
    List&lt;TeaMaker&gt; findAllWithRowBounds(RowBounds rowBounds);

    @Select("select * from t_tea_maker")
    @ResultMap("teaMakerMap")
    List&lt;TeaMaker&gt; findAllWithPage(int pageSize, int pageNum);

    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
<p>&#22914;&#26524; <code>findAllWithPage()</code> &#20013;&#30340;&#21442;&#25968;&#20351;&#29992;&#20854;&#20182;&#21517;&#31216;&#65292;&#20063;&#21487;&#20197;&#29992;&#31867;&#20284; <code>@Param("pageNum") int pageNum</code> &#30340;&#26041;&#24335;&#26469;&#25351;&#23450;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-31</strong>&#12288;&#38024;&#23545; <code>TeaMakerMapper</code> &#20013;&#20998;&#39029;&#36923;&#36753;&#30340;&#27979;&#35797;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
public class TeaMakerMapperTest {
    @Autowired
    private TeaMakerMapper teaMakerMapper;

    @Test
    public void testPagination() {
        List&lt;TeaMaker&gt; list = teaMakerMapper.findAllWithRowBounds(new RowBounds(1, 1));
        PageInfo&lt;TeaMaker&gt; pageInfo = new PageInfo&lt;&gt;(list);
        assertEquals(1, list.size());
        assertEquals(1, pageInfo.getPageNum());
        assertEquals(1, pageInfo.getPageSize());
        assertEquals(2, pageInfo.getPages());

        list = teaMakerMapper.findAllWithPage(1, 2);
        pageInfo = new PageInfo&lt;&gt;(list);
        assertEquals(2, pageInfo.getPageNum());
        assertEquals(1, pageInfo.getPrePage());
        assertEquals(0, pageInfo.getNextPage()); // &#27809;&#26377;&#19979;&#19968;&#39029;
    }
}</code></pre>
<p>&#20026;&#20102;&#33021;&#22815;&#27491;&#30830;&#22320;&#36816;&#34892;&#19978;&#38754;&#30340;&#31243;&#24207;&#65292;&#36824;&#38656;&#35201;&#22312; <code>application.properties</code> &#25991;&#20214;&#20013;&#22686;&#21152;&#22914;&#19979;&#30340;&#19968;&#20123;&#37197;&#32622;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>pagehelper.offsetAsPageNum=true
pagehelper.rowBoundsWithCount=true
pagehelper.supportMethodsArguments=true</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#19968;&#31449;&#24335;&#30340; MyBatis Plus</strong></p>
<p>&#22914;&#26524;&#35273;&#24471;&#21448;&#26159;&#29983;&#25104;&#22120;&#21448;&#26159;&#25554;&#20214;&#65292;&#20889;&#20010;&#19996;&#35199;&#35201;&#22909;&#20960;&#20010;&#24037;&#20855;&#37197;&#21512;&#29305;&#21035;&#40635;&#28902;&#65292;MyBatis &#31038;&#21306;&#37324;&#20063;&#26377;&#19968;&#31449;&#24335;&#24037;&#20855;&#25552;&#20379;&#32473;&#22823;&#23478;&#12290;&#20197;&#22269;&#20154;&#24320;&#21457;&#30340; MyBatis Plus &#20026;&#20363;&#65292;&#23427;&#22312; MyBatis &#30340;&#22522;&#30784;&#19978;&#21448;&#22686;&#21152;&#20102;&#19968;&#20123;&#39069;&#22806;&#30340;&#21151;&#33021;&#65292;&#21407;&#29983;&#21151;&#33021;&#21487;&#20197;&#21644;&#25193;&#23637;&#21151;&#33021;&#19968;&#36215;&#20351;&#29992;&#65292;&#20363;&#22914;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#25552;&#20379;&#25903;&#25345;&#36890;&#29992;&#22686;&#21024;&#25913;&#26597;&#21151;&#33021;&#30340; <code>Mapper</code>&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20869;&#32622;&#20195;&#30721;&#29983;&#25104;&#22120;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20869;&#32622;&#20998;&#39029;&#25554;&#20214;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#25903;&#25345; ActiveRecord<span class="&#27880;&#37322;&#32534;&#21495;">20</span> &#24418;&#24335;&#30340;&#25805;&#20316;&#12290;</li>
</ul>
<p>&#22312; MyBatis Plus &#30340;&#24110;&#21161;&#19979;&#65292;MyBatis &#30340;&#24320;&#21457;&#20307;&#39564;&#21487;&#20197;&#25509;&#36817;&#20110; Spring Data JPA&#65292;&#21363;&#21482;&#38656;&#35201;&#23450;&#20041; POJO &#31867;&#65292;&#20877;&#23450;&#20041;&#19968;&#20010;&#25193;&#23637;&#20102; <code>BaseMapper&lt;T&gt;</code> &#30340;&#25509;&#21475;&#23601;&#33021;&#25191;&#34892;&#24120;&#35268;&#25805;&#20316;&#20102;&#65292;&#20294;&#36824;&#19981;&#33021;&#30452;&#25509;&#36890;&#36807;&#23450;&#20041;&#26041;&#27861;&#28982;&#21518;&#26681;&#25454;&#26041;&#27861;&#21517;&#36827;&#34892;&#25193;&#23637;&#25805;&#20316;&#12290;</p>
<p>MyBatis Plus &#20063;&#25552;&#20379;&#20102;&#33258;&#24049;&#30340; Spring Boot Starter&#65292;&#21482;&#38656;&#22312;&#24037;&#31243;&#30340; pom.xml &#20013;&#22686;&#21152;&#22914;&#19979;&#20381;&#36182;&#65292;&#23601;&#33021;&#24341;&#20837; MyBatis Plus&#12289;MyBatis &#21644; MyBatis Spring &#30340;&#20381;&#36182;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;
    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;
    &lt;version&gt;3.5.1&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p>&#36825;&#20010; Starter &#20013;&#30340;&#37096;&#20998;&#31867;&#26159;&#20174; MyBatis Spring Boot Starter &#37324;&#22797;&#21046;&#36807;&#26469;&#30340;&#65292;&#21516;&#26102;&#31245;&#20316;&#35843;&#25972;&#65292;&#20363;&#22914;&#23558;&#37197;&#32622;&#39033;&#30340;&#21069;&#32512;&#35843;&#25972;&#20026; <code>mybatis-plus</code>&#65292;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>mybatis-plus.type-handlers-package=learning.spring.binarytea.support.handler
mybatis-plus.type-aliases-package=learning.spring.binarytea.model
mybatis-plus.configuration.map-underscore-to-camel-case=true</code></pre>
<p>&#23545;&#20110;&#20687; <code>MenuItem</code> &#36825;&#26679;&#30340;&#31616;&#21333;&#23545;&#35937;&#65292;&#21482;&#38656;&#20195;&#30721;&#31034;&#20363; 7-33 &#20013;&#30340;&#25509;&#21475;&#23601;&#21487;&#20197;&#23436;&#25104;&#22522;&#26412;&#25805;&#20316;&#30340;&#26144;&#23556;&#12290;&#20294;&#30001;&#20110;&#25105;&#20204;&#30340;&#31867;&#21517;&#21644;&#34920;&#21517;&#19981;&#30456;&#21516;&#65292;&#25152;&#20197;&#36824;&#26159;&#38656;&#35201;&#22312;&#27169;&#22411;&#31867;&#19978;&#28155;&#21152; <code>@TableName("t_menu")</code> &#27880;&#35299;&#26469;&#22768;&#26126;&#19968;&#19979;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 7-32<span class="&#27880;&#37322;&#32534;&#21495;">21</span> &#37027;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-32</strong>&#12288;<code>MenuItem</code> &#31867;&#30340;&#23450;&#20041;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@TableName("t_menu")
public class MenuItem {...}</code></pre>
<p>&#20195;&#30721;&#31034;&#20363; 7-33 &#30340;&#25509;&#21475;&#21253;&#21547;&#20102;&#19968;&#20010;&#33258;&#23450;&#20041;&#30340;&#26041;&#27861;&#65292;&#26144;&#23556;&#20851;&#31995;&#30340;&#20889;&#27861;&#23601;&#26159;&#21407;&#29983;&#30340;&#26041;&#24335;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-33</strong>&#12288;<code>MenuItemMapper</code> &#25509;&#21475;&#30340;&#23450;&#20041;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface MenuItemMapper extends BaseMapper&lt;MenuItem&gt; {
    @Select("select m.* from t_menu m, t_order_item i where m.id = i.item_id and i.order_id = #{orderId}")
    List&lt;MenuItem&gt; findByOrderId(Long orderId);
}</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#20173;&#28982;&#36890;&#36807;&#19968;&#20010;&#31616;&#21333;&#30340;&#21333;&#20803;&#27979;&#35797;&#26469;&#28436;&#31034; <code>MenuItemMapper</code> &#30340;&#29992;&#27861;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 7-34 &#25152;&#31034;&#65292;&#20854;&#20013;&#21253;&#21547;&#32479;&#35745;&#25968;&#37327;&#12289;&#26681;&#25454;&#20027;&#38190;&#26597;&#25214;&#20197;&#21450;&#20840;&#37327;&#21152;&#36733;&#30340;&#28436;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-34</strong>&#12288;&#22522;&#26412;&#30340;&#26597;&#35810;&#26041;&#27861;&#27979;&#35797;&#29992;&#20363;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
public class MenuItemMapperTest {
    @Autowired
    private MenuItemMapper menuItemMapper;

    @Test
    public void testSelect() {
        assertEquals(2, menuItemMapper.selectCount(null));

        MenuItem item = menuItemMapper.selectById(1L);
        assertEquals(1L, item.getId());
        assertEquals("Java&#21654;&#21857;", item.getName());
        assertEquals(Size.MEDIUM, item.getSize());
        assertEquals(Money.ofMinor(CurrencyUnit.of("CNY"), 1200), item.getPrice());

        List&lt;MenuItem&gt; list = menuItemMapper.selectList(null);
        assertEquals(2, list.size());
    }
    // &#30465;&#30053;&#20854;&#20182;&#26041;&#27861;
}</code></pre>
<p>MyBatis Plus &#30340; <code>BaseMapper&lt;T&gt;</code> &#20013;&#24102;&#26377;&#20998;&#39029;&#30340;&#26597;&#35810;&#26041;&#27861;&#65292;&#20294;&#36824;&#38656;&#35201;&#37197;&#32622;&#20998;&#39029;&#25554;&#20214;&#25165;&#33021;&#23436;&#20840;&#21457;&#25381;&#23427;&#30340;&#21151;&#33021;&#12290;&#22312; Spring Boot &#30340;&#37197;&#32622;&#31867;&#20013;&#22686;&#21152;&#22914;&#19979; Bean&#65292;&#20854;&#20013;&#30340; <code>PaginationInnerInterceptor</code> &#23601;&#26159;&#20998;&#39029;&#25554;&#20214;&#65292;&#22312;&#26089;&#26399;&#30340;&#29256;&#26412;&#20013;&#20063;&#21487;&#20197;&#36890;&#36807;&#37197;&#32622;&#29420;&#31435;&#30340; <code>PaginationInterceptor</code> &#23454;&#29616;&#30456;&#21516;&#30340;&#21151;&#33021;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public MybatisPlusInterceptor mybatisPlusInterceptor() {
    MybatisPlusInterceptor mybatisPlusInterceptor = new MybatisPlusInterceptor();
    mybatisPlusInterceptor.addInnerInterceptor(new PaginationInnerInterceptor());
    return mybatisPlusInterceptor;
}</code></pre>
<p>&#23545;&#24212;&#30340;&#27979;&#35797;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 7-35 &#25152;&#31034;&#65292;&#20854;&#20013;&#25351;&#23450;&#20102;&#25353;&#29031; <code>id</code> &#21319;&#24207;&#65292;&#27599;&#39029; 1 &#26465;&#35760;&#24405;&#65292;&#26597;&#35810;&#31532; 1 &#39029;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 7-35</strong>&#12288;&#20998;&#39029;&#27979;&#35797;&#20195;&#30721;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Test
public void testPagination() {
    Page&lt;MenuItem&gt; page = menuItemMapper.selectPage(new Page&lt;MenuItem&gt;(1, 1).addOrder(OrderItem.asc("id")), null);
    assertEquals(1, page.getCurrent());
    assertEquals(1L, page.getRecords().get(0).getId());
    assertEquals(1, page.getRecords().size());
    assertEquals(2, page.getTotal());
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">17</span>&#36825;&#27454;&#24037;&#20855;&#33258; 2019 &#24180; 11 &#26376; 24 &#26085;&#21457;&#24067;&#20102; 1.4.0 &#29256;&#26412;&#21518;&#65292;&#25130;&#33267; 2022 &#24180; 2 &#26376;&#19968;&#30452;&#27809;&#26377;&#26356;&#26032;&#36807;&#29256;&#26412;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">18</span>&#23448;&#26041;&#20027;&#39029;&#35265; GitHub&#65288;pagehelper/Mybatis-PageHelper&#65289;&#65292;Spring Boot Starter &#39033;&#30446;&#30340;&#20027;&#39029;&#35265; GitHub&#65288;pagehelper/pagehelper-spring-boot&#65289;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">19</span>PageHelper &#30340;&#26089;&#26399;&#29256;&#26412;&#37324;&#21487;&#20197;&#25903;&#25345;&#20013;&#21010;&#32447;&#30340;&#21442;&#25968;&#65292;&#22312;&#26368;&#36817;&#30340;&#29256;&#26412;&#37324;&#21482;&#33021;&#20351;&#29992;&#36981;&#24490;&#39548;&#23792;&#35268;&#21017;&#30340;&#21442;&#25968;&#20102;&#65292;&#36825;&#21644; Spring Boot &#37197;&#32622;&#23646;&#24615;&#30340;&#21629;&#21517;&#26041;&#24335;&#19981;&#22826;&#19968;&#26679;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">20</span>ActiveRecord &#26159; Ruby &#30340;&#19968;&#31181;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#26694;&#26550;&#12290;&#22312; Ruby on Rails &#27969;&#34892;&#26102;&#65292;ActiveRecord &#30340;&#20805;&#34880;&#27169;&#22411;&#32418;&#26497;&#19968;&#26102;&#12290;&#20851;&#20110;&#20805;&#34880;&#27169;&#22411;&#19982;&#36139;&#34880;&#27169;&#22411;&#30340;&#35752;&#35770;&#20174;&#26410;&#20572;&#27490;&#65292;&#24863;&#20852;&#36259;&#30340;&#21508;&#20301;&#21487;&#20197;&#20102;&#35299;&#19968;&#19979;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">21</span>&#36825;&#37096;&#20998; MyBatis Plus &#30340;&#31034;&#20363;&#22312; ch7/binarytea-mybatis-plus &#39033;&#30446;&#20013;&#12290;</p><h2 id="nav_point_118">7.3&#12288;&#23567;&#32467;</h2><p>&#25968;&#25454;&#24211;&#25805;&#20316;&#26159;&#22823;&#23478;&#26085;&#24120;&#24037;&#20316;&#20013;&#19968;&#23450;&#20250;&#36935;&#21040;&#30340;&#25805;&#20316;&#65292;&#26412;&#31456;&#25105;&#20204;&#19968;&#21516;&#23398;&#20064;&#20102;&#27969;&#34892;&#30340; Hibernate &#21644; MyBatis &#22312; Spring &#39033;&#30446;&#20013;&#30340;&#29992;&#27861;&#12290;&#22312;&#20171;&#32461; Hibernate &#26102;&#65292;&#38500;&#20102;&#35762;&#35299;&#23427;&#26412;&#36523;&#22914;&#20309;&#19982; Spring &#32467;&#21512;&#65292;&#25105;&#20204;&#36824;&#35828;&#26126;&#20102; Spring Data JPA &#30340; <code>Repository</code> &#25509;&#21475;&#35813;&#22914;&#20309;&#20351;&#29992;&#65292;&#23427;&#37027;&#31181;&#36890;&#36807;&#26041;&#27861;&#21517;&#31216;&#23601;&#33021;&#23450;&#20041;&#25805;&#20316;&#30340;&#26041;&#24335;&#30528;&#23454;&#35753;&#20154;&#30524;&#21069;&#19968;&#20142;&#12290;&#22312; MyBatis &#30340;&#37096;&#20998;&#65292;&#20063;&#26159;&#19968;&#26679;&#30340;&#65292;&#38500;&#20102;&#20854;&#26412;&#36523;&#30340;&#29992;&#27861;&#65292;&#36824;&#20171;&#32461;&#20102;&#20960;&#20010;&#35753; MyBatis &#22914;&#34382;&#28155;&#32764;&#30340;&#24037;&#20855;&#12290;</p><p>&#19979;&#19968;&#31456;&#65292;&#25105;&#20204;&#23558;&#19968;&#36215;&#20102;&#35299;&#19968;&#20123;&#19982;&#25968;&#25454;&#25805;&#20316;&#30456;&#20851;&#30340;&#36827;&#38454;&#20869;&#23481;&#65292;&#26377;&#19982;&#36830;&#25509;&#27744;&#30456;&#20851;&#30340;&#28857;&#65292;&#20063;&#26377;&#19982;&#32531;&#23384;&#30456;&#20851;&#30340;&#28857;&#65292;&#38750;&#24120;&#36148;&#36817;&#23454;&#25112;&#38656;&#35201;&#12290;</p><blockquote>
<p style="text-align: center"><strong>&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#39033;&#30446;&#24320;&#21457;&#23567;&#32467;</strong></p>
<p>&#26412;&#31456;&#25105;&#20204;&#20026;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#23436;&#21892;&#20102;&#35746;&#21333;&#30456;&#20851;&#30340;&#25805;&#20316;&#65292;&#20027;&#35201;&#26159;&#23450;&#20041;&#20102;&#35843;&#33590;&#24072;&#19982;&#35746;&#21333;&#30340;&#27169;&#22411;&#31867;&#65292;&#24182;&#28155;&#21152;&#20102;&#23545;&#24212;&#30340;&#22686;&#21024;&#25913;&#26597;&#25805;&#20316;&#12290;&#36825;&#20174;&#21151;&#33021;&#19978;&#26469;&#35828;&#24182;&#19981;&#22797;&#26434;&#65292;&#20294;&#26159;&#22312;&#23454;&#29616;&#26041;&#24335;&#19978;&#65292;&#25105;&#20204;&#20808;&#21518;&#23581;&#35797;&#20351;&#29992;&#20102;&#22235;&#31181;&#19981;&#21516;&#30340;&#26041;&#24335;&#65292;&#20998;&#21035;&#26159; Hibernate &#21407;&#29983;&#26041;&#24335;&#12289;Spring Data JPA Repository &#25509;&#21475;&#12289;MyBatis &#21407;&#29983;&#26041;&#24335;&#19982; MyBatis Plus &#25193;&#23637;&#12290;</p>
</blockquote><br style="page-break-after:always"/><div style="page-break-after:always"></div>