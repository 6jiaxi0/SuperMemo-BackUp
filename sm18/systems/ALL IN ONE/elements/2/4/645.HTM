<h1 id="nav_point_133">&#31532; 9 &#31456;&#12288;Spring MVC &#23454;&#36341;</h1><blockquote>
<p><strong>&#26412;&#31456;&#20869;&#23481;</strong></p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring MVC &#30340;&#22522;&#26412;&#29992;&#27861;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring MVC &#30340;&#35831;&#27714;&#22788;&#29702;&#36923;&#36753;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring MVC &#30340;&#35270;&#22270;&#30456;&#20851;&#30693;&#35782;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">RestTemplate &#30340;&#21508;&#31867;&#29992;&#27861;</li>
</ul>
</blockquote><p>&#22823;&#23478;&#22312;&#26085;&#24120;&#24037;&#20316;&#20013;&#25110;&#22810;&#25110;&#23569;&#20250;&#25509;&#35302;&#21040;&#19968;&#20123;&#19982; Web &#30456;&#20851;&#30340;&#20869;&#23481;&#12290;&#26089;&#26399;&#20063;&#35768;&#26159;&#24320;&#21457;&#19968;&#20010; Web &#32593;&#31449;&#65292;&#38543;&#30528;&#22823;&#21069;&#31471;&#25216;&#26415;&#30340;&#21457;&#23637;&#65292;&#22312;&#21069;&#21518;&#31471;&#20998;&#31163;&#20043;&#21518;&#65292;&#21518;&#31471; Java &#31995;&#32479;&#21482;&#38656;&#35201;&#21521;&#21069;&#31471;&#25552;&#20379; REST &#25509;&#21475;&#23601;&#22909;&#20102;&#12290;&#22312;&#31995;&#32479;&#20869;&#37096;&#65292;&#20998;&#24067;&#24335;&#31995;&#32479;&#30340;&#20132;&#20114;&#20063;&#26377;&#21487;&#33021;&#26159;&#36890;&#36807; <code>REST</code> &#25509;&#21475;&#26469;&#23454;&#29616;&#30340;&#8212;&#8212;&#22240;&#27492;&#25484;&#25569;&#22522;&#26412;&#30340; Web &#24320;&#21457;&#33021;&#21147;&#36824;&#26159;&#24456;&#26377;&#24517;&#35201;&#30340;&#12290;&#26412;&#31456;&#25105;&#20204;&#20250;&#23398;&#20064;&#22914;&#20309;&#20351;&#29992; Spring Framework &#25552;&#20379;&#30340; Spring MVC &#26469;&#24320;&#21457; Web &#31995;&#32479;&#12290;</p><h2 id="nav_point_134">9.1&#12288;&#31616;&#21333;&#19978;&#25163; Spring MVC</h2><p>&#22312;&#26089;&#26399;&#30340; Java EE &#39033;&#30446;&#24320;&#21457;&#20013;&#65292;&#22823;&#23478;&#32463;&#24120;&#20250;&#25552;&#21040;&#8220;SSH&#8221;&#32452;&#21512;&#65292;&#20854;&#20013;&#30340;&#31532;&#20108;&#20010;&#8220;S&#8221;&#25351;&#30340;&#26159; Web MVC &#26694;&#26550; Struts&#12290;&#20294;&#38543;&#30528;&#26102;&#38388;&#30340;&#25512;&#31227;&#65292;Struts &#26089;&#26089;&#22320;&#23601;&#36864;&#20986;&#20102;&#21382;&#21490;&#30340;&#33310;&#21488;&#65292;&#21516;&#19968;&#26102;&#26399;&#30340; WebWork &#26694;&#26550;&#20063;&#24050;&#23569;&#20154;&#38382;&#27941;&#65292;&#36825;&#31532;&#20108;&#20010;&#8220;S&#8221;&#26089;&#23601;&#34987; Spring MVC &#21462;&#20195;&#20102;&#12290;&#29616;&#22312;&#20877;&#25552;&#36215; Struts&#65292;&#22810;&#25968;&#26159;&#32769;&#39033;&#30446;&#35201;&#20462;&#22797;&#23433;&#20840;&#28431;&#27934;&#12290;&#26080;&#35770;&#26159;&#24320;&#21457; Web &#39029;&#38754;&#65292;&#36824;&#26159; RESTful Web &#26381;&#21153;&#65292;&#37117;&#21487;&#20197;&#20351;&#29992; Spring MVC &#36731;&#26494;&#23454;&#29616;&#12290;&#26412;&#33410;&#23601;&#35753;&#25105;&#20204;&#20808;&#31616;&#21333;&#20102;&#35299;&#19968;&#19979; Spring MVC &#30340;&#22823;&#27010;&#29992;&#27861;&#12290;</p><h3 id="nav_point_135">9.1.1&#12288;Spring MVC &#27010;&#35272;</h3><p>Spring MVC &#33021;&#24110;&#21161;&#25105;&#20204;&#26041;&#20415;&#22320;&#24320;&#21457;&#31526;&#21512; MVC &#27169;&#24335; <span class="&#27880;&#37322;&#32534;&#21495;">1</span> &#30340; Web &#24212;&#29992;&#65292;MVC &#21363; <strong>Model-View-Controller</strong>&#65288;&#27169;&#22411;&#8212;&#8212;&#35270;&#22270;&#8212;&#8212;&#25511;&#21046;&#22120;&#65289;&#65292;&#26159;&#19968;&#31181;&#36719;&#20214;&#26550;&#26500;&#27169;&#24335;&#12290;&#24320;&#22987;&#26102;&#65292;MVC &#36866;&#29992;&#20110;&#26700;&#38754;&#31471;&#31243;&#24207;&#65292;&#22312; B/S &#32467;&#26500;&#30340;&#24212;&#29992;&#20852;&#36215;&#21518;&#65292;MVC &#27169;&#24335;&#20063;&#34987;&#36880;&#28176;&#24341;&#20837; Web &#24212;&#29992;&#12290;&#31616;&#21333;&#35828;&#36215;&#26469;&#65292;MVC &#30340;&#20027;&#35201;<strong>&#30446;&#26631;</strong>&#23601;&#26159;&#23545;&#29992;&#25143;&#30028;&#38754;&#19982;&#19994;&#21153;&#36923;&#36753;&#36827;&#34892;&#35299;&#32806;&#65292;&#25552;&#21319;&#31995;&#32479;&#20195;&#30721;&#30340;&#21487;&#25193;&#23637;&#24615;&#12289;&#21487;&#22797;&#29992;&#24615;&#21644;&#21487;&#32500;&#25252;&#24615;&#12290;<strong>&#27169;&#22411;&#23618;</strong>&#23553;&#35013;&#20102;&#19994;&#21153;&#36923;&#36753;&#65292;<strong>&#35270;&#22270;&#23618;</strong>&#21017;&#26159;&#26292;&#38706;&#32473;&#29992;&#25143;&#30340;&#30028;&#38754;&#65292;<strong>&#25511;&#21046;&#22120;&#23618;</strong>&#21017;&#22312;&#20004;&#32773;&#20043;&#38388;&#20805;&#24403;&#40655;&#21512;&#21058;&#65288;&#25152;&#20197;&#25511;&#21046;&#22120;&#23618;&#19968;&#33324;&#20250;&#24456;&#34180;&#65292;&#27809;&#26377;&#22826;&#22810;&#30340;&#36923;&#36753;&#65289;&#65292;&#35270;&#22270;&#23618;&#25226;&#25968;&#25454;&#32473;&#21040;&#25511;&#21046;&#22120;&#65292;&#30001;&#25511;&#21046;&#22120;&#21435;&#35843;&#29992;&#27169;&#22411;&#23618;&#23545;&#24212;&#30340;&#26381;&#21153;&#12290;Spring MVC &#37324;&#23601;&#26377;&#19968;&#20010;&#37325;&#35201;&#30340; <code>ModelAndView</code> &#31867;&#65292;&#35831;&#27714;&#22788;&#29702;&#23436;&#27605;&#21518;&#37117;&#20250;&#36820;&#22238;&#36825;&#20010;&#31867;&#22411;&#30340;&#23545;&#35937;&#65292;&#20854;&#20013;&#23601;&#21253;&#21547;&#20102;&#27169;&#22411;&#19982;&#35270;&#22270;&#30340;&#20449;&#24687;&#65292;&#32780;&#20195;&#34920;&#25511;&#21046;&#22120;&#30340;&#31867;&#37117;&#20250;&#24102;&#19978; <code>@Controller</code> &#27880;&#35299;&#12290;&#22240;&#27492;&#21487;&#20197;&#35828;&#65292;<code>ModelAndView</code> &#23545;&#24212;&#20102; MVC &#20013;&#30340;&#27169;&#22411;&#19982;&#35270;&#22270;&#65292;&#32780;&#24102;&#26377; <code>@Controller</code> &#27880;&#35299;&#30340;&#31867;&#21017;&#23545;&#24212;&#20102; MVC &#20013;&#30340;&#25511;&#21046;&#22120;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">1</span>&#26681;&#25454;&#32500;&#22522;&#30334;&#31185;&#30340;&#20171;&#32461;&#65292;MVC &#27169;&#24335;&#26368;&#26089;&#26159;&#22312; 1978 &#24180;&#30001; Trygve Reenskaug &#25552;&#20986;&#30340;&#12290;MVC &#27169;&#24335;&#30340;&#30446;&#30340;&#26159;&#23454;&#29616;&#19968;&#31181;&#21160;&#24577;&#30340;&#31243;&#24207;&#35774;&#35745;&#65292;&#26088;&#22312;&#31616;&#21270;&#21518;&#32493;&#23545;&#31243;&#24207;&#30340;&#20462;&#25913;&#21644;&#25193;&#23637;&#65292;&#24182;&#19988;&#23454;&#29616;&#23545;&#31243;&#24207;&#20013;&#26576;&#20123;&#37096;&#20998;&#30340;&#37325;&#22797;&#21033;&#29992;&#12290;MVC &#27169;&#24335;&#22312;&#20998;&#31163;&#31995;&#32479;&#21508;&#37096;&#20998;&#30340;&#21516;&#26102;&#65292;&#20063;&#36171;&#20104;&#20102;&#23427;&#20204;&#24212;&#26377;&#30340;&#21151;&#33021;&#12290;</p><p>Spring MVC &#30340;&#35774;&#35745;&#26159;&#22260;&#32469; <code>DispatcherServlet</code> &#23637;&#24320;&#30340;&#65292;&#23427;&#26159;&#25972;&#20010; Spring MVC &#30340;&#26680;&#24515;&#65292;&#36319;&#23427;&#37197;&#21512;&#30340;&#32452;&#20214;&#20027;&#35201;&#26377;&#19979;&#38754;&#36825;&#20123;&#65306;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#25511;&#21046;&#22120;</strong>&#65292;&#25105;&#20204;&#32534;&#20889;&#30340;&#21508;&#31181; <code>Controller</code>&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#21508;&#31867;<strong>&#26657;&#39564;&#22120;</strong>&#65292;&#20363;&#22914;&#65292;Spring MVC &#20869;&#32622;&#20102;&#23545; Hibernate Validator &#30340;&#25903;&#25345;&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#21508;&#31867;<strong>&#35299;&#26512;&#22120;</strong>&#65292;&#20363;&#22914;&#65292;&#35270;&#22270;&#35299;&#26512;&#22120; <code>ViewResolver</code>&#12289;&#24322;&#24120;&#35299;&#26512;&#22120; <code>HandlerExceptionResolver</code> &#21644; Multipart &#35299;&#26512;&#22120; <code>MultipartResolver</code>&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#22788;&#29702;&#22120;&#26144;&#23556;</strong>&#65292;<code>HandlerMapping</code> &#23450;&#20041;&#20102;&#35831;&#27714;&#35813;&#22914;&#20309;&#25214;&#21040;&#23545;&#24212;&#30340;&#22788;&#29702;&#22120;&#65292;&#20363;&#22914;&#65292;&#26681;&#25454; Bean &#21517;&#31216;&#30340; <code>BeanNameUrlHandlerMapping</code>&#65292;&#20197;&#21450;&#26681;&#25454; <code>@RequestMapping</code> &#27880;&#35299;&#30340; <code>RequestMappingHandlerMapping</code>&#65307;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#22788;&#29702;&#22120;&#36866;&#37197;&#22120;</strong>&#65292;<code>DispatcherServlet</code> &#22312;&#25910;&#21040;&#35831;&#27714;&#26102;&#65292;&#36890;&#36807; <code>HandlerAdapter</code> &#26469;&#35843;&#29992;&#34987;&#26144;&#23556;&#30340;&#22788;&#29702;&#22120;&#12290;</li>
</ul><p>&#22312;&#21518;&#25991;&#20013;&#65292;&#25105;&#20204;&#20250;&#35814;&#32454;&#20171;&#32461; Spring MVC &#20013;&#30340;&#20960;&#20010;&#20027;&#35201;&#37096;&#20998;&#65292;&#36825;&#37324;&#20808;&#26469;&#20102;&#35299;&#19968;&#19979;&#20854;&#20013;&#30340;&#19968;&#20123;&#24120;&#29992;&#27880;&#35299;&#65292;&#20855;&#20307;&#22914;&#34920; 9-1 &#25152;&#31034;&#12290;</p><p><strong>&#34920; 9-1&#12288;Spring MVC &#20013;&#30340;&#24120;&#29992;&#27880;&#35299;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#27880;&#35299;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>@Controller</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23450;&#20041;&#25511;&#21046;&#22120;&#31867;&#65292;&#19982; <code>@Service</code> &#21644; <code>@Repository</code> &#31867;&#20284;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>@RestController</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23450;&#20041; REST &#26381;&#21153;&#30340;&#25511;&#21046;&#22120;&#31867;&#65292;&#36825;&#26159;&#20010;&#24555;&#25463;&#26041;&#24335;&#27880;&#35299;&#65292;&#20854;&#23454;&#23601;&#26159;&#32467;&#21512;&#20102; <code>@Controller</code> &#21644; <code>@ResponseBody</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>@RequestMapping</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23450;&#20041;&#35831;&#27714;&#30340;&#22788;&#29702;&#31867;&#21644;&#26041;&#27861;&#65292;&#20854;&#20013;&#30340; <code>path</code> &#23646;&#24615;&#26159;&#26144;&#23556;&#30340; URL&#65292;<code>method</code> &#26159; <code>RequestMethod</code> &#26522;&#20030;&#20013;&#30340; HTTP &#26041;&#27861;&#65292;&#23545;&#20110;&#21518;&#32773;&#65292;&#36824;&#21487;&#20197;&#20351;&#29992;&#19968;&#20123;&#24555;&#25463;&#27880;&#35299;&#65292;&#20363;&#22914; <code>@GetMapping</code>&#12289;<code>@PostMapping</code>&#12289;<code>@PutMapping</code>&#12289;<code>@DeleteMapping</code> &#21644; <code>@PathMapping</code></p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>@RequestBody</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23450;&#20041;&#35831;&#27714;&#27491;&#25991;&#23545;&#35937;&#65292;&#23558;&#25972;&#20010;&#35831;&#27714;&#27491;&#25991;&#26144;&#23556;&#21040;&#23545;&#35937;&#19978;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>@ResponseBody</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23450;&#20041;&#26041;&#27861;&#36820;&#22238;&#20540;&#21363;&#20026;&#25972;&#20010;&#35831;&#27714;&#30340;&#24212;&#31572;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>@ResponseStatus</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23450;&#20041;&#35831;&#27714;&#24212;&#31572;&#30340; HTTP &#21709;&#24212;&#30721;&#65292;&#20855;&#20307;&#30340;&#21709;&#24212;&#30721;&#21487;&#20197;&#29992; <code>HttpStatus</code> &#26522;&#20030;</p></td>
</tr>
</tbody>
</table><h3 id="nav_point_136">9.1.2&#12288;&#32534;&#20889;&#19968;&#20010;&#31616;&#21333;&#30340;&#25511;&#21046;&#22120;</h3><p>Linus Torvalds &#26377;&#19968;&#21477;&#21517;&#35328;&#65306;</p><blockquote>
<p>&#12288;&#12288;Talk is cheap. Show me the code.</p>
</blockquote><p>&#35201;&#24819;&#26126;&#30333;&#22914;&#20309;&#32534;&#20889; Spring MVC &#30340;&#24212;&#29992;&#65292;&#24320;&#21457; MVC &#30340;&#25511;&#21046;&#22120;&#65292;&#26368;&#22909;&#30340;&#21150;&#27861;&#36824;&#26159;&#21160;&#25163;&#20889;&#19968;&#20010;&#25511;&#21046;&#22120;&#12290;&#20197;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#20026;&#20363;&#65292;&#25105;&#20204;&#26469;&#30475;&#36825;&#20040;&#19968;&#20010;&#38656;&#27714;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#39038;&#23458;&#21040;&#24215;&#21518;&#19968;&#33324;&#20250;&#20808;&#27983;&#35272;&#33756;&#21333;&#12290;&#26377;&#30340;&#39038;&#23458;&#20250;&#26597;&#30475;&#23436;&#25972;&#30340;&#33756;&#21333;&#65292;&#28982;&#21518;&#20174;&#20013;&#25361;&#36873;&#33258;&#24049;&#21916;&#27426;&#30340;&#39278;&#21697;&#65307;&#26377;&#30340;&#39038;&#23458;&#20250;&#30452;&#25509;&#25253;&#39278;&#21697;&#21517;&#31216;&#65307;&#29978;&#33267;&#26377;&#20123;&#29087;&#23458;&#33021;&#22815;&#30452;&#25509;&#25253;&#39278;&#21697;&#32534;&#21495;&#12290;&#20809;&#39038;&#25105;&#20204;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#39038;&#23458;&#20027;&#35201;&#26159;&#31243;&#24207;&#21592;&#65292;&#20182;&#20204;&#19981;&#30452;&#25509;&#25253; 0 &#21644; 1 &#32452;&#25104;&#30340;&#32534;&#30721;&#23601;&#26159;&#19975;&#24184;&#20102;&#12290;</p>
<p>&#25152;&#20197;&#25105;&#20204;&#38656;&#35201;&#25552;&#20379;&#19968;&#20123;&#26381;&#21153;&#65292;&#20197;&#20415;&#21040;&#24215;&#30340;&#39038;&#23458;&#21487;&#20197;&#26041;&#20415;&#22320;&#23436;&#25104;&#19979;&#38754;&#19977;&#20214;&#20107;&#65306;</p>
<p>(1) &#25214;&#21040;&#23436;&#25972;&#30340;&#33756;&#21333;&#65307;</p>
<p>(2) &#26681;&#25454;&#21517;&#31216;&#25214;&#21040;&#39278;&#21697;&#65307;</p>
<p>(3) &#26681;&#25454;&#32534;&#21495;&#25214;&#21040;&#39278;&#21697;&#12290;</p>
</blockquote><ol>
<li><p><strong>&#24320;&#21457;&#25511;&#21046;&#22120;&#21450;&#20854;&#20381;&#36182;&#20195;&#30721;</strong></p>
<p>&#22240;&#20026;&#35201;&#24320;&#21457; Web &#30456;&#20851;&#30340;&#20195;&#30721;&#65292;&#25152;&#20197; pom.xml &#20013;&#24517;&#39035;&#24341;&#20837; Web &#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>&#20195;&#30721;&#31034;&#20363; 9-1<span class="&#27880;&#37322;&#32534;&#21495;">2</span> &#26159;&#33756;&#21333;&#30340; MVC &#25511;&#21046;&#22120;&#20195;&#30721;&#29255;&#27573;&#65292;&#20854;&#20013;&#30340;&#20960;&#20010;&#26041;&#27861;&#20998;&#21035;&#23454;&#29616;&#20102;&#22914;&#19979;&#30340;&#21151;&#33021;&#8212;&#8212; <code>getAllMenu()</code> &#33021;&#33719;&#21462;&#20840;&#37096;&#33756;&#21333;&#39033;&#65292;<code>getById()</code> &#21487;&#20197;&#26681;&#25454;&#32534;&#21495;&#33719;&#21462;&#25351;&#23450;&#33756;&#21333;&#39033;&#65292;<code>getByName()</code> &#21487;&#20197;&#26681;&#25454;&#21517;&#31216;&#33719;&#21462;&#33756;&#21333;&#39033;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-1</strong>&#12288;&#33756;&#21333;&#30340; MVC &#25511;&#21046;&#22120; <code>MenuController</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@ResponseBody
@RequestMapping("/menu")
public class MenuController {
    @Autowired
    private MenuService menuService;

    @GetMapping(params = "!name")
    public List&lt;MenuItem&gt; getAll() {
        return menuService.getAllMenu();
    }

    @GetMapping(path = "/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
    public Optional&lt;MenuItem&gt; getById(@PathVariable Long id) {
        return menuService.getById(id);
    }

    @RequestMapping(params = "name", method = RequestMethod.GET)
    public List&lt;MenuItem&gt; getByName(@RequestParam String name) {
        return menuService.getByName(name);
    }
}</code></pre>
<p>&#35814;&#32454;&#20998;&#26512;&#19968;&#19979;&#36825;&#27573;&#20195;&#30721;&#65292;<code>MenuController</code> &#31867;&#19978;&#28155;&#21152;&#20102; <code>@Controller</code> &#27880;&#35299;&#65292;&#34920;&#26126;&#36825;&#20010;&#31867;&#26159; MVC &#25511;&#21046;&#22120;&#12290;<code>@ResponseBody</code> &#21487;&#20197;&#20889;&#22312;&#31867;&#19978;&#65292;&#20063;&#21487;&#20197;&#20889;&#22312;&#26041;&#27861;&#19978;&#65292;&#34920;&#31034;&#23558;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#20316;&#20026;&#21709;&#24212;&#30340;&#27491;&#25991;&#12290;Spring MVC &#25552;&#20379;&#20102; <code>@RestController</code> &#27880;&#35299;&#65292;&#22312;&#21516;&#26102;&#20351;&#29992; <code>@Controller</code> &#21644; <code>@ResponseBody</code> &#30340;&#24773;&#20917;&#19979;&#21487;&#20197;&#29992;&#23427;&#26469;&#20195;&#26367;&#12290;&#31867;&#19978;&#30340; <code>@RequestMapping</code> &#27880;&#35299;&#35774;&#32622;&#20102;&#25972;&#20010;&#31867;&#37324;&#30340;&#20844;&#20849;&#23646;&#24615;&#65292;&#22312;&#36825;&#37324;&#26159;&#35774;&#32622;&#20102; URL &#26144;&#23556;&#30340;&#22522;&#30784;&#36335;&#24452; <code>/menu</code>&#65292;&#19979;&#38754;&#30340;&#26041;&#27861;&#22312;&#20889;&#36335;&#24452;&#26102;&#23601;&#21487;&#20197;&#19981;&#29992;&#20877;&#21152;&#36825;&#27573;&#21069;&#32512;&#20102;&#12290;</p>
<p>&#26041;&#27861;&#19978;&#30340;&#20960;&#20010;&#27880;&#35299;&#29992;&#26469;&#24314;&#31435;&#26041;&#27861;&#21644;&#35831;&#27714;&#30340;&#26144;&#23556;&#20851;&#31995;&#65292;<code>@GetMapping</code> &#30456;&#24403;&#20110; <code>@RequestMapping(method = RequestMethod.GET)</code>&#65292;&#34920; 9-1 &#20013;&#25552;&#21040;&#30340;&#20854;&#20182;&#20960;&#20010; <code>@XxxMapping</code> &#27880;&#35299;&#20063;&#26159;&#31867;&#20284;&#30340;&#24773;&#20917;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">3</span></p>
<p>&#22312; Spring MVC &#20013;&#65292;<code>@RequestMapping</code> &#26159;&#19968;&#20010;&#38750;&#24120;&#37325;&#35201;&#30340;&#27880;&#35299;&#65292;&#25152;&#20197;&#35201;&#35814;&#32454;&#20171;&#32461;&#19968;&#19979;&#65292;&#34920; 9-2 &#21015;&#20986;&#20102;&#23427;&#30340;&#25152;&#26377;&#23646;&#24615;&#12290;</p>
<p><strong>&#34920; 9-2&#12288;<code>@RequestMapping</code> &#27880;&#35299;&#30340;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#23646;&#24615;</th><th>&#31867;&#22411;</th><th>&#35828;&#26126;</th></tr><tr><td><code>name</code></td><td><code>String</code></td><td>&#20026;&#26144;&#23556;&#23450;&#20041;&#19968;&#20010;&#21517;&#31216;&#65292;&#24403;&#31867;&#19978;&#21644;&#26041;&#27861;&#19978;&#30340;&#27880;&#35299;&#37324;&#37117;&#23450;&#20041;&#20102;&#21517;&#31216;&#65292;&#20250;&#29992; <code>#</code> &#23558;&#23427;&#20204;&#36830;&#25509;&#36215;&#26469;</td></tr><tr><td><code>path</code></td><td><code>String[]</code></td><td>&#25351;&#23450;&#26144;&#23556;&#30340; URL&#65292;&#20063;&#26159;&#26412;&#27880;&#35299;&#30340;&#40664;&#35748;&#23646;&#24615;&#65292;&#31867;&#19978;&#30340; <code>path</code> &#20250;&#20316;&#20026;&#26041;&#27861;&#19978;&#30340; <code>path</code> &#30340;&#21069;&#32512;&#65292;&#22914;&#26524;&#36335;&#24452;&#20013;&#29992;&#20102;&#21344;&#20301;&#31526; <code>{}</code>&#65292;&#21487;&#20197;&#29992; <code>@PathVariable</code> &#27880;&#35299;&#26469;&#21462;&#24471;&#23545;&#24212;&#21344;&#20301;&#31526;&#30340;&#20540;</td></tr><tr><td><code>method</code></td><td><code>RequestMethod[]</code></td><td>&#29992;&#26469;&#32553;&#23567;&#26144;&#23556;&#30340;&#33539;&#22260;&#65292;&#25351;&#23450;&#21487;&#20197;&#25509;&#21463;&#30340; HTTP &#26041;&#27861;&#65292;<code>RequestMethod</code> &#23450;&#20041;&#20102;&#25903;&#25345;&#30340; HTTP &#26041;&#27861;</td></tr><tr><td><code>params</code></td><td><code>String[]</code></td><td>&#29992;&#26469;&#32553;&#23567;&#26144;&#23556;&#30340;&#33539;&#22260;&#65292;&#24403;&#35831;&#27714;&#21442;&#25968;&#21305;&#37197;&#35268;&#21017;&#26102;&#25165;&#20570;&#26144;&#23556;&#65292;&#21487;&#20197;&#29992; <code>param1=value1</code>&#12289;<code>param2!=value2</code>&#12289;<code>param3</code> &#21644; <code>!param4</code> &#20998;&#21035;&#34920;&#31034;&#21442;&#25968;&#31561;&#20110;&#26576;&#20010;&#20540;&#65292;&#21442;&#25968;&#19981;&#31561;&#20110;&#26576;&#20010;&#20540;&#65292;&#24517;&#39035;&#21253;&#21547;&#26576;&#20010;&#21442;&#25968;&#21644;&#19981;&#33021;&#21253;&#21547;&#26576;&#20010;&#21442;&#25968;</td></tr><tr><td><code>headers</code></td><td><code>String[]</code></td><td>&#29992;&#26469;&#32553;&#23567;&#26144;&#23556;&#30340;&#33539;&#22260;&#65292;&#24403; HTTP &#35831;&#27714;&#22836;&#21305;&#37197;&#35268;&#21017;&#26102;&#25165;&#20570;&#26144;&#23556;&#65292;&#35268;&#21017;&#37197;&#32622;&#26041;&#24335;&#19982; <code>params</code> &#30456;&#21516;</td></tr><tr><td><code>consumes</code></td><td><code>String[]</code></td><td>&#29992;&#26469;&#32553;&#23567;&#26144;&#23556;&#30340;&#33539;&#22260;&#65292;&#21482;&#33021;&#22788;&#29702;&#29305;&#23450;&#23186;&#20307;&#31867;&#22411;&#30340;&#35831;&#27714;&#65292;&#20063;&#23601;&#26159;&#21305;&#37197;&#35831;&#27714;&#22836;&#37324;&#30340; <code>Content-Type</code>&#65292;&#23186;&#20307;&#31867;&#22411;&#19968;&#33324;&#36890;&#36807; <code>MediaType</code> &#26469;&#37197;&#32622;&#65292;&#21487;&#20197;&#29992; <code>!</code> &#34920;&#31034;&#21542;&#23450;</td></tr><tr><td><code>produces</code></td><td><code>String[]</code></td><td>&#29992;&#26469;&#32553;&#23567;&#26144;&#23556;&#30340;&#33539;&#22260;&#65292;&#21482;&#33021;&#22788;&#29702;&#25509;&#21463;&#29305;&#23450;&#36820;&#22238;&#23186;&#20307;&#31867;&#22411;&#30340;&#35831;&#27714;&#65292;&#26412;&#26041;&#27861;&#30340;&#32467;&#26524;&#20250;&#34987;&#38480;&#21046;&#22312;&#25351;&#23450;&#30340;&#23186;&#20307;&#31867;&#22411;&#37324;</td></tr></table>
<p>&#36825;&#20010;&#25511;&#21046;&#22120;&#29992;&#21040;&#30340; <code>MenuService</code> &#19982;&#19978;&#19968;&#31456;&#37324;&#30340;&#22522;&#26412;&#31867;&#20284;&#65292;&#20294;&#22686;&#21152;&#20102;&#19968;&#20123;&#26041;&#27861;&#21644;&#27880;&#35299;&#65292;&#20363;&#22914;&#65292;&#26681;&#25454; ID &#21644;&#21517;&#31216;&#33719;&#21462; <code>MenuItem</code> &#30340;&#26041;&#27861;&#65292;&#21478;&#22806;&#65292;&#20107;&#21153;&#19968;&#33324;&#37197;&#32622;&#22312;&#26381;&#21153;&#23618;&#19978;&#65292;&#25152;&#20197;&#36825;&#37324;&#36824;&#22686;&#21152;&#20102; <code>@Transactional</code> &#27880;&#35299;&#65292;&#20855;&#20307;&#35265;&#20195;&#30721;&#31034;&#20363; 9-2&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-2</strong>&#12288;&#22686;&#21152;&#20102;&#25152;&#38656;&#26041;&#27861;&#21644;&#27880;&#35299;&#30340; <code>MenuService</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Transactional
@CacheConfig(cacheNames = "menu")
public class MenuService {
    @Autowired
    private MenuRepository menuRepository;

    @Cacheable
    public List&lt;MenuItem&gt; getAllMenu() {
        return menuRepository.findAll();
    }

    public Optional&lt;MenuItem&gt; getById(Long id) {
        return menuRepository.findById(id);
    }

    public List&lt;MenuItem&gt; getByName(String name) {
        return menuRepository.findAll(Example.of(MenuItem.builder().name(name).build()), Sort.by("id"));
    }

    @Cacheable(key = "#root.methodName + '-' + #name + '-' + #size")
    public Optional&lt;MenuItem&gt; getByNameAndSize(String name, Size size) {
        return menuRepository.findByNameAndSize(name, size);
    }
}</code></pre>
<p>&#27492;&#22806;&#65292;&#30001;&#20110;&#20250;&#36820;&#22238; <code>Money</code> &#31867;&#22411;&#21644; Hibernate &#30340;&#26576;&#20123;&#31867;&#22411;&#65288;&#25105;&#20204;&#30452;&#25509;&#36820;&#22238;&#20102;&#25968;&#25454;&#24211;&#37324;&#26597;&#25214;&#30340;&#23545;&#35937;&#65292;&#26377;&#20123;&#26159; Hibernate &#21253;&#35013;&#36807;&#30340;&#65289;&#65292;&#25152;&#20197;&#38656;&#35201;&#23545;&#25105;&#20204;&#30340; Jackson JSON &#20570;&#20123;&#37197;&#32622;&#12290;&#26412;&#26469;&#25105;&#20204;&#38656;&#35201;&#33258;&#24049;&#32534;&#20889;&#21508;&#31181;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#32452;&#20214;&#65292;&#20294;&#22909;&#22312; Jackson &#31038;&#21306;&#26089;&#23601;&#20026;&#21508;&#31181;&#24120;&#29992;&#30340;&#24211;&#32534;&#20889;&#22909;&#20102;&#25152;&#38656;&#30340;&#35774;&#26045;&#12290;&#21482;&#38656;&#22312; pom.xml &#20013;&#24341;&#20837;&#38656;&#35201;&#30340;&#25968;&#25454;&#31867;&#22411;&#32465;&#23450;&#20381;&#36182;&#23601;&#21487;&#20197;&#20102; <span class="&#27880;&#37322;&#32534;&#21495;">4</span>&#65292;&#20363;&#22914;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;
        &lt;artifactId&gt;jackson-datatype-joda-money&lt;/artifactId&gt;
        &lt;version&gt;2.13.1&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;
        &lt;artifactId&gt;jackson-datatype-hibernate5&lt;/artifactId&gt;
        &lt;version&gt;2.13.1&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;!-- &#30465;&#30053;&#20854;&#20182;&#20381;&#36182; --&gt;
&lt;/dependencies&gt;</code></pre>
<p>&#38543;&#21518;&#65292;Spring Boot &#20250;&#25910;&#38598;&#19978;&#19979;&#25991;&#20013;&#37197;&#32622;&#30340; <code>Module</code>&#65292;&#27880;&#20876;&#21040;&#33258;&#21160;&#37197;&#32622;&#30340; Jackson JSON <code>ObjectMapper</code> &#37324;&#65292;&#25105;&#20204;&#35201;&#20570;&#30340;&#23601;&#26159;&#37197;&#32622;&#20960;&#20010; Bean&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 9-3 &#37027;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-3</strong>&#12288;&#20462;&#25913;&#36807;&#30340; <code>BinaryTeaApplication</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
public class BinaryTeaApplication {

    public static void main(String[] args) {
        SpringApplication.run(BinaryTeaApplication.class, args);
    }

    @Bean
    public JodaMoneyModule jodaMoneyModule() {
        return new JodaMoneyModule();
    }

    @Bean
    public Hibernate5Module hibernate5Module() {
        return new Hibernate5Module();
    }
}</code></pre>
<p>&#36816;&#34892;&#24037;&#31243;&#65292;&#40664;&#35748; Spring Boot &#30340;&#24212;&#29992;&#20250;&#30417;&#21548; <code>8080</code> &#31471;&#21475;&#65292;&#38543;&#21518;&#36890;&#36807;&#27983;&#35272;&#22120;&#25110;&#32773;&#20219;&#20309;&#21487;&#20197;&#35775;&#38382; Web &#30340;&#26041;&#24335;&#26469;&#35775;&#38382; http://localhost:8080/menu &#23601;&#33021;&#30475;&#21040;&#23436;&#25972;&#30340;&#33756;&#21333;&#20102;&#65292;&#22270; 9-1 &#23601;&#26159;&#22312; Chrome &#27983;&#35272;&#22120;&#20013;&#35013;&#19978; JSON View &#25554;&#20214;&#21518;&#30475;&#21040;&#30340;&#25928;&#26524;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00770.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-1&#12288;&#23436;&#25972;&#30340;&#33756;&#21333; JSON &#36755;&#20986;</strong></p>
<p>&#160;</p>
</li>
<li><p><strong>&#36890;&#36807; MockMvc &#23545;&#25511;&#21046;&#22120;&#36827;&#34892;&#21333;&#20803;&#27979;&#35797;</strong></p>
<p>&#29992;&#27983;&#35272;&#22120;&#26597;&#30475;&#36755;&#20986;&#26159;&#19968;&#31181;&#31616;&#21333;&#30340;&#27979;&#35797;&#26041;&#27861;&#65292;&#36890;&#36807;&#36825;&#31181;&#26041;&#24335;&#65292;&#25105;&#20204;&#21487;&#20197;&#30452;&#35266;&#22320;&#30475;&#21040;&#31243;&#24207;&#36816;&#34892;&#30340;&#25928;&#26524;&#65292;&#20294;&#22914;&#26524;&#24076;&#26395;&#21518;&#32493;&#33021;&#21453;&#22797;&#19981;&#26029;&#22320;&#36816;&#34892;&#27979;&#35797;&#65292;&#20570;&#21040;&#27979;&#35797;&#30340;&#33258;&#21160;&#21270;&#65292;&#37027;&#26174;&#28982;&#38656;&#35201;&#25442;&#19968;&#31181;&#27979;&#35797;&#26041;&#27861;&#65292;&#20363;&#22914;&#65292;&#29992;&#23545;&#24212;&#30340;&#21333;&#20803;&#27979;&#35797;&#26469;&#21457;&#36215;&#35831;&#27714;&#24182;&#26816;&#26597;&#32467;&#26524;&#12290;</p>
<p>&#23545;&#20110; Spring MVC&#65292;Spring Framework &#25552;&#20379;&#20102;&#19968;&#20010;&#22909;&#29992;&#30340; <code>MockMvc</code>&#65292;&#21487;&#20197;&#35753;&#25105;&#20204;&#26041;&#20415;&#22320;&#26500;&#24314;&#21508;&#31181; HTTP &#35831;&#27714;&#65292;&#24182;&#35774;&#32622;&#26399;&#26395;&#30340;&#36820;&#22238;&#20540;&#65292;&#20570;&#21508;&#31181;&#26657;&#39564;&#12290;&#25105;&#20204;&#21487;&#20197;&#20687;&#20195;&#30721;&#31034;&#20363; 9-4 &#36825;&#26679;&#26469;&#26500;&#24314; <code>MockMvc</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-4</strong>&#12288;<code>MenuControllerTest</code> &#20013;&#20851;&#20110; <code>MockMvc</code> &#21021;&#22987;&#21270;&#30340;&#37096;&#20998;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuControllerTest {
    private MockMvc mockMvc;

    @BeforeEach
    void setUp(WebApplicationContext wac) {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).alwaysExpect(status().isOk()).build();
    }

    @AfterEach
    void tearDown() {
        mockMvc = null;
    }
    // &#30465;&#30053;&#20854;&#20182;&#37096;&#20998;
}</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#36890;&#36807;&#20256;&#20837; <code>WebApplicationContext</code> &#26469;&#26500;&#24314; <code>MockMvc</code>&#65292;&#38543;&#21518;&#35774;&#32622; <code>MockMvc</code> &#27599;&#27425;&#37117;&#26399;&#26395;&#36820;&#22238; HTTP <code>200 OK</code> &#30340;&#36820;&#22238;&#30721;&#65288;&#36825;&#37324;&#30340; <code>alwaysExpect()</code> &#20063;&#21487;&#20197;&#19981;&#21152;&#26029;&#35328;&#65292;&#22312;&#20855;&#20307;&#30340;&#27979;&#35797;&#26041;&#27861;&#37324;&#20877;&#28155;&#21152;&#65289;&#12290;&#22312;&#27979;&#35797;&#36807;&#31243;&#20013;&#20250;&#29992;&#21040;&#24456;&#22810;&#38745;&#24577;&#26041;&#27861;&#65292;&#25152;&#20197;&#26368;&#22909;&#20808;&#26681;&#25454;&#38656;&#35201;&#29992; <code>import static</code> &#23548;&#20837;&#19968;&#20123;&#26041;&#27861;&#65292;&#20363;&#22914;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>MockMvcBuilders.*</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>MockMvcRequestBuilders.*</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>MockMvcResultMatchers.*</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>MockMvcResultHandlers.*</code></li>
</ul>
<p>&#27492;&#22806;&#65292;&#25105;&#20204;&#20063;&#21487;&#20197;&#38024;&#23545;&#29305;&#23450; <code>Controller</code> &#21021;&#22987;&#21270; <code>MockMvc</code>&#65292;&#20363;&#22914;&#20687;&#19979;&#38754;&#36825;&#26679;&#65292;&#20294;&#36825;&#26679;&#38656;&#35201;&#33258;&#24049;&#22788;&#29702;&#21508;&#31181;&#20381;&#36182;&#65292;&#25152;&#20197;&#24314;&#35758;&#20351;&#29992;&#19978;&#38754;&#30340;&#26041;&#27861;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>this.mockMvc = MockMvcBuilders.standaloneSetup(new MenuController()).build();</code></pre>
<p><code>getAll()</code> &#26041;&#27861;&#30340;&#27979;&#35797;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 9-5 &#25152;&#31034;&#65292;&#20854;&#20013;&#26377;&#20197;&#19979;&#20960;&#20010;&#27493;&#39588;&#12290;</p>
<p>(1) &#36890;&#36807; <code>MockMvcRequestBuilders.get()</code> &#21457;&#36215;&#19968;&#20010;&#38024;&#23545; <code>/menu</code> &#30340; <code>GET</code> &#35831;&#27714;&#65292;&#31867;&#20284;&#30340;&#36824;&#26377; <code>post()</code> &#31561;&#26041;&#27861;&#12290;</p>
<p>(2) <code>andExpect()</code> &#29992;&#26469;&#35774;&#32622;&#26399;&#26395;&#30340;&#26816;&#26597;&#39033;&#65292;&#36825;&#37324;&#20808;&#29992; <code>MockMvcResultMatchers.handler()</code> &#21462;&#24471;&#20102;&#22788;&#29702;&#22120;&#65292;&#38543;&#21518;&#21028;&#26029;&#23427;&#26159;&#19981;&#26159; <code>MenuController</code> &#31867;&#30340; <code>getAll()</code> &#26041;&#27861;&#65292;&#26816;&#26597;&#26144;&#23556;&#26159;&#21542;&#27491;&#30830;&#12290;</p>
<p>(3) &#36890;&#36807; JsonPath<span class="&#27880;&#37322;&#32534;&#21495;">5</span> &#23545;&#36820;&#22238;&#30340;&#27491;&#25991;&#36827;&#34892;&#26657;&#39564;&#65292;&#36825;&#37324;&#26816;&#26597;&#20102; JSON &#26159;&#19968;&#20010;&#25968;&#32452;&#65292;&#25968;&#32452;&#38271;&#24230;&#26159; 2&#65292;&#25152;&#26377;&#30340; <code>name</code> &#23646;&#24615;&#20013;&#37117;&#26377;&#8220;<code>Java</code> &#21654;&#21857;&#8221;&#12290;&#22312;&#21305;&#37197;&#26102;&#29992;&#21040;&#20102; Hamcrest<span class="&#27880;&#37322;&#32534;&#21495;">6</span>&#65292;&#21487;&#20197;&#22312; <code>Matchers</code> &#37324;&#25214;&#21040;&#22823;&#37327;&#29616;&#25104;&#30340;&#21305;&#37197;&#22120;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-5</strong>&#12288;<code>MenuControllerTest</code> &#20013;&#20851;&#20110; <code>getAll()</code> &#27979;&#35797;&#30340;&#37096;&#20998;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuControllerTest {
    // &#30465;&#30053;&#20854;&#20182;&#37096;&#20998;
    @Test
    void testGetAll() throws Exception {
        mockMvc.perform(get("/menu"))
                // &#21028;&#26029;&#22788;&#29702;&#26041;&#27861;
                .andExpect(handler().handlerType(MenuController.class))
                .andExpect(handler().methodName("getAll"))
                // &#21028;&#26029;&#36820;&#22238;JSON&#20869;&#23481;
                .andExpect(jsonPath("$").isArray())
                .andExpect(jsonPath("$.length()").value(2))
                .andExpect(jsonPath("$..name").value(Matchers.hasItem("Java&#21654;&#21857;")));
    }
}</code></pre>
<p>&#25509;&#19979;&#26469;&#65292;&#20877;&#27979;&#35797;&#19968;&#19979; <code>getById()</code> &#26041;&#27861;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-6 &#25152;&#31034;&#65292;&#36825;&#37324;&#22810;&#20102;&#29992; <code>MockMvcResultMatchers.content()</code> &#26469;&#26816;&#26597;&#36820;&#22238;&#30340; <code>Content-Type</code> &#22836;&#21644;&#36820;&#22238;&#30340;&#28040;&#24687;&#27491;&#25991;&#65292;&#22240;&#20026;&#21482;&#36820;&#22238;&#21333;&#20010;&#23545;&#35937;&#65292;&#25152;&#20197;&#22312;&#27809;&#26377;&#32467;&#26524;&#26102;&#24207;&#21015;&#21270;&#30340;&#20540;&#20026; <code>null</code>&#12290;&#25105;&#20204;&#20998;&#21035;&#29992;&#20004;&#20010;&#27979;&#35797;&#26041;&#27861;&#27979;&#35797;&#20102;&#20004;&#31181;&#22330;&#26223;&#12290;&#20854;&#23454;&#65292;&#22312;&#27809;&#26377;&#25214;&#21040;&#33756;&#21333;&#39033;&#26102;&#24212;&#35813;&#23558; HTTP &#21709;&#24212;&#30721;&#35774;&#32622;&#20026; <code>404</code>&#65292;&#36825;&#26679;&#25165;&#26356;&#31526;&#21512; RESTful Web Service &#30340;&#39118;&#26684;&#65292;&#25105;&#20204;&#22312;&#21518;&#32493;&#20869;&#23481;&#20250;&#20171;&#32461;&#22914;&#20309;&#36827;&#34892;&#35774;&#32622;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-6</strong>&#12288;<code>MenuControllerTest</code> &#20013;&#20851;&#20110; <code>getById()</code> &#27979;&#35797;&#30340;&#37096;&#20998;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuControllerTest {
    // &#30465;&#30053;&#20854;&#20182;&#37096;&#20998;
    @Test
    void testGetById() throws Exception {
        mockMvc.perform(get("/menu/1"))
                // &#21028;&#26029;&#21709;&#24212;&#22836;
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                // &#21028;&#26029;&#22788;&#29702;&#26041;&#27861;
                .andExpect(handler().handlerType(MenuController.class))
                .andExpect(handler().methodName("getById"))
                // &#21028;&#26029;&#36820;&#22238;&#30340;JSON&#20869;&#23481;
                .andExpect(jsonPath("$.name").value("Java&#21654;&#21857;"))
                .andExpect(jsonPath("$.size").value("MEDIUM"));
    }

    @Test
    void testGetByIdWithWrongId() throws Exception {
        mockMvc.perform(get("/menu/100"))
                .andExpect(content().string("null"));
    }
}</code></pre>
<p>&#26368;&#21518;&#65292;&#20877;&#26469;&#27979;&#35797; <code>getByName()</code> &#26041;&#27861;&#65292;&#20855;&#20307;&#30340;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 9-7 &#25152;&#31034;&#12290;&#36825;&#37324;&#36890;&#36807; <code>get().param()</code> &#26041;&#27861;&#35774;&#32622;&#20102;&#35831;&#27714;&#30340;&#21442;&#25968;&#65292;&#24403;&#20256;&#20837;&#30340;&#21442;&#25968;&#26597;&#19981;&#21040;&#20869;&#23481;&#26102;&#65292;&#36820;&#22238;&#30340;&#25968;&#32452;&#20026;&#31354;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-7</strong>&#12288;<code>MenuControllerTest</code> &#20013;&#20851;&#20110; <code>getByName()</code> &#27979;&#35797;&#30340;&#37096;&#20998;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuControllerTest {
    // &#30465;&#30053;&#20854;&#20182;&#37096;&#20998;
    @Test
    void testGetByName() throws Exception {
        mockMvc.perform(get("/menu").param("name", "Java&#21654;&#21857;"))
                .andExpect(handler().handlerType(MenuController.class))
                .andExpect(handler().methodName("getByName"))
                .andExpect(jsonPath("$.length()").value(2));
    }

    @Test
    void testGetByNameWithWrongName() throws Exception {
        mockMvc.perform(get("/menu").param("name", "Java"))
                .andExpect(jsonPath("$").isEmpty());
    }
}</code></pre>
<p>JsonPath &#38750;&#24120;&#28789;&#27963;&#65292;&#26377;&#24456;&#22810;&#25805;&#20316;&#31526;&#21644;&#20989;&#25968;&#65292;&#25105;&#20204;&#21487;&#20197;&#22312;&#20854;&#23448;&#26041;&#20027;&#39029;&#26597;&#30475;&#22522;&#26412;&#30340;&#29992;&#27861;&#65292;&#34920; 9-3 &#21015;&#20986;&#20102;&#19968;&#20123;&#24120;&#29992;&#30340;&#25805;&#20316;&#31526;&#12290;JsonPath &#30340;&#24120;&#29992;&#20989;&#25968;&#26377;&#36816;&#31639;&#31867;&#30340; <code>max()</code>&#12289;<code>min()</code>&#12289;<code>avg()</code> &#21644; <code>sum()</code>&#65292;&#37117;&#26159;&#29992;&#20110;&#25968;&#32452;&#30340;&#65292;&#27492;&#22806;&#25968;&#32452;&#30340; <code>length()</code> &#21487;&#20197;&#36820;&#22238;&#25968;&#32452;&#38271;&#24230;&#12290;</p>
<p><strong>&#34920; 9-3&#12288;JsonPath &#30340;&#24120;&#29992;&#25805;&#20316;&#31526;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#25805;&#20316;&#31526;</th><th>&#35828;&#26126;</th></tr><tr><td><code>$</code></td><td>JSON &#30340;&#26681;&#20803;&#32032;</td></tr><tr><td><code>@</code></td><td>&#27491;&#22312;&#22788;&#29702;&#30340;&#24403;&#21069;&#33410;&#28857;</td></tr><tr><td><code>*</code></td><td>&#36890;&#37197;&#31526;</td></tr><tr><td><code>..</code></td><td>&#28145;&#24230;&#25195;&#25551;&#65292;&#21487;&#20197;&#25195;&#25551;&#24456;&#22810;&#23618;&#20197;&#19979;&#30340;&#20869;&#23481;</td></tr><tr><td><code>.&lt; &#21517;&#31216; &gt;</code></td><td>&#29305;&#23450;&#21517;&#31216;&#30340;&#23376;&#33410;&#28857;</td></tr><tr><td><code>[ &#25968;&#32452;&#19979;&#26631; ]</code></td><td>&#36820;&#22238;&#25968;&#32452;&#30340;&#29305;&#23450;&#20301;&#32622;&#30340;&#20803;&#32032;</td></tr><tr><td><code>[ &#36215;&#22987;&#25968;&#32452;&#19979;&#26631; : &#32467;&#26463;&#25968;&#32452;&#19979;&#26631; ]</code></td><td>&#20174;&#25968;&#32452;&#20013;&#20999;&#20986;&#19968;&#37096;&#20998;</td></tr></table>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">2</span>&#36825;&#20010;&#31034;&#20363;&#25918;&#22312;&#31532; 9 &#31456;&#30340;&#30446;&#24405;&#37324;&#65292;&#20855;&#20307;&#20301;&#32622;&#26159; ch9/binarytea-simple-controller&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">3</span>&#35831;&#27880;&#24847;&#65292;&#26412;&#26469;&#24212;&#35813;&#20026;&#23637;&#29616;&#23618;&#32534;&#20889;&#29992;&#20110;&#21521;&#35843;&#29992;&#26041;&#36820;&#22238;&#30340;&#35270;&#22270;&#23545;&#35937;&#30340;&#65292;&#20294;&#36825;&#37324;&#20165;&#26159;&#28436;&#31034;&#65292;&#23601;&#30452;&#25509;&#36820;&#22238;&#20102;&#24213;&#23618;&#25968;&#25454;&#24211;&#26144;&#23556;&#30340;&#23545;&#35937;&#12290;&#22312;&#23454;&#38469;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#24182;&#19981;&#25512;&#33616;&#36825;&#31181;&#20570;&#27861;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">4</span>&#29256;&#26412;&#38656;&#35201;&#26681;&#25454; Spring Boot &#31649;&#29702;&#30340; Jackson JSON &#30340;&#29256;&#26412;&#26469;&#35774;&#32622;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">5</span>JSONPath &#26159;&#19968;&#31181;&#35835;&#21462; JSON &#25991;&#26723;&#30340; Java DSL&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">6</span>Hamcrest &#26159;&#21333;&#20803;&#27979;&#35797;&#21033;&#22120;&#65292;&#21487;&#20197;&#24110;&#21161;&#25105;&#20204;&#28789;&#27963;&#22320;&#21019;&#24314;&#21508;&#31181;&#21305;&#37197;&#34920;&#36798;&#24335;&#65292;&#19981;&#20165;&#26377;&#38024;&#23545; Java &#30340;&#29256;&#26412;&#65292;&#20063;&#25903;&#25345;&#24456;&#22810;&#20854;&#20182;&#30340;&#35821;&#35328;&#12290;</p><h2 id="nav_point_137">9.2&#12288;Spring MVC &#30340;&#35831;&#27714;&#22788;&#29702;&#36923;&#36753;</h2><p>&#22312;&#30475;&#36807;&#20102;&#22914;&#20309;&#32534;&#20889;&#19968;&#20010;&#31616;&#21333;&#30340; Spring MVC &#31243;&#24207;&#21518;&#65292;&#22823;&#23478;&#24515;&#20013;&#24212;&#35813;&#20250;&#26377;&#19968;&#20123;&#22909;&#22855;&#65306;&#36825;&#32972;&#21518;&#21040;&#24213;&#21457;&#29983;&#20102;&#20160;&#20040;&#65311;Spring MVC &#26159;&#24590;&#20040;&#25226;&#36825;&#20123;&#21151;&#33021;&#20018;&#32852;&#36215;&#26469;&#30340;&#65311;&#25105;&#20204;&#21482;&#26159;&#20889;&#20102;&#19968;&#20010;&#25511;&#21046;&#22120;&#32780;&#24050;&#65292;HTTP &#35831;&#27714;&#26159;&#24590;&#20040;&#36716;&#25442;&#20026;&#25511;&#21046;&#22120;&#26041;&#27861;&#30340;&#35843;&#29992;&#30340;&#65311;&#32467;&#26524;&#21448;&#26159;&#24590;&#20040;&#21464;&#25104; JSON &#30340;&#8230;&#8230;&#36825;&#19968;&#33410;&#23601;&#35753;&#25105;&#20204;&#19968;&#28857;&#19968;&#28857;&#26469;&#35299;&#37322;&#20854;&#20013;&#30340;&#36923;&#36753;&#12290;</p><h3 id="nav_point_138">9.2.1&#12288;&#35831;&#27714;&#30340;&#22788;&#29702;&#27969;&#31243;</h3><p>&#29616;&#20195; Java Web &#39033;&#30446;&#22312;&#22788;&#29702; HTTP &#35831;&#27714;&#26102;&#22522;&#26412;&#37117;&#36981;&#24490;&#19968;&#26679;&#30340;&#35268;&#33539;&#65292;&#21363; Java Servlet &#35268;&#33539; <span class="&#27880;&#37322;&#32534;&#21495;">7</span>&#65288;JSR 340&#65289;&#12290;&#20854;&#22788;&#29702;&#27969;&#31243;&#37117;&#26159; Servlet &#23481;&#22120;&#65288;&#20363;&#22914; Tomcat &#25110;&#32773; Jetty&#65289;&#25910;&#21040;&#19968;&#20010;&#35831;&#27714;&#65292;&#25509;&#30528;&#25214;&#21040;&#21512;&#36866;&#30340; Servlet &#36827;&#34892;&#22788;&#29702;&#65292;&#38543;&#21518;&#36820;&#22238;&#21709;&#24212;&#12290;&#22312; Spring MVC &#20013;&#65292;&#36825;&#20010;&#22788;&#29702;&#35831;&#27714;&#30340; Servlet &#23601;&#26159;&#21069;&#38754;&#25552;&#21040;&#36807;&#30340; <code>DispatcherServlet</code>&#12290;&#26681;&#25454;&#37197;&#32622;&#65292;Servlet &#23481;&#22120;&#20250;&#23558;&#25351;&#23450;&#30340;&#35831;&#27714;&#37117;&#20132;&#30001;&#23427;&#26469;&#22788;&#29702;&#65292;&#22312;&#25910;&#21040;&#35831;&#27714;&#21518;&#65292;<code>DispatcherServlet</code> &#20250;&#22312; Spring &#23481;&#22120;&#20013;&#25214;&#21040;&#21512;&#36866;&#30340;&#22788;&#29702;&#22120;&#65288;&#22823;&#37096;&#20998;&#24773;&#20917;&#19979;&#26159;&#25511;&#21046;&#22120;&#65292;&#21363;&#24102;&#26377; <code>@Controller</code> &#27880;&#35299;&#30340;&#31867;&#65289;&#26469;&#22788;&#29702;&#35831;&#27714;&#65292;&#22788;&#29702;&#32467;&#26524;&#32463;&#36807;&#35270;&#22270;&#27169;&#26495;&#21518;&#24471;&#21040;&#21487;&#20197;&#21576;&#29616;&#65288;render&#65289;&#30340;&#21709;&#24212;&#20869;&#23481;&#65292;&#26368;&#21518;&#20877;&#36820;&#22238;&#32473;&#29992;&#25143;&#65292;&#22270; 9-2<span class="&#27880;&#37322;&#32534;&#21495;">8</span> &#23637;&#31034;&#20102;&#19978;&#36848;&#22823;&#33268;&#30340;&#36807;&#31243;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">7</span>&#25130;&#33267;&#26412;&#20070;&#32534;&#20889;&#26102;&#65292;Java Servlet &#35268;&#33539;&#26159; 3.1 &#29256;&#26412;&#30340;&#65292;&#22823;&#23478;&#21487;&#20197;&#20174; JCP &#30340;&#23448;&#32593;&#26597;&#35810;&#21040; JSR 340 &#30340;&#20449;&#24687;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">8</span>&#36825;&#24352;&#22270;&#21462;&#33258; Spring Framework &#30340;&#23448;&#26041;&#25991;&#26723;&#65292;&#31616;&#21333;&#36827;&#34892;&#20102;&#32763;&#35793;&#19982;&#24494;&#35843;&#12290;</p><p class="&#22270;"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00771.jpeg"/></p><p class="p-img-title"><strong>&#22270; 9-2&#12288;Spring MVC &#30340;&#35831;&#27714;&#22788;&#29702;&#27969;&#31243;&#27010;&#35201;</strong></p><ol>
<li><p><strong>DispatcherServlet &#30340;&#21021;&#22987;&#21270;</strong></p>
<p>&#26082;&#28982; <code>DispatcherServlet</code> &#26159;&#19968;&#20010; Servlet &#30340;&#23454;&#29616;&#65292;&#37027;&#23601;&#20250;&#36981;&#24490;&#20854;&#29983;&#21629;&#36807;&#31243;&#65292;&#20363;&#22914;&#20250;&#22312;&#21019;&#24314;&#21518;&#36827;&#34892;&#21021;&#22987;&#21270;&#12290;<code>HttpServletBean.init()</code> &#26041;&#27861;&#35843;&#29992;&#20102;&#23376;&#31867;&#30340;&#26041;&#27861; <code>FrameworkServlet.initServletBean()</code>&#65292;&#20854;&#20013;&#20570;&#20102; Web &#24212;&#29992;&#19978;&#19979;&#25991;&#30340;&#21021;&#22987;&#21270;&#65292;&#29992;&#30340;&#23601;&#26159; <code>initWebApplicationContext()</code>&#12290;&#22312;&#21021;&#22987;&#21270; Web &#24212;&#29992;&#19978;&#19979;&#25991;&#25110;&#32773;&#26159;&#19978;&#19979;&#25991;&#26356;&#26032;&#26102;&#65292;&#37117;&#20250;&#35843;&#29992; <code>DispatcherServlet.onRefresh()</code>&#65292;&#32780;&#36825;&#20010;&#26041;&#27861;&#23601;&#19968;&#21477;&#35805;&#65292;&#30452;&#25509;&#35843;&#29992;&#20102;&#19979;&#38754;&#30340; <code>initStrategies()</code> &#26041;&#27861;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>protected void initStrategies(ApplicationContext context) {
    initMultipartResolver(context);
    initLocaleResolver(context);
    initThemeResolver(context);
    initHandlerMappings(context);
    initHandlerAdapters(context);
    initHandlerExceptionResolvers(context);
    initRequestToViewNameTranslator(context);
    initViewResolvers(context);
    initFlashMapManager(context);
}</code></pre>
<p>&#36825;&#27573;&#20195;&#30721;&#19981;&#38590;&#29702;&#35299;&#65292;&#23601;&#26159;&#22312;&#21021;&#22987;&#21270; Spring MVC &#30340;&#24456;&#22810;&#29305;&#27530;&#31867;&#22411;&#30340; Bean&#65292;&#34920; 9-4 &#23545;&#36825;&#20123; Bean &#20570;&#20102;&#19968;&#20010;&#31616;&#21333;&#30340;&#35828;&#26126;&#12290;</p>
<p><strong>&#34920; 9-4&#12288;Spring MVC &#20013;&#30340;&#29305;&#27530; Bean &#31867;&#22411;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>Bean &#31867;&#22411;</th><th>&#35828;&#26126;</th></tr><tr><td><code>MultipartResolver</code></td><td>&#29992;&#26469;&#35299;&#26512; <code>MultiPart</code> &#35831;&#27714;&#30340;&#35299;&#26512;&#22120;&#65292;&#36890;&#24120;&#26159;&#19978;&#20256;&#25991;&#20214;&#30340;&#35831;&#27714;&#65292;<code>MultipartResolver</code> &#36825;&#23618;&#25277;&#35937;&#30340;&#32972;&#21518;&#20250;&#26377;&#22810;&#31181;&#23454;&#29616;&#65292;&#20363;&#22914;&#22522;&#20110; Commons FileUpload</td></tr><tr><td><code>LocaleResolver</code></td><td>&#21644;&#35821;&#35328;&#29615;&#22659;&#26377;&#20851;&#30340;&#35299;&#26512;&#22120;&#65292;&#36890;&#24120;&#29992;&#20110;&#22269;&#38469;&#21270;&#30456;&#20851;&#30340;&#22330;&#26223;&#20013;&#65292;&#21253;&#21547;&#26102;&#21306;&#12289;&#35821;&#35328;&#31561;&#22810;&#31181;&#20449;&#24687;</td></tr><tr><td><code>ThemeResolver</code></td><td>&#20027;&#39064;&#65288;Theme&#65289;&#35299;&#26512;&#22120;&#65292;&#36873;&#25321;&#24212;&#29992;&#31243;&#24207;&#30340;&#22806;&#35266;&#30028;&#38754;&#65292;&#20027;&#39064;&#36890;&#24120;&#26159;&#19968;&#32452;&#38745;&#24577;&#36164;&#28304;</td></tr><tr><td><code>HandlerMapping</code></td><td>&#29992;&#20110;&#23558;&#35831;&#27714;&#26144;&#23556;&#21040;&#22788;&#29702;&#22120;&#19978;&#65292;&#36807;&#31243;&#20013;&#36824;&#21253;&#25324;&#21508;&#31181;&#21069;&#32622;&#19982;&#21518;&#32622;&#22788;&#29702;&#65292;&#20004;&#20010;&#20027;&#35201;&#30340;&#23454;&#29616;&#31867;&#26159; <code>RequestMappingHandlerMapping</code> &#21644; <code>SimpleUrlHandlerMapping</code></td></tr><tr><td><code>HandlerAdapter</code></td><td>&#29992;&#20110;&#35302;&#21457;&#25191;&#34892;&#22788;&#29702;&#22120;&#65292;&#36890;&#36807;&#36825;&#23618;&#25277;&#35937;&#65292;<code>DispatcherServlet</code> &#21487;&#20197;&#19981;&#29992;&#20851;&#24515;&#20855;&#20307;&#22914;&#20309;&#25191;&#34892;&#35843;&#29992;</td></tr><tr><td><code>HandlerExceptionResolver</code></td><td>&#24322;&#24120;&#22788;&#29702;&#35299;&#26512;&#22120;</td></tr><tr><td><code>ViewResolver</code></td><td>&#29992;&#20110;&#23558;&#23383;&#31526;&#20018;&#24418;&#24335;&#30340;&#35270;&#22270;&#21517;&#31216;&#36716;&#21270;&#20026;&#20855;&#20307;&#30340; <code>View</code>&#65292;<code>RequestToViewNameTranslator</code> &#20250;&#26681;&#25454;&#35831;&#27714;&#20449;&#24687;&#36716;&#25442;&#23545;&#24212;&#30340;&#35270;&#22270;&#21517;&#31216;</td></tr><tr><td><code>FlashMapManager</code></td><td>&#29992;&#20110;&#23384;&#21462;&#22312;&#35831;&#27714;&#38388;&#26242;&#23384;&#30340;&#36755;&#20837;&#19982;&#36755;&#20986;&#20449;&#24687;&#65292;&#36890;&#24120;&#20250;&#29992;&#22312;&#37325;&#23450;&#21521;&#26102;</td></tr></table>
<p>&#160;</p>
</li>
<li><p><strong>&#35831;&#27714;&#30340;&#22788;&#29702;&#36807;&#31243;</strong></p>
<p><code>DispatcherServlet</code> &#22312;&#25910;&#21040;&#35831;&#27714;&#21518;&#65292;&#20250;&#20132;&#30001; <code>doService()</code> &#26041;&#27861;&#26469;&#36827;&#34892;&#22788;&#29702;&#65292;&#20854;&#20013;&#21253;&#21547;&#20102;&#20004;&#20010;&#20027;&#35201;&#30340;&#27493;&#39588;&#65306;&#31532;&#19968;&#27493;&#65292;&#21521;&#35831;&#27714;&#20013;&#35774;&#32622; Spring MVC &#30456;&#20851;&#30340;&#19968;&#20123;&#23646;&#24615;&#65307;&#31532;&#20108;&#27493;&#65292;&#35843;&#29992; <code>doDispatch()</code> &#23558;&#35831;&#27714;&#20998;&#27966;&#32473;&#20855;&#20307;&#30340;&#22788;&#29702;&#22120;&#25191;&#34892;&#23454;&#38469;&#30340;&#22788;&#29702;&#12290;&#34920; 9-5 &#32599;&#21015;&#20102;&#31532;&#19968;&#27493;&#37324;&#20027;&#35201;&#35774;&#32622;&#30340;&#20960;&#20010;&#23646;&#24615;&#12290;</p>
<p><strong>&#34920; 9-5&#12288;<code>doService()</code> &#26041;&#27861;&#20013;&#35774;&#32622;&#21040; <code>HttpServletRequest</code> &#37324;&#30340;&#20960;&#20010;&#23646;&#24615;</strong><sup><b>9</b></sup></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#23646;&#24615;&#21517;<sup><b>9</b></sup></th><th>&#35828;&#26126;</th></tr><tr><td><code>WEB_APPLICATION_CONTEXT_ATTRIBUTE</code></td><td><code>WebApplicationContext</code>&#65292;&#21363; Web &#30340;&#24212;&#29992;&#19978;&#19979;&#25991;</td></tr><tr><td><code>LOCALE_RESOLVER_ATTRIBUTE</code></td><td>&#22788;&#29702;&#35831;&#27714;&#26102;&#21487;&#33021;&#20250;&#38656;&#35201;&#29992;&#21040;&#30340; <code>LocaleResolver</code>&#65292;&#22914;&#26524;&#27809;&#26377;&#22269;&#38469;&#21270;&#38656;&#27714;&#65292;&#21487;&#20197;&#24573;&#30053;&#23427;</td></tr><tr><td><code>THEME_RESOLVER_ATTRIBUTE</code></td><td>&#29992;&#26469;&#20915;&#23450;&#20351;&#29992;&#21738;&#20010;&#26174;&#31034;&#20027;&#39064;&#30340; <code>ThemeResolver</code>&#65292;&#22914;&#26524;&#27809;&#26377;&#36825;&#20010;&#38656;&#27714;&#65292;&#20063;&#21487;&#20197;&#24573;&#30053;&#23427;</td></tr><tr><td><code>THEME_SOURCE_ATTRIBUTE</code></td><td>&#29992;&#26469;&#33719;&#21462;&#20027;&#39064;&#30340; <code>ThemeSource</code>&#65292;&#40664;&#35748;&#26159;&#24403;&#21069;&#30340; <code>WebApplicationContext</code></td></tr><tr><td><code>INPUT_FLASH_MAP_ATTRIBUTE</code></td><td>&#19978;&#20010;&#35831;&#27714;&#20256;&#36882;&#36807;&#26469;&#26242;&#23384;&#21040; <code>FlashMapManager</code> &#37324;&#30340; <code>FlashMap</code></td></tr><tr><td><code>OUTPUT_FLASH_MAP_ATTRIBUTE</code></td><td>&#29992;&#26469;&#21521;&#21518;&#20256;&#36882;&#30340; <code>FlashMap</code> &#20013;&#30340;&#26242;&#23384;&#20449;&#24687;</td></tr><tr><td><code>FLASH_MAP_MANAGER_ATTRIBUTE</code></td><td>&#22914;&#26524;&#24403;&#21069;&#23384;&#22312; <code>FlashMapManager</code>&#65292;&#21017;&#23558;&#23427;&#35774;&#32622;&#21040;&#35831;&#27714;&#37324;</td></tr></table>
<blockquote>
<p><sup><b>9</b></sup>&#36825;&#37324;&#37117;&#26159;&#23450;&#20041;&#30340;&#24120;&#37327;&#21517;&#65292;&#24182;&#38750;&#20855;&#20307;&#30340;&#20540;&#12290;</p>
</blockquote>
<p><code>doDispatch()</code> &#26041;&#27861;&#30340;&#22823;&#33268;&#22788;&#29702;&#36923;&#36753;&#22914;&#22270; 9-3 &#25152;&#31034;&#65292;<code>DispatcherServlet</code> &#20250;&#23581;&#35797;&#26681;&#25454;&#35831;&#27714;&#26469;&#25214;&#21040;&#21512;&#36866;&#30340;&#22788;&#29702;&#22120;&#65292;&#20877;&#36890;&#36807; <code>HandlerAdapter</code> &#26469;&#25191;&#34892;&#22788;&#29702;&#22120;&#30340;&#36923;&#36753;&#65292;&#32463;&#36807;&#21069;&#32622;&#22788;&#29702;&#12289;&#22788;&#29702;&#22120;&#22788;&#29702;&#21644;&#21518;&#32622;&#22788;&#29702;&#31561;&#22810;&#20010;&#27493;&#39588;&#65292;&#26368;&#32456;&#36820;&#22238;&#19968;&#20010; <code>ModelAndView</code>&#12290;<code>RequestMappingHandlerAdapter</code> &#26159;&#19987;&#38376;&#29992;&#26469;&#35843;&#29992; <code>@RequestMapping</code> &#27880;&#35299;&#26631;&#35760;&#30340;&#22788;&#29702;&#22120;&#30340;&#12290;&#22312;&#22788;&#29702;&#32467;&#26524;&#30340;&#37027;&#19968;&#27493;&#65292;&#22914;&#26524;&#26377;&#24322;&#24120;&#23601;&#22788;&#29702;&#24322;&#24120;&#65292;&#20363;&#22914;&#20132;&#32473;&#19987;&#38376;&#30340; <code>HandlerExceptionResolver</code> &#26469;&#22788;&#29702;&#65307;&#22914;&#26524;&#27809;&#26377;&#24322;&#24120;&#23601;&#30475; <code>ModelAndView</code>&#65292;&#19981;&#20026;&#31354;&#21017;&#21576;&#29616;&#20855;&#20307;&#30340;&#35270;&#22270;&#65292;&#19981;&#23384;&#22312;&#20063;&#19981;&#29992;&#25285;&#24515;&#65292;&#22240;&#20026;&#35831;&#27714;&#21487;&#33021;&#24050;&#32463;&#22788;&#29702;&#23436;&#25104;&#20102;&#12290;</p>
<p>&#36890;&#35835;&#20102; <code>DispatcherServlet</code> &#30340; <code>doService()</code> &#21644; <code>doDispatch()</code> &#26041;&#27861;&#20043;&#21518;&#65292;&#25105;&#20204;&#33021;&#22823;&#33268;&#20102;&#35299;&#25972;&#20010;&#35831;&#27714;&#30340;&#22788;&#29702;&#36807;&#31243;&#12290;&#22914;&#26524;&#24863;&#20852;&#36259;&#30340;&#35805;&#65292;&#20320;&#36824;&#21487;&#20197;&#36890;&#36807; IDE &#19968;&#27493;&#27493;&#35843;&#35797;&#19968;&#20010;&#35831;&#27714;&#30340;&#22788;&#29702;&#36807;&#31243;&#12290;&#20363;&#22914;&#65292;&#23558;&#31471;&#28857;&#21152;&#22312; <code>doDispatch()</code> &#30340;&#19979;&#38754;&#36825;&#34892;&#19978;&#65292;&#36827;&#20837;&#20869;&#37096;&#23601;&#33021;&#30475;&#21040; <code>DispatcherServlet</code> &#20855;&#20307;&#26159;&#22914;&#20309;&#20174;&#19968;&#20010; <code>HttpServletRequest</code> &#25214;&#21040;&#23545;&#24212;&#30340;&#22788;&#29702;&#22120;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>mappedHandler = getHandler(processedRequest);</code></pre>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00772.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-3&#12288;<code>doDispatch()</code> &#26041;&#27861;&#30340;&#22823;&#33268;&#22788;&#29702;&#36923;&#36753;</strong></p>
<p>&#38656;&#35201;&#29305;&#21035;&#35828;&#26126;&#30340;&#26159;&#65292;&#22312;&#35843;&#29992;&#22788;&#29702;&#22120;&#36923;&#36753;&#22788;&#29702;&#30340;&#36807;&#31243;&#20013;&#65292;&#38024;&#23545;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#65292;&#20250;&#35843;&#29992; <code>HandlerMethodReturnValueHandler</code> &#36827;&#34892;&#22788;&#29702;&#8212;&#8212;&#26681;&#25454;&#19981;&#21516;&#30340;&#24773;&#20917;&#65292;&#20250;&#26377;&#19981;&#21516;&#30340;&#23454;&#29616;&#26469;&#20570;&#22788;&#29702;&#65292;&#20363;&#22914;&#65292;&#21152;&#20102; <code>@ResponseBody</code> &#30340;&#26041;&#27861;&#65292;&#36820;&#22238;&#20540;&#23601;&#30452;&#25509;&#34987; <code>RequestResponseBodyMethodProcessor</code> &#22788;&#29702;&#25481;&#20102;&#65292;&#36873;&#25321;&#21512;&#36866;&#30340; <code>HttpMessageConverter</code> &#23558;&#23545;&#35937;&#30452;&#25509;&#24207;&#21015;&#21270;&#20026;&#30456;&#24212;&#30340;&#20869;&#23481;&#65307;&#32780;&#36820;&#22238;&#23383;&#31526;&#20018;&#20316;&#20026;&#35270;&#22270;&#21517;&#30340;&#24773;&#20917;&#65292;&#21017;&#26159;&#30001; <code>ViewNameMethodReturnValueHandler</code> &#26469;&#22788;&#29702;&#30340;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#37197;&#32622; Spring MVC</strong></p>
<p>&#22312; 9.1 &#33410;&#20013;&#65292;&#25105;&#20204;&#27809;&#26377;&#20570;&#20219;&#20309;&#37197;&#32622;&#65292;&#21482;&#26159;&#24341;&#20837;&#20102; Web &#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#38752;&#30528; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#23601;&#33021;&#30452;&#25509;&#24320;&#21457; Spring MVC &#30340;&#20195;&#30721;&#12290;Spring Boot &#26159;&#20808;&#29992; Spring &#30340;&#37197;&#32622;&#21551;&#21160;&#65292;&#38543;&#21518;&#20877;&#21551;&#21160;&#20869;&#23884;&#30340; Web &#23481;&#22120;&#65307;&#22914;&#26524;&#27809;&#26377; Spring Boot&#65292;&#23601;&#38656;&#35201;&#20351;&#29992;&#22806;&#32622;&#30340; Web &#23481;&#22120;&#65292;&#25110;&#32773;&#35828; Servlet &#23481;&#22120;&#20102;&#12290;</p>
<p>&#22240;&#20026;&#29616;&#22312;&#22823;&#37096;&#20998;&#24773;&#20917;&#19979;&#20250;&#20351;&#29992; Spring Boot&#65292;&#32780; Spring Boot &#21448;&#26377;&#23436;&#21892;&#30340;&#33258;&#21160;&#37197;&#32622;&#26426;&#21046;&#65292;&#25105;&#20204;&#19981;&#29992;&#22826;&#25805;&#24515;&#37197;&#32622;&#65292;&#25152;&#20197;&#22312;&#36825;&#37096;&#20998;&#23601;&#31616;&#21333;&#20171;&#32461;&#19968;&#19979;&#22914;&#20309;&#22312;&#27809;&#26377; Spring Boot &#30340;&#24773;&#20917;&#19979;&#37197;&#32622; Spring MVC&#12290;&#22312;&#20256;&#32479;&#30340; Web &#24037;&#31243;&#37324;&#65292;&#22522;&#26412;&#37117;&#20250;&#26377;&#19968;&#20010; web.xml&#65292;&#25105;&#20204;&#21487;&#20197;&#25226; <code>DispatcherServlet</code> &#37197;&#32622;&#22312;&#36825;&#20010;&#25991;&#20214;&#37324;&#65292;&#20363;&#22914;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;web-app&gt;
    &lt;!-- &#37197;&#32622;&#24212;&#29992;&#19978;&#19979;&#25991; --&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;context-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;/WEB-INF/applicationContext.xml&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;!-- &#37197;&#32622;Servlet --&gt;
    &lt;servlet&gt;
        &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
            &lt;param-value&gt;classpath:dispatcher-servlet.xml&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;

&lt;/web-app&gt;</code></pre>
<p>&#22312;&#19978;&#38754;&#30340;&#37197;&#32622;&#20013;&#65292;<code>ContextLoaderListener</code> &#20250;&#21152;&#36733;&#25351;&#23450;&#30340; XML &#25991;&#20214;&#21019;&#24314;&#19968;&#20010;&#19978;&#19979;&#25991;&#65292;<code>DispatcherServlet</code> &#20877;&#21152;&#36733;&#33258;&#24049;&#30340;&#37197;&#32622;&#25991;&#20214;&#65292;&#21019;&#24314; Servlet &#24182;&#26144;&#23556;&#21040; <code>/</code>&#65292;&#20004;&#20010;&#19978;&#19979;&#25991;&#30340;&#20851;&#31995;&#23601;&#22914; 2.1.4 &#33410;&#20013;&#25551;&#36848;&#30340;&#37027;&#26679;&#65292;&#26159;&#32487;&#25215;&#20851;&#31995;&#12290;</p>
<p>&#22312; Servlet 3.0 &#20197;&#19978;&#30340;&#23481;&#22120;&#37324;&#65292;&#36824;&#21487;&#20197;&#36890;&#36807; Java &#31867;&#30340;&#26041;&#24335;&#26469;&#27880;&#20876;&#24182;&#21021;&#22987;&#21270; <code>DispatcherServlet</code>&#65292;&#21482;&#35201;&#23454;&#29616; <code>WebApplicationInitializer</code> &#25509;&#21475;&#65292;&#23481;&#22120;&#20250;&#33258;&#21160;&#25214;&#21040;&#23427;&#12290;&#20363;&#22914;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class WebInitializer implements WebApplicationInitializer {
    @Override
    public void onStartup(ServletContext container) {
        XmlWebApplicationContext appContext = new XmlWebApplicationContext();
        appContext.setConfigLocation("classpath:dispatcher-servlet.xml");

        ServletRegistration.Dynamic registration = container.addServlet("dispatcher",
            new DispatcherServlet(appContext));
        registration.setLoadOnStartup(1);
        registration.addMapping("/");
    }
}</code></pre>
<p>&#22312;&#19978;&#38754;&#30340;&#20195;&#30721;&#20013;&#65292;&#25105;&#20204;&#36824;&#38656;&#35201;&#33258;&#24049;&#37197;&#32622; Spring &#30340;&#19978;&#19979;&#25991;&#65292;Spring MVC &#25552;&#20379;&#20102;&#19968;&#20010;&#23454;&#29616;&#20102; <code>WebApplicationInitializer</code> &#30340;&#25277;&#35937;&#31867; <code>AbstractDispatcherServletInitializer</code>&#65292;&#36890;&#36807;&#23427;&#30340;&#23376;&#31867; <code>AbstractAnnotationConfigDispatcherServletInitializer</code> &#21644; <code>AbstractDispatcherServletInitializer</code> &#21487;&#20197;&#36731;&#26494;&#22320;&#37197;&#32622;&#22522;&#20110; Java &#37197;&#32622;&#31867;&#30340; <code>DispatcherServlet</code> &#21644;&#22522;&#20110; XML &#25991;&#20214;&#30340; <code>DispatcherServlet</code>&#12290;&#22312;&#23454;&#36341;&#26102;&#65292;&#26356;&#25512;&#33616;&#20351;&#29992;&#36825;&#20004;&#20010;&#23376;&#31867;&#12290;</p>
<p>&#22312;&#37197;&#32622;&#23436; Servlet &#21518;&#65292;&#23601;&#35813;&#37197;&#32622; Spring MVC &#20102;&#65292;&#21516;&#26679;&#26377; XML &#21644; Java &#31867;&#20004;&#31181;&#37197;&#32622;&#26041;&#24335;&#12290;&#22312; XML &#25991;&#20214;&#20013;&#65292;&#20351;&#29992; <code>&lt;mvc:annotation-driven/&gt;</code> &#26469;&#24320;&#21551; Spring MVC&#65292;&#23601;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                              https://www.springframework.org/schema/beans/spring-beans.xsd
                              http://www.springframework.org/schema/mvc
                              https://www.springframework.org/schema/mvc/spring-mvc.xsd"&gt;

    &lt;mvc:annotation-driven/&gt;

&lt;/beans&gt;</code></pre>
<p>&#22522;&#20110; Java &#31867;&#30340;&#37197;&#32622;&#22823;&#27010;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#12290;&#25105;&#20204;&#38656;&#35201;&#22312;&#37197;&#32622;&#31867;&#19978;&#28155;&#21152; <code>@EnableWebMvc</code> &#27880;&#35299;&#65292;&#20026;&#20102;&#23454;&#29616;&#26356;&#31934;&#20934;&#30340;&#37197;&#32622;&#65292;&#36824;&#21487;&#20197;&#35753;&#37197;&#32622;&#31867;&#23454;&#29616; <code>WebMvcConfigurer</code> &#25509;&#21475;&#12290;&#22312; Java 8 &#37324;&#65292;&#25509;&#21475;&#30340;&#26041;&#27861;&#21487;&#20197;&#24102;&#26377;&#40664;&#35748;&#23454;&#29616;&#65292;&#32780; Spring Framework 5.0 &#24320;&#22987;&#25903;&#25345;&#30340;&#26368;&#20302; Java &#29256;&#26412;&#23601;&#26159; Java 8&#65292;&#25152;&#20197;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#23454;&#29616;&#36825;&#20010;&#25509;&#21475;&#65292;&#19981;&#38656;&#35201;&#20197;&#21069;&#30340; <code>WebMvcConfigurerAdapter</code> &#25277;&#35937;&#31867;&#20102;&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
@EnableWebMvc
public class WebConfig implements WebMvcConfigurer {
    // &#25353;&#38656;&#23454;&#29616;&#23545;&#24212;&#26041;&#27861;
}</code></pre>
<p>&#22270; 9-4 &#21015;&#20986;&#20102; <code>WebMvcConfigurer</code> &#25509;&#21475;&#30340;&#21508;&#20010;&#26041;&#27861;&#65292;&#35206;&#30422;&#36825;&#20123;&#26041;&#27861;&#23601;&#33021;&#23454;&#29616;&#23545; Spring MVC &#30340;&#31934;&#20934;&#37197;&#32622;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00773.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-4&#12288;<code>WebMvcConfigurer</code> &#25509;&#21475;&#30340;&#21508;&#20010;&#26041;&#27861;</strong></p>
<p>&#26368;&#21518;&#65292;&#20877;&#35753;&#25105;&#20204;&#22238;&#21040; Spring Boot&#65292;Spring Boot &#30340; <code>DispatcherServletAutoConfiguration</code> &#25552;&#20379;&#20102;&#38024;&#23545; <code>DispatcherServlet</code> &#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#32780; <code>WebMvcAutoConfiguration</code> &#21017;&#25552;&#20379;&#20102; Spring MVC &#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#21518;&#32773;&#30340;&#37197;&#32622;&#33021;&#28385;&#36275;&#32477;&#22823;&#37096;&#20998;&#30340;&#31995;&#32479;&#38656;&#27714;&#65292;&#22312; Spring &#30340;&#40664;&#35748;&#37197;&#32622;&#22522;&#30784;&#20043;&#19978;&#36824;&#22686;&#21152;&#20102;&#24456;&#22810;&#39069;&#22806;&#30340;&#21151;&#33021;&#65292;&#20363;&#22914;&#65292;&#33258;&#21160;&#27880;&#20876; <code>Converter</code>&#12289;<code>GenericConverter</code>&#12289;<code>Formatter</code>&#12289;<code>HttpMessageConverters</code> &#21644; <code>MessageCodesResolver</code> &#31867;&#22411;&#30340; Bean&#65292;&#25903;&#25345;&#38745;&#24577;&#36164;&#28304;&#31561;&#12290;</p>
<p>&#22914;&#26524;&#24076;&#26395;&#22312;&#20445;&#30041;&#33258;&#21160;&#37197;&#32622;&#30340;&#22522;&#30784;&#19978;&#20877;&#20570;&#19968;&#20123; Spring MVC &#30340;&#23450;&#21046;&#65292;&#21487;&#20197;&#28155;&#21152;&#19968;&#20010;&#23454;&#29616;&#20102; <code>WebMvcConfigurer</code> &#30340;&#37197;&#32622;&#31867;&#65292;&#20294;<strong>&#19968;&#23450;&#19981;&#35201;&#21152; <code>@EnableWebMvc</code> &#27880;&#35299;</strong>&#65292;&#22240;&#20026;&#36825;&#26679;&#20250;&#30772;&#22351; Spring Boot &#23545; Spring MVC &#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#22914;&#26524;&#24076;&#26395;&#23450;&#21046; <code>RequestMappingHandlerMapping</code>&#12289;<code>RequestMappingHandlerAdapter</code> &#21644; <code>ExceptionHandlerExceptionResolver</code>&#65292;&#21487;&#20197;&#22768;&#26126;&#19968;&#20010; <code>WebMvcRegistrations</code> &#31867;&#22411;&#30340; Bean&#65292;&#25226;&#37027;&#20123;&#23545;&#35937;&#22622;&#21040;&#36825;&#20010; Bean &#37324;&#12290;</p>
<p>&#22914;&#26524;&#24076;&#26395;&#23436;&#20840;&#30001;&#33258;&#24049;&#26469;&#25511;&#21046; Spring MVC &#30340;&#37197;&#32622;&#65292;&#21487;&#20197;&#36873;&#25321;&#20851;&#38381;&#33258;&#21160;&#37197;&#32622;&#65292;&#25110;&#32773;&#23450;&#20041;&#19968;&#20010;&#24102;&#26377; <code>@EnableWebMvc</code> &#27880;&#35299;&#30340;&#37197;&#32622;&#31867;&#12290;&#22312;&#27809;&#26377;&#29305;&#27530;&#29702;&#30001;&#30340;&#24773;&#20917;&#19979;&#65292;&#19981;&#24314;&#35758;&#36825;&#20040;&#25805;&#20316;&#65292;&#23601;&#35753; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#26367;&#25105;&#20204;&#25805;&#24515;&#19968;&#20999;&#21543;&#65281;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;Servlet &#30340;&#22522;&#30784;&#30693;&#35782;</strong></p>
<p>&#26089;&#26399;&#30340; Web &#21482;&#26159;&#31616;&#21333;&#22320;&#25552;&#20379;&#38745;&#24577;&#36164;&#28304;&#65292;&#20363;&#22914;&#39029;&#38754;&#21644;&#22270;&#29255;&#12290;&#38543;&#30528;&#25216;&#26415;&#30340;&#21457;&#23637;&#65292;&#36880;&#27493;&#20986;&#29616;&#20102;&#19968;&#20123;&#21160;&#24577;&#25216;&#26415;&#65292;&#33021;&#22815;&#36890;&#36807;&#35843;&#29992;&#26381;&#21153;&#22120;&#19978;&#30340;&#19968;&#20123;&#31243;&#24207;&#21160;&#24577;&#22320;&#21709;&#24212;&#29992;&#25143;&#30340;&#35831;&#27714;&#12290;1993 &#24180;&#32654;&#22269;&#22269;&#23478;&#36229;&#32423;&#30005;&#33041;&#24212;&#29992;&#20013;&#24515;&#65288;NCSA&#65289;&#25552;&#20986;&#20102; CGI&#65288;Common Gateway Interface&#65292;&#36890;&#29992;&#32593;&#20851;&#25509;&#21475;&#65289;&#30340;&#27010;&#24565;&#24182;&#25104;&#21151;&#24320;&#21457;&#20102;&#19968;&#22871; CGI &#31243;&#24207;&#12290;&#21518;&#26469; CGI &#23601;&#25104;&#20026;&#20102;&#26381;&#21153;&#22120;&#21644;&#35831;&#27714;&#22788;&#29702;&#31243;&#24207;&#20043;&#38388;&#30340;&#19968;&#31181;&#26631;&#20934;&#65292;&#20687; Perl&#12289;Python&#12289;PHP &#31561;&#24456;&#22810;&#35821;&#35328;&#37117;&#33021;&#25343;&#26469;&#24320;&#21457; CGI &#31243;&#24207;&#12290;</p>
<p>&#19981;&#36807;&#65292;&#24403;&#26102;&#24320;&#21457;&#19968;&#20010; CGI &#31243;&#24207;&#36824;&#26159;&#27604;&#36739;&#40635;&#28902;&#30340;&#65292;&#29992; Java &#20174;&#22836;&#24320;&#21457;&#19968;&#20010; CGI &#31243;&#24207;&#20063;&#19968;&#26679;&#12290;&#20026;&#20102;&#35268;&#33539; Java Web &#31243;&#24207;&#65292;&#25552;&#21319;&#24320;&#21457;&#25928;&#29575;&#65292;Java EE&#65288;&#20197;&#21069;&#21483; J2EE&#65289;&#20013;&#35806;&#29983;&#20102; Java Servlet &#25216;&#26415;&#12290;Oracle &#23448;&#26041;&#26159;&#36825;&#26679;&#26469;&#20171;&#32461;&#23427;&#30340;&#8212;&#8212;Java Servlet &#25216;&#26415;&#20026; Web &#24320;&#21457;&#32773;&#25552;&#20379;&#20102;&#19968;&#22871;&#26082;&#31616;&#21333;&#21448;&#19968;&#33268;&#30340;&#26426;&#21046;&#65292;&#21487;&#20197;&#29992;&#26469;&#25193;&#23637; Web &#26381;&#21153;&#22120;&#30340;&#21151;&#33021;&#65292;&#35775;&#38382;&#29616;&#26377;&#30340;&#19994;&#21153;&#31995;&#32479;&#12290;&#36890;&#24120;&#24773;&#20917;&#19979;&#65292;&#36816;&#34892;&#22312; Servlet &#23481;&#22120;&#65288;&#20363;&#22914; Tomcat&#65289;&#37324;&#30340; Servlet &#33021;&#22815;&#23436;&#20840;&#23454;&#29616; CGI &#31243;&#24207;&#30340;&#21151;&#33021;&#65292;&#29978;&#33267;&#26377;&#36807;&#20043;&#32780;&#26080;&#19981;&#21450;&#12290;</p>
<p>Servlet &#35268;&#33539;&#23450;&#20041;&#20102;&#22914;&#20309;&#25509;&#25910;&#35831;&#27714;&#65292;&#22914;&#20309;&#36820;&#22238;&#21709;&#24212;&#65292;&#22914;&#20309;&#22788;&#29702;&#34920;&#21333;&#65292;&#22914;&#20309;&#22788;&#29702;&#24322;&#24120;&#65292;&#22914;&#20309;&#22788;&#29702; Cookie&#65292;&#22914;&#20309;&#22788;&#29702; Session&#8230;&#8230;&#24635;&#20043;&#65292;&#20854;&#20013;&#23450;&#20041;&#20102;&#22312;&#26085;&#24120; Web &#24320;&#21457;&#26102;&#20250;&#36935;&#21040;&#30340;&#32477;&#22823;&#37096;&#20998;&#20869;&#23481;&#65292;&#21482;&#35201;&#25105;&#20204;&#36981;&#24490;&#36825;&#20010;&#35268;&#33539;&#65292;&#20351;&#29992;&#23427;&#30340;&#23454;&#29616;&#65292;Web &#30340;&#24320;&#21457;&#24037;&#20316;&#30456;&#27604;&#20043;&#21069;&#23601;&#33021;&#36731;&#26494;&#19981;&#23569;&#12290;</p>
<p>&#25152;&#26377;&#30340; Servlet &#37117;&#24517;&#39035;&#23454;&#29616; <code>Servlet</code> &#25509;&#21475;&#65292;&#20854;&#20013;&#26377; 5 &#20010;&#26041;&#27861;&#65292;&#20998;&#21035;&#26159;&#65306;</p>
<ul>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;"><code>init()</code>&#65292;&#21021;&#22987;&#21270;&#26041;&#27861;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;"><code>getServletConfig()</code>&#65292;&#33719;&#24471; Servlet &#30340;&#37197;&#32622;&#65292;&#20363;&#22914;&#21517;&#31216;&#12289;&#21021;&#22987;&#21270;&#21442;&#25968;&#31561;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;"><code>getServletInfo()</code>&#65292;&#33719;&#24471; Servlet &#30340;&#20449;&#24687;&#65292;&#20363;&#22914;&#20316;&#32773;&#12289;&#29256;&#26412;&#31561;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;"><code>service()</code>&#65292;&#20027;&#35201;&#30340;&#25191;&#34892;&#26041;&#27861;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;"><code>destroy()</code>&#65292;&#38144;&#27585;&#26041;&#27861;&#12290;</li>
</ul>
<p>&#20294;&#22312;&#23454;&#38469;&#24320;&#21457;&#26102;&#65292;&#25105;&#20204;&#26356;&#22810;&#22320;&#20250;&#20351;&#29992; <code>HttpServlet</code> &#36825;&#20010;&#25277;&#35937;&#31867;&#65292;&#21435;&#23454;&#29616;&#37324;&#38754;&#30340; <code>doXxx()</code> &#26041;&#27861;&#65292;&#20363;&#22914; <code>doGet()</code> &#23601;&#26159;&#29992;&#26469;&#22788;&#29702; <code>GET</code> &#35831;&#27714;&#30340;&#12290;</p>
<p>&#20877;&#21518;&#26469;&#65292;Java &#31243;&#24207;&#21592;&#19981;&#28385;&#36275;&#20110;&#30452;&#25509;&#24320;&#21457; Servlet&#65292;&#20110;&#26159;&#20986;&#29616;&#20102;&#21508;&#31181; Web &#24320;&#21457;&#26694;&#26550;&#65292;&#23588;&#20854;&#26159; MVC &#27169;&#24335;&#30340;&#26694;&#26550;&#8212;Struts&#12289;WebWork &#23601;&#26159;&#26089;&#26399;&#27969;&#34892;&#30340; MVC &#26694;&#26550;&#12290;&#24403;&#28982;&#65292;&#21518;&#26469;&#20986;&#29616;&#30340; Spring MVC &#36229;&#36234;&#20102;&#23427;&#20204;&#65292;&#25104;&#20026;&#20102;&#20107;&#23454;&#19978;&#30340;&#34892;&#19994;&#26631;&#20934;&#12290;</p>
</blockquote>
</li>
</ol><h3 id="nav_point_139">9.2.2&#12288;&#35831;&#27714;&#22788;&#29702;&#26041;&#27861;</h3><p>&#22312; 9.1.2 &#33410;&#20013;&#65292;&#25105;&#20204;&#24050;&#32463;&#30475;&#36807;&#20102;&#22914;&#20309;&#32534;&#20889;&#31616;&#21333;&#30340;&#25511;&#21046;&#22120;&#65292;&#20854;&#20013;&#20171;&#32461;&#20102; <code>@RequestMapping</code> &#30340;&#29992;&#27861;&#12290;&#20854;&#23454;&#65292;Spring MVC &#30340;&#25511;&#21046;&#22120;&#26041;&#27861;&#23450;&#20041;&#38750;&#24120;&#28789;&#27963;&#65292;&#21487;&#20197;&#26377;&#21508;&#31181;&#21442;&#25968;&#21644;&#36820;&#22238;&#20540;&#65292;&#25509;&#19979;&#26469;&#23601;&#35753;&#25105;&#20204;&#35814;&#32454;&#20102;&#35299;&#19968;&#19979;&#20855;&#20307;&#30340;&#24773;&#20917;&#12290;</p><ol>
<li><p><strong>&#26041;&#27861;&#30340;&#23450;&#20041;</strong></p>
<p>&#28155;&#21152;&#20102; <code>@RequestMapping</code> &#30340;&#26041;&#27861;&#23601;&#26159;&#29992;&#26469;&#22788;&#29702; HTTP &#35831;&#27714;&#30340;&#65292;&#25152;&#20197;&#21487;&#20197;&#36890;&#36807;&#26041;&#27861;&#30340;&#21442;&#25968;&#33719;&#24471;&#35831;&#27714;&#30340;&#21508;&#31181;&#20449;&#24687;&#65292;&#21487;&#20197;&#26159;&#21407;&#22987;&#30340;&#65292;&#20063;&#21487;&#20197;&#26159;&#32463;&#36807;&#22788;&#29702;&#30340;&#12290;&#34920; 9-6 &#21015;&#20986;&#20102;&#19968;&#20123;&#24120;&#29992;&#30340;&#21442;&#25968;&#31867;&#22411;&#65292;&#26356;&#22810;&#30340;&#20869;&#23481;&#21487;&#20197;&#21442;&#32771; Spring Framework &#23448;&#26041;&#25991;&#26723;&#20013; Spring MVC &#30456;&#20851;&#30340;&#31456;&#33410;&#12290;</p>
<p><strong>&#34920; 9-6&#12288;Spring MVC &#35831;&#27714;&#22788;&#29702;&#26041;&#27861;&#30340;&#24120;&#29992;&#21442;&#25968;&#31867;&#22411;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><td>&#21442;&#25968;&#31867;&#22411;</td><td>&#35828;&#26126;</td></tr><tr><td><code>ServletRequest</code>&#12289;<code>ServletResponse</code></td><td>&#33719;&#21462;&#24403;&#21069;&#23545;&#24212;&#30340;&#35831;&#27714;&#19982;&#21709;&#24212;&#65292;&#21487;&#20197;&#26159;&#36825;&#20004;&#20010;&#25509;&#21475;&#30340;&#23376;&#31867;&#22411;&#65292;&#20363;&#22914; <code>HttpServletRequest</code>&#65292;&#23545;&#36825;&#20123;&#23545;&#35937;&#30340;&#25805;&#20316;&#26159;&#26368;&#28789;&#27963;&#30340;&#65292;&#20294;&#22914;&#26524;&#27809;&#26377;&#29305;&#27530;&#21407;&#22240;&#65292;&#19981;&#24314;&#35758;&#30452;&#25509;&#25805;&#20316; <code>ServletRequest</code> &#21644; <code>ServletResponse</code></td></tr><tr><td><code>HttpEntity&lt;T&gt;</code> &#19982; <code>RequestEntity&lt;T&gt;</code></td><td>&#33719;&#21462;&#24403;&#21069;&#35831;&#27714;&#30340; HTTP &#22836;&#21644;&#35831;&#27714;&#20307;&#65292;&#35831;&#27714;&#20307;&#20250;&#34987; <code>HttpMessageConverter</code> &#36716;&#25442;&#25104;&#23545;&#24212;&#30340;&#27867;&#22411;&#31867;&#22411;</td></tr><tr><td><code>HttpSession</code></td><td>&#33719;&#21462;&#24403;&#21069;&#30340; Session &#20449;&#24687;&#65292;&#27880;&#24847;&#36825;&#37324;&#23545; <code>Session</code> &#30340;&#25805;&#20316;&#19981;&#26159;&#32447;&#31243;&#23433;&#20840;&#30340;</td></tr><tr><td><code>HttpMethod</code></td><td>&#33719;&#24471;&#35831;&#27714;&#30340; HTTP &#26041;&#27861;&#65292;&#20363;&#22914; <code>GET</code> &#25110; <code>POST</code></td></tr><tr><td><code>InputStream</code> &#19982; <code>Reader</code></td><td>&#33719;&#24471;&#35831;&#27714;&#30340;&#21407;&#22987;&#28040;&#24687;&#20307;&#20869;&#23481;</td></tr><tr><td><code>OutputStream</code> &#19982; <code>Writer</code></td><td>&#33719;&#24471;&#21709;&#24212;&#30340;&#36755;&#20986;&#27969;&#65292;&#20197;&#20415;&#33021;&#22815;&#30452;&#25509;&#36755;&#20986;&#20869;&#23481;</td></tr><tr><td><code>Map</code>&#12289;<code>Model</code> &#19982; <code>ModelMap</code></td><td>&#33719;&#24471;&#29992;&#20110;&#21576;&#29616;&#35270;&#22270;&#26102;&#35201;&#20351;&#29992;&#30340;&#27169;&#22411;&#20449;&#24687;&#65292;&#36825;&#19977;&#20010;&#31867;&#22411;&#30340;&#26412;&#36136;&#37117;&#26159; <code>Map</code></td></tr><tr><td><code>Errors</code> &#19982; <code>BindingResult</code></td><td>&#33719;&#24471;&#32465;&#23450;&#23545;&#35937;&#21644;&#26657;&#39564;&#26102;&#30340;&#38169;&#35823;&#20449;&#24687;</td></tr><tr><td><code>Principal</code></td><td>&#33719;&#24471;&#24403;&#21069;&#35748;&#35777;&#30340;&#29992;&#25143;&#20449;&#24687;</td></tr><tr><td><code>SessionStatus</code></td><td>&#19982; <code>@SessionAttributes</code> &#25645;&#37197;&#20351;&#29992;&#65292;&#36825;&#26159;&#19968;&#20010;&#21152;&#22312;&#25511;&#21046;&#22120;&#31867;&#19978;&#30340;&#27880;&#35299;&#65292;&#25351;&#23450;&#23558;&#27169;&#22411;&#20013;&#30340;&#21738;&#20010;&#23646;&#24615;&#20316;&#20026; Session &#23646;&#24615;&#23384;&#20648;&#36215;&#26469;&#65292;<code>SessionStatus</code> &#30340; <code>setComplete()</code> &#26041;&#27861;&#29992;&#26469;&#28165;&#38500;&#23384;&#20648;&#30340;&#20869;&#23481;</td></tr></table>
<p>&#38500;&#20102;&#19978;&#36848;&#31867;&#22411;&#65292;&#36824;&#21487;&#20197;&#22312;&#21442;&#25968;&#19978;&#22686;&#21152;&#19968;&#20123;&#27880;&#35299;&#65292;&#33719;&#21462;&#29305;&#23450;&#30340;&#20449;&#24687;&#65292;&#24120;&#29992;&#30340;&#27880;&#35299;&#22914;&#34920; 9-7 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 9-7&#12288;Spring MVC &#35831;&#27714;&#22788;&#29702;&#26041;&#27861;&#30340;&#24120;&#29992;&#21442;&#25968;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><td>&#27880;&#35299;</td><td>&#35828;&#26126;</td></tr><tr><td><code>@PathVariable</code></td><td>&#33719;&#24471; <code>@RequestMapping</code> &#30340; <code>path</code> &#37324;&#37197;&#32622;&#30340;&#21344;&#20301;&#31526;&#23545;&#24212;&#30340;&#20540;</td></tr><tr><td><code>@RequestParam</code></td><td>&#33719;&#24471;&#35831;&#27714;&#30340;&#21442;&#25968;</td></tr><tr><td><code>@RequestHeader</code></td><td>&#33719;&#24471;&#35831;&#27714;&#30340; HTTP &#22836;</td></tr><tr><td><code>@RequestBody</code></td><td>&#33719;&#24471;&#35831;&#27714;&#30340;&#28040;&#24687;&#20307;</td></tr><tr><td><code>@RequestPart</code></td><td>&#38024;&#23545; Multipart &#35831;&#27714;&#65292;&#33719;&#21462;&#20854;&#20013;&#25351;&#23450;&#30340;&#19968;&#27573;&#20869;&#23481;</td></tr><tr><td><code>@CookieValue</code></td><td>&#33719;&#24471; Cookie &#20869;&#23481;</td></tr><tr><td><code>@ModelAttribute</code></td><td>&#33719;&#24471;&#27169;&#22411;&#20013;&#30340;&#23646;&#24615;&#65292;&#22914;&#26524;&#19981;&#23384;&#22312;&#21017;&#21021;&#22987;&#21270;&#19968;&#20010;&#65292;&#35831;&#27714;&#25968;&#25454;&#20250;&#32465;&#23450;&#21040;&#23545;&#35937;&#19978;&#24182;&#20570;&#26657;&#39564;&#12290;&#36825;&#20010;&#27880;&#35299;&#30340;&#29992;&#36884;&#27604;&#36739;&#22810;&#65292;&#24314;&#35758;&#26597;&#38405;&#23448;&#26041;&#25991;&#26723;&#20570;&#26356;&#36827;&#19968;&#27493;&#30340;&#20102;&#35299;</td></tr><tr><td><code>@SessionAttribute</code></td><td>&#33719;&#24471; Session &#20013;&#24050;&#26377;&#30340;&#23646;&#24615;&#65288;&#27880;&#24847;&#21644;&#21069;&#38754;&#25552;&#21040;&#30340;&#31867;&#19978;&#30340; <code>@SessionAttributes</code> &#24046;&#19968;&#20010; s&#65289;</td></tr><tr><td><code>@RequestAttribute</code></td><td>&#33719;&#24471;&#35831;&#27714;&#20013;&#24050;&#26377;&#30340;&#23646;&#24615;</td></tr></table>
<p>&#19978;&#38754;&#25552;&#21040;&#30340;&#36825;&#20123;&#21442;&#25968;&#65292;&#22823;&#37096;&#20998;&#20869;&#23481;&#37117;&#20250;&#34987;&#36716;&#25442;&#25104;&#21442;&#25968;&#23545;&#24212;&#30340;&#31867;&#22411;&#65292;&#22914;&#26524;&#27809;&#26377;&#21305;&#37197;&#21040;&#34920; 9-6 &#30340;&#31867;&#22411;&#65292;&#20063;&#27809;&#26377;&#24102;&#34920; 9-7 &#30340;&#27880;&#35299;&#65292;&#24182;&#19988;&#26159;&#31616;&#21333;&#31867;&#22411;&#65288;&#20363;&#22914;&#21407;&#23376;&#31867;&#22411;&#21450;&#20854;&#21253;&#35013;&#31867;&#12289;<code>String</code> &#31561;&#65289;&#65292;&#37027;&#23601;&#20250;&#34987;&#24403;&#20570;&#24102;&#26377; <code>@RequestParam</code> &#27880;&#35299;&#65292;&#21542;&#21017;&#23601;&#24403;&#20570;&#24102;&#26377; <code>@ModelAttribute</code> &#27880;&#35299;&#12290;</p>
<p>&#32842;&#23436;&#20102;&#26041;&#27861;&#30340;&#21442;&#25968;&#65292;&#20877;&#26469;&#30475;&#30475;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#65292;&#34920; 9-8 &#20013;&#21015;&#20986;&#20102;&#19968;&#20123;&#24120;&#35265;&#30340;&#36820;&#22238;&#20540;&#31867;&#22411;&#65292;&#22522;&#26412;&#37117;&#26159;&#22260;&#32469;&#30528;&#21576;&#29616;&#32467;&#26524;&#38656;&#35201;&#30340;&#27169;&#22411;&#19982;&#35270;&#22270;&#23637;&#24320;&#30340;&#65292;&#25110;&#32773;&#30452;&#25509;&#32473;&#20986;&#21709;&#24212;&#27491;&#25991;&#12290;</p>
<p><strong>&#34920; 9-8&#12288;Spring MVC &#35831;&#27714;&#22788;&#29702;&#26041;&#27861;&#30340;&#24120;&#35265;&#36820;&#22238;&#20540;&#31867;&#22411;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><td>&#36820;&#22238;&#20540;&#31867;&#22411;</td><td>&#35828;&#26126;</td></tr><tr><td><code>@ResponseBody</code></td><td>&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#20250;&#30452;&#25509;&#24207;&#21015;&#21270;&#20026;&#21709;&#24212;&#30340;&#28040;&#24687;&#27491;&#25991;</td></tr><tr><td><code>ModelAndView</code></td><td>&#36820;&#22238;&#26368;&#32456;&#21576;&#29616;&#32467;&#26524;&#26102;&#20250;&#29992;&#21040;&#30340;&#27169;&#22411;&#19982;&#35270;&#22270;</td></tr><tr><td><code>Map</code> &#19982; <code>Model</code></td><td>&#36820;&#22238;&#30340;&#25968;&#25454;&#20250;&#34987;&#21152;&#20837;&#27169;&#22411;&#20013;&#65292;&#29992;&#26469;&#26368;&#32456;&#21576;&#29616;&#30340;&#35270;&#22270;&#30001; <code>RequestToViewNameTranslator</code> &#26469;&#20915;&#23450;</td></tr><tr><td><code>View</code></td><td>&#36820;&#22238;&#35270;&#22270;&#23545;&#35937;&#65292;&#32467;&#21512;&#27169;&#22411;&#21576;&#29616;&#26368;&#32456;&#20869;&#23481;</td></tr><tr><td><code>String</code></td><td>&#36820;&#22238;&#19968;&#20010;&#35270;&#22270;&#21517;&#65292;<code>ViewResolver</code> &#35201;&#20174;&#20013;&#35299;&#26512;&#20986;&#35270;&#22270;&#65292;&#20877;&#32467;&#21512;&#27169;&#22411;&#21576;&#29616;&#26368;&#32456;&#20869;&#23481;</td></tr><tr><td><code>HttpEntity&lt;T&gt;</code> &#19982; <code>ResponseEntity&lt;T&gt;</code></td><td>&#36820;&#22238;&#30340;&#23545;&#35937;&#23601;&#26159;&#23436;&#25972;&#30340;&#21709;&#24212;&#65292;&#21253;&#21547;&#20102;&#22836;&#21644;&#27491;&#25991;</td></tr><tr><td><code>HttpHeaders</code></td><td>&#21709;&#24212;&#21482;&#26377; HTTP &#22836;&#65292;&#27809;&#26377;&#28040;&#24687;&#27491;&#25991;</td></tr></table>
<p>&#22914;&#26524;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#31867;&#22411;&#26159; <code>void</code>&#65292;&#37027;&#20040;&#19979;&#38754;&#20960;&#31181;&#24773;&#20917;&#24847;&#21619;&#30528;&#35831;&#27714;&#24050;&#32463;&#34987;&#22788;&#29702;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#26377; <code>ServletResponse</code> &#21644; <code>OutputStream</code> &#21442;&#25968;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#26377; <code>@ResponseStatus</code> &#27880;&#35299;&#35774;&#32622;&#20102;&#36820;&#22238;&#30340; HTTP &#21709;&#24212;&#30721;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20570;&#36807; HTTP &#32531;&#23384;&#22788;&#29702;&#65292;&#20363;&#22914;&#26816;&#26597;&#36807; <code>E-TAG</code> &#27809;&#21464;&#21270;&#12290;</li>
</ul>
<p>&#20854;&#20182;&#24773;&#20917;&#19979;&#65292;<code>void</code> &#31867;&#22411;&#30340;&#36820;&#22238;&#20540;&#20250;&#29992; <code>RequestToViewNameTranslator</code> &#26469;&#35299;&#26512;&#33719;&#24471;&#35270;&#22270;&#30340;&#21517;&#31216;&#65292;&#20877;&#21576;&#29616;&#32467;&#26524;&#12290;&#33267;&#20110;&#31616;&#21333;&#31867;&#22411;&#30340;&#36820;&#22238;&#20540;&#23601;&#19981;&#20570;&#35299;&#26512;&#65292;&#20445;&#30041;&#21407;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#35831;&#27714;&#22788;&#29702;&#36807;&#31243;&#20013;&#36935;&#21040;&#30340;&#20960;&#20010;&#20316;&#29992;&#33539;&#22260;</strong></p>
<p>&#22312;&#22788;&#29702; HTTP &#35831;&#27714;&#26102;&#65292;&#25105;&#20204;&#32463;&#24120;&#20250;&#33719;&#21462;&#19968;&#20123;&#20449;&#24687;&#65292;&#26377;&#26102;&#26159;&#20174;&#35831;&#27714;&#20013;&#65292;&#26377;&#26102;&#26159;&#20174; Session &#20013;&#65292;&#26377;&#26102;&#26159;&#20174; Cookie &#20013;&#65292;&#37027;&#23427;&#20204;&#21448;&#26377;&#21738;&#20123;&#21306;&#21035;&#21602;&#65311;</p>
<p>&#35831;&#27714;&#30340;&#21442;&#25968;&#25110;&#27491;&#25991;&#37324;&#21462;&#24471;&#30340;&#20869;&#23481;&#65292;&#20165;&#22312;&#24403;&#21069;&#36825;&#19968;&#27425;&#35831;&#27714;&#20013;&#26377;&#25928;&#65292;&#35831;&#27714;&#22788;&#29702;&#32467;&#26463;&#21518;&#23427;&#20204;&#20063;&#23601;&#38543;&#20043;&#28040;&#20129;&#20102;&#12290;</p>
<p>&#19968;&#20010; Web &#29992;&#25143;&#22312;&#27491;&#24120;&#25805;&#20316;&#26102;&#24448;&#24448;&#19981;&#20250;&#21482;&#35831;&#27714;&#19968;&#27425;&#65292;&#32780;&#26159;&#20250;&#19982; Web &#31995;&#32479;&#36827;&#34892;&#20132;&#20114;&#65292;&#36825;&#23601;&#26159;&#20250;&#35805;&#12290;&#20250;&#35805;&#26399;&#38388;&#20250;&#21457;&#29983;&#22810;&#27425;&#35831;&#27714;&#65292;&#36825;&#20123;&#35831;&#27714;&#24444;&#27492;&#20043;&#38388;&#35201;&#20849;&#20139;&#19968;&#20123;&#20449;&#24687;&#65292;&#36825;&#20123;&#20449;&#24687;&#23601;&#21487;&#20197;&#25918;&#22312; Session &#37324;&#12290;Session &#30340;&#20449;&#24687;&#26159;&#23384;&#20648;&#22312;&#26381;&#21153;&#22120;&#31471;&#30340;&#65292;&#29992;&#25143;&#30340;&#35831;&#27714;&#37324;&#24102;&#26377;&#21517;&#20026; <code>JSESSIONID</code> &#30340; Cookie &#20540;&#65292;&#36890;&#36807;&#36825;&#20010;&#20540;&#23601;&#33021;&#22312;&#26381;&#21153;&#22120;&#19978;&#25214;&#21040;&#23545;&#24212;&#30340; Session &#20449;&#24687;&#12290;&#36825;&#37324;&#38754;&#21487;&#20197;&#23384;&#20648;&#19981;&#21516;&#31867;&#22411;&#30340;&#25968;&#25454;&#65292;&#20294;&#20986;&#20110;&#26381;&#21153;&#22120;&#24615;&#33021;&#32771;&#34385;&#19968;&#33324;&#19981;&#20250;&#23384;&#22826;&#22810;&#20869;&#23481;&#12290;Session &#20445;&#23384;&#22312;&#26381;&#21153;&#22120;&#19978;&#65292;&#25442;&#19968;&#21488;&#26381;&#21153;&#22120;&#20449;&#24687;&#23601;&#27809;&#26377;&#20102;&#65292;&#22240;&#27492;&#22312;&#26080;&#29366;&#24577;&#30340;&#38598;&#32676;&#29615;&#22659;&#20013;&#65292;&#25105;&#20204;&#36890;&#24120;&#20250;&#23558; Session &#23384;&#20648;&#22312;&#20849;&#20139;&#23384;&#20648;&#37324;&#65292;&#20363;&#22914;&#25918;&#36827;&#20851;&#31995;&#22411;&#25968;&#25454;&#24211;&#25110;&#32773; Redis&#65292;&#26412;&#20070;&#21518;&#38754;&#30340;&#31456;&#33410;&#37324;&#20250;&#20877;&#32842;&#21040;&#20998;&#24067;&#24335; Session &#36825;&#20010;&#35805;&#39064;&#12290;</p>
<p>Cookie &#30340;&#26412;&#36136;&#26159;&#19968;&#20010;&#23567;&#22411;&#30340;&#25991;&#26412;&#25991;&#20214;&#65292;&#23384;&#25918;&#22312;&#23458;&#25143;&#31471;&#65292;&#21333;&#20010; Cookie &#25991;&#20214;&#30340;&#22823;&#23567;&#19981;&#36229;&#36807; 4KB&#65292;&#22312;&#25351;&#23450;&#30340;&#26377;&#25928;&#26399;&#20869; Cookie &#20013;&#23384;&#20648;&#30340;&#20449;&#24687;&#37117;&#20250;&#19968;&#30452;&#23384;&#22312;&#12290;&#22914;&#26524;&#22312;&#21457;&#36215;&#35831;&#27714;&#26102;&#24102;&#19978;&#23458;&#25143;&#31471;&#30340; Cookie&#65292;&#22788;&#29702;&#26102;&#25105;&#20204;&#23601;&#33021;&#33719;&#21462;&#19978;&#20256;&#30340; Cookie &#20449;&#24687;&#20102;&#12290;</p>
<p>&#22312; Spring MVC &#20013;&#65292;&#20063;&#26377;&#20960;&#20010; Bean &#30340;&#20316;&#29992;&#33539;&#22260;&#65292;&#22312; Spring &#23481;&#22120;&#22522;&#26412;&#30340; <code>singleton</code> &#21644; <code>prototype</code> &#30340;&#22522;&#30784;&#19978;&#65292;Web &#24212;&#29992;&#31243;&#24207;&#19978;&#19979;&#25991;&#37324;&#36824;&#26377;&#22914;&#34920; 9-9 &#25152;&#31034;&#30340; 4 &#31181;&#29305;&#27530;&#33539;&#22260;&#12290;</p>
<p><strong>&#34920; 9-9&#12288;Web &#24212;&#29992;&#31243;&#24207;&#19978;&#19979;&#25991;&#20013;&#25152;&#29305;&#26377;&#30340;&#20316;&#29992;&#33539;&#22260;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#33539;&#22260;</th><th>&#35828;&#26126;</th></tr><tr><td><code>request</code></td><td>&#20165;&#23384;&#27963;&#22312;&#21333;&#27425; HTTP &#35831;&#27714;&#37324;</td></tr><tr><td><code>session</code></td><td>&#20165;&#23384;&#27963;&#22312;&#21333;&#20010; Session &#33539;&#22260;&#37324;&#65292;&#20250;&#35805;&#22833;&#25928;&#65288;&#20063;&#23601;&#26159; Session &#22833;&#25928;&#21518;&#65289;&#65292;Bean &#20063;&#23601;&#34987;&#38144;&#27585;&#20102;</td></tr><tr><td><code>application</code></td><td>&#22312;&#25972;&#20010; <code>ServletContext</code> &#30340;&#29983;&#21629;&#21608;&#26399;&#37324;&#26377;&#25928;</td></tr><tr><td><code>websocket</code></td><td>&#22312;&#21333;&#20010; <code>WebSocket</code> &#30340;&#29983;&#21629;&#21608;&#26399;&#37324;&#26377;&#25928;</td></tr></table>
<p>&#19981;&#36807;&#36825;&#20960;&#31181;&#20316;&#29992;&#33539;&#22260;&#30456;&#27604; <code>singleton</code> &#21644; <code>prototype</code> &#32780;&#35328;&#23454;&#22312;&#26159;&#22826;&#23567;&#20247;&#20102;&#65292;&#36890;&#24120;&#27809;&#26377;&#29305;&#27530;&#24773;&#20917;&#19981;&#24314;&#35758;&#20570;&#19987;&#38376;&#30340;&#37197;&#32622;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#35831;&#27714;&#20869;&#23481;&#30340;&#36716;&#25442;</strong></p>
<p>&#21069;&#38754;&#26377;&#25552;&#21040;&#22909;&#20960;&#20010;&#21442;&#25968;&#31867;&#22411;&#37117;&#24102;&#26377;&#27867;&#22411;&#65292;&#27492;&#22806; <code>@RequestBody</code> &#21644; <code>@RequestPart</code> &#20063;&#20250;&#23545;&#35831;&#27714;&#30340;&#20869;&#23481;&#36827;&#34892;&#36716;&#25442;&#65292;&#23558;&#23427;&#20204;&#36716;&#25442;&#20026;&#21508;&#31181;&#19981;&#21516;&#30340;&#31867;&#22411;&#20256;&#21040;&#21442;&#25968;&#20013;&#65292;&#36825;&#37324;&#30340;&#36716;&#25442;&#20854;&#23454;&#23601;&#26159;&#30001; <code>HttpMessageConverter</code> &#26469;&#23454;&#29616;&#30340;&#12290;&#22312; Spring MVC &#20013;&#65292;&#26694;&#26550;&#20026;&#25105;&#20204;&#20869;&#32622;&#20102;&#22823;&#37327;&#30340;&#36716;&#25442;&#22120;&#65292;&#20363;&#22914;&#20043;&#21069;&#24050;&#32463;&#29992;&#21040;&#36807;&#30340; Jackson JSON &#30340;&#36716;&#25442;&#65292;&#20854;&#20182;&#40664;&#35748;&#30340;&#24120;&#29992; <code>HttpMessageConverter</code> &#22914;&#34920; 9-10 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 9-10&#12288;Spring MVC &#20869;&#32622;&#30340;&#24120;&#29992;<code>HttpMessageConverter</code> &#21015;&#34920;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><td>&#31867;&#21517;</td><th>&#29983;&#25928;&#26465;&#20214;</th><th>&#22788;&#29702;&#31867;&#22411;</th></tr><tr><td><code>ByteArrayHttpMessageConverter</code></td><td>&#40664;&#35748;&#29983;&#25928;</td><td>&#23383;&#33410;&#25968;&#32452;</td></tr><tr><td><code>StringHttpMessageConverter</code></td><td>&#40664;&#35748;&#29983;&#25928;</td><td>&#25991;&#26412;</td></tr><tr><td><code>AllEncompassingFormHttpMessageConverter</code></td><td>&#40664;&#35748;&#29983;&#25928;</td><td>&#25353; CLASSPATH &#21152;&#36733;&#25903;&#25345;&#30340;&#25152;&#26377;&#31867;&#22411;</td></tr><tr><td><code>AtomFeedHttpMessageConverter</code></td><td>&#23384;&#22312; ROME &#20381;&#36182;</td><td>Atom Feed&#65292;&#21363; <code>application/atom+xml</code></td></tr><tr><td><code>RssChannelHttpMessageConverter</code></td><td>&#23384;&#22312; ROME &#20381;&#36182;</td><td>RSS Feed&#65292;&#21363; <code>application/rss+xml</code></td></tr><tr><td><code>MappingJackson2XmlHttpMessageConverter</code></td><td>&#23384;&#22312; Jackson &#30340; XML &#20381;&#36182;</td><td>XML</td></tr><tr><td><code>Jaxb2RootElementHttpMessageConverter</code></td><td>&#23384;&#22312; <code>javax.xml.bind.Binder</code></td><td>XML</td></tr><tr><td><code>MappingJackson2HttpMessageConverter</code></td><td>&#23384;&#22312; Jackson &#30340; JSON &#20381;&#36182;</td><td>JSON</td></tr><tr><td><code>GsonHttpMessageConverter</code></td><td>&#23384;&#22312; Gson &#20381;&#36182;</td><td>JSON</td></tr><tr><td><code>JsonbHttpMessageConverter</code></td><td>&#23384;&#22312; JSON Binding API &#20381;&#36182;</td><td>JSON</td></tr><tr><td><code>MappingJackson2SmileHttpMessageConverter</code></td><td>&#23384;&#22312; Jackson &#30340; Smile &#20381;&#36182;</td><td>&#20108;&#36827;&#21046; JSON&#65292;&#21363; <code>application/x-jackson-smile</code></td></tr></table>
<p>&#20854;&#20013; XML &#21644; JSON &#30340;&#20248;&#20808;&#39034;&#24207;&#37117;&#26159;&#33258;&#19978;&#32780;&#19979;&#30340;&#65292;&#20063;&#23601;&#26159;&#22914;&#26524;&#23384;&#22312; Jackson &#30340;&#20381;&#36182;&#65292;&#20250;&#20808;&#29992; Jackson &#26469;&#22788;&#29702;&#12290;</p>
<p>&#22312; Spring MVC &#37324;&#65292;&#30456;&#20851;&#30340;&#21028;&#26029;&#21644;&#21021;&#22987;&#21270;&#35774;&#32622;&#37117;&#26159;&#22312; <code>WebMvcConfigurationSupport</code> &#37324;&#20570;&#30340;&#65292;&#20363;&#22914;&#21028;&#26029;&#20381;&#36182;&#26159;&#21542;&#28385;&#36275;&#65292;&#23601;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>static {
    ClassLoader classLoader = WebMvcConfigurationSupport.class.getClassLoader();
    romePresent = ClassUtils.isPresent("com.rometools.rome.feed.WireFeed", classLoader);
    jaxb2Present = ClassUtils.isPresent("javax.xml.bind.Binder", classLoader);
    jackson2Present = ClassUtils.isPresent("com.fasterxml.jackson.databind.ObjectMapper", classLoader)
        &amp;&amp; ClassUtils.isPresent("com.fasterxml.jackson.core.JsonGenerator", classLoader);
    jackson2XmlPresent = ClassUtils.isPresent("com.fasterxml.jackson.dataformat.xml.XmlMapper", classLoader);
    jackson2SmilePresent = ClassUtils.isPresent("com.fasterxml.jackson.dataformat.smile.SmileFactory", classLoader);
    jackson2CborPresent = ClassUtils.isPresent("com.fasterxml.jackson.dataformat.cbor.CBORFactory", classLoader);
    gsonPresent = ClassUtils.isPresent("com.google.gson.Gson", classLoader);
    jsonbPresent = ClassUtils.isPresent("javax.json.bind.Jsonb", classLoader);
}</code></pre>
<p>&#25105;&#20204;&#21487;&#20197;&#23454;&#29616; <code>WebMvcConfigurer</code> &#25509;&#21475;&#65292;&#35206;&#30422; <code>configureMessageConverters()</code> &#26041;&#27861;&#26469;&#37197;&#32622;&#33258;&#24049;&#30340; <code>HttpMessageConverter</code>&#12290;&#20294;&#22312; Spring Boot &#37324;&#65292;&#36824;&#26377;&#26356;&#31616;&#21333;&#30340;&#26041;&#27861;&#65292;&#26377;&#19968;&#20010; <code>HttpMessageConvertersAutoConfiguration</code> &#33258;&#21160;&#37197;&#32622;&#31867;&#65292;&#22823;&#33268;&#20195;&#30721;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass(HttpMessageConverter.class)
@Conditional(NotReactiveWebApplicationCondition.class)
@AutoConfigureAfter({ GsonAutoConfiguration.class, JacksonAutoConfiguration.class,
    JsonbAutoConfiguration.class })
@Import({
JacksonHttpMessageConvertersConfiguration.class,
GsonHttpMessageConvertersConfiguration.class,
JsonbHttpMessageConvertersConfiguration.class
})
public class HttpMessageConvertersAutoConfiguration {
    static final String PREFERRED_MAPPER_PROPERTY = "spring.mvc.converters.preferred-json-mapper";

    @Bean
    @ConditionalOnMissingBean
    public HttpMessageConverters messageConverters(ObjectProvider&lt;HttpMessageConverter&lt;?&gt;&gt; converters) {
        return new HttpMessageConverters(converters.orderedStream().collect(Collectors.toList()));
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#20854;&#20013;&#65292;&#38500;&#20102;&#26377;&#30456;&#20851;&#20381;&#36182;&#30340;&#23548;&#20837;&#21644;&#33258;&#21160;&#37197;&#32622;&#25191;&#34892;&#39034;&#24207;&#35774;&#32622;&#65292;&#26356;&#37325;&#35201;&#30340;&#26159;&#23427;&#36824;&#20250;&#20174;&#19978;&#19979;&#25991;&#37324;&#33719;&#21462; <code>HttpMessageConverter</code> &#24182;&#35774;&#32622;&#21040; <code>HttpMessageConverters</code> &#23545;&#35937;&#20013;&#12290;&#32780;&#36825;&#20010;&#23545;&#35937;&#20250;&#34987; Spring MVC &#30340;&#33258;&#21160;&#37197;&#32622;&#31867; <code>WebMvcAutoConfiguration</code> &#25152;&#20351;&#29992;&#65292;&#20854;&#20869;&#37096;&#31867; <code>WebMvcAutoConfigurationAdapter</code> &#30340; <code>configureMessageConverters()</code> &#23601;&#20250;&#20174; <code>HttpMessageConverters</code> &#20013;&#21462;&#20986;&#25152;&#26377;&#30340; <code>HttpMessageConverter</code>&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) {
    this.messageConvertersProvider
        .ifAvailable((customConverters) -&gt; converters.addAll(customConverters.getConverters()));
}</code></pre>
<p>&#32508;&#19978;&#25152;&#36848;&#65292;&#22312; Spring Boot &#30340;&#21152;&#25345;&#19979;&#65292;&#25105;&#20204;&#21482;&#38656;&#35201;&#25226;&#33258;&#24049;&#23450;&#21046;&#22909;&#30340; <code>HttpMessageConverter</code> &#23545;&#35937;&#37197;&#32622;&#20026; Spring &#19978;&#19979;&#25991;&#20013;&#30340; Bean&#65292;&#21097;&#19979;&#30340;&#23601;&#19981;&#29992;&#25805;&#24515;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;Spring Boot &#33258;&#21160;&#37197;&#32622;&#39044;&#22475;&#30340;&#25193;&#23637;&#28857;</strong></p>
<p>&#36890;&#24120;&#65292;Spring Boot &#38024;&#23545;&#23427;&#20869;&#32622;&#30340;&#33258;&#21160;&#37197;&#32622;&#37117;&#20250;&#25552;&#20379;&#19968;&#20123;&#25193;&#23637;&#28857;&#65292;&#25105;&#20204;&#24076;&#26395;&#22312;&#35843;&#25972;&#26576;&#20123;&#37197;&#32622;&#26102;&#65292;&#19981;&#24517;&#24443;&#24213;&#31105;&#29992;&#30456;&#20851;&#33258;&#21160;&#37197;&#32622;&#65292;&#32780;&#26159;&#25214;&#21040;&#36825;&#20123;&#25193;&#23637;&#28857;&#12290;&#20197; JSON &#37197;&#32622;&#20026;&#20363;&#65292;&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#23545; Jackson JSON &#30340;&#37197;&#32622;&#20570;&#20123;&#23567;&#20462;&#25913;&#65292;&#20363;&#22914;&#35843;&#25972;&#20960;&#20010;&#24207;&#21015;&#21270;&#21442;&#25968;&#65292;&#21487;&#20197;&#19981;&#29992;&#33258;&#24049;&#26032;&#37197;&#19968;&#20010; <code>ObjectMapper</code>&#65292;&#32780;&#26159;&#30475;&#30475;&#21069;&#38754;&#20195;&#30721;&#20013;&#20986;&#29616;&#30340; <code>JacksonAutoConfiguration</code>&#12290;</p>
<p>&#36890;&#35835;&#20854;&#20013;&#30340;&#36923;&#36753;&#65292;&#21487;&#20197;&#21457;&#29616;&#19979;&#38754;&#36825;&#20960;&#20010;&#32454;&#33410;&#65306;</p>
<ul>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#33258;&#21160;&#37197;&#32622;&#20013;&#30340; <code>JacksonObjectMapperConfiguration</code>&#65292;&#20351;&#29992; <code>Jackson2ObjectMapperBuilder</code> &#26469;&#21019;&#24314; <code>ObjectMapper</code>&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;"><code>Jackson2ObjectMapperBuilder</code> &#26159;&#30001; <code>JacksonObjectMapperBuilderConfiguration</code> &#25552;&#20379;&#30340;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#33258;&#21160;&#37197;&#32622;&#30340; <code>Jackson2ObjectMapperBuilder</code> &#22312;&#21019;&#24314;&#21518;&#20250;&#20351;&#29992;&#19978;&#19979;&#25991;&#20013;&#30340; <code>Jackson2ObjectMapperBuilderCustomizer</code> &#26469;&#20570;&#20010;&#24615;&#21270;&#37197;&#32622;&#12290;</li>
</ul>
<p>&#22240;&#27492;&#65292;&#22914;&#26524;&#25105;&#20204;&#24819;&#35201;&#35843;&#25972; <code>ObjectMapper</code>&#65292;&#21482;&#38656;&#35201;&#22312;&#19978;&#19979;&#25991;&#20013;&#25552;&#20379;&#33258;&#24049;&#30340; <code>Jackson2ObjectMapperBuilderCustomizer</code> Bean &#23601;&#34892;&#20102;&#12290;&#23427;&#21487;&#20197;&#23450;&#21046;&#24207;&#21015;&#21270;&#22120;&#12289;&#21453;&#24207;&#21015;&#21270;&#22120;&#12289;Jackson JSON &#30340;&#21508;&#31181; Feature &#31561;&#12290;&#38500;&#27492;&#20043;&#22806;&#65292;&#20854;&#20182;&#36824;&#26377;&#24456;&#22810;&#33258;&#21160;&#37197;&#32622;&#20063;&#26377;&#31867;&#20284;&#30340;&#25193;&#23637;&#28857;&#65292;&#20363;&#22914;&#65292;&#21518;&#38754;&#20250;&#25509;&#35302;&#21040;&#30340; <code>RestTemplate</code>&#65292;&#23427;&#30340; <code>RestTemplateAutoConfiguration</code> &#20063;&#26377;&#25552;&#20379; <code>RestTemplateCustomizer</code> &#26469;&#20570;&#20010;&#24615;&#21270;&#37197;&#32622;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#32465;&#23450;&#19982;&#26657;&#39564;</strong></p>
<p>&#20043;&#21069;&#26377;&#25552;&#21040;&#36807;&#65292;&#22312;&#23450;&#20041;&#25511;&#21046;&#22120;&#26041;&#27861;&#26102;&#65292;&#19981;&#23569;&#21442;&#25968;&#30340;&#21462;&#20540;&#37117;&#26159;&#32465;&#23450;&#20102;&#35831;&#27714;&#20013;&#30340;&#20869;&#23481;&#12290;&#22914;&#26524;&#26159;&#23558;&#23436;&#25972;&#30340;&#35831;&#27714;&#36716;&#25442;&#25104;&#23545;&#35937;&#65292;&#21487;&#20197;&#29992; <code>HttpMessageConverter</code> &#26469;&#22788;&#29702;&#31867;&#22411;&#36716;&#25442;&#65292;&#37027;&#31867;&#20284; HTTP &#34920;&#21333;&#36825;&#26679;&#30340;&#65292;&#23558;&#26576;&#20010;&#23646;&#24615;&#32465;&#23450;&#21040;&#21442;&#25968;&#23545;&#35937;&#37324;&#65292;&#21448;&#26159;&#36890;&#36807;&#20160;&#20040;&#26469;&#23454;&#29616;&#31867;&#22411;&#36716;&#25442;&#30340;&#21602;&#65311;</p>
<p>&#22312; Spring MVC &#20013;&#21487;&#20197;&#36890;&#36807;&#24102;&#26377; <code>@InitBinder</code> &#27880;&#35299;&#30340;&#26041;&#27861;&#26469;&#21021;&#22987;&#21270; <code>WebDataBinder</code>&#65292;&#23427;&#33021;&#23558;&#35831;&#27714;&#21442;&#25968;&#65288;&#34920;&#21333;&#25110;&#26597;&#35810;&#25968;&#25454;&#65289;&#32465;&#23450;&#21040;&#27169;&#22411;&#23545;&#35937;&#19978;&#65307;&#23558;&#35831;&#27714;&#20013;&#30340;&#23383;&#31526;&#20018;&#36716;&#25442;&#20026;&#25511;&#21046;&#22120;&#26041;&#27861;&#20013;&#30340;&#21508;&#31181;&#21442;&#25968;&#31867;&#22411;&#65307;&#22312;&#21576;&#29616; HTML &#34920;&#21333;&#26102;&#65292;&#23558;&#27169;&#22411;&#23545;&#35937;&#20013;&#30340;&#20540;&#26684;&#24335;&#21270;&#20026;&#23383;&#31526;&#20018;&#12290;&#34429;&#35828; <code>WebDataBinder</code> &#21487;&#20197;&#27880;&#20876; <code>PropertyEditor</code> &#20570;&#36716;&#21270;&#65292;&#20294;&#20010;&#20154;&#26356;&#20542;&#21521;&#27880;&#20876; <code>Converter</code> &#21644; <code>Formatter</code>&#65292;&#23448;&#26041;&#25991;&#26723;&#20013;&#26377;&#36825;&#20040;&#19968;&#27573;&#20363;&#23376;&#65292;&#38750;&#24120;&#31616;&#21333;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
public class FormController {
    @InitBinder
    protected void initBinder(WebDataBinder binder) {
        binder.addCustomFormatter(new DateFormatter("yyyy-MM-dd"));
    }
    // ...
}</code></pre>
<p>&#33258; 3.0 &#24320;&#22987;&#65292;Spring Framework &#25552;&#20379;&#20102;&#19968;&#22871;&#31867;&#22411;&#36716;&#25442;&#26426;&#21046;&#65292;&#20854;&#26680;&#24515;&#23601;&#26159;&#19978;&#38754;&#35762;&#21040;&#30340; <code>Converter&lt;S, T&gt;</code> &#25509;&#21475;&#65292;&#23427;&#33021;&#23558;&#19968;&#20010;&#31867;&#22411;&#36716;&#25442;&#20026;&#21478;&#19968;&#20010;&#65292;&#20855;&#20307;&#30340;&#25509;&#21475;&#23450;&#20041;&#22914;&#19979;&#25152;&#31034;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface Converter&lt;S, T&gt; {
    T convert(S source);
}</code></pre>
<p>&#36825;&#20010;&#25509;&#21475;&#21313;&#20998;&#36890;&#29992;&#65292;&#33021;&#22815;&#22788;&#29702;&#21508;&#31181;&#31867;&#22411;&#65292;&#20294;&#22312; Web &#20013;&#65292;&#25105;&#20204;&#26356;&#22810;&#26159;&#22312;&#19982; <code>String</code> &#25171;&#20132;&#36947;&#65292;&#25152;&#20197;&#21487;&#20197;&#29992; <code>Formatter</code> &#26469;&#23454;&#29616;&#19978;&#38754; <code>Converter</code> &#30340;&#21151;&#33021;&#65292;&#21487;&#20197;&#35828;&#21069;&#32773;&#26159;&#21518;&#32773;&#30340;&#19968;&#20010;&#29305;&#20363;&#12290;<code>Formatter</code> &#30340;&#23450;&#20041;&#22914;&#19979;&#25152;&#31034;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface Formatter&lt;T&gt; extends Printer&lt;T&gt;, Parser&lt;T&gt; {}</code></pre>
<p><code>Printer&lt;T&gt;</code> &#21644; <code>Parser&lt;T&gt;</code> &#37117;&#26159;&#38024;&#23545; <code>String</code> &#21644;&#31867;&#22411; <code>T</code> &#30340;&#65292;&#19968;&#20010;&#23558; <code>T</code> &#21464;&#20026; <code>String</code>&#65292;&#21478;&#19968;&#20010;&#21017;&#21453;&#36807;&#26469;&#12290;&#20197; <code>Money</code> &#31867;&#20026;&#20363;&#65292;&#25105;&#20204;&#21487;&#20197;&#20687;&#20195;&#30721;&#31034;&#20363; 9-8<span class="&#27880;&#37322;&#32534;&#21495;">10</span> &#37027;&#26679;&#26469;&#20570;&#22788;&#29702;&#12290;&#36825;&#37324;&#21482;&#20570;&#20102;&#26368;&#22522;&#26412;&#30340;&#21028;&#26029;&#65292;&#19981;&#33021;&#29992;&#20110;&#29983;&#20135;&#29615;&#22659;&#65292;&#22312;&#36716;&#25442;&#20026;&#25991;&#26412;&#26102;&#21482;&#36755;&#20986;&#20102;&#37329;&#39069;&#65292;&#27809;&#26377;&#24102;&#24065;&#31181;&#65292;&#20174;&#25991;&#26412;&#36716;&#20026; <code>Money</code> &#26102;&#65292;&#20351;&#29992;&#20102; <code>org.apache.commons:commons-lang3</code> &#20013;&#30340; <code>NumberUtils</code> &#23545;&#25968;&#23383;&#36827;&#34892;&#20102;&#21028;&#26029;&#65292;&#22914;&#26524;&#26159;&#25968;&#23383;&#20877;&#23558;&#20854;&#36716;&#20026; <code>BigDecimal</code>&#65292;&#29992;&#23427;&#26469;&#21019;&#24314;&#20154;&#27665;&#24065;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-8</strong>&#12288;&#31616;&#21333;&#30340; <code>Money</code> &#31867;&#22411;&#36716;&#25442;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
public class MoneyFormatter implements Formatter&lt;Money&gt; {
    @Override
    public Money parse(String text, Locale locale) throws ParseException {
        if (NumberUtils.isParsable(text)) {
            return Money.of(CurrencyUnit.of("CNY"), NumberUtils.createBigDecimal(text));
        }
        throw new ParseException(text, 0);
    }

    @Override
    public String print(Money object, Locale locale) {
        return object.getAmount().toString();
    }
}</code></pre>
<p>&#22312; Spring Boot &#20013;&#65292;&#25105;&#20204;&#26080;&#39035;&#21435;&#25163;&#21160;&#21021;&#22987;&#21270; <code>WebDataBinder</code>&#65292;&#27880;&#20876; <code>MoneyFormatter</code>&#65292;Spring Boot &#30340; MVC &#33258;&#21160;&#37197;&#32622;&#20250;&#25910;&#38598;&#19978;&#19979;&#25991;&#20013;&#30340; <code>Converter</code> &#21644; <code>Formatter</code>&#65292;&#33258;&#21160;&#23436;&#25104;&#27880;&#20876;&#12290;&#25105;&#20204;&#21482;&#38656;&#36890;&#36807; <code>@Component</code> &#25110;&#20854;&#20182;&#26041;&#24335;&#23558;&#23427;&#20204;&#22768;&#26126;&#20026; Bean &#23601;&#21487;&#20197;&#20102;&#12290;</p>
<p>&#22312;&#23558;&#35831;&#27714;&#20869;&#23481;&#32465;&#23450;&#21040;&#21442;&#25968;&#19978;&#20043;&#21518;&#65292;&#19968;&#33324;&#36824;&#20250;&#20570;&#19968;&#20123;&#20869;&#23481;&#30340;&#26657;&#39564;&#65292;Spring Framework &#20013;&#23601;&#25903;&#25345; Jakarta Bean Validation API&#65292;Hibernate Validator &#23601;&#26159;&#23427;&#30340;&#19968;&#31181;&#23454;&#29616;&#12290;&#21487;&#20197;&#36890;&#36807;&#27880;&#35299;&#26469;&#26631;&#35760;&#19968;&#20123;&#23646;&#24615;&#65292;&#20026;&#23427;&#21152;&#19978;&#32422;&#26463;&#65292;&#34920; 9-11 &#21015;&#20030;&#20102;&#19968;&#20123;&#24120;&#29992;&#27880;&#35299;&#65292;&#36825;&#20123;&#27880;&#35299;&#22312; <code>javax.validation.constraints</code> &#21253;&#37324; <span class="&#27880;&#37322;&#32534;&#21495;">11</span>&#12290;&#21487;&#20197;&#22312; pom.xml &#20013;&#24341;&#20837; Hibernate Validator &#30340;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
     &lt;groupId&gt;org.hibernate.validator&lt;/groupId&gt;
     &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p><strong>&#34920; 9-11&#12288;Jakarta Bean Validation API &#20013;&#30340;&#19968;&#20123;&#24120;&#29992;&#27880;&#35299;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#27880;&#35299;</th><th>&#35828;&#26126;</th></tr><tr><td><code>@Null</code>&#12289;<code>@NotNull</code>&#12289;<code>@NotBlank</code>&#12289;<code>@NotEmpty</code></td><td>&#21508;&#31181; <code>null</code>&#12289;&#38750; <code>null</code>&#12289;&#38750;&#31354;&#30333;&#12289;&#38750;&#31354;&#30340;&#21028;&#26029;</td></tr><tr><td><code>@Email</code></td><td>&#26159;&#21542;&#20026;&#30005;&#23376;&#37038;&#20214;&#22320;&#22336;</td></tr><tr><td><code>@Digits</code></td><td>&#26159;&#21542;&#26159;&#25351;&#23450;&#33539;&#22260;&#21644;&#31867;&#22411;&#30340;&#25968;&#23383;</td></tr><tr><td><code>@Min</code>&#12289;<code>@Max</code>&#12289;<code>@DecimalMin</code>&#12289;<code>@DecimalMax</code></td><td>&#25968;&#23383;&#26159;&#21542;&#22312;&#32473;&#23450;&#26368;&#22823;&#12289;&#26368;&#23567;&#33539;&#22260;&#20869;</td></tr><tr><td><code>@Negative</code>&#12289;<code>@NegativeOrZero</code>&#12289;<code>@Positive</code>&#12289;<code>@PositiveOrZero</code></td><td>&#25968;&#23383;&#26159;&#36127;&#25968;&#12289;&#27491;&#25968;&#21644;&#38646;&#30340;&#30456;&#20851;&#21028;&#26029;</td></tr><tr><td><code>@Future</code>&#12289;<code>@FutureOrPresent</code>&#12289;<code>@Past</code>&#12289;<code>@PastOrPresent</code></td><td>&#26102;&#38388;&#26159;&#36807;&#21435;&#12289;&#29616;&#22312;&#21644;&#23558;&#26469;&#30340;&#21028;&#26029;</td></tr><tr><td><code>@Size</code></td><td>&#38598;&#21512;&#31867;&#22411;&#12289;&#25968;&#32452;&#12289;&#23383;&#31526;&#20018;&#30340;&#38271;&#24230;&#21028;&#26029;</td></tr><tr><td><code>@Pattern</code></td><td>&#25353;&#27491;&#21017;&#34920;&#36798;&#24335;&#36827;&#34892;&#21305;&#37197;</td></tr></table>
<p>&#22312;&#23545;&#35937;&#30340;&#23646;&#24615;&#19978;&#28155;&#21152;&#20102;&#19978;&#36848;&#27880;&#35299;&#21518;&#65292;&#36824;&#38656;&#35201;&#22312;&#25511;&#21046;&#22120;&#26041;&#27861;&#30340;&#23545;&#24212;&#21442;&#25968;&#19978;&#22686;&#21152; <code>@Valid</code> &#27880;&#35299;&#65292;&#22768;&#26126;&#36825;&#20010;&#21442;&#25968;&#38656;&#35201;&#36827;&#34892;&#32465;&#23450;&#26657;&#39564;&#12290;&#32039;&#38543;&#20854;&#21518;&#30340;&#21442;&#25968;&#24517;&#39035;&#26159; <code>Errors</code> &#25110; <code>BindingResult</code> &#31867;&#22411;&#30340;&#65292;&#20197;&#20415;&#25105;&#20204;&#33021;&#22815;&#33719;&#24471;&#26657;&#39564;&#30340;&#38169;&#35823;&#20449;&#24687;&#12290;</p>
<p>&#22312;&#20102;&#35299;&#20102;&#32465;&#23450;&#19982;&#26657;&#39564;&#30340;&#22522;&#26412;&#20869;&#23481;&#21518;&#65292;&#35753;&#25105;&#20204;&#36890;&#36807;&#23454;&#38469;&#30340;&#20363;&#23376;&#26469;&#30475;&#30475;&#20855;&#20307;&#35813;&#22914;&#20309;&#20351;&#29992;&#36825;&#20123;&#21151;&#33021;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#33756;&#21333;&#20013;&#26377;&#19968;&#37096;&#20998;&#39278;&#21697;&#26159;&#26681;&#25454;&#23395;&#33410;&#35843;&#25972;&#30340;&#12290;&#24215;&#21592;&#38656;&#35201;&#26377;&#36884;&#24452;&#26469;&#26032;&#22686;&#39278;&#21697;&#65292;&#20363;&#22914;&#65292;&#33609;&#33683;&#19978;&#24066;&#30340;&#23395;&#33410;&#65292;&#23601;&#21487;&#20197;&#25512;&#20986;&#33609;&#33683;&#20027;&#39064;&#30340;&#27700;&#26524;&#33590;&#12290;&#20026;&#27492;&#65292;&#25105;&#20204;&#38656;&#35201;&#24320;&#21457;&#19968;&#20010;&#25509;&#21475;&#65292;&#35753;&#24215;&#21592;&#33021;&#26041;&#20415;&#22320;&#26032;&#22686;&#33756;&#21333;&#39033;&#12290;</p>
</blockquote>
<p>&#22312; 9.1 &#33410;&#20013;&#65292;&#25105;&#20204;&#24050;&#32463;&#30475;&#36807;&#20102;&#22914;&#20309;&#20351;&#29992; JSON &#26469;&#20570;&#20132;&#20114;&#65292;&#36825;&#37324;&#65292;&#25105;&#20204;&#25442;&#31181;&#26041;&#24335;&#65292;&#29992; HTTP &#30340; Form &#34920;&#21333;&#26469;&#25552;&#20132;&#19968;&#20123;&#34920;&#21333;&#12290;&#34920;&#21333;&#23545;&#35937;&#22914;&#20195;&#30721;&#31034;&#20363; 9-9 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-9</strong>&#12288;&#34920;&#21333;&#23545;&#35937; <code>NewMenuItemForm</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
public class NewMenuItemForm {
    @NotBlank
    private String name;
    @NotNull
    private Money price;
    @NotNull
    private Size size;
}</code></pre>
<p>&#22788;&#29702;&#26032;&#24314;&#34920;&#21333;&#35831;&#27714;&#30340; <code>createByForm()</code> &#26041;&#27861;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 9-10 &#25152;&#31034;&#65292;&#23427;&#25509;&#25910;&#21457;&#24448; <code>/menu</code> &#30340; <code>POST</code> &#35831;&#27714;&#65288;&#35831;&#27714;&#30340;&#23186;&#20307;&#31867;&#22411;&#26159; <code>application/x-www-form-urlencoded</code>&#65289;&#65292;&#23558;&#34920;&#21333;&#32465;&#23450;&#21040; <code>NewMenuItemForm</code> &#21518;&#20877;&#36827;&#34892;&#26657;&#39564;&#65292;&#22914;&#26524; <code>result.hasErrors()</code> &#20026; <code>true</code>&#65292;&#35828;&#26126;&#26377;&#38382;&#39064;&#65292;&#36825;&#26102;&#23558; HTTP &#30340;&#21709;&#24212;&#30721;&#35774;&#32622;&#20026; <code>400 Bad Request</code>&#65307;&#22914;&#26524;&#27809;&#26377;&#38382;&#39064;&#65292;&#21017;&#35843;&#29992; <code>MenuService</code> &#30340; <code>save()</code> &#26041;&#27861;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-10</strong>&#12288;&#22686;&#21152;&#20102; <code>createByForm()</code> &#26041;&#27861;&#21518;&#30340; <code>MenuController</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@ResponseBody
@RequestMapping("/menu")
@Slf4j
public class MenuController {
    @Autowired
    private MenuService menuService;

    @PostMapping(consumes = MediaType.APPLICATION_FORM_URLENCODED_VALUE)
    public Optional&lt;MenuItem&gt; createByForm(@Valid NewMenuItemForm form, BindingResult result,
                                           HttpServletResponse response) {
        if (result.hasErrors()) {
            log.warn("&#32465;&#23450;&#21442;&#25968;&#38169;&#35823;&#65306;{}", result.getAllErrors());
            response.setStatus(HttpStatus.BAD_REQUEST.value());
            return Optional.empty();
        }
        MenuItem item = MenuItem.builder().name(form.getName())
                .price(form.getPrice()).size(form.getSize()).build();
        return menuService.save(item);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
}</code></pre>
<p><code>MenuService</code> &#20013;&#35201;&#22686;&#21152;&#19968;&#20010;&#20445;&#23384; <code>MenuItem</code> &#30340;&#26041;&#27861;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-11 &#25152;&#31034;&#65292;&#23601;&#26159;&#31616;&#21333;&#22320;&#35843;&#29992;&#20102; <code>MenuRepository</code> &#30340;&#21516;&#21517;&#26041;&#27861;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-11</strong>&#12288;&#22686;&#21152;&#20102; <code>save()</code> &#26041;&#27861;&#30340; <code>MenuService</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Transactional
@CacheConfig(cacheNames = "menu")
public class MenuService {
    @Autowired
    private MenuRepository menuRepository;

    public Optional&lt;MenuItem&gt; save(MenuItem menuItem) {
        return Optional.ofNullable(menuRepository.save(menuItem));
    }
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
}</code></pre>
<p>&#30001;&#20110;&#25105;&#20204;&#30446;&#21069;&#20351;&#29992;&#30340;&#26159; H2 &#20869;&#23384;&#25968;&#25454;&#24211;&#65292;Spring Data JPA &#22312;&#26144;&#23556;&#26102;&#20250;&#23558;&#33258;&#22686;&#20027;&#38190;&#33258;&#21160;&#37197;&#32622;&#20026;&#20174;&#24207;&#21015;&#20013;&#33719;&#21462; ID&#12290;&#25105;&#20204;&#21487;&#20197;&#32771;&#34385;&#31245;&#20316;&#35843;&#25972;&#65292;&#22312; <code>@GeneratedValue</code> &#20013;&#23558;&#29983;&#25104;&#31574;&#30053;&#35774;&#32622;&#20026; <code>GenerationType.IDENTITY</code>&#65292;&#30452;&#25509;&#20351;&#29992; H2 &#30340;&#33258;&#22686;&#20027;&#38190;&#12290;&#20195;&#30721;&#31034;&#20363; 9-12 &#26159; <code>MenuItem</code> &#30340; <code>id</code> &#23646;&#24615;&#65292;&#20854;&#20182;&#20960;&#20010;&#31867;&#20063;&#38656;&#35201;&#35843;&#25972;&#19968;&#19979;&#27880;&#35299;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-12</strong>&#12288;&#35774;&#32622;&#20102; <code>GenerationType.IDENTITY</code> &#31574;&#30053;&#30340; <code>MenuItem</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "t_menu")
public class MenuItem implements Serializable {
    private static final long serialVersionUID = 8585684450527309518L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
}</code></pre>
<p>&#34920;&#21333; <code>POST</code> &#35831;&#27714;&#19981;&#22826;&#22909;&#29992;&#27983;&#35272;&#22120;&#27169;&#25311;&#65292;&#36825;&#26102;&#23601;&#38656;&#35201;&#24341;&#20837;&#26032;&#30340;&#24037;&#20855;&#20102;&#65292;&#26412;&#20070;&#23558;&#20351;&#29992; Postman<span class="&#27880;&#37322;&#32534;&#21495;">12</span> &#26469;&#21457;&#36865; HTTP &#35831;&#27714;&#12290;&#22312;&#20854;&#20027;&#30028;&#38754;&#19978;&#65292;&#36890;&#36807; New &#25353;&#38062;&#25171;&#24320;&#33756;&#21333;&#65292;&#36873;&#25321; Request &#26469;&#21019;&#24314;&#26032;&#35831;&#27714;&#65292;&#20063;&#21487;&#20197;&#26032;&#24314; Collection&#65292;&#23558;&#35831;&#27714;&#20998;&#38376;&#21035;&#31867;&#22320;&#25910;&#32435;&#22312;&#38598;&#21512;&#20013;&#12290;&#29616;&#22312;&#65292;&#20551;&#35774;&#25105;&#20204;&#21019;&#24314;&#20102;&#19968;&#20010;&#8220;&#21019;&#24314;&#39278;&#26009;&#8221;&#30340;&#35831;&#27714;&#65292;&#22312; Body &#20013;&#36873;&#25321; <code>x-www-form-urlencoded</code> &#20316;&#20026;&#27491;&#25991;&#31867;&#22411;&#65292;&#36755;&#20837;&#34920;&#21333;&#20013;&#23545;&#24212;&#30340;&#20869;&#23481;&#65292;&#22914;&#22270; 9-5 &#25152;&#31034;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00774.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-5&#12288;Postman &#20013;&#21019;&#24314;&#30340;&#8220;&#21019;&#24314;&#39278;&#26009;&#8221;&#35831;&#27714;</strong></p>
<p>&#22312; <code>BinaryTeaApplication</code> &#31243;&#24207;&#36816;&#34892;&#21518;&#65292;&#28857;&#20987; Send &#25353;&#38062;&#65292;&#21518;&#31471;&#26381;&#21153;&#23601;&#33021;&#25910;&#21040;&#25105;&#20204;&#21457;&#24448; http://localhost:8080/menu &#30340; <code>POST</code> &#35831;&#27714;&#65292;&#36820;&#22238;&#30340;&#20869;&#23481;&#26159;&#20010; JSON&#65292;&#22823;&#33268;&#22914;&#19979;&#25152;&#31034;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>{
    "id": 4,
    "name": "Ruby&#33609;&#33683;&#26524;&#33590;",
    "size": "MEDIUM",
    "price": {
        "amount": 15.00,
        "currency": "CNY"
    },
    "createTime": "2020-11-23T16:57:10.562+00:00",
    "updateTime": "2020-11-23T16:57:10.563+00:00"
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#25991;&#20214;&#19978;&#20256;</strong></p>
<p>&#38500;&#20102;&#24120;&#35265;&#30340;&#35831;&#27714;&#65292;HTTP &#20063;&#25903;&#25345;&#19978;&#20256;&#25991;&#20214;&#65292;&#20351;&#29992;&#30340;&#23186;&#20307;&#31867;&#22411;&#26159; <code>multipart/form-data</code> &#25110;&#32773; <code>multipart/mixed</code>&#65292;&#22312;&#23450;&#20041;&#26041;&#27861;&#26102;&#65292;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807; <code>MultipartFile</code> &#36825;&#20010;&#21442;&#25968;&#31867;&#22411;&#26469;&#33719;&#24471;&#19978;&#20256;&#30340;&#25991;&#20214;&#65292;&#20174;&#20013;&#21462;&#24471; <code>InputStream</code> &#35835;&#21462;&#20869;&#23481;&#65292;&#25509;&#19979;&#26469;&#30475;&#20010;&#20363;&#23376;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#22312;&#20043;&#21069;&#30340;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#20363;&#23376;&#20013;&#65292;&#19968;&#27425;&#26032;&#24314;&#19968;&#20010;&#26465;&#30446;&#30340;&#20570;&#27861;&#34429;&#28982;&#31616;&#21333;&#30452;&#25509;&#65292;&#20294;&#22312;&#36935;&#21040;&#38656;&#35201;&#28155;&#21152;&#22823;&#37327;&#33756;&#21333;&#39033;&#30340;&#26102;&#20505;&#19981;&#20813;&#25928;&#29575;&#20302;&#19979;&#65292;&#26368;&#22909;&#33021;&#22815;&#19968;&#27425;&#24615;&#32534;&#36753;&#22909;&#35201;&#28155;&#21152;&#30340;&#20869;&#23481;&#65292;&#23436;&#25104;&#28155;&#21152;&#30340;&#21160;&#20316;&#12290;&#36825;&#26102;&#65292;&#25105;&#20204;&#23601;&#21487;&#20197;&#36873;&#25321;&#20808;&#32534;&#20889;&#25991;&#20214;&#65292;&#28982;&#21518;&#23558;&#25991;&#20214;&#20840;&#37096;&#19978;&#20256;&#65292;&#20174;&#32780;&#23454;&#29616;&#25209;&#37327;&#28155;&#21152;&#30340;&#25805;&#20316;&#12290;</p>
</blockquote>
<p>&#20195;&#30721;&#31034;&#20363; 9-13 &#26159;&#29992;&#26469;&#25209;&#37327;&#21019;&#24314;&#33756;&#21333;&#26465;&#30446;&#30340;&#26041;&#27861;&#65292;&#22312; <code>@PostMapping</code> &#27880;&#35299;&#20013;&#26631;&#35760;&#20102;&#35813;&#26041;&#27861;&#25509;&#21463; <code>multipart/form-data</code> &#36825;&#31181;&#23186;&#20307;&#31867;&#22411;&#65292;&#29992; <code>@RequestParam</code> &#27880;&#35299;&#23558;&#35831;&#27714;&#20013;&#30340;&#25991;&#20214;&#37096;&#20998;&#32465;&#23450;&#32473;&#20102; <code>file</code> &#21442;&#25968;&#65292;&#35813;&#26041;&#27861;&#20027;&#35201;&#20570;&#20102;&#36825;&#20040;&#19968;&#20123;&#21160;&#20316;&#65306;</p>
<p>(1) &#33719;&#21462;&#24403;&#21069;&#35831;&#27714;&#30340; URI &#22320;&#22336;&#65292;&#20197;&#20415;&#22312;&#21518;&#38754;&#26500;&#36896;&#36820;&#22238;&#23545;&#35937;&#26102;&#20351;&#29992;&#65307;</p>
<p>(2) &#21028;&#26029;&#33719;&#21462;&#30340;&#25991;&#20214;&#26159;&#21542;&#20026;&#31354;&#65292;&#22914;&#26524;&#20026;&#31354;&#21017;&#36820;&#22238; <code>400 Bad Request</code> &#21709;&#24212;&#65307;</p>
<p>(3) &#21462;&#24471;&#25991;&#20214;&#30340;&#36755;&#20837;&#27969;&#65292;&#36880;&#34892;&#35835;&#21462;&#20869;&#23481;&#65292;&#24182;&#36716;&#25442;&#20026; <code>MenuItem</code> &#23545;&#35937;&#65307;</p>
<p>(4) &#23558; <code>MenuItem</code> &#38598;&#21512;&#19968;&#36215;&#20445;&#23384;&#21040;&#25968;&#25454;&#24211;&#65292;&#36820;&#22238; <code>201 Created</code> &#21709;&#24212;&#65292;&#24182;&#24102;&#19978;&#20445;&#23384;&#21518;&#30340;&#23545;&#35937;&#65307;</p>
<p>(5) &#22914;&#26524;&#21457;&#29983;&#24322;&#24120;&#65292;&#21017;&#36820;&#22238; <code>500 Internal Server Error</code> &#21709;&#24212;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-13</strong>&#12288;<code>MenuController</code> &#20013;&#30340; <code>createBatch()</code> &#26041;&#27861;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
public ResponseEntity&lt;List&lt;MenuItem&gt;&gt; createBatch(@RequestParam("file") MultipartFile file) {
    List&lt;MenuItem&gt; menuItemList = new ArrayList&lt;&gt;();
    URI uri = ServletUriComponentsBuilder.fromCurrentRequestUri().build().toUri();
    log.info("Current URI: {}", uri);
    if (file == null || file.isEmpty()) {
        log.warn("File can NOT be null or empty.");
        return ResponseEntity.badRequest().body(menuItemList);
    }
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(file.getInputStream()))) {
        menuItemList = reader.lines().map(l -&gt; StringUtils.split(l))
        .filter(f -&gt; f != null &amp;&amp; f.length == 3)
        .map(f -&gt; MenuItem.builder()
        .name(f[0])
        .size(Size.valueOf(f[1]))
        .price(Money.of(CurrencyUnit.of("CNY"), NumberUtils.createBigDecimal(f[2])))
        .build()).collect(Collectors.toList());
        return ResponseEntity.created(uri).body(menuService.save(menuItemList));
    } catch (Exception e) {
        log.error("Exception occurred while creating menu list.", e);
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(menuItemList);
    }
}</code></pre>
<p>&#36825;&#27573;&#20195;&#30721;&#37324;&#65292;&#25105;&#20204;&#29992;&#21040;&#20102; <code>ResponseEntity&lt;T&gt;</code>&#65292;&#36890;&#36807;&#23427;&#21487;&#20197;&#26041;&#20415;&#22320;&#35774;&#32622;&#36820;&#22238;&#30340; HTTP &#21709;&#24212;&#30721;&#65307;&#29992;&#21040;&#20102; <code>try-with-resource</code> &#30340;&#35821;&#27861;&#65292;&#36825;&#26679;&#21487;&#20197;&#19981;&#29992;&#25805;&#24515;&#36164;&#28304;&#30340;&#20851;&#38381;&#38382;&#39064;&#65307;&#36824;&#29992;&#21040;&#20102; Lambda &#34920;&#36798;&#24335;&#36807;&#28388;&#24182;&#36716;&#25442;&#35835;&#21462;&#30340;&#25991;&#26412;&#20869;&#23481;&#12290;&#20195;&#30721;&#20013;&#35843;&#29992;&#30340; <code>save()</code> &#26041;&#27861;&#22914;&#20195;&#30721;&#31034;&#20363; 9-14 &#25152;&#31034;&#65292;&#22312;&#25511;&#21046;&#22120;&#30340;&#26041;&#27861;&#37324;&#21482;&#20570;&#19968;&#20123;&#26657;&#39564;&#21644;&#36716;&#25442;&#24037;&#20316;&#65292;&#23454;&#38469;&#30340;&#20445;&#23384;&#36923;&#36753;&#24314;&#35758;&#36824;&#26159;&#25918;&#22312; <code>Service</code> &#31867;&#20013;&#12290;&#20877;&#32773;&#65292;<code>Service</code> &#31867;&#19978;&#22686;&#21152;&#20102;&#20107;&#21153;&#27880;&#35299;&#65292;&#21487;&#20197;&#20445;&#35777;&#36825;&#25209;&#23545;&#35937;&#35201;&#20040;&#19968;&#36215;&#20445;&#23384;&#25104;&#21151;&#65292;&#35201;&#20040;&#19968;&#36215;&#22833;&#36133;&#12290;&#22914;&#26524;&#22312; <code>createBatch()</code> &#26041;&#27861;&#20013;&#24490;&#29615;&#35843;&#29992;&#21333;&#20010;&#23545;&#35937;&#30340;&#20445;&#23384;&#65292;&#21017;&#26377;&#21487;&#33021;&#20986;&#29616;&#37096;&#20998;&#25104;&#21151;&#65292;&#37096;&#20998;&#22833;&#36133;&#30340;&#24773;&#20917;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-14</strong>&#12288;<code>MenuService</code> &#20013;&#29992;&#26469;&#25209;&#37327;&#20445;&#23384; <code>MenuItem</code> &#30340; <code>save()</code> &#26041;&#27861;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public List&lt;MenuItem&gt; save(List&lt;MenuItem&gt; items) {
    return menuRepository.saveAll(items);
}</code></pre>
<p>&#25105;&#20204;&#20351;&#29992;&#30340;&#25991;&#20214;&#23601;&#26159;&#26222;&#36890;&#30340;&#25991;&#26412;&#65292;&#26684;&#24335;&#22914;&#19979;&#25152;&#31034;&#65292;&#29992;&#31354;&#26684;&#20998;&#38548;&#65292;&#20869;&#23481;&#20381;&#27425;&#26159;&#21517;&#31216;&#12289;&#22823;&#23567;&#35268;&#26684;&#12289;&#20215;&#26684;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Ruby&#33609;&#33683;&#26524;&#33590; SMALL 12.00
Ruby&#33609;&#33683;&#26524;&#33590; MEDIUM 15.00
Ruby&#33609;&#33683;&#26524;&#33590; LARGE 18.00</code></pre>
<p>&#22312; Postman &#20013;&#65292;&#21487;&#20197;&#26032;&#24314;&#19968;&#20010;&#35831;&#27714;&#65292;HTTP &#26041;&#27861;&#36873;&#25321; <code>POST</code>&#65292;&#22635;&#19978;&#22320;&#22336;&#65292;Body &#37096;&#20998;&#30340;&#26684;&#24335;&#36873;&#25321; <code>form-data</code>&#65292;&#35831;&#27714;&#20869;&#23481; KEY &#20026; <code>file</code>&#65292;&#31867;&#22411;&#20026;&#25991;&#20214; <code>File</code>&#65292;&#36825;&#26102; VALUE &#23601;&#26159;&#19968;&#20010;&#25991;&#20214;&#36873;&#25321;&#25353;&#38062;&#65292;&#21487;&#20197;&#36873;&#25321;&#20107;&#20808;&#20934;&#22791;&#22909;&#30340;&#25991;&#26412;&#65292;&#20363;&#22914;&#65292;&#25226;&#19978;&#38754;&#30340;&#19977;&#34892;&#25991;&#23383;&#20445;&#23384;&#20026;&#19968;&#20010; drinks.txt&#65292;&#22914;&#22270; 9-6 &#25152;&#31034;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00775.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-6&#12288;&#19978;&#20256;&#25991;&#20214;&#21040; http://localhost:8080/menu &#30340; Postman &#35831;&#27714;</strong></p>
<p>&#21457;&#36865;&#36825;&#20010;&#35831;&#27714;&#65292;&#23601;&#33021;&#24471;&#21040;&#22914;&#19979;&#30340; JSON &#21709;&#24212;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>[
    {
        "id": 3,
        "name": "Ruby&#33609;&#33683;&#26524;&#33590;",
        "size": "SMALL",
        "price": {
            "amount": 12.00,
            "currency": "CNY"
        },
        "createTime": "2020-11-27T09:53:18.041+00:00",
        "updateTime": "2020-11-27T09:53:18.041+00:00"
    },
    // &#30465;&#30053;&#21478;&#22806;&#20004;&#20010;&#39278;&#21697;&#30340;&#20449;&#24687;
]</code></pre>
<p>&#22914;&#26524;&#29992;&#21333;&#20803;&#27979;&#35797;&#26469;&#39564;&#35777;&#26159;&#21542;&#19978;&#20256;&#20102;&#31354;&#20869;&#23481;&#65292;&#37027;&#23601;&#20250;&#20687;&#20195;&#30721;&#31034;&#20363; 9-15 &#37027;&#26679;&#65292;&#22823;&#23478;&#35760;&#24471;&#25226;&#26500;&#24314;&#26102;&#30340; <code>alwaysExpect(status().isOk())</code> &#27880;&#37322;&#25481;&#65292;&#22240;&#20026;&#36825;&#37324;&#25105;&#20204;&#36820;&#22238;&#30340;&#26159; <code>400 Bad Request</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-15</strong>&#12288;&#23545;&#20110;&#19978;&#20256;&#31354;&#20869;&#23481;&#30340;&#27979;&#35797;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootTest
class MenuControllerTest {
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
    @Test
    void testCreateBatchWithEmptyFile() throws Exception {
        mockMvc.perform(multipart("/menu")
                .file("file", null))
                .andExpect(status().isBadRequest())
                .andExpect(content().string("[]"));
    }
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">10</span>&#36825;&#37096;&#20998;&#30340;&#20195;&#30721;&#31034;&#20363;&#37117;&#22312; ch9/binarytea-form-controller &#39033;&#30446;&#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">11</span>Jakarta Validation API 2.<em>x</em> &#30340;&#21253;&#21517;&#26159; <code>javax.validation</code>&#65292;&#21040;&#20102; 3.<em>x</em> &#21518;&#21253;&#21517;&#25913;&#20026;&#20102; <code>jakarta.validation</code>&#65292;&#25152;&#20197; Spring Framework 6.0 &#36981;&#24490; Jakarta EE 9 &#21518;&#20063;&#35201;&#29992;&#21518;&#38754;&#30340;&#21253;&#21517;&#20102;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">12</span>Postman &#26412;&#26469;&#21482;&#26159;&#19968;&#27454; Chrome &#25554;&#20214;&#65292;&#29992;&#26469;&#21457;&#36865; HTTP &#35831;&#27714;&#65292;&#20294;&#23427;&#31616;&#21333;&#22909;&#29992;&#65292;&#36880;&#27493;&#21457;&#23637;&#20026;&#20102; REST &#25509;&#21475;&#30340;&#27979;&#35797;&#21033;&#22120;&#65292;&#20063;&#24320;&#21457;&#20102;&#29420;&#31435;&#24212;&#29992;&#12290;</p><h2 id="nav_point_140">9.3&#12288;Spring MVC &#30340;&#35270;&#22270;&#26426;&#21046;</h2><p>&#22312;&#25511;&#21046;&#22120;&#22788;&#29702;&#23436;&#35831;&#27714;&#20043;&#21518;&#65292;&#38656;&#35201;&#21521;&#21069;&#31471;&#26469;&#21576;&#29616;&#26368;&#32456;&#30340;&#32467;&#26524;&#65292;&#36825;&#26102;&#23601;&#20250;&#28041;&#21450;&#35270;&#22270;&#30340;&#35299;&#26512;&#65292;&#20197;&#21450;&#35299;&#26512;&#24471;&#21040;&#30340;&#35270;&#22270;&#30340;&#26368;&#32456;&#21576;&#29616;&#12290;&#36825;&#20010;&#36807;&#31243;&#24635;&#20849;&#20998;&#20026;&#19977;&#27493;&#65306;&#31532;&#19968;&#27493;&#65292;&#24471;&#21040;&#35270;&#22270;&#21517;&#65307;&#31532;&#20108;&#27493;&#65292;&#26681;&#25454;&#35270;&#22270;&#21517;&#33719;&#21462;&#23545;&#24212;&#30340;&#35270;&#22270;&#23545;&#35937;&#65307;&#31532;&#19977;&#27493;&#65292;&#36890;&#36807;&#35270;&#22270;&#23545;&#35937;&#21576;&#29616;&#35270;&#22270;&#12290;&#26368;&#21518;&#19968;&#27493;&#30340;&#23454;&#29616;&#19982;&#20855;&#20307;&#30340;&#35270;&#22270;&#25216;&#26415;&#26377;&#20851;&#65292;&#36825;&#37324;&#23601;&#19981;&#20877;&#35814;&#32454;&#23637;&#24320;&#65292;&#25105;&#20204;&#23558;&#20851;&#27880;&#30340;&#37325;&#28857;&#25918;&#22312;&#21069;&#20004;&#27493;&#19978;&#12290;</p><h3 id="nav_point_141">9.3.1&#12288;&#35270;&#22270;&#35299;&#26512;</h3><p>&#22312;&#35752;&#35770;&#25511;&#21046;&#22120;&#30340;&#26041;&#27861;&#23450;&#20041;&#26102;&#65292;&#25105;&#20204;&#32842;&#21040;&#26377;&#22914;&#19979;&#20960;&#31181;&#24120;&#29992;&#30340;&#36820;&#22238;&#20540;&#33021;&#25351;&#23450;&#35270;&#22270;&#21517;&#31216;&#65292;&#21363; <code>String</code>&#12289;<code>ModelAndView</code> &#21644; <code>View</code>&#65292;&#36825;&#19977;&#31181;&#31867;&#22411;&#37117;&#30452;&#25509;&#25351;&#23450;&#20102;&#35270;&#22270;&#12290;&#22312;&#27809;&#26377;&#26126;&#30830;&#25351;&#23450;&#30340;&#24773;&#20917;&#19979;&#65292;<code>DispatcherServlet</code> &#20250;&#23581;&#35797;&#26681;&#25454;&#35831;&#27714;&#35774;&#32622;&#40664;&#35748;&#30340;&#35270;&#22270;&#65292;&#36825;&#39033;&#24037;&#20316;&#26159;&#30001; <code>RequestToViewNameTranslator</code> &#25509;&#21475;&#26469;&#23454;&#29616;&#30340;&#12290;</p><p><code>DispatcherServlet</code> &#22312;&#21021;&#22987;&#21270;&#26102;&#65292;&#20250;&#20808;&#23581;&#35797;&#20174;&#19978;&#19979;&#25991;&#20013;&#26597;&#25214;&#21517;&#31216;&#20026; <code>viewNameTranslator</code> &#30340; Bean&#65292;&#27809;&#26377;&#25214;&#21040;&#30340;&#35805;&#23601;&#21021;&#22987;&#21270;&#19968;&#20010; <code>DefaultRequestToViewNameTranslator</code> &#23454;&#20363;&#12290;&#23427;&#30340;&#36923;&#36753;&#38750;&#24120;&#31616;&#21333;&#65292;&#21435;&#25481; URI &#37324;&#24320;&#22836;&#21644;&#32467;&#23614;&#30340;&#26012;&#26464;&#65292;&#20197;&#21450;&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#21097;&#19979;&#30340;&#37096;&#20998;&#25340;&#19978;&#25351;&#23450;&#30340;&#21069;&#21518;&#32512;&#20316;&#20026;&#35270;&#22270;&#21517;&#36820;&#22238;&#12290;</p><p>&#26377;&#20102;&#35270;&#22270;&#21517;&#20043;&#21518;&#65292;&#23601;&#35813;&#26681;&#25454;&#23427;&#26469;&#35299;&#26512;&#20986;&#35270;&#22270;&#23545;&#35937;&#20102;&#65292;&#36825;&#20010;&#27493;&#39588;&#20381;&#38752; <code>ViewResolver</code> &#26469;&#23454;&#29616;&#65292;&#22270; 9-7<span class="&#27880;&#37322;&#32534;&#21495;">13</span> &#23637;&#31034;&#20102;&#35813;&#25509;&#21475;&#21450;&#20854;&#37096;&#20998;&#23454;&#29616;&#31867;&#30340;&#20851;&#31995;&#65292;&#34920; 9-12 &#23545;&#20854;&#20013;&#30340;&#19968;&#20123;&#31867;&#20570;&#20102;&#35828;&#26126;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">13</span>&#22270;&#20013;&#30340;&#34394;&#32447;&#26159;&#23545;&#25509;&#21475;&#30340;&#23454;&#29616;&#65292;&#23454;&#32447;&#26159;&#23545;&#31867;&#30340;&#32487;&#25215;&#12290;</p><p class="&#22270;"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00776.jpeg"/></p><p class="p-img-title"><strong>&#22270; 9-7&#12288;<code>ViewResolver</code> &#21450;&#20854;&#37096;&#20998;&#23454;&#29616;&#31867;&#30340;&#20851;&#31995;</strong></p><p><strong>&#34920; 9-12&#12288;<code>ViewResolver</code> &#30340;&#37096;&#20998;&#23454;&#29616;&#31867;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#31867;&#21517;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>BeanNameViewResolver</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#23558;&#35270;&#22270;&#21517;&#31216;&#20316;&#20026; Bean &#21517;&#31216;&#22312;&#19978;&#19979;&#25991;&#20013;&#26597;&#25214;&#35270;&#22270;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ContentNegotiatingViewResolver</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25903;&#25345;&#20869;&#23481;&#21327;&#21830;&#30340;&#35270;&#22270;&#35299;&#26512;&#22120;&#65292;&#21487;&#20197;&#26681;&#25454; HTTP &#30340; <code>Accept</code> &#22836;&#25110;&#32773;&#35831;&#27714;&#21442;&#25968;&#26469;&#30830;&#23450;&#35270;&#22270;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ViewResolverComposite</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#32452;&#21512;&#35270;&#22270;&#35299;&#26512;&#22120;&#65292;&#33021;&#22815;&#25353;&#29031;&#25351;&#23450;&#39034;&#24207;&#36880;&#19968;&#36827;&#34892;&#35270;&#22270;&#21517;&#30340;&#21305;&#37197;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>UrlBasedViewResolver</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#22522;&#20110; URL &#36827;&#34892;&#35270;&#22270;&#35299;&#26512;&#30340;&#35299;&#26512;&#22120;&#12290;&#38500;&#20102;&#35299;&#26512;&#27491;&#24120;&#30340;&#35270;&#22270;&#20043;&#22806;&#65292;&#22914;&#26524;&#35270;&#22270;&#21517;&#20013;&#21253;&#21547; <code>redirect:</code> &#21644; <code>forward:</code> &#21069;&#32512;&#65292;&#23427;&#36824;&#20250;&#20570;&#19968;&#20123;&#29305;&#27530;&#30340;&#22788;&#29702;&#65292;&#21069;&#32773;&#26159;&#23458;&#25143;&#31471;&#30340;&#37325;&#23450;&#21521;&#65292;&#30456;&#24403;&#20110; HTTP 302 &#36339;&#36716;&#65307;&#21518;&#32773;&#26159;&#26381;&#21153;&#31471;&#30340;&#37325;&#23450;&#21521;&#65292;&#23454;&#38469;&#26159;&#20570;&#20102;&#19968;&#27425; <code>RequestDispatcher.forward()</code> &#25805;&#20316;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>AbstractTemplateViewResolver</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#38024;&#23545;&#27169;&#26495;&#30340;&#35299;&#26512;&#22120;&#25277;&#35937;&#31867;&#65292;FreeMarker&#12289;Velocity &#36825;&#20123;&#27169;&#26495;&#30340;&#35299;&#26512;&#22120;&#37117;&#26159;&#20854;&#23454;&#29616;&#31867;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>InternalResourceViewResolver</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#20869;&#32622;&#36164;&#28304;&#35270;&#22270;&#35299;&#26512;&#22120;&#65292;&#29992;&#20110; JSP &#21644; JSTL &#22914;&#26524;&#27809;&#26377;&#29305;&#27530;&#22788;&#29702;&#65292;&#36825;&#20010;&#35299;&#26512;&#22120;&#26159;&#29992;&#26469;&#8220;&#20828;&#24213;&#8221;&#30340;</p></td>
</tr>
</tbody>
</table><p>Spring Boot &#30340; <code>WebMvcAutoConfiguration</code> &#33258;&#21160;&#37197;&#32622;&#31867;&#40664;&#35748;&#25552;&#20379;&#20102; <code>InternalResourceViewResolver</code>&#12289;<code>BeanNameViewResolver</code> &#21644; <code>ContentNegotiatingViewResolver</code> &#30340; Bean &#37197;&#32622;&#65292;&#22914;&#26524;&#23384;&#22312;&#21487;&#20197;&#25903;&#25345;&#30340;&#27169;&#26495;&#24341;&#25806;&#65292;&#20063;&#20250;&#20570;&#23545;&#24212;&#30340;&#22788;&#29702;&#65292;&#21518;&#38754;&#30340;&#24120;&#29992;&#35270;&#22270;&#37096;&#20998;&#20250;&#20877;&#23637;&#24320;&#12290;</p><p>&#22312; <code>WebMvcConfigurationSupport</code> &#37324;&#20854;&#23454;&#20063;&#26377;&#35270;&#22270;&#35299;&#26512;&#22120;&#30456;&#20851;&#30340;&#36923;&#36753;&#65292;<code>mvcViewResolver()</code> &#20013;&#36890;&#36807; <code>ViewResolverRegistry</code> &#26469;&#25910;&#38598;&#37197;&#32622;&#19978;&#19979;&#25991;&#37324;&#30340;&#35270;&#22270;&#35299;&#26512;&#22120;&#65292;&#38543;&#21518;&#21019;&#24314;&#20102;&#19968;&#20010; <code>ViewResolverComposite</code>&#65292;&#25353;&#39034;&#24207;&#23581;&#35797;&#35299;&#26512;&#26368;&#21512;&#36866;&#30340;&#35270;&#22270;&#12290;</p><h3 id="nav_point_142">9.3.2&#12288;&#24120;&#29992;&#35270;&#22270;&#31867;&#22411;</h3><p>Spring MVC &#25903;&#25345;&#22810;&#31181;&#19981;&#21516;&#30340;&#35270;&#22270;&#65292;&#20363;&#22914;&#65292;&#27169;&#26495;&#35821;&#35328; Thymeleaf&#12289;FreeMarker&#12289;Groovy Markup &#31561;&#65292;&#21482;&#35201;&#26159;&#25903;&#25345; JSR-223 &#30340;&#33050;&#26412;&#24341;&#25806;&#65288;Nashron&#12289;JRuby&#12289;Jython &#31561;&#65289;&#65292;Spring MVC &#37117;&#33021;&#27491;&#30830;&#22320;&#23558;&#33050;&#26412;&#32467;&#26524;&#20316;&#20026;&#35270;&#22270;&#65307;&#27492;&#22806;&#65292;&#36824;&#25903;&#25345; PDF&#12289;Excel&#12289;RSS &#21644; Atom&#65292;&#19978;&#25991;&#20063;&#25552;&#21040;&#20102; JSP &#19982; JSTL&#65307;&#22914;&#26524;&#26159;&#20316;&#20026; REST &#26381;&#21153;&#65292;&#36824;&#20250;&#32463;&#24120;&#29992;&#21040; JSON &#21644; XML &#26469;&#20316;&#20026;&#21709;&#24212;&#65292;Spring MVC &#23545;&#20027;&#27969;&#30340; JSON &#21644; XML &#30340;&#24211;&#20063;&#26377;&#24456;&#22909;&#30340;&#25903;&#25345;&#65292;&#27604;&#22914; Jackson &#21644; Gson &#31561;&#12290;</p><p>&#20043;&#21069;&#30340;&#31456;&#33410;&#20013;&#65292;&#25105;&#20204;&#24050;&#32463;&#22810;&#27425;&#20351;&#29992;&#36807; JSON &#20102;&#65292;&#22312;&#26412;&#33410;&#20013;&#23601;&#20998;&#21035;&#20171;&#32461;&#19968;&#19979;&#22914;&#20309;&#22312; Spring MVC &#20013;&#20351;&#29992; XML &#21644; Thymeleaf &#27169;&#26495;&#12290;</p><ol>
<li><p><strong>XML</strong></p>
<p>&#22312;&#22522;&#20110; SOAP &#30340; WebService &#27969;&#34892;&#30340;&#26102;&#20505;&#65292;XML &#26159;&#20998;&#24067;&#24335;&#31995;&#32479;&#20132;&#20114;&#30340;&#37325;&#35201;&#26684;&#24335;&#20043;&#19968;&#65292;&#34429;&#28982;&#21518;&#26469;&#36234;&#26469;&#36234;&#22810;&#30340;&#31995;&#32479;&#24320;&#22987;&#20351;&#29992; JSON &#21644;&#26356;&#39640;&#25928;&#30340;&#20108;&#36827;&#21046;&#21327;&#35758;&#65288;&#20363;&#22914; Google &#30340; Protobuf&#65289;&#36827;&#34892;&#20132;&#20114;&#65292;&#20294; XML &#30340;&#22320;&#20301;&#20381;&#28982;&#21313;&#20998;&#37325;&#35201;&#12290;</p>
<p>Spring MVC &#20013;&#20869;&#32622;&#20102;&#23545; Jackson XML &#30340;&#25903;&#25345;&#65292;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#23427;&#26469;&#24207;&#21015;&#21270; XML&#12290;<code>MappingJackson2XmlView</code> &#19982; <code>MappingJackson2JsonView</code> &#37117;&#26159;&#32487;&#25215;&#33258; <code>AbstractJackson2View</code> &#30340;&#65292;&#25317;&#26377;&#20960;&#20046;&#19968;&#33268;&#30340;&#22788;&#29702;&#36923;&#36753;&#65292;&#21482;&#26159;&#36755;&#20986;&#30340; <code>Content-Type</code> &#19981;&#21516;&#12290;&#23427;&#20204;&#20250;&#22312;&#20195;&#34920;&#36820;&#22238; Model &#30340; <code>Map</code> &#20013;&#26597;&#25214;&#38190;&#20026; <code>JsonView.class.getName()</code> &#23545;&#24212;&#30340;&#23545;&#35937;&#65292;&#28982;&#21518;&#23545;&#20854;&#20570;&#24207;&#21015;&#21270;&#36755;&#20986;&#12290;</p>
<p>&#22312; 9.2.1 &#33410;&#20013;&#65292;&#25105;&#20204;&#36824;&#20171;&#32461;&#36807;&#28155;&#21152;&#20102; <code>@ResponseBody</code> &#27880;&#35299;&#30340;&#26041;&#27861;&#65292;&#20854;&#36820;&#22238;&#20540;&#20250;&#30452;&#25509;&#34987; <code>HttpMessageConverter</code> &#24207;&#21015;&#21270;&#20026;&#23545;&#24212;&#30340;&#26684;&#24335;&#65292;&#26080;&#39035;&#20877;&#36890;&#36807;&#19968;&#31995;&#21015;&#35270;&#22270;&#35299;&#26512;&#21644;&#21576;&#29616;&#30340;&#36807;&#31243;&#65288;&#20063;&#23601;&#26159;<strong>&#21644;&#35270;&#22270;&#27809;&#20160;&#20040;&#20851;&#31995;</strong>&#65289;&#65292;&#20004;&#31181;&#26041;&#24335;&#20854;&#23454;&#37117;&#33021;&#24110;&#25105;&#20204;&#23454;&#29616;&#30456;&#21516;&#30340;&#30446;&#30340;&#12290;&#22312;&#21069;&#21518;&#31471;&#20998;&#31163;&#12289;&#21518;&#31471;&#20197;&#25552;&#20379; REST &#26381;&#21153;&#20026;&#20027;&#30340;&#22823;&#21069;&#25552;&#19979;&#65292;&#36825;&#31181;&#26041;&#24335;&#20284;&#20046;&#20351;&#29992;&#24471;&#26356;&#22810;&#19968;&#20123;&#12290;</p>
<p>&#25105;&#20204;&#21487;&#20197;&#22312; pom.xml &#20013;&#20687;&#19979;&#38754;&#36825;&#26679;&#21152;&#20837; Jackson &#30340; XML &#26684;&#24335;&#25903;&#25345;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;
    &lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>Spring Boot &#30340; <code>JacksonHttpMessageConvertersConfiguration</code> &#37197;&#32622;&#31867;&#20250;&#24110;&#21161;&#25105;&#20204;&#22788;&#29702;&#21097;&#19979;&#30340;&#24037;&#20316;&#65292;&#20687;&#19979;&#38754;&#36825;&#26679;&#65292;&#22312; CLASSPATH &#37324;&#26377; <code>XmlMapper</code> &#31867;&#65292;&#19978;&#19979;&#25991;&#37324;&#23384;&#22312; <code>Jackson2ObjectMapperBuilder</code> &#31867;&#22411;&#30340; Bean &#26102;&#65292;&#20026;&#25105;&#20204;&#21019;&#24314;&#19968;&#20010; <code>MappingJackson2XmlHttpMessageConverter</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnClass(XmlMapper.class)
@ConditionalOnBean(Jackson2ObjectMapperBuilder.class)
protected static class MappingJackson2XmlHttpMessageConverterConfiguration {
    @Bean
    @ConditionalOnMissingBean
    public MappingJackson2XmlHttpMessageConverter mappingJackson2XmlHttpMessageConverter(
        Jackson2ObjectMapperBuilder builder) {
        return new MappingJackson2XmlHttpMessageConverter(builder.createXmlMapper(true).build());
    }
}</code></pre>
<p>&#20195;&#30721;&#37096;&#20998;&#26080;&#39035;&#20219;&#20309;&#25913;&#21160;&#65292;&#25105;&#20204;&#23601;&#21487;&#20197;&#35753; binarytea-form-controller &#36825;&#20010;&#20363;&#23376;&#26681;&#25454;&#35831;&#27714;&#30340; <code>Accept</code> &#22836;&#26469;&#25351;&#23450;&#36820;&#22238; JSON &#36824;&#26159; XML&#12290;&#38500;&#20102;&#19979;&#38754;&#36825;&#20010;&#26041;&#27861;&#65292;&#20854;&#20182;&#37117;&#33021;&#30452;&#25509;&#25903;&#25345;&#36820;&#22238; XML&#65292;&#22240;&#20026;&#25105;&#20204;&#22312; <code>produces</code> &#37324;&#25351;&#23450;&#20102;&#21482;&#25903;&#25345;&#36820;&#22238; JSON&#65292;&#21487;&#20197;&#21435;&#25481;&#36825;&#20010;&#38480;&#21046;&#65292;&#25110;&#32773;&#23558;&#20854;&#25913;&#20026; <code>{MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE}</code>&#65292;&#21516;&#26102;&#25903;&#25345;&#20004;&#31181;&#26684;&#24335;&#12290;&#19968;&#33324;&#22914;&#26524;&#27809;&#26377;&#29305;&#27530;&#30340;&#35201;&#27714;&#65292;&#19981;&#22826;&#20250;&#38480;&#21046;&#36820;&#22238;&#31867;&#22411;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@GetMapping(path = "/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
public Optional&lt;MenuItem&gt; getById(@PathVariable Long id) {}</code></pre>
<p>&#22312; Postman &#20013;&#65292;&#25105;&#20204;&#21487;&#20197;&#20687;&#22270; 9-8 &#37027;&#26679;&#26469;&#25351;&#23450; <code>Accept</code> &#22836;&#65292;Postman &#20250;&#33258;&#21160;&#29983;&#25104;&#19968;&#20123;&#22836;&#65292;&#19988;&#19981;&#20801;&#35768;&#20462;&#25913;&#65292;&#25152;&#20197;&#25105;&#20204;&#25226;&#33258;&#21160;&#29983;&#25104;&#30340; <code>Accept</code> &#21435;&#25481;&#65292;&#25163;&#21160;&#28155;&#21152;&#19968;&#20010;&#20540;&#20026; <code>application/xml</code> &#30340; <code>Accept</code> &#22836;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00777.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-8&#12288;&#22312; Postman &#20013;&#25351;&#23450;&#35831;&#27714;&#30340; <code>Accept</code> &#22836;</strong></p>
<p>&#19978;&#36848;&#35831;&#27714;&#36820;&#22238;&#30340;&#23601;&#26159;&#19968;&#27573; XML&#65292;&#22823;&#27010;&#20250;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;List&gt;
    &lt;item&gt;
        &lt;id&gt;1&lt;/id&gt;
        &lt;name&gt;Java&#21654;&#21857;&lt;/name&gt;
        &lt;size&gt;MEDIUM&lt;/size&gt;
        &lt;price&gt;
            &lt;amount&gt;12.00&lt;/amount&gt;
            &lt;currency&gt;CNY&lt;/currency&gt;
        &lt;/price&gt;
        &lt;createTime&gt;2020-11-30T12:08:08.545+00:00&lt;/createTime&gt;
        &lt;updateTime&gt;2020-11-30T12:08:08.545+00:00&lt;/updateTime&gt;
    &lt;/item&gt;
    &lt;!-- &#30465;&#30053;&#20854;&#20182;&#37096;&#20998; --&gt;
&lt;/List&gt;</code></pre>
<p>&#22914;&#26524;&#26126;&#30830;&#24076;&#26395;&#36820;&#22238; JSON &#26684;&#24335;&#65292;&#21487;&#20197;&#23558; <code>Accept</code> &#22836;&#35774;&#32622;&#20026; <code>application/json</code>&#12290;&#22312;&#27809;&#26377;&#35774;&#32622;&#65292;&#25110;&#32773;&#23558; <code>Accept</code> &#35774;&#32622;&#20026; <code>*/*</code> &#26102;&#65292;&#21017;&#20250;&#26681;&#25454;&#21487;&#20135;&#29983;&#30340;&#24212;&#31572;&#31867;&#22411;&#65292;&#36873;&#25321;&#31532;&#19968;&#39034;&#20301;&#30340;&#37027;&#20010;&#26469;&#20570;&#36755;&#20986;&#12290;</p>
<p>&#36890;&#36807; Accept &#22836;&#26469;&#20570;&#36873;&#25321;&#26377;&#26102;&#19981;&#22826;&#26041;&#20415;&#65292;Spring Boot &#36824;&#20026;&#25105;&#20204;&#25552;&#20379;&#20102;&#21478;&#22806;&#30340;&#36884;&#24452;&#65292;&#22312; <code>application.properties</code> &#37324;&#36827;&#34892;&#22914;&#19979;&#37197;&#32622;&#65292;&#21487;&#20197;&#26681;&#25454; <code>URL</code> &#21518;&#30340; <code>format</code> &#21442;&#25968;&#65288;&#36825;&#20010;&#21442;&#25968;&#40664;&#35748;&#30340;&#21517;&#23383;&#26159; <code>format</code>&#65289;&#26469;&#35774;&#32622;&#38656;&#35201;&#30340;&#26684;&#24335;&#65292;&#20363;&#22914;&#65306;<code>http://localhost:8080/menu?format=xml</code>&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.parameter-name=format</code></pre>
<p>&#20063;&#21487;&#20197;&#25442;&#31181;&#26041;&#24335;&#65292;&#20687;&#19979;&#38754;&#36825;&#26679;&#37197;&#32622;&#65292;&#30452;&#25509;&#22312; URL &#37324;&#28155;&#21152;&#25991;&#20214;&#30340;&#21518;&#32512;&#65292;&#19978;&#38754;&#30340;&#35831;&#27714; URL &#23601;&#21464;&#25104;&#20102; <code>http://localhost:8080/menu.xml</code>&#12290;&#19981;&#36807;&#29616;&#22312; Spring Boot &#20013;&#36825;&#20004;&#20010;&#21442;&#25968;&#24050;&#32463;&#34987;&#25171;&#19978;&#20102; <code>@Deprecated</code> &#27880;&#35299;&#65292;&#19981;&#20877;&#25512;&#33616;&#20351;&#29992;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.mvc.contentnegotiation.favor-path-extension=true
spring.mvc.pathmatch.use-registered-suffix-pattern=true</code></pre>
<p>Spring Boot &#40664;&#35748;&#30340;&#25512;&#33616;&#39034;&#24207;&#26159;&#20248;&#20808;&#20351;&#29992; <code>Accept</code> &#22836;&#65292;&#36890;&#36807;&#37197;&#32622;&#21487;&#20197;&#24320;&#21551; <code>format</code> &#21442;&#25968;&#30340;&#25903;&#25345;&#65292;&#19981;&#24314;&#35758;&#20351;&#29992;&#21518;&#32512;&#21517;&#30340;&#26041;&#24335;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>Thymeleaf</strong></p>
<p>JSON &#19982; XML &#21487;&#33021;&#26356;&#22810;&#22320;&#36824;&#26159;&#36890;&#36807; <code>HttpMessageConverter</code> &#26469;&#20570;&#36755;&#20986;&#65292;&#22522;&#20110;&#27169;&#26495;&#30340;&#21576;&#29616;&#23601;&#24517;&#39035;&#20351;&#29992;&#35270;&#22270;&#30456;&#20851;&#30340;&#25216;&#26415;&#20102;&#12290;&#35828;&#21040;&#27169;&#26495;&#24341;&#25806;&#65292;&#26089;&#26399; Apache Velocity &#38750;&#24120;&#27969;&#34892;&#65292;&#20294;&#21518;&#26469;&#22240;&#20026;&#19968;&#30452;&#32570;&#23569;&#32500;&#25252;&#65292;&#23601;&#36880;&#27493;&#28129;&#20986;&#20102;&#20154;&#20204;&#30340;&#35270;&#37326;&#65292;Spring MVC &#20013;&#20063;&#23558;&#23427;&#30452;&#25509;&#25490;&#38500;&#25481;&#20102;&#12290;&#27492;&#22806;&#65292;&#20197;&#21069;&#27604;&#36739;&#27969;&#34892;&#30340;&#27169;&#26495;&#24341;&#25806;&#36824;&#26377; FreeMarker&#12290;&#19982;&#21069;&#20004;&#20301;&#30456;&#27604;&#65292;Thymeleaf &#31639;&#26159;&#19968;&#20010;&#21518;&#36215;&#20043;&#31168;&#65292;&#23427;&#24212;&#35813;&#31639;&#26159;&#38754;&#21521; HTML &#30340;&#27169;&#26495;&#65292;&#26368;&#22823;&#30340;&#22909;&#22788;&#26159;&#21487;&#20197;&#22312;&#19981;&#29992;&#26381;&#21153;&#31471;&#30340;&#24773;&#20917;&#19979;&#65292;&#30452;&#25509;&#36890;&#36807;&#27983;&#35272;&#22120;&#39044;&#35272;&#21040;&#27169;&#26495;&#30340;&#21576;&#29616;&#25928;&#26524;&#65292;&#26356;&#37325;&#35201;&#30340;&#26159;&#30446;&#21069;&#23427;&#36824;&#38750;&#24120;&#27963;&#36291;&#65292;&#25345;&#32493;&#26377;&#20154;&#22312;&#23545;&#36825;&#20010;&#39033;&#30446;&#36827;&#34892;&#32500;&#25252;&#12290;</p>
<p>Spring Boot &#30340;&#39033;&#30446;&#20013;&#65292;&#21482;&#38656;&#22312; pom.xml &#20013;&#24341;&#20837; Thymeleaf &#20381;&#36182;&#65292;&#30456;&#20851;&#37197;&#32622;&#37117;&#21487;&#20197;&#20132;&#30001;&#30456;&#20851;&#30340; <code>ThymeleafAutoConfiguration</code> &#33258;&#21160;&#37197;&#32622;&#31867;&#26469;&#23436;&#25104;&#65292;&#20363;&#22914;&#37197;&#32622; <code>SpringResourceTemplateResolver</code>&#12289;<code>SpringTemplateEngine</code> &#21644; <code>ThymeleafViewResolver</code> &#31561;&#19968;&#31995;&#21015;&#30340; Bean&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>&#25152;&#38656;&#35201;&#30340;&#27169;&#26495;&#25991;&#20214;&#40664;&#35748;&#25918;&#22312; src/main/resources/templates &#30446;&#24405;&#37324;&#65292;&#36825;&#20010;&#20301;&#32622;&#21487;&#20197;&#36890;&#36807;&#37197;&#32622;&#25991;&#20214;&#20013;&#30340;&#37197;&#32622;&#36827;&#34892;&#35843;&#25972;&#65292;&#34920; 9-13 &#23601;&#32599;&#21015;&#20102; Spring Boot &#20013;&#20851;&#20110; Thymeleaf &#30340;&#19968;&#20123;&#24120;&#29992;&#37197;&#32622;&#12290;</p>
<p><strong>&#34920; 9-13&#12288;Spring Boot &#20851;&#20110; Thymeleaf &#30340;&#19968;&#20123;&#24120;&#29992;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.thymeleaf.enabled</code></td><td><code>true</code></td><td>&#26159;&#21542;&#24320;&#21551; Thymeleaf &#25903;&#25345;</td></tr><tr><td><code>spring.thymeleaf.encoding</code></td><td><code>UTF-8</code></td><td>&#27169;&#26495;&#30340;&#32534;&#30721;&#26684;&#24335;</td></tr><tr><td><code>spring.thymeleaf.prefix</code></td><td><code>classpath:/templates/</code></td><td>&#25340;&#25509;&#35270;&#22270;&#27169;&#26495;&#36335;&#24452;&#26102;&#30340;&#21069;&#32512;&#65292;&#27169;&#26495;&#25991;&#20214;&#20301;&#32622;&#23601;&#26159;&#36890;&#36807;&#23427;&#26469;&#35774;&#32622;&#30340;</td></tr><tr><td><code>spring.thymeleaf.suffix</code></td><td><code>.html</code></td><td>&#25340;&#25509;&#35270;&#22270;&#27169;&#26495;&#36335;&#24452;&#26102;&#30340;&#21518;&#32512;</td></tr><tr><td><code>spring.thymeleaf.mode</code></td><td><code>HTML</code></td><td>&#27169;&#26495;&#25152;&#24212;&#29992;&#30340;&#27169;&#24335;&#65292;&#26377; 6 &#31181;&#27169;&#24335;&#65292;&#20855;&#20307;&#35265; Thymeleaf &#30340; <code>TemplateMode</code> &#26522;&#20030;&#31867;</td></tr><tr><td><code>spring.thymeleaf.cache</code></td><td><code>true</code></td><td>&#26159;&#21542;&#24320;&#21551;&#27169;&#26495;&#25991;&#20214;&#32531;&#23384;&#65292;&#22312;&#24320;&#21457;&#26102;&#21487;&#20197;&#35774;&#32622;&#20026; <code>false</code>&#65292;&#26041;&#20415;&#20462;&#25913;&#21518;&#31435;&#21363;&#29983;&#25928;</td></tr><tr><td><code>spring.thymeleaf.check-template</code></td><td><code>true</code></td><td>&#22312;&#21576;&#29616;&#35270;&#22270;&#21069;&#26816;&#26597;&#27169;&#26495;&#25991;&#20214;&#26159;&#21542;&#23384;&#22312;</td></tr><tr><td><code>spring.thymeleaf.check-template-location</code></td><td><code>true</code></td><td>&#26816;&#26597;&#27169;&#26495;&#25991;&#20214;&#36335;&#24452;&#26159;&#21542;&#23384;&#22312;</td></tr><tr><td><code>spring.thymeleaf.servlet.content-type</code></td><td><code>text/html</code></td><td>HTTP &#24212;&#31572;&#26102;&#20351;&#29992;&#30340; <code>Content-Type</code></td></tr></table>
<p>&#30446;&#21069; Spring Boot &#19968;&#20849;&#25903;&#25345;&#22235;&#31181;&#27169;&#26495;&#24341;&#25806;&#65292;&#20998;&#21035;&#26159; FreeMaker&#12289;Groovy&#12289;Mustache &#21644; Thyemleaf&#65292;&#23427;&#20204;&#30340;&#20351;&#29992;&#26041;&#24335;&#22823;&#21516;&#23567;&#24322;&#12290;&#19979;&#38754;&#65292;&#35753;&#25105;&#20204;&#36890;&#36807;&#19968;&#20010;&#20363;&#23376;&#26469;&#35814;&#32454;&#20102;&#35299;&#19979;&#22914;&#20309;&#22312;&#39033;&#30446;&#20013;&#20351;&#29992; Thyemleaf &#32534;&#20889; Web &#39029;&#38754;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#22902;&#33590;&#24215;&#24046;&#19981;&#22810;&#21487;&#20197;&#27491;&#24335;&#23545;&#22806;&#33829;&#19994;&#20102;&#65292;&#20294;&#20809;&#26377;&#33756;&#21333;&#21487;&#19981;&#22815;&#65292;&#39038;&#23458;&#30475;&#20102;&#33756;&#21333;&#24635;&#24471;&#35201;&#33021;&#28857;&#21333;&#21543;&#65311;&#36825;&#23601;&#38656;&#35201;&#26377;&#20010;&#21487;&#20197;&#25805;&#20316;&#30340;&#30028;&#38754;&#65292;&#35753;&#26381;&#21153;&#21592;&#33021;&#20570;&#20123;&#25163;&#21160;&#19979;&#21333;&#30340;&#25805;&#20316;&#12290;&#20026;&#20102;&#28385;&#36275;&#36825;&#20010;&#38656;&#27714;&#65292;&#25105;&#20204;&#21487;&#20197;&#35774;&#35745;&#19968;&#20010;&#19979;&#21333;&#39029;&#38754;&#65292;&#35753;&#26381;&#21153;&#21592;&#21487;&#20197;&#22312;&#39029;&#38754;&#20013;&#21246;&#36873;&#39038;&#23458;&#35746;&#21333;&#20013;&#21253;&#21547;&#30340;&#39278;&#21697;&#65292;&#21516;&#26102;&#22312;&#39029;&#38754;&#36824;&#21487;&#20197;&#23637;&#31034;&#25152;&#26377;&#30340;&#35746;&#21333;&#12290;&#27492;&#22806;&#65292;&#24403;&#35746;&#21333;&#22635;&#20889;&#26377;&#38382;&#39064;&#26102;&#65292;&#36824;&#35201;&#33021;&#25552;&#31034;&#20855;&#20307;&#30340;&#38169;&#35823;&#12290;</p>
</blockquote>
<p>&#22312;&#24320;&#22987;&#32534;&#20889;&#30456;&#20851;&#30340;&#25511;&#21046;&#22120;&#21069;&#65292;&#20808;&#20570;&#20123;&#22522;&#26412;&#30340;&#20934;&#22791;&#24037;&#20316;&#65292;&#19982;&#33756;&#21333;&#31867;&#20284;&#65292;&#25105;&#20204;&#38656;&#35201;&#20934;&#22791;&#19968;&#20010;&#35746;&#21333;&#30340; <code>Service</code> &#31867;&#65292;&#25552;&#20379;&#26597;&#35810;&#25152;&#26377;&#35746;&#21333;&#36824;&#26377;&#21019;&#24314;&#35746;&#21333;&#30340;&#26041;&#27861;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-16 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-16</strong>&#12288;&#25552;&#20379;&#35746;&#21333;&#30456;&#20851;&#26381;&#21153;&#30340; <code>OrderService</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Transactional
public class OrderService {
    @Autowired
    private OrderRepository orderRepository;

    public List&lt;Order&gt; getAllOrders() {
        return orderRepository.findAll();
    }
    // &#20256;&#20837;&#35746;&#21333;&#20869;&#23481;&#23545;&#24212;&#30340;MenuItem&#65292;&#20197;&#21450;&#25972;&#21333;&#25240;&#25187;
    public Order createOrder(List&lt;MenuItem&gt; itemList, int discount) {
        Money total = itemList.stream().map(i -&gt; i.getPrice()).collect(Collectors.collectingAndThen
                (Collectors.toList(),l -&gt; Money.total(l)));
        Money pay = total.multipliedBy(discount / 100d, RoundingMode.HALF_DOWN);

        Amount amount = Amount.builder().discount(discount).totalAmount(total).payAmount(pay).build();
        Order order = Order.builder().amount(amount).status(OrderStatus.ORDERED).items(itemList).build();
        return orderRepository.save(order);
    }
}</code></pre>
<p>&#20855;&#20307;&#30340;&#35746;&#21333;&#25511;&#21046;&#22120;&#22914;&#20195;&#30721;&#31034;&#20363; 9-17 &#25152;&#31034;&#65292;&#22788;&#29702;&#22120;&#26144;&#23556;&#21040; <code>/order</code>&#65292;&#20027;&#35201;&#30001;&#20197;&#19979;&#20960;&#20010;&#37096;&#20998;&#32452;&#25104;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#25972;&#20010;&#25511;&#21046;&#22120;&#30340;&#26041;&#27861;&#22312;&#22788;&#29702;&#26102;&#20844;&#29992;&#30340; <code>@ModelAttribute</code>&#65292;&#29992;&#26469;&#23384;&#25918;&#33756;&#21333;&#20869;&#23481;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22788;&#29702; <code>/order</code> &#30340; <code>GET</code> &#35831;&#27714;&#30340;&#26041;&#27861;&#65292;&#36820;&#22238; <code>ModelAndView</code>&#65292;&#25351;&#23450;&#20351;&#29992; <code>order</code> &#35270;&#22270;&#65292;&#36824;&#21521; Model &#20013;&#35774;&#32622;&#20102;&#20004;&#20010;&#23646;&#24615;&#65292;&#31532;&#19968;&#20010;&#19981;&#25351;&#23450;&#21517;&#23383;&#65292;&#20250;&#29992;&#38750;&#20840;&#38480;&#23450;&#24615;&#31867;&#21517;&#65292;&#39318;&#23383;&#27597;&#23567;&#20889;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22788;&#29702; <code>/order</code> &#30340; <code>POST</code> &#35831;&#27714;&#30340;&#26041;&#27861;&#65292;&#25910;&#21040;&#30340;&#34920;&#21333;&#32465;&#23450;&#21518;&#36824;&#20250;&#36827;&#34892;&#26657;&#39564;&#65292;&#26681;&#25454;&#34920;&#21333;&#37324;&#30340; ID &#33719;&#21462; <code>MenuItem</code> &#20877;&#21435;&#35843;&#29992;&#21019;&#24314;&#35746;&#21333;&#30340;&#26041;&#27861;&#65292;&#36825;&#20010;&#26041;&#27861;&#30452;&#25509;&#36820;&#22238;&#35270;&#22270;&#21517;&#31216;&#65292;&#25152;&#38656;&#30340; Model &#20869;&#23481;&#30001;&#26041;&#27861;&#21442;&#25968;&#37324;&#30340; <code>modelMap</code> &#26469;&#20256;&#36882;&#12290;</li>
</ul>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-17</strong>&#12288;&#35746;&#21333;&#22788;&#29702;&#22120; <code>OrderController</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @Autowired
    private OrderService orderService;
    @Autowired
    private MenuService menuService;

    @ModelAttribute("items")
    public List&lt;MenuItem&gt; items() {
        return menuService.getAllMenu();
    }

    @GetMapping
    public ModelAndView orderPage() {
        return new ModelAndView("order").addObject(new NewOrderForm())
            .addObject("orders", orderService.getAllOrders());
    }

    @PostMapping
    public String createNewOrder(@Valid NewOrderForm form, BindingResult result,ModelMap modelMap) {
        if (result.hasErrors()) {
            modelMap.addAttribute("orders", orderService.getAllOrders());
            return "order";
        }
        List&lt;MenuItem&gt; itemList = form.getItemIdList().stream().map(i -&gt; NumberUtils.toLong(i))
            .collect(Collectors.collectingAndThen(Collectors.toList(),list -&gt; menuService.getByIdList(list)));
        Order order = orderService.createOrder(itemList, form.getDiscount());
        log.info("&#21019;&#24314;&#26032;&#35746;&#21333;&#65292;Order={}", order);
        modelMap.addAttribute("orders", orderService.getAllOrders());
        return "order";
    }
}</code></pre>
<p>&#34920;&#21333;&#23545;&#24212;&#30340; <code>NewOrderForm</code> &#22914;&#20195;&#30721;&#31034;&#20363; 9-18 &#25152;&#31034;&#65292;&#19978;&#38754;&#20570;&#20102;&#20123;&#22522;&#26412;&#30340;&#26657;&#39564;&#65292;&#25240;&#25187;&#21482;&#33021;&#22312; 50 &#21040; 100 &#30340;&#33539;&#22260;&#20869;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-18</strong>&#12288;&#26032;&#35746;&#21333;&#34920;&#21333;&#23545;&#24212;&#30340; <code>NewOrderForm</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
public class NewOrderForm {
    @NotEmpty
    private List&lt;String&gt; itemIdList;
    @Min(50)
    @Max(100)
    private int discount;
}</code></pre>
<p><code>order</code> &#35270;&#22270;&#23545;&#24212;&#20102; src/main/resources/templates/order.html &#25991;&#20214;&#12290;Thymeleaf &#30340;&#22909;&#22788;&#20043;&#19968;&#23601;&#26159;&#21487;&#20197;&#30452;&#25509;&#22312;&#27983;&#35272;&#22120;&#37324;&#30475;&#21040;&#27169;&#26495;&#25991;&#20214;&#22788;&#29702;&#21518;&#30340;&#25928;&#26524;&#65292;&#23427;&#21482;&#26159;&#22312; HTML &#20013;&#22686;&#21152;&#20102;&#19968;&#20123; <code>th</code> &#26631;&#31614;&#12290;&#20363;&#22914;&#65292;&#25105;&#20204;&#30340;&#34920;&#21333;&#20250;&#32465;&#23450;&#19978; <code>newOrderForm</code> &#23545;&#35937;&#65307;<code>th:if</code> &#21487;&#20197;&#20570;&#20123;&#21028;&#26029;&#65292;&#22312;&#26576;&#20123;&#23646;&#24615;&#26377;&#38382;&#39064;&#26102;&#26174;&#31034;&#23545;&#24212;&#30340;&#20869;&#23481;&#65307;<code>th:each</code> &#33021;&#22815;&#22788;&#29702;&#24490;&#29615;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 9-19 &#25152;&#31034;&#12290;&#20851;&#20110; Thymeleaf &#30340;&#20855;&#20307;&#35821;&#27861;&#65292;&#25105;&#20204;&#23601;&#19981;&#22312;&#36825;&#37324;&#23637;&#24320;&#20102;&#65292;&#22823;&#23478;&#21487;&#20197;&#26597;&#35810;&#23448;&#26041;&#25991;&#26723;&#20102;&#35299;&#26356;&#22810;&#32454;&#33410;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-19</strong>&#12288;&#35746;&#21333;&#39029;&#38754;&#20351;&#29992;&#30340; order.html</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="zh_CN" xmlns:th="http://www.thymeleaf.org"&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8"&gt;
        &lt;title&gt;&#20108;&#36827;&#21046;&#22902;&#33590;&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;&#20108;&#36827;&#21046;&#22902;&#33590;&lt;/h1&gt;
        &lt;h2&gt;&#19979;&#21333;&lt;/h2&gt;
        &lt;div&gt;
            &lt;form action="#" th:action="@{/order}" th:object="${newOrderForm}" method="post"&gt;
                &lt;p&gt;
                    &lt;label&gt;&#25240;&#25187;&lt;/label&gt;
                    &lt;input type="number" th:field="*{discount}" th:value="*{discount}" /&gt;
                &lt;/p&gt;
                &lt;p&gt;
                    &lt;p th:if="${#fields.hasErrors('discount')}" th:errors="*{discount}"
                        style="color:red"&gt;&#25240;&#25187;&#38169;&#35823;&lt;/p&gt;
                    &lt;label&gt;&#39278;&#26009;&lt;/label&gt;
                    &lt;ul&gt;
                        &lt;li th:each="item : ${items}"&gt;
                            &lt;input type="checkbox" th:field="*{itemIdList}" th:value="${item.id}" /&gt;
                            &lt;label th:text="${item.name}"&gt;Java&#21654;&#21857;&lt;/label&gt;
                            &lt;label th:text="${item.size}"&gt;MEDIUM&lt;/label&gt;
                            &lt;label th:text="${item.price}"&gt;CNY 12.00&lt;/label&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/p&gt;
                &lt;p th:if="${#fields.hasErrors('itemIdList')}" th:errors="*{itemIdList}"
                    style="color:red"&gt;&#28857;&#21333;&#38169;&#35823;&lt;/p&gt;
                &lt;p&gt;
                    &lt;input type="submit" value="&#25552;&#20132;"/&gt;
                &lt;/p&gt;
            &lt;/form&gt;
        &lt;/div&gt;
        &lt;h2&gt;&#35746;&#21333;&lt;/h2&gt;
        &lt;div&gt;
            &lt;table border="1px"&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;&#35746;&#21333;&#32534;&#21495;&lt;/th&gt;
                        &lt;th&gt;&#24635;&#20215;&lt;/th&gt;
                        &lt;th&gt;&#23454;&#20184;&lt;/th&gt;
                        &lt;th&gt;&#29366;&#24577;&lt;/th&gt;
                        &lt;th&gt;&#20869;&#23481;&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    &lt;tr th:each="order : ${orders}"&gt;
                        &lt;td th:text="${order.id}"&gt;1&lt;/td&gt;
                        &lt;td th:text="${order.amount.totalAmount}"&gt;CNY 12.0&lt;/td&gt;
                        &lt;td th:text="${order.amount.payAmount}"&gt;CNY 12.0&lt;/td&gt;
                        &lt;td th:text="${order.status}"&gt;ORDERED&lt;/td&gt;
                        &lt;td&gt;
                            &lt;div th:each="item : ${order.items}"&gt;
                                &lt;label th:text="${item.name}"&gt;Java&#21654;&#21857;&lt;/label&gt;-&lt;label th:text=
                                    "${item.size}"&gt;MEDIUM&lt;/label&gt;&lt;br/&gt;
                            &lt;/div&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;
                &lt;/tbody&gt;
            &lt;/table&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>&#23558;&#31243;&#24207;&#36816;&#34892;&#36215;&#26469;&#21518;&#65292;&#25105;&#20204;&#35775;&#38382; http://localhost:8080/order &#23601;&#33021;&#30475;&#21040;&#35746;&#21333;&#39029;&#38754;&#20102;&#12290;&#22914;&#26524;&#25552;&#20132;&#20102;&#19968;&#20010;&#38169;&#35823;&#30340;&#35746;&#21333;&#65292;&#20320;&#33021;&#30475;&#21040;&#22914;&#22270; 9-9 &#25152;&#31034;&#30340;&#32467;&#26524;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00778.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 9-9&#12288;&#25552;&#20132;&#38169;&#35823;&#35746;&#21333;&#21518;&#30340;&#25928;&#26524;</strong></p>
</li>
</ol><h3 id="nav_point_143">9.3.3&#12288;&#38745;&#24577;&#36164;&#28304;&#19982;&#32531;&#23384;</h3><p>&#29616;&#22312;&#22522;&#26412;&#19978;&#20013;&#22823;&#22411;&#31995;&#32479;&#37117;&#37319;&#29992;&#20102;&#21069;&#21518;&#31471;&#20998;&#31163;&#30340;&#24320;&#21457;&#27169;&#24335;&#65292;&#21069;&#21518;&#31471;&#36890;&#36807;&#25509;&#21475;&#36827;&#34892;&#20132;&#20114;&#65292;&#21069;&#31471;&#25152;&#26377;&#30340;&#36164;&#28304;&#37117;&#20250;&#25918;&#22312;&#38745;&#24577;&#36164;&#28304;&#26381;&#21153;&#22120;&#19978;&#65292;&#32780;&#19988;&#29992;&#25143;&#23545;&#38745;&#24577;&#36164;&#28304;&#30340;&#35775;&#38382;&#37117;&#20250;&#20808;&#32463;&#36807; CDN&#12290;&#20294;&#23545;&#19968;&#20123;&#23567;&#31995;&#32479;&#65292;&#21487;&#33021;&#36824;&#26159;&#20250;&#23558;&#38745;&#24577;&#36164;&#28304;&#25918;&#22312; Servlet &#23481;&#22120;&#37324;&#65292;&#24615;&#33021;&#34429;&#28982;&#19981;&#22909;&#65292;&#20294;&#21193;&#24378;&#22815;&#29992;&#23601;&#34892;&#12290;Spring MVC &#19981;&#20165;&#33021;&#22815;&#22788;&#29702;&#21160;&#24577;&#35831;&#27714;&#65292;&#20063;&#20026;&#38745;&#24577;&#36164;&#28304;&#25552;&#20379;&#20102;&#19968;&#23450;&#30340;&#25903;&#25345;&#12290;&#36825;&#19968;&#33410;&#25105;&#20204;&#23601;&#26469;&#31616;&#21333;&#20102;&#35299;&#19968;&#19979; Spring MVC &#30340;&#38745;&#24577;&#36164;&#28304;&#19982;&#32531;&#23384;&#25903;&#25345;&#12290;</p><ol>
<li><p><strong>&#38745;&#24577;&#36164;&#28304;</strong></p>
<p>&#22312; Spring Boot &#20013;&#65292;&#21487;&#20197;&#36890;&#36807;&#37197;&#32622;&#26469;&#35843;&#25972;&#38745;&#24577;&#36164;&#28304;&#30340;&#35774;&#32622;&#65292;&#30456;&#20851;&#30340;&#23646;&#24615;&#22312; <code>ResourceProperties</code> &#31867;&#20013;&#65292;&#20363;&#22914;&#34920; 9-14 &#20013;&#21015;&#20030;&#30340;&#36825;&#20123;&#12290;</p>
<p><strong>&#34920; 9-14&#12288;&#37096;&#20998;&#38745;&#24577;&#36164;&#28304;&#30456;&#20851;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.mvc.static-path-pattern</code></td><td><code>/**</code></td><td>&#38745;&#24577;&#36164;&#28304;&#26144;&#23556;&#30340;&#36335;&#24452;</td></tr><tr><td><code>spring.web.resources.static-locations</code></td><td><code>[classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/]</code></td><td>&#38745;&#24577;&#36164;&#28304;&#30340;&#23384;&#25918;&#20301;&#32622;</td></tr><tr><td><code>spring.web.resources.cache.period</code></td><td></td><td>&#38745;&#24577;&#36164;&#28304;&#30340;&#32531;&#23384;&#26102;&#38388;&#65292;&#19981;&#25351;&#23450;&#21333;&#20301;&#30340;&#35805;&#65292;&#40664;&#35748;&#20197;&#31186;&#20026;&#21333;&#20301;</td></tr></table>
<p>&#20063;&#23601;&#26159;&#35828;&#65292;&#25105;&#20204;&#21487;&#20197;&#25226;&#39033;&#30446;&#20013;&#30340;&#38745;&#24577;&#36164;&#28304;&#37117;&#25918;&#21040; CLASSPATH &#30340; /META-INF/resources/&#12289;/resources/&#12289;/static/ &#21644;/public/ &#36825;&#22235;&#20010;&#20301;&#32622;&#20013;&#65292;&#20063;&#23601;&#26159; src/main/resources &#37324;&#30340;&#22235;&#20010;&#30446;&#24405;&#65292;Spring Boot &#24050;&#32463;&#20570;&#22909;&#20102;&#37197;&#32622;&#12290;</p>
<p>&#22914;&#26524;&#27809;&#26377;&#22312; Spring Boot &#20013;&#65292;&#25110;&#32773;&#25105;&#20204;&#24076;&#26395;&#33258;&#24049;&#37197;&#32622;&#38745;&#24577;&#36164;&#28304;&#65292;&#37027;&#20063;&#21487;&#20197;&#20351;&#29992; Spring MVC &#21407;&#29983;&#30340;&#37197;&#32622;&#26041;&#24335;&#65292;&#20363;&#22914;&#65292;&#24819;&#25226;&#38745;&#24577;&#36164;&#28304;&#37117;&#26144;&#23556;&#21040; /static/ &#19979;&#65292;XML &#30340;&#37197;&#32622;&#26159;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;mvc:resources mapping="/static/**"
    location="/static, classpath:/static/"
    cache-period="600" /&gt;</code></pre>
<p>&#23545;&#24212;&#30340; Java &#37197;&#32622;&#65292;&#38656;&#35201;&#22312; <code>WebMvcConfigurer</code> &#30340;&#23454;&#29616;&#31867;&#37324;&#35206;&#30422; <code>addResourceHandlers()</code> &#26041;&#27861;&#65292;&#23601;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration
@EnableWebMvc
public class WebConfig implements WebMvcConfigurer {
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry)    {
        registry.addResourceHandler("/static/**")
                 .addResourceLocations("/static", "classpath:/static/")
                 .setCachePeriod(600);
    }
}</code></pre>
<p>&#32780;&#22312; Spring Boot &#20013;&#65292;&#21482;&#38656;&#22312;&#37197;&#32622;&#25991;&#20214;&#37324;&#28155;&#21152;&#22914;&#19979;&#20960;&#34892;&#65292;&#30456;&#27604;&#20043;&#19979;&#26159;&#19981;&#26159;&#31616;&#21333;&#22810;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=/static,classpath:/static/
spring.web.resources.cache.period=600</code></pre>
<p>&#38500;&#20102; JavaScript &#21644; CSS &#36825;&#31867;&#38745;&#24577;&#36164;&#28304;&#65292;&#19968;&#20123;&#38745;&#24577;&#30340;&#39029;&#38754;&#65292;&#23588;&#20854;&#26159;&#38169;&#35823;&#39029;&#38754;&#65292;&#20063;&#21487;&#20197;&#25918;&#22312;&#38745;&#24577;&#36164;&#28304;&#30446;&#24405;&#37324;&#65292;&#22312;&#19979;&#38754;&#28155;&#21152;&#19968;&#20010; error &#23376;&#30446;&#24405;&#65292;&#25991;&#20214;&#21517;&#20026;&#20855;&#20307;&#30340; HTTP &#21709;&#24212;&#30721;&#65292;&#20363;&#22914;&#65292;404.html &#25110;&#32773; 5xx.html&#12290;&#20195;&#30721;&#31034;&#20363; 9-20 &#23637;&#31034;&#30340;&#23601;&#26159;&#19968;&#20010;&#26368;&#31616;&#21333;&#30340; 404 &#38169;&#35823;&#39029;&#30340; HTML &#20195;&#30721;&#12290;&#24403;&#25105;&#20204;&#29992;&#27983;&#35272;&#22120;&#35775;&#38382;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#22312;&#32447;&#32593;&#31449;&#19978;&#19968;&#20010;&#19981;&#23384;&#22312;&#30340;&#39029;&#38754;&#26102;&#65292;&#23601;&#20250;&#26174;&#31034;&#36825;&#20010;&#39029;&#38754;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-20</strong>&#12288;src/main/resources/static/error/404.html</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;&#20108;&#36827;&#21046;&#22902;&#33590;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;p&gt;&#21834;&#21568;&#65292;&#27809;&#25214;&#21040;&#39029;&#38754;&#21834;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>&#27492;&#22806;&#65292;&#22914;&#26524;&#26377;&#27426;&#36814;&#39029;&#65292;&#20063;&#23601;&#26159;&#27983;&#35272;&#22120;&#22320;&#22336;&#26639;&#37324;&#26410;&#28155;&#21152;&#36335;&#24452;&#30452;&#25509;&#35775;&#38382;&#31995;&#32479;&#22495;&#21517;&#26102;&#20250;&#33258;&#21160;&#36339;&#36716;&#30340;&#39029;&#38754;&#65292;&#21487;&#20197;&#23558;&#20854;&#25918;&#22312;&#38745;&#24577;&#36164;&#28304;&#30446;&#24405;&#37324;&#65292;&#29992; index.html &#20316;&#20026;&#25991;&#20214;&#21517;&#65292;Spring Boot &#20250;&#20248;&#20808;&#25214;&#23427;&#65292;&#22914;&#26524;&#27809;&#26377;&#25214;&#21040;&#65292;&#20877;&#29992; <code>index</code> &#20316;&#20026;&#35270;&#22270;&#21517;&#36827;&#34892;&#26597;&#25214;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#32531;&#23384;</strong></p>
<p>&#23545;&#20110;&#38745;&#24577;&#36164;&#28304;&#65292;&#20026;&#20102;&#25552;&#21319;&#24615;&#33021;&#65292;&#36890;&#24120;&#27983;&#35272;&#22120;&#25110;&#32773;&#19968;&#20123;&#20195;&#29702;&#26381;&#21153;&#22120;&#20250;&#23545;&#20854;&#36827;&#34892;&#32531;&#23384;&#22788;&#29702;&#65292;&#22914;&#26524;&#21629;&#20013;&#32531;&#23384;&#65292;&#26381;&#21153;&#22120;&#20250;&#30452;&#25509;&#36820;&#22238;&#19981;&#24102;&#27491;&#25991;&#30340; <code>304 Not Modified</code> &#24212;&#31572;&#12290;&#22914;&#26524;&#20351;&#29992;&#38745;&#24577;&#36164;&#28304;&#26381;&#21153;&#22120;&#65292;&#37027;&#36825;&#20010;&#32531;&#23384;&#30340;&#35774;&#32622;&#30001;&#38745;&#24577;&#36164;&#28304;&#26381;&#21153;&#22120;&#26469;&#23436;&#25104;&#12290;&#22914;&#26524;&#36890;&#36807; Spring MVC &#30340;&#24212;&#29992;&#31243;&#24207;&#26469;&#25552;&#20379;&#38745;&#24577;&#36164;&#28304;&#65292;&#37027;&#26377;&#20004;&#31181;&#36873;&#25321;&#65292;&#19968;&#26159;&#30001;&#31243;&#24207;&#26469;&#22788;&#29702;&#32531;&#23384;&#65292;&#21478;&#19968;&#20010;&#26159;&#20132;&#30001;&#21069;&#31471;&#30340;&#36127;&#36733;&#22343;&#34913;&#65288;&#20363;&#22914; Nginx&#65289;&#26469;&#22788;&#29702;&#12290;&#36825;&#37324;&#25105;&#20204;&#23601;&#26469;&#30475;&#30475; Spring MVC &#30340;&#31243;&#24207;&#26159;&#22914;&#20309;&#22788;&#29702;&#32531;&#23384;&#30340;&#12290;</p>
<p>&#22312; HTTP &#20013;&#65292;&#20351;&#29992; <code>Cache-Control</code> &#36825;&#20010;&#21709;&#24212;&#22836;&#26469;&#26631;&#35782;&#30456;&#20851;&#30340;&#32531;&#23384;&#37197;&#32622;&#65292;RFC 7234 &#23545;&#36825;&#20010;&#21709;&#24212;&#22836;&#20570;&#20102;&#35814;&#32454;&#30340;&#35268;&#23450;&#12290;&#22312;&#19978;&#19968;&#37096;&#20998;&#37324;&#65292;&#25105;&#20204;&#24050;&#32463;&#30475;&#21040;&#20102;&#22914;&#20309;&#20026;&#38745;&#24577;&#36164;&#28304;&#35774;&#32622;&#19968;&#20010; 600 &#31186;&#30340;&#32531;&#23384;&#20102;&#12290;&#20854;&#23454;&#65292;&#38500;&#20102; <code>spring.web.resources.cache.period</code>&#65292;Spring Boot &#21487;&#20197;&#23545;&#38745;&#24577;&#36164;&#28304;&#32531;&#23384;&#20570;&#26356;&#31934;&#32454;&#30340;&#25511;&#21046;&#65292;&#30456;&#20851;&#30340;&#37197;&#32622;&#23601;&#22312; <code>WebProperties.Resources.Cache.Cachecontrol</code> &#36825;&#20010;&#20869;&#37096;&#31867;&#37324;&#65292;&#23545;&#24212;&#30340;&#23601;&#26159; <code>spring.web.resources.cache.cachecontrol.*</code> &#30340;&#37197;&#32622;&#39033;&#65292;&#29992;&#26469;&#30452;&#25509;&#25511;&#21046; <code>Cache-Control</code>&#65292;&#34920; 9-15 &#32599;&#21015;&#20102;&#20854;&#20013;&#30340;&#19968;&#20123;&#37197;&#32622;&#39033;&#12290;</p>
<p><strong>&#34920; 9-15&#12288;<code>Cachecontrol</code> &#30340;&#37096;&#20998;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#35828;&#26126;</th></tr><tr><td><code>spring.web.resources.cache.cachecontrol.max-age</code></td><td>&#26368;&#22823;&#30340;&#21487;&#32531;&#23384;&#26102;&#38388;&#65292;&#20363;&#22914; <code>3600s</code>&#65292;&#22914;&#26524;&#27809;&#26377;&#25351;&#23450;&#26102;&#38388;&#21333;&#20301;&#65292;&#40664;&#35748;&#20026;&#31186;</td></tr><tr><td><code>spring.web.resources.cache.cachecontrol.no-store</code></td><td>&#26159;&#21542;&#21487;&#32531;&#23384;&#65292;&#21462;&#20540;&#20026; <code>true</code> &#21644; <code>false</code></td></tr><tr><td><code>spring.web.resources.cache.cachecontrol.cache-public</code></td><td>&#26159;&#21542;&#26159;&#20844;&#24320;&#32531;&#23384;&#65292;&#25152;&#26377;&#22320;&#26041;&#37117;&#21487;&#36827;&#34892;&#32531;&#23384;&#65292;&#21462;&#20540;&#20026; <code>true</code> &#21644; <code>false</code></td></tr><tr><td><code>spring.web.resources.cache.cachecontrol.cache-private</code></td><td>&#26159;&#21542;&#26159;&#38024;&#23545;&#21333;&#20010;&#29992;&#25143;&#30340;&#31169;&#26377;&#32531;&#23384;&#65292;&#20849;&#20139;&#32531;&#23384;&#19981;&#21487;&#23545;&#20854;&#36827;&#34892;&#32531;&#23384;&#65292;&#21462;&#20540;&#20026; <code>true</code> &#21644; <code>false</code></td></tr><tr><td><code>spring.web.resources.cache.cachecontrol.no-transform</code></td><td>&#32531;&#23384;&#25110;&#20854;&#20182;&#20013;&#20171;&#19981;&#33021;&#23545;&#21709;&#24212;&#20869;&#23481;&#36827;&#34892;&#36716;&#25442;&#22788;&#29702;&#65292;&#21462;&#20540;&#20026; <code>true</code> &#21644; <code>false</code></td></tr></table>
<p>&#22312; <code>application.properties</code> &#20013;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#35774;&#32622;&#38745;&#24577;&#36164;&#28304;&#32531;&#23384;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.web.resources.cache.cachecontrol.max-age=7200
spring.web.resources.cache.cachecontrol.cache-public=true</code></pre>
<p>&#38500;&#20102;&#38745;&#24577;&#36164;&#28304;&#65292;Spring MVC &#25511;&#21046;&#22120;&#30340;&#36820;&#22238;&#23545;&#35937;&#20063;&#33021;&#20570;&#32531;&#23384;&#65292;Spring Framework &#25552;&#20379;&#20102;&#19968;&#20010; <code>CacheControl</code> &#31867;&#65292;&#24110;&#21161;&#25105;&#20204;&#26041;&#20415;&#22320;&#26500;&#24314; <code>Cache-Control</code> &#21709;&#24212;&#22836;&#65292;&#20363;&#22914;&#65292;&#19982;&#19978;&#38754;&#30340;&#37197;&#32622;&#30456;&#23545;&#24212;&#30340;&#20195;&#30721;&#21487;&#20197;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>// "Cache-Control: max-age=7200, public"
CacheControl cc = CacheControl.maxAge(2, TimeUnit.HOURS).cachePublic();</code></pre>
<p>&#22914;&#26524;&#19981;&#24076;&#26395;&#23458;&#25143;&#31471;&#32531;&#23384;&#21709;&#24212;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>// "Cache-Control: no-store"
CacheControl cc = CacheControl.noStore();</code></pre>
<p>&#26377;&#20102; <code>CacheControl</code> &#23545;&#35937;&#21518;&#65292;&#23558;&#20854;&#35774;&#32622;&#21040;&#35201;&#36820;&#22238;&#30340; <code>ResponseEntity</code> &#37324;&#21435;&#65292;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>ResponseEntity.ok().cacheControl(cc).body(menu);</code></pre>
<p>&#22312; <code>Cache-Control</code> &#21709;&#24212;&#22836;&#20043;&#22806;&#65292;HTTP &#36824;&#26377; <code>Last-Modified</code> &#21644; <code>ETag</code> &#22836;&#12290;<code>Last-Modified</code> &#30340;&#20869;&#23481;&#26159;&#26381;&#21153;&#22120;&#36164;&#28304;&#30340;&#26368;&#21518;&#20462;&#25913;&#26102;&#38388;&#65292;&#21518;&#32493;&#21457;&#36215;&#35831;&#27714;&#26102;&#29992; <code>If-Modify-Since</code> &#22836;&#23558;&#20043;&#21069;&#20445;&#23384;&#30340;&#26368;&#21518;&#20462;&#25913;&#26102;&#38388;&#20877;&#21457;&#32473;&#26381;&#21153;&#22120;&#65292;&#22914;&#26524;&#36164;&#28304;&#27809;&#26377;&#20877;&#20462;&#25913;&#36807;&#65292;&#21017;&#30452;&#25509;&#36820;&#22238; <code>304 Not Modified</code>&#12290;&#22312;&#20195;&#30721;&#20013;&#65292;&#21487;&#20197;&#36890;&#36807; <code>WebRequest.checkNotModified()</code> &#26041;&#27861;&#26469;&#21028;&#26029;&#26159;&#21542;&#26377;&#26356;&#26032;&#12290;</p>
<p><code>ETag</code> &#26159;&#22312; <code>Last-Modified</code> &#20043;&#21518;&#20877;&#20986;&#29616;&#30340;&#22836;&#65292;&#21069;&#32773;&#26356;&#24378;&#35843;&#36164;&#28304;&#29256;&#26412;&#30340;&#21464;&#26356;&#65292;&#32780;&#21518;&#32773;&#21017;&#20851;&#27880;&#20462;&#25913;&#30340;&#26102;&#38388;&#65292;&#25991;&#20214;&#21487;&#33021;&#23450;&#26102;&#21047;&#26032;&#65292;&#20294;&#21047;&#26032;&#30340;&#20869;&#23481;&#26159;&#19968;&#26679;&#30340;&#12290;&#35831;&#27714;&#26102;&#24102;&#19978; <code>If-Match</code> &#25110;&#32773; <code>If-None-Match</code> &#22836;&#65292;&#20869;&#23481;&#23601;&#26159;&#20043;&#21069;&#36820;&#22238;&#30340; <code>ETag</code> &#20540;&#65292;&#26381;&#21153;&#22120;&#20250;&#22312;&#21028;&#26029;&#21518;&#20915;&#23450;&#26159;&#21542;&#36820;&#22238; <code>304 Not Modified</code>&#12290;Spring MVC &#25552;&#20379;&#20102;&#19968;&#20010; <code>ShallowEtagHeaderFilter</code> &#36807;&#28388;&#22120;&#65292;&#21487;&#20197;&#26041;&#20415;&#22320;&#22522;&#20110;&#36820;&#22238;&#30340;&#20869;&#23481;&#26469;&#29983;&#25104; <code>ETag</code>&#12290;</p>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#26102;&#38388; vs. &#31354;&#38388;</strong></p>
<p>&#22312;&#19968;&#20010;&#31995;&#32479;&#20013;&#65292;&#24635;&#20250;&#26377;&#24456;&#22810;&#38750;&#21151;&#33021;&#24615;&#25351;&#26631;&#65292;&#20363;&#22914;&#65292;&#32791;&#26102;&#12289;CPU &#20351;&#29992;&#29575;&#12289;&#21534;&#21520;&#37327;&#12289;&#20869;&#23384;&#21344;&#29992;&#37327;&#12289;&#30913;&#30424;&#20351;&#29992;&#37327;&#12289;&#24102;&#23485;&#12289;IOPS&#65288;Input/Output Operations Per Second&#65292;&#27599;&#31186;&#35835;&#20889;&#27425;&#25968;&#65289;&#8230;&#8230;&#22312;&#19968;&#23450;&#30340;&#26465;&#20214;&#19979;&#65292;&#40060;&#21644;&#29066;&#25484;&#19981;&#21487;&#20860;&#24471;&#65292;&#20026;&#20102;&#28385;&#36275;&#26576;&#20123;&#35201;&#27714;&#65292;&#25105;&#20204;&#38656;&#35201;&#25918;&#24323;&#21478;&#22806;&#19968;&#20123;&#12290;&#26368;&#24120;&#35265;&#30340;&#23601;&#26159;&#22823;&#23478;&#29087;&#24713;&#30340;&#8220;&#29992;&#31354;&#38388;&#25442;&#26102;&#38388;&#8221;&#65292;&#20197;&#21450;&#8220;&#29992;&#26102;&#38388;&#25442;&#31354;&#38388;&#8221;&#12290;</p>
<p>&#32531;&#23384;&#26159;&#20856;&#22411;&#30340;&#8220;&#29992;&#31354;&#38388;&#25442;&#26102;&#38388;&#8221;&#12290;&#20197;&#21069;&#27969;&#34892;&#30340; Memcached &#23601;&#26159;&#29992;&#22823;&#37327;&#20869;&#23384;&#26469;&#23384;&#20648;&#35745;&#31639;&#21518;&#30340;&#25968;&#25454;&#65292;&#33410;&#30465;&#20102;&#21453;&#22797;&#35745;&#31639;&#30340;&#26102;&#38388;&#21644; CPU &#24320;&#38144;&#65292;&#25105;&#20204;&#22312;&#20043;&#21069;&#20171;&#32461;&#36807;&#30340; JVM &#20869;&#37096;&#32531;&#23384;&#12289;Redis &#20063;&#22522;&#26412;&#26159;&#36825;&#20010;&#24605;&#36335;&#12290;</p>
<p>&#32780;&#22823;&#23478;&#26085;&#24120;&#29992;&#30340;&#25991;&#20214;&#21387;&#32553;&#23601;&#26159;&#8220;&#29992;&#26102;&#38388;&#25442;&#31354;&#38388;&#8221;&#12290;&#36890;&#36807;&#21387;&#32553;&#31639;&#27861;&#30340;&#35745;&#31639;&#23558;&#22823;&#25991;&#20214;&#21387;&#32553;&#25104;&#23567;&#25991;&#20214;&#65292;&#38543;&#21518;&#23384;&#20648;&#22312;&#30913;&#30424;&#20013;&#25110;&#32773;&#22312;&#32593;&#32476;&#20013;&#36827;&#34892;&#20256;&#36755;&#12290;&#20256;&#36755;&#30340;&#20869;&#23481;&#36234;&#23569;&#65292;&#20256;&#36755;&#30340;&#36895;&#24230;&#23601;&#36234;&#24555;&#65292;&#20174;&#32780;&#33410;&#30465;&#20102;&#20256;&#36755;&#26102;&#38388;&#12290;</p>
<p>&#26412;&#33410;&#20013;&#35848;&#21040;&#30340; <code>ShallowEtagHeaderFilter</code> &#26412;&#36136;&#19978;&#24182;&#19981;&#20250;&#20943;&#23569;&#26381;&#21153;&#22120;&#31471;&#30340;&#35745;&#31639;&#24037;&#20316;&#37327;&#65292;&#25152;&#26377;&#30340;&#25805;&#20316;&#37117;&#20250;&#21457;&#29983;&#65292;&#23427;&#23545;&#21457;&#36865;&#32473;&#23458;&#25143;&#31471;&#30340;&#25968;&#25454;&#36827;&#34892;&#20102;&#39069;&#22806;&#30340;&#35745;&#31639;&#65292;&#20135;&#29983;&#19968;&#20010; <code>ETag</code>&#65292;&#22914;&#26524;&#36825;&#20010;&#20540;&#19982;&#23458;&#25143;&#31471;&#20256;&#36807;&#26469;&#30340;&#20540;&#19968;&#26679;&#65292;&#23601;&#19981;&#20877;&#20256;&#36755;&#20869;&#23481;&#65292;&#30452;&#25509;&#21578;&#35785;&#23458;&#25143;&#31471;&#27809;&#26377;&#21464;&#21270;&#65292;&#29992;&#20197;&#21069;&#30340;&#23601;&#34892;&#12290;&#22240;&#27492;&#65292;&#23427;&#26159;&#29992;&#39069;&#22806;&#30340;&#26381;&#21153;&#31471; CPU &#26102;&#38388;&#20248;&#21270;&#20102;&#32593;&#32476;&#20256;&#36755;&#21644;&#23458;&#25143;&#31471;&#24863;&#21463;&#21040;&#30340;&#32791;&#26102;&#12290;</p>
</blockquote>
<p>&#22312; Spring Boot &#39033;&#30446;&#20013;&#65292;&#35201;&#27880;&#20876; <code>Servlet</code>&#12289;<code>Filter</code> &#25110;&#32773; <code>Listener</code>&#65292;&#26368;&#31616;&#21333;&#30340;&#21150;&#27861;&#23601;&#26159;&#25226;&#23427;&#20204;&#37197;&#32622;&#20026; Bean&#12290;&#22914;&#26524;&#38656;&#35201;&#20570;&#26356;&#22810;&#23450;&#21046;&#65292;&#23601;&#27880;&#20876;&#23545;&#24212;&#30340; <code>ServletRegistrationBean</code>&#12289;<code>FilterRegistrationBean</code> &#21644; <code>ServletListenerRegistrationBean</code>&#12290;&#20197; <code>ShallowEtagHeaderFilter</code> &#20026;&#20363;&#65292;&#21487;&#20197;&#22312; <code>BinaryTeaApplication</code> &#20013;&#28155;&#21152;&#19968;&#20010; Bean &#23450;&#20041;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 9-21 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-21</strong>&#12288;&#28155;&#21152;&#20102; <code>ShallowEtagHeaderFilter</code> &#30340;&#37197;&#32622;&#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
public class BinaryTeaApplication {
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;

    @Bean
    public ShallowEtagHeaderFilter shallowEtagHeaderFilter() {
        return new ShallowEtagHeaderFilter();
    }
}</code></pre>
</li>
</ol><h2 id="nav_point_144">9.4&#12288;&#35775;&#38382; Web &#36164;&#28304;</h2><p>&#21069;&#38754;&#25105;&#20204;&#37117;&#22312;&#32842;&#22914;&#20309;&#32534;&#20889; Web &#26381;&#21153;&#31471;&#30340;&#20869;&#23481;&#65292;&#22914;&#20309;&#21457;&#24067;&#26381;&#21153;&#19982;&#36164;&#28304;&#65292;&#36890;&#36807;&#27983;&#35272;&#22120;&#21644;&#19968;&#20123;&#24037;&#20855;&#23601;&#33021;&#35775;&#38382;&#25105;&#20204;&#21457;&#24067;&#30340;&#20869;&#23481;&#12290;&#20294;&#22312;&#19968;&#20010;&#20998;&#24067;&#24335;&#31995;&#32479;&#37324;&#65292;&#25105;&#20204;&#36890;&#24120;&#37117;&#26159;&#32534;&#20889;&#20195;&#30721;&#29992;&#23458;&#25143;&#31471;&#26469;&#36827;&#34892;&#35775;&#38382;&#30340;&#12290;&#36825;&#19968;&#33410;&#37324;&#23601;&#35753;&#25105;&#20204;&#19968;&#36215;&#26469;&#20102;&#35299;&#19968;&#19979;&#22914;&#20309;&#20351;&#29992; Spring Framework &#25552;&#20379;&#30340; <code>RestTemplate</code> &#26469;&#35775;&#38382; Web &#36164;&#28304;&#12290;</p><h3 id="nav_point_145">9.4.1&#12288;&#36890;&#36807; <code>RestTemplate</code> &#35775;&#38382; Web &#36164;&#28304;</h3><p><code>RestTemplate</code> &#23553;&#35013;&#20102;&#24120;&#29992;&#30340; HTTP &#25805;&#20316;&#65292;&#25903;&#25345; <code>GET</code>&#12289;<code>POST</code>&#12289;<code>PUT</code>&#12289;<code>DELETE</code>&#12289;<code>HEAD</code>&#12289;<code>PATCH</code> &#21644; <code>OPTIONS</code> &#26041;&#27861;&#65292;&#34920; 9-16 &#32599;&#21015;&#20102; <code>RestTemplate</code> &#30340;&#19968;&#20123;&#24120;&#29992;&#26041;&#27861;&#65292;&#26412;&#33410;&#21518;&#38754;&#36824;&#20250;&#32842;&#21040; <code>exchange()</code> &#31561;&#26041;&#27861;&#12290;</p><p><strong>&#34920; 9-16&#12288;<code>RestTemplate</code> &#30340;&#19968;&#20123;&#24120;&#29992;&#26041;&#27861;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#26041;&#27861;&#21517;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#36820;&#22238;&#31867;&#22411;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#23545;&#24212; HTTP &#26041;&#27861;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#35828;&#26126;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>getForObject()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>T</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>GET</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#33719;&#21462;&#20869;&#23481;&#24182;&#36716;&#25442;&#20026;&#25351;&#23450;&#31867;&#22411;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>getForEntity()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ResponseEntity&lt;T&gt;</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>GET</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#33719;&#21462;&#20869;&#23481;&#24182;&#36716;&#25442;&#20026;&#25351;&#23450;&#31867;&#22411;&#65292;&#21516;&#26102;&#25552;&#20379; HTTP &#24212;&#31572;&#22836;&#31561;&#20449;&#24687;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>postForObject()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>T</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>POST</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25552;&#20132;&#20869;&#23481;&#65292;&#23558;&#32467;&#26524;&#36716;&#25442;&#20026;&#25351;&#23450;&#31867;&#22411;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>postForEntity()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>ResponseEntity&lt;T&gt;</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>POST</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25552;&#20132;&#20869;&#23481;&#65292;&#23558;&#32467;&#26524;&#36716;&#25442;&#20026;&#25351;&#23450;&#31867;&#22411;&#65292;&#21516;&#26102;&#25552;&#20379; HTTP &#24212;&#31572;&#22836;&#31561;&#20449;&#24687;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>postForLocation()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>URI</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>POST</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#25552;&#20132;&#20869;&#23481;&#65292;&#26080;&#39035;&#33719;&#24471;&#36820;&#22238;&#65292;&#21482;&#35201;&#25343;&#21040;&#32467;&#26524;&#20013;&#30340;&#22320;&#22336;&#20449;&#24687;&#21363;&#21487;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>put()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>void</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>PUT</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#21457;&#36865; <code>PUT</code> &#35831;&#27714;&#65292;&#21019;&#24314;&#25110;&#26356;&#26032;&#20869;&#23481;&#65292;&#26080;&#36820;&#22238;&#20540;</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>delete()</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>void</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;"><code>DELETE</code></p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#21457;&#36865; <code>DELETE</code> &#35831;&#27714;&#65292;&#21024;&#38500;&#20869;&#23481;&#65292;&#26080;&#36820;&#22238;&#20540;</p></td>
</tr>
</tbody>
</table><p>&#36890;&#24120;&#65292;Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#37117;&#20250;&#20026;&#25105;&#20204;&#25552;&#20379;&#25152;&#38656;&#30340; Bean&#65292;&#26089;&#26399;&#30340; Spring Boot &#30340;&#30830;&#20063;&#25552;&#20379;&#20102;&#19968;&#20010;&#40664;&#35748;&#30340; <code>RestTemplate</code> Bean&#65292;&#20294;&#26159;&#22312;&#21518;&#26469;&#30340;&#29256;&#26412;&#20013;&#21448;&#25226;&#23427;&#21435;&#25481;&#20102;&#12290;&#19981;&#36807;&#65292;<code>RestTemplateAutoConfiguration</code> &#20026;&#25105;&#20204;&#25552;&#20379;&#20102; <code>RestTemplateBuilder</code> Bean&#65292;<code>RestTemplateAutoConfiguration</code> &#20250;&#23558;&#19978;&#19979;&#25991;&#20013;&#30340; <code>RestTemplateCustomizer</code> &#21644; <code>RestTemplateRequestCustomizer</code> &#25910;&#38598;&#36215;&#26469;&#65292;&#25918;&#21040; <code>RestTemplateBuilder</code> &#37324;&#12290;&#32780;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#36890;&#36807;&#36825;&#20010; <code>RestTemplateBuilder</code> &#30340; <code>build()</code> &#26041;&#27861;&#26469;&#26500;&#36896;&#33258;&#24049;&#30340; <code>RestTemplate</code> Bean&#12290;</p><p>&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#36890;&#36807;&#19968;&#20010;&#20363;&#23376;&#26469;&#28436;&#31034;&#22914;&#20309;&#36890;&#36807; <code>RestTemplate</code> &#26469;&#27169;&#25311;&#39038;&#23458;&#30340;&#25805;&#20316;&#65292;&#35775;&#38382;&#25105;&#20204;&#30340;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#20934;&#22791;&#24471;&#24046;&#19981;&#22810;&#20102;&#65292;&#26377;&#20102;&#33756;&#21333;&#65292;&#39038;&#23458;&#20063;&#21487;&#20197;&#19979;&#35746;&#21333;&#20102;&#65292;&#29616;&#22312;&#35813;&#30475;&#30475;&#26469;&#21040;&#38376;&#24215;&#30340;&#39038;&#23458;&#37117;&#26377;&#21738;&#20123;&#34892;&#20026;&#20102;&#12290;&#39038;&#23458;&#26469;&#21040;&#24215;&#38376;&#21475;&#20043;&#21518;&#65292;&#21487;&#33021;&#20250;&#20808;&#24352;&#26395;&#19968;&#19979;&#65292;&#30475;&#30475;&#26377;&#27809;&#26377;&#24320;&#38376;&#65292;&#27809;&#24320;&#38376;&#30340;&#35805;&#21487;&#33021;&#30452;&#25509;&#36208;&#24320;&#65292;&#20063;&#21487;&#33021;&#31245;&#24494;&#31561;&#19978;&#19968;&#20250;&#20799;&#65292;&#24320;&#38376;&#30340;&#35805;&#21487;&#33021;&#36827;&#26469;&#30596;&#19968;&#30524;&#33756;&#21333;&#12290;&#19968;&#33324;&#20154;&#26597;&#30475;&#33756;&#21333;&#21487;&#33021;&#20250;&#26377;&#36825;&#26679;&#19968;&#20123;&#20064;&#24815;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20808;&#30475;&#30475;&#33756;&#21333;&#19978;&#31532;&#19968;&#39033;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#27983;&#35272;&#19968;&#19979;&#26377;&#27809;&#26377;&#33258;&#24049;&#21916;&#27426;&#30340;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#25226;&#25972;&#20010;&#33756;&#21333;&#30475;&#23436;&#20877;&#35828;&#12290;</li>
</ul>
<p>&#25105;&#20204;&#24050;&#32463;&#26377;&#20102;&#25152;&#38656;&#30340;&#33756;&#21333;&#26381;&#21153;&#65292;&#29616;&#22312;&#35813;&#35753;&#39038;&#23458;&#20986;&#22330;&#20102;&#12290;</p>
</blockquote><p>&#31532; 5 &#31456;&#37324;&#25105;&#20204;&#24050;&#32463;&#20889;&#20102;&#19968;&#20010;&#31616;&#21333;&#30340;&#31561;&#24453;&#24320;&#38376;&#30340; Customer &#24037;&#31243;&#65292;&#27492;&#22788;&#22312;&#23427;&#30340;&#22522;&#30784;&#19978;&#31245;&#20316;&#20462;&#25913;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">14</span> &#31532;&#19968;&#27493;&#65292;&#35843;&#25972;&#19968;&#19979; pom.xml&#65292;&#22686;&#21152; Spring MVC &#31561; Web &#25903;&#25345;&#65292;&#22240;&#20026;&#33756;&#21333;&#19978;&#26377;&#37329;&#39069;&#65292;&#25152;&#20197;&#36824;&#38656;&#35201; Joda Money &#30456;&#20851;&#30340;&#25903;&#25345;&#65292;&#22312; <code>&lt;dependencies/&gt;</code> &#20013;&#22686;&#21152;&#22914;&#19979;&#20869;&#23481;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">14</span>&#20855;&#20307;&#30340;&#20869;&#23481;&#25918;&#22312; ch9/customer-simple-client &#39033;&#30446;&#20013;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.joda&lt;/groupId&gt;
    &lt;artifactId&gt;joda-money&lt;/artifactId&gt;
    &lt;version&gt;1.0.1&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;
    &lt;artifactId&gt;jackson-datatype-joda-money&lt;/artifactId&gt;
    &lt;version&gt;2.13.1&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p>&#31532;&#20108;&#27493;&#65292;&#35843;&#25972;&#20027;&#31867; <code>CustomerApplication</code>&#65292;&#22240;&#20026;&#24341;&#20837;&#20102; spring-boot-starter-web&#65292;&#25152;&#20197;&#40664;&#35748;&#20250;&#21551;&#21160; Web &#23481;&#22120;&#65292;&#25105;&#20204;&#30446;&#21069;&#21482;&#24076;&#26395;&#24320;&#21457;&#19968;&#20010;&#21629;&#20196;&#34892;&#36816;&#34892;&#30340;&#31243;&#24207;&#65292;&#25152;&#20197;&#38656;&#35201;&#33258;&#23450;&#20041; Spring &#24212;&#29992;&#65292;&#20351;&#29992; <code>WebApplicationType.NONE</code> &#23558;&#24212;&#29992;&#25351;&#23450;&#20026;&#38750; Web &#31867;&#22411;&#12290;&#27492;&#22806;&#65292;&#36890;&#36807; <code>RestTemplateBuilder</code> &#26469;&#23450;&#20041;&#25105;&#20204;&#33258;&#24049;&#30340; <code>RestTemplate</code>&#65292;&#36825;&#37324;&#35774;&#32622;&#19968;&#19979;&#36229;&#26102;&#26102;&#38388;&#12290;&#23545;&#20110; <code>Money</code> &#31867;&#22411;&#65292;&#25105;&#20204;&#36824;&#38656;&#35201;&#23450;&#20041; <code>JodaMoneyModule</code> &#26469;&#22788;&#29702;&#24207;&#21015;&#21270;&#30456;&#20851;&#30340;&#20107;&#23452;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-22 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-22</strong>&#12288;&#35843;&#25972;&#21518;&#30340; <code>CustomerApplication</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
public class CustomerApplication {
    public static void main(String[] args) {
        new SpringApplicationBuilder()
             .sources(CustomerApplication.class)
             .web(WebApplicationType.NONE)
             .run(args);
    }

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        return builder
                .setConnectTimeout(Duration.ofSeconds(1)) // &#36830;&#25509;&#36229;&#26102;
                .setReadTimeout(Duration.ofSeconds(5)) // &#35835;&#21462;&#36229;&#26102;
                .build();
    }

    @Bean
    public JodaMoneyModule jodaMoneyModule() {
        return new JodaMoneyModule();
    }

    @Bean
    public ExitCodeGenerator waitExitCodeGenerator(ApplicationArguments args) {
        return () -&gt; (args.containsOption("wait") ? 0 : 1);
    }
}</code></pre><p>&#31532;&#19977;&#27493;&#65292;&#35843;&#25972;&#21407;&#26469;&#30340; <code>WaitForOpenRunner</code>&#65292;&#26412;&#26469;&#23427;&#21482;&#26159;&#26681;&#25454;&#21629;&#20196;&#34892;&#21442;&#25968;&#26469;&#20915;&#23450;&#26159;&#21542;&#31561;&#24453;&#65292;&#31561;&#23436;&#23601;&#36864;&#20986;&#30340;&#12290;&#29616;&#22312;&#25105;&#20204;&#30340; BinaryTea &#26381;&#21153;&#31471;&#20934;&#22791;&#22909;&#20102;&#65292;&#21487;&#20197;&#36890;&#36807;&#35775;&#38382;&#26381;&#21153;&#31471;&#26469;&#21028;&#26029;&#26159;&#21542;&#21487;&#20197;&#25552;&#20379;&#26381;&#21153;&#65292;&#25152;&#20197;&#36825;&#37324;&#23601;&#29992; <code>RestTemplate</code> &#26469;&#21457;&#36215; <code>GET</code> &#35831;&#27714;&#65292;&#33021;&#33719;&#24471; <code>200 OK</code> &#30340;&#21709;&#24212;&#30721;&#23601;&#35828;&#26126;&#22902;&#33590;&#24215;&#24320;&#38376;&#20102;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-23 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-23</strong>&#12288;&#35843;&#25972;&#21518;&#30340; <code>WaitForOpenRunner</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(2)
public class WaitForOpenRunner implements ApplicationRunner, ApplicationContextAware {
    @Setter
    private ApplicationContext applicationContext;
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        boolean flag = isOpen(); // &#24320;&#38376;&#20102;&#21527;&#65311;
        flag = flag ? true : (waitForOpen(args) &amp;&amp; isOpen()); // &#27809;&#24320;&#38376;&#65292;&#31561;&#19968;&#19979;&#20877;&#30475;&#30475;
        if (!flag) { // &#27809;&#24320;&#38376;&#23601;&#36864;&#20986;
            log.info("&#24215;&#27809;&#24320;&#38376;&#65292;&#36208;&#20102;");
            System.exit(SpringApplication.exit(applicationContext));
        } else {
            log.info("&#24215;&#24320;&#38376;&#20102;&#65292;&#36827;&#21435;&#30475;&#30475;");
        }
    }

    private boolean waitForOpen(ApplicationArguments args) throws InterruptedException {
        boolean needWait = args.containsOption("wait");
        if (!needWait) {
            log.info("&#22914;&#26524;&#27809;&#24320;&#38376;&#65292;&#23601;&#19981;&#29992;&#31561;&#20102;&#12290;");
        } else {
            List&lt;String&gt; waitSeconds = args.getOptionValues("wait");
            if (!waitSeconds.isEmpty()) {
                int seconds = NumberUtils.parseNumber(waitSeconds.get(0), Integer.class);
                log.info("&#36824;&#27809;&#24320;&#38376;&#65292;&#20808;&#31561;{}&#31186;&#12290;", seconds);
                Thread.sleep(seconds * 1000);
            }
        }
        return needWait;
    }

    private boolean isOpen() {
        ResponseEntity&lt;String&gt; entity = null;
        try {
            entity = restTemplate.getForEntity(binarytea + "/menu", String.class);
            return entity.getStatusCode().is2xxSuccessful();
        } catch (Exception e) {
            log.warn("&#24212;&#35813;&#36824;&#27809;&#24320;&#38376;&#65292;&#35775;&#38382;&#20986;&#38169;&#65306;{}", e.getMessage());
        }
        return false;
    }
}</code></pre><p>&#20195;&#30721;&#31034;&#20363; 9-26 &#20013;&#30340; <code>waitForOpen()</code> &#23601;&#26159;&#20174;&#21407;&#26469;&#30340; <code>run()</code> &#26041;&#27861;&#37324;&#25277;&#21462;&#20986;&#26469;&#30340;&#65292;&#19987;&#38376;&#21028;&#26029;&#26159;&#21542;&#35201;&#31561;&#24453;&#65292;&#20197;&#21450;&#35201;&#31561;&#22810;&#20037;&#12290;<code>isOpen()</code> &#26041;&#27861;&#21521;&#26381;&#21153;&#31471;&#21457;&#36215;&#19968;&#20010; <code>GET</code> &#35831;&#27714;&#65292;&#36825;&#37324;&#35775;&#38382;&#30340;&#26159; http://localhost:8080/menu&#65292;&#36820;&#22238;&#30340;&#26159; JSON&#65292;&#26242;&#26102;&#20808;&#29992; <code>String</code> &#26469;&#22788;&#29702;&#65292;&#21453;&#27491;&#20063;&#19981;&#29992;&#36825;&#20010;&#36820;&#22238;&#20540;&#65292;&#21482;&#38656;&#35201;&#21028;&#26029;&#21709;&#24212;&#30721;&#21363;&#21487;&#12290;&#22312; <code>application.properties</code> &#20013;&#21152;&#19978; <code>binarytea.url</code> &#37197;&#32622;&#65292;&#36825;&#26159;&#25105;&#20204;&#35201;&#35775;&#38382;&#30340;&#26381;&#21153;&#22120;&#22320;&#22336;&#21644;&#31471;&#21475;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>binarytea.url=http://localhost:8080</code></pre><p>&#22914;&#26524;&#21629;&#20196;&#34892;&#19978;&#20256;&#20837; <code>--wait=5</code>&#65292;&#20063;&#23601;&#26159;&#31561;&#24453; 5 &#31186; <span class="&#27880;&#37322;&#32534;&#21495;">15</span>&#65292;&#22312;&#19981;&#21551;&#21160;&#26381;&#21153;&#31471;&#30340;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#24471;&#21040;&#30340;&#36755;&#20986;&#22823;&#27010;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">15</span>&#36825;&#37324;&#29992; 5 &#31186;&#26159;&#20026;&#20102;&#26041;&#20415;&#28436;&#31034;&#65292;&#21487;&#20197;&#36890;&#36807; <code>--wait</code> &#20256;&#20837;&#24819;&#35201;&#31561;&#24453;&#30340;&#20219;&#24847;&#26102;&#38388;&#65292;&#35753;&#31243;&#24207;&#22312;&#19979;&#27425;&#37325;&#35797;&#21069;&#19968;&#30452; <code>sleep()</code> &#22312;&#37027;&#37324;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2020-12-13 23:40:16.586 INFO 24352 --- [main] l.spring.customer.ArgsPrinterRunner : &#20849;&#20256;&#20837;&#20102;1&#20010;&#21442;&#25968;&#12290;
&#20998;&#21035;&#26159;&#65306;--wait=5
2020-12-13 23:40:16.609 WARN 24352 --- [main] l.spring.customer.WaitForOpenRunner : &#24212;&#35813;&#36824;&#27809;&#24320;&#38376;&#65292;
&#35775;&#38382;&#20986;&#38169;&#65306;I/O error on GET request for "http://localhost:8080/menu": Connection refused (Connection refused); nested exception is java.net.ConnectException: Connection refused (Connection refused)
2020-12-13 23:40:16.610 INFO 24352 --- [main] l.spring.customer.WaitForOpenRunner : &#36824;&#27809;&#24320;&#38376;&#65292;&#20808;&#31561;5&#31186;&#12290;
2020-12-13 23:40:21.613 WARN 24352 --- [main] l.spring.customer.WaitForOpenRunner : &#24212;&#35813;&#36824;&#27809;&#24320;&#38376;&#65292;
&#35775;&#38382;&#20986;&#38169;&#65306;I/O error on GET request for "http://localhost:8080/menu": Connection refused (Connection refused); nested exception is java.net.ConnectException: Connection refused (Connection refused)
2020-12-13 23:40:21.613 INFO 24352 --- [main] l.spring.customer.WaitForOpenRunner : &#24215;&#27809;&#24320;&#38376;&#65292;&#36208;&#20102;</code></pre><p>&#26368;&#21518;&#65292;&#26469;&#23454;&#29616;&#26597;&#30475;&#33756;&#21333;&#20869;&#23481;&#30340;&#21151;&#33021;&#12290;&#20808;&#35201;&#22312; Customer &#24037;&#31243;&#20013;&#20063;&#23450;&#20041;&#19968;&#20010;&#33756;&#21333;&#30340;&#27169;&#22411;&#65292;&#22522;&#26412;&#19982; BinaryTea &#20013;&#30340;&#19968;&#26679;&#65292;&#20294;&#19981;&#38656;&#35201;&#22686;&#21152; JPA &#30340;&#27880;&#35299;&#65292;&#20026;&#20102;&#31616;&#21333;&#65292;&#20063;&#19981;&#38656;&#35201;&#34920;&#31034;&#26479;&#22411;&#22823;&#23567;&#30340;&#26522;&#20030;&#20102;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-24 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-24</strong>&#12288;Customer &#24037;&#31243;&#20013;&#30340; <code>MenuItem</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
@ToString
public class MenuItem {
    private Long id;
    private String name;
    private String size;
    private Money price;
    private Date createTime;
    private Date updateTime;
}</code></pre><p>&#32534;&#20889;&#19968;&#20010; <code>MenuRunner</code> &#31867;&#65292;&#20854;&#20013;&#21253;&#21547;&#20102;&#38656;&#27714;&#20013;&#25552;&#21040;&#30340;&#19977;&#31181;&#26597;&#30475;&#33756;&#21333;&#30340;&#21160;&#20316;&#65292;&#37117;&#26159;&#29992;&#30340; <code>getForObject()</code> &#26041;&#27861;&#65292;&#19981;&#36807;&#36825;&#37324;&#20250;&#28436;&#31034;&#19977;&#31181;&#19981;&#21516;&#30340;&#29992;&#27861;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-25 &#25152;&#31034;&#12290;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#36820;&#22238;&#31867;&#22411;&#25351;&#23450;&#20026;&#20855;&#20307;&#30340;&#31867; <code>MenuItem</code>&#65292;&#21516;&#26102;&#65292;&#20256;&#20837;&#30340; URL &#20013;&#21253;&#21547;&#21344;&#20301;&#31526; <code>{id}</code>&#65292;&#36825;&#37324;&#26681;&#25454;&#21344;&#20301;&#31526;&#30340;&#39034;&#24207;&#36873;&#25321;&#21442;&#25968;&#20013;&#30340;&#20540;&#12290;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#36820;&#22238;&#21015;&#34920;&#65292;&#26242;&#26102;&#36824;&#29992; <code>String</code> &#26469;&#20570;&#36820;&#22238;&#20540;&#65292;&#20294;&#21344;&#20301;&#31526;&#26367;&#25442;&#19981;&#20877;&#29992;&#21487;&#21464;&#21442;&#25968;&#65292;&#32780;&#26159;&#20351;&#29992; <code>Map&lt;String, ?&gt;</code>&#65292;&#20854;&#20013;&#30340;&#38190;&#19982;&#21344;&#20301;&#31526;&#23545;&#24212;&#12290;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">URL &#20013;&#27809;&#26377;&#21344;&#20301;&#31526;&#38656;&#35201;&#26367;&#25442;&#65292;&#26368;&#31616;&#21333;&#30340;&#35843;&#29992;&#12290;</li>
</ul><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-25</strong>&#12288;&#21253;&#21547;&#19977;&#31181;&#26597;&#30475;&#33756;&#21333;&#21160;&#20316;&#30340; <code>MenuRunner</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(3)
public class MenuRunner implements ApplicationRunner {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        MenuItem item = restTemplate.getForObject(binarytea + "/menu/{id}", MenuItem.class, 1);
        log.info("&#33756;&#21333;&#19978;&#30340;&#31532;&#19968;&#39033;&#26159;{}", item);

        String coffee = restTemplate.getForObject(binarytea + "/menu?name={name}", String.class,
                Collections.singletonMap("name", "Java&#21654;&#21857;"));
        log.info("&#26377;Java&#21654;&#21857;&#21527;&#65311;{}", coffee);

        String menuJson = restTemplate.getForObject(binarytea + "/menu", String.class);
        log.info("&#23436;&#25972;&#33756;&#21333;&#65306;{}", menuJson);
    }
}</code></pre><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#39038;&#23458;&#22312;&#30475;&#23436;&#33756;&#21333;&#20043;&#21518;&#65292;&#23601;&#35201;&#24320;&#22987;&#28857;&#21333;&#20102;&#12290;&#20043;&#21069;&#22312; Web &#39029;&#38754;&#19978;&#26377;&#20010;&#19979;&#21333;&#30340;&#21151;&#33021;&#65292;&#29616;&#22312;&#26159;&#26102;&#20505;&#25226;&#36825;&#20010;&#21151;&#33021;&#25386;&#21040;&#23458;&#25143;&#31471;&#26469;&#23454;&#29616;&#20102;&#12290;</p>
</blockquote><p>&#22312;&#19978;&#19968;&#33410;&#30340;&#20363;&#23376;&#37324;&#65292;<code>OrderController</code> &#21482;&#33021;&#22788;&#29702;&#34920;&#21333;&#35831;&#27714;&#65292;&#32780;&#25105;&#20204;&#26242;&#26102;&#36824;&#26080;&#27861;&#29992; <code>RestTemplate</code> &#26469;&#21457;&#36215;&#34920;&#21333;&#35831;&#27714;&#65288;&#21518;&#38754;&#20250;&#20171;&#32461;&#22914;&#20309;&#21457;&#36865;&#24102;&#26377;&#35831;&#27714;&#22836;&#30340; HTTP &#35831;&#27714;&#65289;&#65292;&#25152;&#20197;&#22312;&#31532; 9 &#31456;&#30340; binarytea-rest-controller &#20363;&#23376;&#20013;&#65292;&#25105;&#20204;&#31616;&#21333;&#20462;&#25913;&#19968;&#19979; <code>OrderController</code>&#65292;&#22686;&#21152;&#19968;&#20010;&#22788;&#29702; <code>REST</code> &#35831;&#27714;&#30340;&#26032;&#24314;&#35746;&#21333;&#26041;&#27861;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 9-26 &#25152;&#31034;&#12290;&#26032;&#22686;&#30340; <code>createNewOrder()</code> &#26041;&#27861;&#20165;&#22788;&#29702; <code>application/json</code> &#30340;&#35831;&#27714;&#65292;&#20351;&#29992;&#21516;&#26679;&#30340;&#34920;&#21333;&#23545;&#35937;&#65292;&#20294;&#22686;&#21152;&#20102; <code>@RequestBody</code> &#27880;&#35299;&#65292;&#23558;&#25972;&#20010;&#35831;&#27714;&#27491;&#25991;&#36716;&#25442;&#20026; <code>NewOrderForm</code>&#65292;&#24182;&#36827;&#34892;&#20102;&#26657;&#39564;&#65292;&#20854;&#20182;&#30340;&#36923;&#36753;&#21644;&#20043;&#21069;&#22788;&#29702;&#34920;&#21333;&#30340; <code>createNewOrder()</code> &#21035;&#26080;&#20108;&#33268;&#65292;&#26368;&#21518;&#36820;&#22238;&#19968;&#20010; <code>Optional&lt;Order&gt;</code>&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-26</strong>&#12288;&#22686;&#21152;&#20102; <code>REST</code> &#25509;&#21475;&#30340; <code>OrderController</code> &#31867;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@RequestMapping("/order")
@Slf4j
public class OrderController {
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
    @PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public Optional&lt;Order&gt; createNewOrder(@RequestBody @Valid NewOrderForm form, BindingResult result,
                                          HttpServletResponse response) {
        if (result.hasErrors()) {
            log.warn("&#21442;&#25968;&#19981;&#27491;&#30830;&#65292;[{}]", result.getAllErrors());
            response.setStatus(HttpStatus.BAD_REQUEST.value());
            return Optional.empty();
        }
        response.setStatus(HttpStatus.CREATED.value());
        return Optional.ofNullable(createNewOrderWithForm(form));
    }

    private Order createNewOrderWithForm(NewOrderForm form) {
        List&lt;MenuItem&gt; itemList = form.getItemIdList().stream()
                .map(i -&gt; NumberUtils.toLong(i)).collect(Collectors.collectingAndThen(Collectors.toList(),
                list -&gt; menuService.getByIdList(list)));
        Order order = orderService.createOrder(itemList, form.getDiscount());
        log.info("&#21019;&#24314;&#26032;&#35746;&#21333;&#65292;Order={}", order);
        return order;
    }
}</code></pre><p>&#22312;&#23458;&#25143;&#31471;&#19978;&#65292;&#25105;&#20204;&#26032;&#24314;&#19968;&#20010; <code>OrderRunner</code>&#65292;&#20854;&#20013;&#20351;&#29992; <code>restTemplate.postForObject()</code> &#26469;&#21457;&#36865; <code>POST</code> &#35831;&#27714;&#12290;&#35831;&#27714;&#30340;&#27491;&#25991;&#26159;&#19968;&#20010; <code>NewOrderForm</code> &#23545;&#35937;&#65292;&#36825;&#20010;&#31867;&#30340;&#20869;&#23481;&#19982;&#26381;&#21153;&#31471;&#19968;&#33268;&#65292;&#21482;&#26159;&#22312;&#27880;&#35299;&#19978;&#31245;&#20316;&#35843;&#25972;&#65292;&#21435;&#25481;&#20102;&#26657;&#39564;&#30456;&#20851;&#30340;&#27880;&#35299;&#65292;&#22686;&#21152;&#20102;&#19968;&#20010; <code>@Builder</code>&#65292;&#26041;&#20415;&#21019;&#24314;&#23545;&#35937;&#12290;<code>@NoArgsConstructor</code> &#21644; <code>@AllArgsConstructor</code> &#26159;&#20026;&#20102;&#22312;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#26102;&#33021;&#26377;&#21512;&#36866;&#30340;&#26500;&#36896;&#26041;&#27861;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 9-27 &#25152;&#31034;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-27</strong>&#12288;&#23458;&#25143;&#31471;&#37324;&#35843;&#25972;&#21518;&#30340; <code>NewOrderForm</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class NewOrderForm {
    private List&lt;String&gt; itemIdList;
    private int discount;
}</code></pre><p>&#32780; <code>OrderRunner</code> &#21017;&#22914;&#20195;&#30721;&#31034;&#20363; 9-28 &#25152;&#31034;&#65292;&#23427;&#30340;&#36923;&#36753;&#24456;&#31616;&#21333;&#65292;&#21019;&#24314;&#19968;&#20010; <code>NewOrderForm</code>&#65292;&#20854;&#20013;&#21482;&#26377;&#19968;&#20010;&#32534;&#21495;&#20026; <code>1</code> &#30340;&#39278;&#26009;&#65292;&#25240;&#25187;&#20026; <code>90</code>&#65292;&#29992; <code>POST</code> &#26041;&#27861;&#21457;&#36865;&#21040;&#26381;&#21153;&#31471;&#65292;&#36820;&#22238;&#30340;&#20869;&#23481;&#20808;&#20197; JSON &#23383;&#31526;&#20018;&#36755;&#20986;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-28</strong>&#12288;&#29992;&#26469;&#21019;&#24314;&#35746;&#21333;&#30340; <code>OrderRunner</code></p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(5)
@Setter
@Slf4j
public class OrderRunner implements ApplicationRunner {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        callForObject();
    }

    protected String callForObject() {
        NewOrderForm form = NewOrderForm.builder().itemIdList(Arrays.asList("1")).discount(90).build();
        String response = restTemplate.postForObject(binarytea + "/order", form, String.class);
        log.info("&#19979;&#35746;&#21333;&#65306;{}", response);
        return response;
    }
}</code></pre><p>&#31243;&#24207;&#36816;&#34892;&#21518;&#30340;&#25928;&#26524;&#22823;&#27010;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2020-12-15 00:50:10.022 INFO 37900 --- [main] learning.spring.customer.OrderRunner : &#19979;&#35746;&#21333;&#65306;{"id":2,
"maker":null,"items":[{"id":1,"name":"Java&#21654;&#21857;","size":"MEDIUM","price":{"amount":12.00,"currency":
"CNY"},"createTime":"2020-12-14T16:49:48.918+00:00","updateTime":"2020-12-14T16:49:48.918+00:00"}],
"amount":{"discount":90,"totalAmount":{"amount":12.00,"currency":"CNY"},"payAmount":{"amount":10.80,
"currency":"CNY"}},"status":"ORDERED","createTime":"2020-12-14T16:50:09.987+00:00","updateTime":
"2020-12-14T16:50:09.987+00:00"}</code></pre><h3 id="nav_point_146">9.4.2&#12288;<code>RestTemplate</code> &#30340;&#36827;&#38454;&#29992;&#27861;</h3><p>&#38754;&#23545;&#31616;&#21333;&#30340; HTTP &#25805;&#20316;&#26102;&#65292;&#19978;&#19968;&#23567;&#33410;&#25552;&#21040;&#30340;&#26041;&#27861;&#23601;&#24050;&#32463;&#32496;&#32496;&#26377;&#20313;&#20102;&#65292;&#20294;&#29616;&#23454;&#20013;&#24448;&#24448;&#20250;&#26377;&#24456;&#22810;&#22797;&#26434;&#30340;&#24773;&#20917;&#65292;&#20363;&#22914;&#65292;&#35201;&#22312;&#35831;&#27714;&#20013;&#20256;&#36882;&#22810;&#20010;&#35831;&#27714;&#22836;&#65292;&#38656;&#35201;&#21028;&#26029;&#24212;&#31572;&#20013;&#30340; HTTP &#21709;&#24212;&#30721;&#12290;&#22914;&#26524;&#32467;&#26524;&#22797;&#26434;&#19968;&#20123;&#65292;&#20363;&#22914;&#21253;&#21547; <code>List</code>&#12289;<code>Map</code> &#31561;&#25968;&#25454;&#32467;&#26500;&#65292;&#36824;&#35201;&#25226;&#27867;&#22411;&#31867;&#22411;&#29992;&#36215;&#26469;&#8230;&#8230;&#36825;&#20123;&#20107;&#24773; <code>RestTemplate</code> &#37117;&#21487;&#20197;&#24110;&#25105;&#20204;&#36731;&#26494;&#25630;&#23450;&#12290;</p><ol>
<li><p><strong>&#36890;&#36807; <code>HttpEntity&lt;T&gt;</code> &#36827;&#34892;&#22797;&#26434;&#25805;&#20316;</strong></p>
<p>HTTP &#22836;&#26159; HTTP &#35831;&#27714;&#21644;&#24212;&#31572;&#20013;&#30340;&#37325;&#35201;&#37096;&#20998;&#65292;&#26681;&#25454; HTTP &#21709;&#24212;&#30721;&#21644; HTTP &#22836;&#21487;&#20197;&#20570;&#24456;&#22810;&#22788;&#29702;&#65292;&#22312;&#21457;&#36865;&#35831;&#27714;&#26102;&#20063;&#21487;&#20197;&#22312; HTTP &#22836;&#37324;&#24102;&#20837;&#24456;&#22810;&#20449;&#24687;&#12290;&#22312;&#20043;&#21069;&#30340;&#20869;&#23481;&#20013;&#65292;&#25105;&#20204;&#30340;&#20195;&#30721;&#24182;&#27809;&#26377;&#23545; HTTP &#22836;&#20570;&#22826;&#22810;&#22788;&#29702;&#65292;&#21482;&#26159;&#22312;&#20351;&#29992; Postman &#26102;&#20570;&#20102;&#20123;&#31616;&#21333;&#20462;&#25913;&#12290;&#22312; <code>RestTemplate</code> &#20013;&#65292;&#21487;&#20197;&#29992; <code>RequestEntity&lt;T&gt;</code> &#21644; <code>ResponseEntity&lt;T&gt;</code> &#20998;&#21035;&#34920;&#31034;&#35831;&#27714;&#21644;&#21709;&#24212;&#65292;&#23427;&#20204;&#37117;&#32487;&#25215;&#20102; <code>HttpEntity&lt;T&gt;</code>&#65292;&#20854;&#20013;&#21253;&#21547;&#20102; HTTP &#22836;&#21644;&#27491;&#25991;&#65292;&#27491;&#25991;&#20250;&#34987;&#36716;&#25442;&#20026;&#32473;&#23450;&#30340;&#31867;&#22411; <code>T</code>&#12290;</p>
<p>&#25105;&#20204;&#21487;&#20197;&#23558;&#19978;&#19968;&#33410;&#30340;&#20363;&#23376;&#31245;&#20316;&#35843;&#25972;&#65292;&#29992; <code>postForEntity()</code> &#20195;&#26367; <code>postForObject()</code>&#65292;&#37325;&#26032;&#20889;&#19968;&#20010;&#35831;&#27714;&#26041;&#27861;&#65292;&#25171;&#21360;&#20986; HTTP &#22836;&#21644;&#27491;&#25991;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 9-29 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-29</strong>&#12288;&#29992;&#26469;&#28436;&#31034; <code>ResponseEntity&lt;T&gt;</code> &#30340; <code>OrderRunner</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(5)
@Setter
@Slf4j
public class OrderRunner implements ApplicationRunner {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        callForEntity();
    }

    protected ResponseEntity&lt;String&gt; callForEntity() {
        NewOrderForm form = NewOrderForm.builder().itemIdList(Arrays.asList("1")).discount(90).build();

        ResponseEntity&lt;String&gt; response = restTemplate.postForEntity(binarytea + "/order",form, String.class);
        log.info("HTTP Status: {}, Headers: ", response.getStatusCode());
        response.getHeaders().entrySet().forEach(e -&gt; log.info("{}: {}", e.getKey(), e.getValue()));
        log.info("Body: {}", response.getBody());
        return response;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
}</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#36816;&#34892;&#21518;&#30340;&#25928;&#26524;&#22823;&#27010;&#20250;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65292;&#21253;&#21547; HTTP &#21709;&#24212;&#30721;&#12289;&#21709;&#24212;&#20013;&#30340;&#25152;&#26377; HTTP &#22836;&#20197;&#21450;&#21709;&#24212;&#27491;&#25991;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>2020-12-16 00:28:17.866 INFO 44944 --- [main] learning.spring.customer.OrderRunner : HTTP Status:
201 CREATED, Headers:
2020-12-16 00:28:17.868 INFO 44944 --- [main] learning.spring.customer.OrderRunner : Content-Type:
[application/json]
2020-12-16 00:28:17.868 INFO 44944 --- [main] learning.spring.customer.OrderRunner : Content-Length:
[436]
2020-12-16 00:28:17.868 INFO 44944 --- [main] learning.spring.customer.OrderRunner : Date: [Tue, 15
Dec 2020 16:28:17 GMT]
2020-12-16 00:28:17.868 INFO 44944 --- [main] learning.spring.customer.OrderRunner : Keep-Alive:
[timeout=60]
2020-12-16 00:28:17.868 INFO 44944 --- [main] learning.spring.customer.OrderRunner : Connection:
[keep-alive]
2020-12-16 00:28:17.868 INFO 44944 --- [main] learning.spring.customer.OrderRunner : Body: {"id":2,
"maker":null,"items":[{"id":1,"name":"Java&#21654;&#21857;","size":"MEDIUM","price":{"amount":12.00,"currency":
"CNY"},"createTime":"2020-12-15T16:28:08.084+00:00","updateTime":"2020-12-15T16:28:08.084+00:00"}],
"amount":{"discount":90,"totalAmount":{"amount":12.00,"currency":"CNY"},"payAmount":{"amount":10.80,
"currency":"CNY"}},"status":"ORDERED","createTime":"2020-12-15T16:28:17.835+00:00","updateTime":
"2020-12-15T16:28:17.835+00:00"}</code></pre>
<p><code>postForXxx()</code> &#26041;&#27861;&#20013;&#20256;&#36882;&#30340;&#35831;&#27714;&#23545;&#35937;&#20063;&#21487;&#20197;&#30452;&#25509;&#20256;&#20837;&#19968;&#20010; <code>HttpEntity&lt;T&gt;</code> &#23545;&#35937;&#65288;&#20005;&#26684;&#35828;&#36215;&#26469;&#36825;&#37324;&#30340;&#35831;&#27714;&#65292;&#24212;&#35813;&#26159; <code>RequestEntity&lt;T&gt;</code>&#65292;&#37324;&#38754;&#21487;&#20197;&#23545; HTTP &#22836;&#20570;&#21508;&#31181;&#25511;&#21046;&#65289;&#12290;&#21487;&#20197;&#20687;&#20195;&#30721;&#31034;&#20363; 9-30 &#36825;&#26679;&#25226; <code>callForEntity()</code> &#31245;&#24494;&#20462;&#25913;&#19968;&#19979;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-30</strong>&#12288;&#35831;&#27714;&#23545;&#35937;&#25913;&#20026; <code>RequestEntity&lt;T&gt;</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(5)
@Setter
@Slf4j
public class OrderRunner implements ApplicationRunner {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        callWithEntity();
    }

    protected ResponseEntity&lt;String&gt; callWithEntity() {
        NewOrderForm form = NewOrderForm.builder().itemIdList(Arrays.asList("1")).discount(90).build();
        URI uri = UriComponentsBuilder.fromUriString(binarytea + "/order").build().toUri();
        RequestEntity&lt;NewOrderForm&gt; request = RequestEntity.post(uri).contentType(MediaType
            .APPLICATION_JSON).body(form);
        ResponseEntity&lt;String&gt; response = restTemplate.postForEntity(binarytea + "/order", request,
            String.class);
        log.info("HTTP Status: {}, Headers: ", response.getStatusCode());
        response.getHeaders().entrySet().forEach(e -&gt; log.info("{}: {}", e.getKey(), e.getValue()));
        log.info("Body: {}", response.getBody());
        return response;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#22788;&#29702;&#21709;&#24212;&#20013;&#30340;&#27867;&#22411;</strong></p>
<p>&#22312;&#19978;&#38754;&#30340;&#25152;&#26377;&#20363;&#23376;&#37324;&#65292;&#25105;&#20204;&#37117;&#21482;&#26159;&#31616;&#21333;&#22320;&#25351;&#23450;&#20102;&#35831;&#27714;&#21644;&#36820;&#22238;&#23545;&#35937;&#30340;&#31867;&#22411;&#65292;&#37027;&#22914;&#26524;&#25105;&#20204;&#24076;&#26395;&#36820;&#22238;&#30340;&#31867;&#22411;&#24102;&#26377;&#27867;&#22411;&#21448;&#35813;&#24590;&#20040;&#21150;&#21602;&#65311;&#20197; <code>MenuController</code> &#30340; <code>getAll()</code> &#26041;&#27861;&#20026;&#20363;&#65292;&#36820;&#22238;&#30340;&#26159; JSON &#23383;&#31526;&#20018;&#65292;&#20869;&#23481;&#26159;&#19968;&#20010;&#21015;&#34920;&#65292;&#25105;&#20204;&#35813;&#24590;&#20040;&#23558;&#23427;&#36824;&#21407;&#20026; <code>List&lt;MenuItem&gt;</code> &#21602;&#65311;&#36825;&#26102;&#23601;&#35813;&#36718;&#21040; <code>RestTemplate</code> &#30340; <code>exchange()</code> &#26041;&#27861;&#30331;&#22330;&#20102;&#65292;&#23427;&#22312;&#25351;&#23450;&#36820;&#22238;&#31867;&#22411;&#26102;&#65292;&#19981;&#20165;&#21487;&#20197;&#31616;&#21333;&#22320;&#32473;&#20986;&#19968;&#20010; <code>Class&lt;T&gt;</code>&#65292;&#20063;&#21487;&#20197;&#20256;&#20837;&#19968;&#20010; <code>ParameterizedTypeReference&lt;T&gt;</code>&#65292;&#36890;&#36807;&#36825;&#20010;&#23545;&#35937;&#26469;&#25351;&#23450;&#27867;&#22411;&#31867;&#22411;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-31 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-31</strong>&#12288;&#36890;&#36807; <code>exchange()</code> &#26041;&#27861;&#26597;&#35810;&#33756;&#21333;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
@Order(3)
public class MenuRunner implements ApplicationRunner {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${binarytea.url}")
    private String binarytea;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
        getAllMenu();
    }

    private void getAllMenu() {
        ParameterizedTypeReference&lt;List&lt;MenuItem&gt;&gt;typeReference =
                new ParameterizedTypeReference&lt;List&lt;MenuItem&gt;&gt;() {};
        URI uri = UriComponentsBuilder.fromUriString(binarytea + "/menu").build().toUri();
        RequestEntity&lt;Void&gt; request = RequestEntity.get(uri).accept(MediaType.APPLICATION_JSON).build();
        ResponseEntity&lt;List&lt;MenuItem&gt;&gt; response = restTemplate.exchange(request, typeReference);
        log.info("&#21709;&#24212;&#30721;&#65306;{}", response.getStatusCode());
        response.getBody().forEach( menuItem -&gt; log.info("&#26465;&#30446;&#65306;{}", menuItem));
    }
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>HTTP &#23458;&#25143;&#31471;&#30340;&#21333;&#20803;&#27979;&#35797;</strong></p>
<p>&#22312;&#26085;&#24120;&#30340;&#24320;&#21457;&#24037;&#20316;&#20013;&#65292;&#26381;&#21153;&#31471;&#19982;&#23458;&#25143;&#31471;&#30340;&#20195;&#30721;&#36890;&#24120;&#26159;&#30001;&#19981;&#21516;&#20154;&#32534;&#20889;&#30340;&#65292;&#32780;&#19988;&#20250;&#20986;&#29616;&#20004;&#32773;&#24182;&#34892;&#24320;&#21457;&#30340;&#24773;&#20917;&#12290;&#36825;&#26102;&#27809;&#21150;&#27861;&#21521;&#30495;&#23454;&#30340;&#26381;&#21153;&#31471;&#21457;&#36215;&#35831;&#27714;&#65292;&#21448;&#25110;&#32773;&#24320;&#21457;&#32773;&#24076;&#26395;&#33021;&#22312;&#33258;&#24049;&#30340;&#30005;&#33041;&#19978;&#36816;&#34892;&#21333;&#20803;&#27979;&#35797;&#65292;&#32780;&#19981;&#20381;&#36182;&#20219;&#20309;&#20854;&#20182;&#32452;&#20214;&#12290;&#19968;&#33324;&#36825;&#31867;&#24773;&#20917;&#19979;&#20250;&#26377;&#20004;&#31181;&#20570;&#27861;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#23558;&#21457;&#36215; HTTP &#35831;&#27714;&#30340;&#23458;&#25143;&#31471;&#20195;&#30721;&#21093;&#31163;&#20986;&#26469;&#65292;&#20889;&#25104;&#21333;&#29420;&#30340;&#31867;&#65292;&#36890;&#36807; Mockito &#31561;&#24037;&#20855;&#65292;&#27169;&#25311;&#20986;&#36825;&#20010;&#23545;&#35937;&#65292;&#19978;&#23618;&#19994;&#21153;&#20195;&#30721;&#36890;&#36807;&#27169;&#25311;&#30340;&#31867;&#36827;&#34892;&#27979;&#35797;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807; MockWebServer<span class="&#27880;&#37322;&#32534;&#21495;">16</span> &#31561;&#24037;&#20855;&#27169;&#25311;&#20986;&#19968;&#20010;&#26381;&#21153;&#31471;&#65292;&#23427;&#33021;&#25509;&#25910;&#35831;&#27714;&#24182;&#20316;&#20986;&#21709;&#24212;&#12290;</li>
</ul>
<p>&#26174;&#28982;&#65292;&#30456;&#27604;&#31532;&#19968;&#31181;&#26041;&#24335;&#65292;&#31532;&#20108;&#31181;&#26041;&#24335;&#26377;&#19968;&#20010;&#22909;&#22788;&#65292;&#23601;&#26159;&#23427;&#33021;&#35206;&#30422;&#20855;&#20307;&#21457;&#36215; HTTP &#35831;&#27714;&#30340;&#20195;&#30721;&#65292;&#25152;&#20197;&#65292;&#22312;&#36825;&#37324;&#25105;&#20204;&#26469;&#28436;&#31034;&#19968;&#19979;&#22914;&#20309;&#36890;&#36807; MockWebServer &#32534;&#20889;&#19968;&#20010;&#21333;&#20803;&#27979;&#35797;&#65292;&#22823;&#27010;&#20998;&#25104;&#19979;&#38754;&#20960;&#20010;&#27493;&#39588;&#65306;</p>
<p>(1) &#24341;&#20837; <code>com.squareup.okhttp3:mockwebserver</code> &#20381;&#36182;&#65307;</p>
<p>(2) &#22312;&#27979;&#35797;&#31867;&#20013;&#26500;&#36896;&#24182;&#21551;&#21160; <code>MockWebServer</code>&#65307;</p>
<p>(3) &#33719;&#21462; <code>MockWebServer</code> &#30340;&#31471;&#21475;&#65292;&#35774;&#32622;&#21040;&#23458;&#25143;&#31471;&#65307;</p>
<p>(4) &#26500;&#36896;&#27169;&#25311;&#30340;&#35831;&#27714;&#24212;&#31572;&#65307;</p>
<p>(5) &#23458;&#25143;&#31471;&#21457;&#36215; HTTP &#35843;&#29992;&#65307;</p>
<p>(6) &#39564;&#35777;&#23458;&#25143;&#31471;&#25910;&#21040;&#24212;&#31572;&#21518;&#30340;&#22788;&#29702;&#24773;&#20917;&#65307;</p>
<p>(7) &#39564;&#35777;&#27169;&#25311;&#26381;&#21153;&#22120;&#25910;&#21040;&#30340;&#35831;&#27714;&#20449;&#24687;&#12290;</p>
<p>&#25105;&#20204;&#23601;&#20197;&#20195;&#30721;&#31034;&#20363; 9-29 &#20026;&#20363;&#65292;&#20026;&#23427;&#32534;&#20889;&#19968;&#20010;&#21333;&#20803;&#27979;&#35797;&#65292;&#20808;&#22312; pom.xml &#20013;&#22686;&#21152;&#22914;&#19979;&#20381;&#36182;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;
    &lt;artifactId&gt;mockwebserver&lt;/artifactId&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;</code></pre>
<p>&#27979;&#35797;&#30340;&#20844;&#20849;&#37096;&#20998;&#22914;&#20195;&#30721;&#31034;&#20363; 9-32 &#25152;&#31034;&#65292;<code>@BeforeAll</code> &#26159;&#22312;&#25152;&#26377;&#27979;&#35797;&#36816;&#34892;&#21069;&#25191;&#34892;&#30340;&#65292;&#22312;&#36825;&#37324;&#25105;&#20204;&#21019;&#24314;&#24182;&#21551;&#21160;&#20102; <code>MockWebServer</code>&#65307;<code>@AfterAll</code> &#22312;&#25152;&#26377;&#27979;&#35797;&#36816;&#34892;&#32467;&#26463;&#21518;&#25191;&#34892;&#65292;&#36127;&#36131;&#20851;&#38381; <code>MockWebServer</code>&#65307;<code>@BeforeEach</code> &#26159;&#22312;&#27599;&#20010;&#27979;&#35797;&#36816;&#34892;&#21069;&#37117;&#20250;&#25191;&#34892;&#30340;&#65292;&#36825;&#37324;&#25105;&#20204;&#30452;&#25509;&#26032;&#24314;&#19968;&#20010; <code>OrderRunner</code>&#65292;&#35774;&#32622;&#23545;&#24212;&#30340;&#23646;&#24615;&#65307;&#20854;&#23454;&#36824;&#26377; <code>@AfterEach</code>&#65292;&#21487;&#20197;&#22312;&#27599;&#20010;&#27979;&#35797;&#36816;&#34892;&#21518;&#36827;&#34892;&#19968;&#20123;&#25805;&#20316;&#65292;&#36825;&#20010;&#20363;&#23376;&#37324;&#30340;&#28165;&#29702;&#23601;&#26159;&#25226; <code>this.runner</code> &#35774;&#32622;&#20026; <code>null</code>&#65292;&#22240;&#20026;&#25105;&#20204;&#27599;&#27425;&#37117;&#20250; <code>new</code> &#19968;&#20010;&#65292;&#25152;&#20197;&#19981;&#29992;&#20570;&#36825;&#27493;&#21160;&#20316;&#65292;&#23601;&#19981;&#29992;&#20889;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-32</strong>&#12288;<code>OrderRunnerTest</code> &#27979;&#35797;&#31867;&#30340;&#20844;&#20849;&#37096;&#20998;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>class OrderRunnerTest {
    private static MockWebServer webServer;
    private OrderRunner runner;
    private ObjectMapper objectMapper = new ObjectMapper();

    @BeforeAll
    static void setUp() throws IOException {
        webServer = new MockWebServer();
        webServer.start();
    }

    @AfterAll
    static void tearDown() throws IOException {
        webServer.shutdown();
    }

    @BeforeEach
    void setUpBeforeEach() {
        runner = new OrderRunner();
        runner.setRestTemplate(new RestTemplate());
        runner.setBinarytea("http://localhost:" + webServer.getPort());
    }
    // &#30465;&#30053;&#20855;&#20307;&#27979;&#35797;&#26041;&#27861;
}</code></pre>
<p>&#38024;&#23545; <code>callForEntity()</code> &#30340;&#27979;&#35797;&#26041;&#27861; <code>testCallForEntity()</code> &#30340;&#20855;&#20307;&#20195;&#30721;&#22914;&#20195;&#30721;&#31034;&#20363; 9-33 &#25152;&#31034;&#65292;&#25105;&#20204;&#20808;&#26500;&#36896;&#20102;&#19968;&#20010;&#27169;&#25311;&#30340;&#24212;&#31572;&#65292;&#35774;&#32622;&#20102; <code>201 Created</code> &#21709;&#24212;&#30721;&#12289;<code>Content-Type</code> &#22836;&#21644;&#24212;&#31572;&#30340;&#27491;&#25991;&#65292;&#36890;&#36807; <code>enqueue()</code> &#26041;&#27861;&#23558;&#20854;&#35774;&#32622;&#21040; <code>MockWebServer</code> &#37324;&#65307;&#38543;&#21518;&#35843;&#29992; <code>runner.callForEntity()</code> &#21457;&#36215;&#35831;&#27714;&#65292;&#20877;&#39564;&#35777;&#21709;&#24212;&#21644;&#35831;&#27714;&#30340;&#20869;&#23481;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-33</strong>&#12288;<code>callForEntity()</code> &#30340;&#27979;&#35797;&#26041;&#27861;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>class OrderRunnerTest {
    // &#30465;&#30053;&#20844;&#20849;&#37096;&#20998;&#20195;&#30721;
    @Test
    void testCallForEntity() throws Exception {
        // &#26500;&#36896;&#24212;&#31572;
        String body = "{\"id\":1, \"status\":\"ORDERED\"}";
        MockResponse response = new MockResponse().setResponseCode(HttpStatus.CREATED.value())
                .addHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE).setBody(body);
        webServer.enqueue(response);

        ResponseEntity&lt;String&gt; entity = runner.callForEntity();
        // &#39564;&#35777;&#21709;&#24212;
        assertEquals(HttpStatus.CREATED, entity.getStatusCode());
        assertEquals(MediaType.APPLICATION_JSON_VALUE,entity.getHeaders().getFirst(HttpHeaders.CONTENT_TYPE));
        assertEquals(body, entity.getBody());

        // &#39564;&#35777;&#35831;&#27714;
        RecordedRequest request = webServer.takeRequest();
        assertEquals("/order", request.getPath());

        NewOrderForm form = objectMapper.readValue(request.getBody().readUtf8(),NewOrderForm.class);
        assertLinesMatch(Arrays.asList("1"), form.getItemIdList());
        assertEquals(90, form.getDiscount());
    }
}</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;&#27169;&#26495;&#35774;&#35745;&#27169;&#24335;</strong></p>
<p>&#27169;&#26495;&#27169;&#24335;&#26159; GoF 23 &#31181;&#32463;&#20856;&#35774;&#35745;&#27169;&#24335;&#20013;&#30340;&#19968;&#31181;&#65292;&#23427;&#23450;&#20041;&#20102;&#25972;&#20010;&#31243;&#24207;&#25191;&#34892;&#30340;&#39592;&#26550;&#65292;&#20801;&#35768;&#24320;&#21457;&#32773;&#22312;&#19981;&#25913;&#21464;&#22823;&#32467;&#26500;&#30340;&#21069;&#25552;&#19979;&#23545;&#20854;&#20013;&#30340;&#19968;&#20123;&#27493;&#39588;&#36827;&#34892;&#23450;&#21046;&#12290;</p>
<p>&#22312; Spring Framework &#20013;&#65292;&#27169;&#26495;&#27169;&#24335;&#30340;&#20363;&#23376;&#38543;&#22788;&#21487;&#35265;&#65292;&#20363;&#22914;&#25105;&#20204;&#20043;&#21069;&#30475;&#21040;&#36807;&#30340; <code>JdbcTemplate</code>&#12289;<code>TransactionTemplate</code> &#21644;&#36825;&#19968;&#33410;&#30340; <code>RestTemplate</code>&#12290;&#20197; <code>TransactionTemplate</code> &#20026;&#20363;&#65292;&#24120;&#35268;&#30340;&#20107;&#21153;&#25805;&#20316;&#20998;&#20026;&#22914;&#19979;&#20960;&#20010;&#27493;&#39588;&#65306;</p>
<p>(1) &#33719;&#21462;&#36830;&#25509;&#65292;&#24182;&#22312;&#35813;&#36830;&#25509;&#19978;&#24320;&#21551;&#20107;&#21153;&#65307;</p>
<p>(2) &#25191;&#34892;&#20855;&#20307;&#25805;&#20316;&#65307;</p>
<p>(3) &#25552;&#20132;&#25110;&#32773;&#22238;&#28378;&#20107;&#21153;&#12290;</p>
<p>&#20854;&#20013;&#30340;&#31532; (2) &#27493;&#21487;&#20197;&#36890;&#36807; <code>TransactionCallback</code> &#26469;&#20256;&#20837;&#20855;&#20307;&#30340;&#25805;&#20316;&#65292;&#25972;&#20010;&#20107;&#21153;&#25805;&#20316;&#30340;&#25191;&#34892;&#39592;&#26550;&#22312;&#36825;&#20010;&#36807;&#31243;&#20013;&#26159;&#22266;&#23450;&#30340;&#12290;</p>
<p><code>RestTemplate</code> &#30340;&#24773;&#20917;&#20063;&#26159;&#31867;&#20284;&#30340;&#65292;&#25972;&#20010;&#36807;&#31243;&#20998;&#20026;&#21019;&#24314;&#35831;&#27714;&#12289;&#25191;&#34892;&#35831;&#27714;&#12289;&#33719;&#24471;&#32467;&#26524;&#21644;&#32467;&#26524;&#22788;&#29702;&#65288;&#25552;&#21462;&#20869;&#23481;&#65289;&#65292;&#21508;&#31181;&#26684;&#24335;&#36716;&#25442;&#21644;&#24213;&#23618;&#30340;&#22810;&#31181;&#23458;&#25143;&#31471;&#37117;&#34987; <code>RestTemplate</code> &#23553;&#35013;&#20102;&#36215;&#26469;&#65292;&#21487;&#20197;&#26681;&#25454;&#25105;&#20204;&#30340;&#36873;&#25321;&#36827;&#34892;&#23450;&#21046;&#65292;&#20294;&#36825;&#20123;&#23450;&#21046;&#37117;&#19981;&#24433;&#21709;&#39592;&#26550;&#12290;</p>
<p>&#36890;&#36807;&#36825;&#20004;&#20010;&#20363;&#23376;&#65292;&#25105;&#20204;&#21487;&#20197;&#30475;&#21040;&#27169;&#26495;&#27169;&#24335;&#25552;&#21319;&#20102;&#20195;&#30721;&#30340;<strong>&#22797;&#29992;&#24615;&#21644;&#21487;&#25193;&#23637;&#24615;</strong>&#12290;&#21407;&#22987;&#30340;&#27169;&#26495;&#27169;&#24335;&#38656;&#35201;&#20351;&#29992;&#25277;&#35937;&#31867;&#65292;&#22312; Spring Framework &#37324;&#24182;&#27809;&#26377;&#36825;&#20040;&#25945;&#26465;&#65292;&#36890;&#36807;&#21442;&#25968;&#12289;&#37197;&#32622;&#12289;&#20256;&#20837;&#21311;&#21517;&#31867;&#25110; Lambda &#30340;&#26041;&#24335;&#37117;&#21487;&#20197;&#21457;&#25381;&#23427;&#30340;&#20316;&#29992;&#12290;</p>
</blockquote>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">16</span>&#36825;&#26159;&#30001; Square &#24320;&#21457;&#30340;&#19968;&#22871;&#27169;&#25311; Web &#26381;&#21153;&#31471;&#30340;&#24037;&#20855;&#65292;&#25918;&#22312; OkHttp &#30340;&#20195;&#30721;&#24211;&#20013;&#12290;</p><h3 id="nav_point_147">9.4.3&#12288;&#31616;&#21333;&#23450;&#21046; <code>RestTemplate</code></h3><p>&#34429;&#28982;&#30452;&#25509;&#29992; <code>new</code> &#20851;&#38190;&#23383;&#21019;&#24314;&#19968;&#20010; <code>RestTemplate</code> &#23601;&#33021;&#25343;&#26469;&#20351;&#29992;&#20102;&#65292;&#20294;&#36825;&#26679;&#30340; <code>RestTemplate</code> &#20351;&#29992;&#30340;&#20840;&#26159;&#40664;&#35748;&#37197;&#32622;&#12290;&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#25105;&#20204;&#36861;&#27714;&#30340;&#19981;&#20165;&#26159;&#33021;&#29992;&#65292;&#36824;&#35201;&#26356;&#24555;&#12289;&#26356;&#31283;&#12289;&#26356;&#23433;&#20840;&#12290;Spring Framework &#24403;&#28982;&#20063;&#20805;&#20998;&#32771;&#34385;&#21040;&#20102;&#36825;&#20123;&#35785;&#27714;&#65292;<code>RestTemplate</code> &#26159;&#20010;&#27169;&#26495;&#65292;&#22312;&#22266;&#23450;&#30340;&#27493;&#39588;&#32972;&#21518;&#26377;&#22823;&#37327;&#21487;&#20197;&#28789;&#27963;&#37197;&#32622;&#30340;&#19996;&#35199;&#65292;&#19979;&#38754;&#23601;&#35753;&#25105;&#20204;&#19968;&#36215;&#26469;&#20102;&#35299;&#19968;&#19979;&#12290;</p><ol>
<li><p><strong>&#37197;&#32622;&#24213;&#23618;&#23454;&#29616;</strong></p>
<p><code>RestTemplate</code> &#22312;&#20854;&#29238;&#31867; <code>HttpAccessor</code> &#20013;&#40664;&#35748;&#35774;&#32622;&#20102; <code>SimpleClientHttpRequestFactory</code> &#20316;&#20026;&#35831;&#27714;&#24037;&#21378;&#31867;&#65292;&#20854;&#20869;&#37096;&#20351;&#29992; Java &#20869;&#32622;&#30340; <code>HttpURLConnection</code> &#26469;&#22788;&#29702;&#35831;&#27714;&#12290;&#20294;&#20854;&#23454; <code>RestTemplate</code> &#25903;&#25345;&#19981;&#23569; HTTP &#23458;&#25143;&#31471;&#65292;&#34920; 9-17 &#21015;&#20986;&#20102;&#25903;&#25345;&#30340;&#23458;&#25143;&#31471;&#21644;&#23545;&#24212;&#30340; <code>ClientHttpRequestFactory</code> &#23454;&#29616;&#31867;&#12290;</p>
<p><strong>&#34920; 9-17&#12288;<code>RestTemplate</code> &#25903;&#25345;&#30340; HTTP &#23458;&#25143;&#31471;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#23458;&#25143;&#31471;</th><th>&#29256;&#26412;</th><th><code>ClientHttpRequestFactory</code> &#23454;&#29616;&#31867;</th></tr><tr><td>Apache HttpComponents</td><td>&#20174; Spring Framework 4.0 &#24320;&#22987;&#20165;&#25903;&#25345; 4.3 &#20197;&#19978;&#29256;&#26412;</td><td><code>HttpComponentsClientHttpRequestFactory</code></td></tr><tr><td>OkHttp</td><td>3.<i>x</i> &#29256;&#26412;</td><td><code>OkHttp3ClientHttpRequestFactory</code></td></tr><tr><td>Netty</td><td>4.<i>x</i> &#29256;&#26412;</td><td><code>ReactorClientHttpConnector</code>&#65292;&#22312; Spring Framework 5.0 &#21069;&#26159; <code>Netty4ClientHttpRequestFactory</code></td></tr></table>
<p>HttpComponents &#21644; OkHttp &#30340;&#23454;&#29616;&#37117;&#26159;&#21516;&#27493;&#30340;&#65292;&#32780; Netty &#30340;&#23454;&#29616;&#21017;&#26159;&#21709;&#24212;&#24335;&#30340;&#12290;&#35201;&#26367;&#25442;&#24213;&#23618;&#30340;&#23458;&#25143;&#31471;&#65292;&#20854;&#26412;&#36136;&#23601;&#26159;&#26367;&#25442; <code>ClientHttpRequestFactory</code> &#30340;&#23454;&#29616;&#12290;&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#20197; HttpComponents &#20026;&#20363;&#65292;&#26469;&#20570;&#20010;&#31616;&#21333;&#30340;&#28436;&#31034;&#65292;&#26377;&#19977;&#31181;&#26041;&#27861;&#26469;&#35774;&#32622; <code>requestFactory</code>&#65292;&#25512;&#33616;&#22312;&#20351;&#29992;&#26102;&#20248;&#20808;&#32771;&#34385;&#21518;&#20004;&#31181;&#26041;&#27861;&#12290;</p>
<p>(1) &#29992; <code>new</code> &#26469;&#20174;&#22836;&#21019;&#24314;&#19968;&#20010; <code>RestTemplate</code>&#65292;&#36890;&#36807;&#26500;&#36896;&#26041;&#27861;&#25110; <code>setRequestFactory()</code> &#26041;&#27861;&#20256;&#20837; <code>HttpComponentsClientHttpRequestFactory</code> &#23454;&#20363;&#65292;&#36825;&#31181;&#20570;&#27861;&#26080;&#27861;&#21033;&#29992; Spring Boot &#25552;&#20379;&#30340;&#21508;&#31181;&#20840;&#23616;&#23450;&#21046;&#37197;&#32622;&#65292;&#19981;&#25512;&#33616;&#12290;</p>
<p>(2) &#20381;&#28982;&#20351;&#29992;&#20043;&#21069;&#29992;&#36807;&#30340; <code>RestTemplateBuilder</code> &#26469;&#26500;&#36896; <code>RestTemplate</code>&#65292;&#36890;&#36807; <code>RestTemplateBuilder</code> &#30340; <code>requestFactory()</code> &#20256;&#20837; <code>HttpComponentsClientHttpRequestFactory</code> &#23454;&#20363;&#65292;&#35843;&#29992; <code>requestFactory()</code> &#20250;&#21019;&#24314;&#19968;&#20010;&#26032;&#30340; <code>RestTemplateBuilder</code>&#65292;&#22240;&#27492;&#20165;&#23545;&#24403;&#21069;&#35201; <code>build()</code> &#30340; <code>RestTemplate</code> &#26377;&#25928;&#12290;</p>
<p>(3) &#21019;&#24314;&#19968;&#20010; <code>RestTemplateCustomizer</code> &#30340;&#23454;&#29616;&#31867;&#65292;&#24182;&#27880;&#20876;&#20026; Bean&#65292;Spring Boot &#33258;&#21160;&#37197;&#32622;&#30340; <code>RestTemplateBuilder</code> &#20250;&#25910;&#38598;&#19978;&#19979;&#25991;&#20013;&#25152;&#26377;&#30340; <code>RestTemplateCustomizer</code>&#65292;&#22312;&#26500;&#36896; <code>RestTemplate</code> &#26102;&#65292;&#20250;&#35843;&#29992; <code>RestTemplateCustomizer</code> &#30340; <code>customize()</code> &#26041;&#27861;&#65292;&#25105;&#20204;&#30340; <code>customize()</code> &#36127;&#36131;&#20026; <code>RestTemplate</code> &#35774;&#32622; <code>HttpComponentsClientHttpRequestFactory</code> &#23454;&#20363;&#12290;&#36825;&#31181;&#26041;&#24335;&#20250;&#20316;&#29992;&#20110;&#25152;&#26377;&#30340; <code>RestTemplate</code>&#12290;</p>
<p>HttpComponents &#26159;&#20010;&#21151;&#33021;&#24378;&#22823;&#30340; HTTP &#23458;&#25143;&#31471;&#65292;&#38500;&#20102;&#22522;&#26412;&#30340;&#21151;&#33021;&#65292;&#36824;&#25903;&#25345; HTTP &#20195;&#29702;&#12289;&#36830;&#25509;&#27744;&#31649;&#29702;&#12289;&#36830;&#25509;&#22797;&#29992; Keep-Alive&#12289;&#36229;&#26102;&#37325;&#35797;&#31561;&#21151;&#33021;&#12290;&#22312; pom.xml &#20013;&#24341;&#20837; HttpComponents &#30340;&#20381;&#36182; <code>org.apache.httpcomponents:httpclient</code>&#65292;&#38543;&#21518;&#36890;&#36807; <code>HttpClientBuilder</code> &#21487;&#20197;&#24456;&#26041;&#20415;&#22320;&#23450;&#21046; <code>HttpClient</code>&#65292;&#24182;&#29992;&#23427;&#26469;&#26500;&#24314; <code>HttpComponentsClientHttpRequestFactory</code>&#65292;&#20877;&#21019;&#24314; <code>RestTemplate</code>&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-34 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">17</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-34</strong>&#12288;&#20351;&#29992; HttpComponents &#20316;&#20026;&#24213;&#23618; HTTP &#23458;&#25143;&#31471;&#30340; <code>RestTemplate</code> &#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
public class CustomerApplication {
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        return builder
                .requestFactory(this::requestFactory)
                .setConnectTimeout(Duration.ofSeconds(1)) // &#36830;&#25509;&#36229;&#26102;
                .setReadTimeout(Duration.ofSeconds(5)) // &#35835;&#21462;&#36229;&#26102;
                .build();
    }

    @Bean
    public ClientHttpRequestFactory requestFactory() {
        HttpClientBuilder builder = HttpClientBuilder.create()
        .disableAutomaticRetries() // &#40664;&#35748;&#37325;&#35797;&#26159;&#24320;&#21551;&#30340;&#65292;&#24314;&#35758;&#20851;&#38381;
        .evictIdleConnections(10, TimeUnit.MINUTES) // &#31354;&#38386;&#36830;&#25509;10&#20998;&#38047;&#20851;&#38381;
        .setConnectionTimeToLive(30, TimeUnit.SECONDS) // &#36830;&#25509;&#30340;TTLS&#26102;&#38388;
        .setMaxConnTotal(200) // &#36830;&#25509;&#27744;&#22823;&#23567;
        .setMaxConnPerRoute(20); // &#27599;&#20010;&#20027;&#26426;&#30340;&#26368;&#22823;&#36830;&#25509;&#25968;

        return new HttpComponentsClientHttpRequestFactory(builder.build());
    }
}</code></pre>
<blockquote>
<p><strong>&#33590;&#27463;&#26102;&#38388;&#65306;HttpComponents &#30340; Keep-Alive &#40664;&#35748;&#31574;&#30053;&#20248;&#21270;</strong></p>
<p>&#36890;&#36807; <code>HttpClientBuilder</code> &#26500;&#36896;&#30340; <code>HttpClient</code> &#40664;&#35748;&#20250;&#20351;&#29992; <code>DefaultConnectionKeepAliveStrategy</code> &#36825;&#20010; Keep-Alive &#31574;&#30053;&#65292;&#35813;&#31574;&#30053;&#27604;&#36739;&#31616;&#21333;&#65306;</p>
<ul>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#26597;&#25214; HTTP &#22836;&#37324;&#30340; <code>Keep-Alive</code> &#22836;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#25214;&#21040; <code>Keep-Alive</code> &#22836;&#37324;&#21517;&#31216;&#26159; <code>timeout</code>&#65288;&#24573;&#30053;&#22823;&#23567;&#20889;&#65289;&#30340;&#37027;&#39033;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#26377;&#32473;&#23450;&#22797;&#29992;&#26102;&#38388;&#65292;&#23601;&#29992;&#32473;&#23450;&#30340;&#26102;&#38388;&#65307;</li>
<li class="&#31532;3&#32423;&#26080;&#24207;&#21015;&#34920;">&#38500;&#27492;&#20043;&#22806;&#65292;&#37117;&#36820;&#22238; <code>- 1</code>&#65292;&#20063;&#23601;&#26159;&#36830;&#25509;&#27704;&#20037;&#26377;&#25928;&#12290;</li>
</ul>
<p>&#36830;&#25509;&#27704;&#20037;&#26377;&#25928;&#24448;&#24448;&#19981;&#26159;&#25105;&#20204;&#24819;&#35201;&#30340;&#32467;&#26524;&#65292;&#36890;&#24120;&#37117;&#20250;&#32473;&#19968;&#20010;&#40664;&#35748;&#26102;&#38388;&#65292;&#27604;&#22914; 300 &#31186;&#12290;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#36890;&#36807; Lambda &#34920;&#36798;&#24335;&#26469;&#23454;&#29616;&#19968;&#20010; <code>ConnectionKeepAliveStrategy</code>&#65292;&#20256;&#32473; <code>HttpClientBuilder</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>builder.setKeepAliveStrategy((response, context) -&gt;
        Arrays.asList(response.getHeaders(HTTP.CONN_KEEP_ALIVE))
                .stream()
                .filter(h -&gt; StringUtils.equalsIgnoreCase(h.getName(), "timeout")
                &amp;&amp; StringUtils.isNumeric(h.getValue()))
                .findFirst()
                .map(h -&gt; NumberUtils.toLong(h.getValue(), 300L))
                .orElse(300L) * 1000);</code></pre>
<p>&#36825;&#37324;&#29992;&#21040;&#30340; <code>StringUtils</code> &#21644; <code>NumberUtils</code> &#37117;&#26159; Apache Common Langs3 &#20013;&#30340;&#36741;&#21161;&#31867;&#12290;</p>
</blockquote>
<p>&#160;</p>
</li>
<li><p><strong>&#37197;&#32622; SSL &#30456;&#20851;&#36873;&#39033;</strong></p>
<p>&#29616;&#22312;&#38543;&#30528;&#22823;&#23478;&#23433;&#20840;&#24847;&#35782;&#30340;&#21152;&#24378;&#65288;&#20063;&#35201;&#24863;&#35874;&#21508;&#22823;&#21378;&#21830;&#30340;&#24378;&#21147;&#25512;&#21160;&#65289;&#65292;&#36234;&#26469;&#36234;&#22810;&#30340;&#32593;&#31449;&#24320;&#22987;&#23545;&#22806;&#25552;&#20379; HTTPS &#26381;&#21153;&#65292;&#29978;&#33267;&#24456;&#22810;&#20844;&#21496;&#30340;&#20869;&#37096;&#26381;&#21153;&#20063;&#24378;&#21046;&#20351;&#29992; HTTPS &#35775;&#38382;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">18</span></p>
<p>&#22312;&#35775;&#38382;&#22806;&#37096;&#26381;&#21153;&#26102;&#65292;&#19968;&#33324;&#36825;&#20123;&#30446;&#26631;&#31449;&#28857;&#30340;&#25968;&#23383;&#35777;&#20070;&#37117;&#26159;&#30001;&#19987;&#38376;&#30340;&#26426;&#26500;&#31614;&#21457;&#30340;&#65292;Java &#20869;&#32622;&#20102;&#22823;&#26426;&#26500;&#30340;&#26681;&#35777;&#20070;&#65292;&#21487;&#20197;&#36827;&#34892;&#35777;&#20070;&#30340;&#26657;&#39564;&#12290;&#38024;&#23545;&#36825;&#31181;&#24773;&#20917;&#65292;&#25105;&#20204;&#26080;&#39035;&#20570;&#20160;&#20040;&#29305;&#27530;&#30340;&#22788;&#29702;&#12290;</p>
<p>&#22312;&#25552;&#20379;&#20869;&#37096; HTTPS &#26102;&#65292;&#22914;&#26524;&#26465;&#20214;&#20801;&#35768;&#65292;&#24403;&#28982;&#20063;&#25512;&#33616;&#36141;&#20080;&#25110;&#32773;&#20351;&#29992;&#20813;&#36153;&#30340;&#27491;&#35268;&#35777;&#20070;&#65292;&#20294;&#24448;&#24448;&#22312;&#24456;&#22810;&#20225;&#19994;&#20869;&#37096;&#20250;&#36873;&#25321;&#33258;&#24049;&#31614;&#21457;&#35777;&#20070;&#65292;&#36825;&#26102; Java &#26080;&#27861;&#39564;&#35777;&#35777;&#20070;&#30340;&#26377;&#25928;&#24615;&#65292;&#20986;&#20110;&#23433;&#20840;&#32771;&#34385;&#23601;&#20250;&#35753;&#35831;&#27714;&#22833;&#36133;&#12290;&#36825;&#26102;&#26377;&#20197;&#19979;&#26041;&#26696;&#21487;&#20197;&#36873;&#25321;&#65306;</p>
<p>(1) &#23558;&#33258;&#31614;&#35777;&#20070;&#30340;&#26681;&#35777;&#20070;&#23548;&#20837; Java &#30340;&#35777;&#20070;&#38142;&#37324;&#65292;&#36825;&#26679;&#23601;&#33021;&#25226;&#33258;&#24049;&#27169;&#25311;&#25104;&#31614;&#21457;&#26426;&#26500;&#65307;</p>
<p>(2) &#35843;&#25972; <code>HttpClient</code> &#30340;&#35774;&#32622;&#65292;&#24573;&#30053;&#35777;&#20070;&#26657;&#39564;&#30456;&#20851;&#30340;&#38169;&#35823;&#12290;</p>
<p>&#36825;&#37324;&#65292;&#25105;&#20204;&#28436;&#31034;&#19968;&#19979;&#31532;&#20108;&#31181;&#26041;&#26696;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 9-35 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 9-35</strong>&#12288;&#19981;&#26657;&#39564;&#35777;&#20070;&#21644;&#20027;&#26426;&#21517;&#30340; <code>HttpClientBuilder</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>SSLContext sslContext = null;
try {
    sslContext = SSLContextBuilder.create()
    // &#25918;&#36807;&#25152;&#26377;&#35777;&#20070;&#26657;&#39564;
    .loadTrustMaterial(null, (certificate, authType) -&gt; true).build();
} catch (GeneralSecurityException e) {
    log.error("Can NOT create SSLContext", e);
}
if (sslContext != null) {
    builder.setSSLContext(sslContext) // &#35774;&#32622;SSLContext
            .setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE); // &#19981;&#26657;&#39564;&#20027;&#26426;&#21517;
}</code></pre>
<p>&#22914;&#26524;&#26159;&#24076;&#26395;&#21152;&#36733;&#19968;&#20010;&#35777;&#20070;&#29992;&#20110;&#26657;&#39564;&#65292;&#21487;&#20197;&#22312;&#20351;&#29992; <code>loadTrustMaterial()</code> &#26102;&#65292;&#20256;&#20837;&#23545;&#24212;&#30340;&#35777;&#20070;&#19982;&#23494;&#30721;&#12290;&#26368;&#21518;&#65292;&#36824;&#26159;&#35201;&#24378;&#35843;&#19968;&#19979;&#65292;&#22914;&#26524;&#26465;&#20214;&#20801;&#35768;&#65292;&#26080;&#35770;&#20160;&#20040;&#24773;&#20917;&#65292;&#37117;&#24212;&#35813;&#20351;&#29992;&#27491;&#35268;&#26426;&#26500;&#31614;&#21457;&#30340;&#26377;&#25928;&#25968;&#23383;&#35777;&#20070;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">17</span>&#36825;&#37096;&#20998;&#30340;&#20363;&#23376;&#22312; ch9/customer-advanced-client &#24037;&#31243;&#20013;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">18</span>&#20851;&#20110;&#26381;&#21153;&#31471;&#22914;&#20309;&#24320;&#21551; HTTPS &#21644; HTTP/2 &#25903;&#25345;&#65292;&#25105;&#20204;&#23558;&#25918;&#22312; 11.2 &#33410;&#20013;&#23637;&#24320;&#35828;&#26126;&#12290;</p><h2 id="nav_point_148">9.5&#12288;&#23567;&#32467;</h2><p>&#26412;&#31456;&#25105;&#20204;&#35752;&#35770;&#20102;&#24456;&#22810; Spring MVC &#30456;&#20851;&#30340;&#20869;&#23481;&#12290;Spring MVC &#20027;&#35201;&#29992;&#20110; Web &#24320;&#21457;&#65292;&#26159;&#26085;&#24120;&#24320;&#21457; Web &#24212;&#29992;&#24517;&#19981;&#21487;&#23569;&#30340;&#21033;&#22120;&#12290;&#20197;&#21069;&#30340; Web &#24320;&#21457;&#20197;&#21518;&#31471;&#20026;&#20027;&#65292;&#21069;&#31471;&#20026;&#36741;&#65307;&#20294;&#29616;&#22312;&#26356;&#27969;&#34892;&#22823;&#21069;&#31471;&#21644;&#21069;&#21518;&#31471;&#20998;&#31163;&#30340;&#31574;&#30053;&#65292;&#21069;&#31471;&#21516;&#23398;&#25361;&#22823;&#26753;&#65292;&#21518;&#31471;&#36127;&#36131;&#25552;&#20379; <code>REST</code> &#25509;&#21475;&#12290;</p><p>&#38500;&#20102; Spring MVC &#26368;&#22522;&#26412;&#30340;&#29992;&#27861;&#65292;&#25105;&#20204;&#36824;&#35752;&#35770;&#20102;&#20197; <code>DispatcherServlet</code> &#20026;&#20013;&#24515;&#30340;&#35831;&#27714;&#22788;&#29702;&#27969;&#31243;&#65292;&#35814;&#32454;&#20171;&#32461;&#20102;&#35831;&#27714;&#22788;&#29702;&#26041;&#27861;&#30340;&#20869;&#23481;&#12290;Spring MVC &#30340;&#35270;&#22270;&#23618;&#25903;&#25345;&#24456;&#22810;&#19981;&#21516;&#30340;&#26684;&#24335;&#65292;&#26412;&#31456;&#20171;&#32461;&#20102;&#24120;&#29992;&#20110; <code>REST</code> &#25509;&#21475;&#30340; JSON &#21644; XML &#26684;&#24335;&#65292;&#36824;&#26377;&#21576;&#29616;&#39029;&#38754;&#29992;&#30340; Thymeleaf &#27169;&#26495;&#12290;&#34429;&#28982; Spring MVC &#20063;&#21487;&#20197;&#25552;&#20379;&#38745;&#24577;&#36164;&#28304;&#26381;&#21153;&#65292;&#20294;&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#25105;&#20204;&#24314;&#35758;&#22823;&#23478;&#20351;&#29992;&#19987;&#38376;&#30340;&#38745;&#24577;&#36164;&#28304;&#26381;&#21153;&#22120;&#65292;&#20363;&#22914; Nginx&#12290;</p><p>&#26368;&#21518;&#25105;&#20204;&#20171;&#32461;&#20102; <code>RestTemplate</code> &#30340;&#21508;&#31181;&#29992;&#27861;&#21644;&#30456;&#20851;&#37197;&#32622;&#65292;&#26377;&#20102;&#23427;&#23601;&#33021;&#26041;&#20415;&#22320;&#21457;&#36215; HTTP &#35831;&#27714;&#65292;&#26356;&#30830;&#20999;&#22320;&#35828;&#26159;&#21457;&#36215; <code>REST</code> &#35831;&#27714;&#30340;&#35843;&#29992;&#12290;</p><p>&#19979;&#19968;&#31456;&#65292;&#25105;&#20204;&#23558;&#32842;&#32842;&#23433;&#20840;&#37027;&#20123;&#20107;&#20799;&#65292;&#26377;&#38024;&#23545;&#24615;&#22320;&#35752;&#35770;&#19968;&#19979;&#19982; Web &#23433;&#20840;&#30456;&#20851;&#30340;&#35805;&#39064;&#65292;&#20855;&#20307;&#30475;&#30475; Spring Security &#26159;&#24590;&#20040;&#26469;&#20445;&#25252;&#25105;&#20204;&#30340;&#31995;&#32479;&#30340;&#12290;</p><blockquote>
<p style="text-align: center"><strong>&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#39033;&#30446;&#24320;&#21457;&#23567;&#32467;</strong></p>
<p>&#26412;&#31456;&#20013;&#65292;&#25105;&#20204;&#30340;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#24050;&#32463;&#26377;&#20102;&#19968;&#20010;&#20351;&#29992; Spring MVC &#24320;&#21457;&#30340; Web &#30028;&#38754;&#8212;&#26381;&#21153;&#21592;&#21487;&#20197;&#22312;&#27983;&#35272;&#22120;&#37324;&#26597;&#30475;&#33756;&#21333;&#24182;&#20026;&#39038;&#23458;&#19979;&#21333;&#65292;&#36824;&#21487;&#20197;&#20197;&#36880;&#26465;&#25110;&#25209;&#37327;&#19978;&#20256;&#30340;&#26041;&#24335;&#26469;&#32500;&#25252;&#33756;&#21333;&#12290;</p>
<p>&#20026;&#20102;&#26041;&#20415;&#31995;&#32479;&#20132;&#20114;&#65292;&#38500;&#20102; Web &#30028;&#38754;&#65292;&#26381;&#21153;&#31471;&#30340;&#31243;&#24207;&#36824;&#25552;&#20379;&#20102;&#23545;&#24212;&#30340; REST &#25509;&#21475;&#12290;&#32780;&#20351;&#29992;&#36825;&#20123;&#25509;&#21475;&#30340;&#27491;&#26159;&#25105;&#20204;&#20026;&#39038;&#23458;&#24320;&#21457;&#30340;&#23458;&#25143;&#31471;&#31243;&#24207;&#65292;&#36890;&#36807;&#23427;&#65292;&#25105;&#20204;&#33021;&#22815;&#26041;&#20415;&#22320;&#19982;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#26381;&#21153;&#31471;&#36827;&#34892;&#20132;&#20114;&#12290;</p>
</blockquote><br style="page-break-after:always"/><div style="page-break-after:always"></div>