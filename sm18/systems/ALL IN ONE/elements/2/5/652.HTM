<h1 id="nav_point_228">&#31532; 15 &#31456;&#12288;&#26381;&#21153;&#23481;&#38169;&#20445;&#25252;</h1><blockquote>
<p><strong>&#26412;&#31456;&#20869;&#23481;</strong></p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20960;&#31181;&#24120;&#35265;&#30340;&#26381;&#21153;&#23481;&#38169;&#27169;&#24335;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Resilience4j &#30340;&#22522;&#26412;&#29992;&#27861;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Spring Cloud CircuitBreaker &#30340;&#25277;&#35937;&#19982;&#24212;&#29992;</li>
</ul>
</blockquote><p>&#22312;&#24494;&#26381;&#21153;&#31995;&#32479;&#20013;&#65292;&#19994;&#21153;&#25805;&#20316;&#30001;&#22810;&#20010;&#26381;&#21153;&#21327;&#20316;&#23436;&#25104;&#65292;&#22312;&#36825;&#20010;&#36807;&#31243;&#20013;&#28041;&#21450;&#30340;&#26381;&#21153;&#22810;&#20102;&#65292;&#20986;&#38382;&#39064;&#30340;&#27010;&#29575;&#33258;&#28982;&#20063;&#23601;&#21464;&#39640;&#20102;&#12290;&#22914;&#26524;&#19979;&#28216;&#26381;&#21153;&#20986;&#38382;&#39064;&#20102;&#65292;&#19978;&#28216;&#21448;&#19981;&#35774;&#38450;&#65292;&#23601;&#20250;&#34987;&#25302;&#32047;&#65307;&#22914;&#26524;&#35831;&#27714;&#37327;&#38497;&#22686;&#65292;&#36229;&#36807;&#26381;&#21153;&#30340;&#25215;&#21463;&#33021;&#21147;&#65292;&#20063;&#20250;&#24341;&#21457;&#38382;&#39064;&#8230;&#8230;&#24403;&#25105;&#20204;&#36935;&#21040;&#30340;&#38382;&#39064;&#22810;&#20102;&#65292;&#33258;&#28982;&#23601;&#20250;&#27785;&#28096;&#20986;&#19981;&#23569;&#32463;&#39564;&#65292;&#26412;&#31456;&#23601;&#35753;&#25105;&#20204;&#26469;&#30475;&#30475;&#22914;&#20309;&#22522;&#20110;&#24120;&#35265;&#30340;&#23481;&#38169;&#27169;&#24335;&#65292;&#20351;&#29992;&#19968;&#20123;&#26694;&#26550;&#26469;&#20445;&#25252;&#25105;&#20204;&#30340;&#31995;&#32479;&#12290;</p><h2 id="nav_point_229">15.1&#12288;&#24120;&#35265;&#30340;&#26381;&#21153;&#23481;&#38169;&#27169;&#24335;</h2><p>&#19968;&#24320;&#22987;&#65292;&#25105;&#20204;&#19981;&#24613;&#20110;&#21435;&#20171;&#32461;&#21644;&#20351;&#29992;&#37027;&#20123;&#24110;&#21161;&#22788;&#29702;&#25925;&#38556;&#30340;&#24037;&#20855;&#65292;&#22312;&#30693;&#36947;&#22914;&#20309;&#20511;&#21161;&#22806;&#37096;&#21147;&#37327;&#20043;&#21069;&#65292;&#20808;&#26469;&#20102;&#35299;&#19968;&#19979;&#65306;&#20026;&#20160;&#20040;&#35201;&#23454;&#29616;&#26381;&#21153;&#23481;&#38169;&#65292;&#21035;&#20154;&#37117;&#26159;&#24590;&#20040;&#20570;&#30340;&#65292;&#27809;&#26377;&#24037;&#20855;&#26102;&#25105;&#20204;&#21448;&#33021;&#24590;&#20040;&#21150;&#12290;</p><blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#26412;&#31456;&#25152;&#28041;&#21450;&#30340;&#25925;&#38556;&#37117;&#26159;&#24494;&#26381;&#21153;&#38142;&#36335;&#20013;&#20381;&#36182;&#30340;&#19978;&#19979;&#28216;&#20043;&#38388;&#21457;&#29983;&#30340;&#25925;&#38556;&#65292;&#31995;&#32479;&#26412;&#36523;&#20869;&#37096;&#30340;&#20195;&#30721;&#38382;&#39064;&#19981;&#22312;&#25105;&#20204;&#35752;&#35770;&#30340;&#33539;&#30068;&#20869;&#12290;</p>
</blockquote><h3 id="nav_point_230">15.1.1&#12288;&#20960;&#31181;&#24120;&#35265;&#30340;&#23481;&#38169;&#27169;&#24335;</h3><p>&#22312;&#32534;&#20889;&#20195;&#30721;&#26102;&#65292;&#25105;&#20204;&#20250;&#29992;&#35774;&#35745;&#27169;&#24335;&#65292;&#26368;&#30693;&#21517;&#30340;&#23601;&#26159; GoF 23&#12290;&#22312;&#25925;&#38556;&#22788;&#29702;&#26041;&#38754;&#20854;&#23454;&#20063;&#26377;&#27169;&#24335;&#21487;&#20197;&#36981;&#24490;&#65288;&#25110;&#32773;&#36890;&#20439;&#19968;&#28857;&#35828;&#65292;&#20063;&#26377;&#33258;&#24049;&#30340;&#8220;&#22871;&#36335;&#8221;&#65289;&#65292;&#25105;&#20204;&#25226;&#36825;&#20123;&#27169;&#24335;&#25644;&#20986;&#26469;&#23601;&#33021;&#24212;&#20184;&#19981;&#23569;&#38382;&#39064;&#20102;&#12290;</p><ol>
<li><p><strong>&#37325;&#35797;&#27169;&#24335;</strong></p>
<p>&#26368;&#31616;&#21333;&#31895;&#26292;&#30340;&#23481;&#38169;&#27169;&#24335;&#65292;&#21487;&#33021;&#23601;&#26159;&#37325;&#35797;&#65288;Retry&#65289;&#20102;&#12290;&#37325;&#35797;&#65292;&#31616;&#21333;&#32780;&#35328;&#23601;&#26159;&#20986;&#38169;&#21518;&#20877;&#35797;&#19968;&#27425;&#12290;&#20294;<strong>&#37325;&#35797;&#19981;&#26159;&#19975;&#28789;&#33647;&#65292;&#31995;&#32479;&#25903;&#25345;&#37325;&#35797;&#26377;&#24456;&#22810;&#20808;&#20915;&#26465;&#20214;</strong>&#65292;&#20363;&#22914;&#65292;&#25105;&#20204;&#30340;&#19979;&#28216;&#26381;&#21153;&#35201;&#33021;&#20445;&#35777;&#24130;&#31561;&#24615;&#65292;&#21542;&#21017;&#24456;&#23481;&#26131;&#36896;&#25104;&#19968;&#20123;&#37325;&#22797;&#35831;&#27714;&#30340;&#38382;&#39064;&#65292;&#32780;&#22914;&#26524;&#36825;&#31508;&#35831;&#27714;&#26159;&#36716;&#36134;&#25805;&#20316;&#65292;&#35843;&#29992;&#19968;&#27425;&#36716;&#19968;&#31508;&#38065;&#65292;&#26080;&#33041;&#37325;&#35797;&#21487;&#33021;&#20250;&#32473;&#19981;&#25903;&#25345;&#24130;&#31561;&#30340;&#19979;&#28216;&#31995;&#32479;&#24102;&#26469;&#26080;&#31351;&#26080;&#23613;&#30340;&#38382;&#39064;&#12290;&#30001;&#27492;&#23601;&#19981;&#38590;&#29702;&#35299;&#65292;&#20026;&#20160;&#20040;&#22312;&#24456;&#22810;&#25903;&#25345;&#37325;&#35797;&#30340;&#26694;&#26550;&#65288;&#20363;&#22914; HTTP Client&#65289;&#20013;&#65292;&#25105;&#20204;&#35201;&#20851;&#38381;&#37325;&#35797;&#21151;&#33021;&#12290;</p>
<p>&#32780;&#19988;&#65292;&#36825;&#37324;&#25152;&#35828;&#30340;&#37325;&#35797;&#20063;&#19981;&#33021;&#20165;&#20165;&#26159;&#31616;&#21333;&#22320;&#23558;&#25805;&#20316;&#25918;&#21040;&#19968;&#20010;&#26377;&#38480;&#27425;&#25968;&#30340;&#24490;&#29615;&#37324;&#12290;&#35774;&#24819;&#36825;&#26679;&#19968;&#20010;&#22330;&#26223;&#65292;&#30001;&#20110;&#31361;&#21457;&#27969;&#37327;&#65292;&#25105;&#20204;&#30340;&#19979;&#28216;&#31995;&#32479;&#26080;&#27861;&#27491;&#24120;&#25552;&#20379;&#26381;&#21153;&#65292;&#21709;&#24212;&#24456;&#24930;&#65307;&#19978;&#28216;&#25910;&#21040;&#20102;&#35775;&#38382;&#36229;&#26102;&#30340;&#25253;&#38169;&#65292;&#30452;&#25509;&#21457;&#36215;&#37325;&#35797;&#65292;&#20110;&#26159;&#26412;&#23601;&#19981;&#22570;&#37325;&#36127;&#30340;&#19979;&#28216;&#23558;&#20250;&#25910;&#21040;&#26356;&#22810;&#35831;&#27714;&#65292;&#32780;&#26080;&#25968;&#30340;&#37325;&#35797;&#20250;&#36896;&#25104;&#26356;&#22823;&#30340;&#27969;&#37327;&#27946;&#23792;&#12290;&#20026;&#27492;&#65292;&#25105;&#20204;&#21487;&#20197;&#35774;&#35745;&#19968;&#20123;&#37325;&#35797;&#31574;&#30053;&#65292;&#36825;&#20123;&#31574;&#30053;&#21487;&#20197;&#30456;&#20114;&#32467;&#21512;&#20351;&#29992;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#38480;&#21046;&#37325;&#35797;&#27425;&#25968;&#65292;&#19981;&#35201;&#26080;&#38480;&#21046;&#37325;&#35797;&#65292;&#20363;&#22914;&#26368;&#22810;&#37325;&#35797; 3 &#27425;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#19968;&#26086;&#22833;&#36133;&#19981;&#35201;&#31435;&#21051;&#37325;&#35797;&#65292;&#24310;&#36831;&#19968;&#27573;&#26102;&#38388;&#21518;&#20877;&#37325;&#35797;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22686;&#21152;&#37325;&#35797;&#30340;&#38388;&#38548;&#26102;&#38388;&#65292;&#21487;&#20197;&#26159;&#22266;&#23450;&#30340;&#38388;&#38548;&#65292;&#20063;&#21487;&#20197;&#26159;&#36882;&#22686;&#30340;&#26102;&#38388;&#12290;</li>
</ul>
<p>&#38500;&#27492;&#20197;&#22806;&#65292;&#20026;&#20102;&#20943;&#23569;&#19981;&#24517;&#35201;&#30340;&#37325;&#35797;&#65292;&#36824;&#21487;&#20197;&#23545;&#38169;&#35823;&#36827;&#34892;&#20998;&#31867;&#12290;&#23545;&#20110;&#30701;&#26102;&#38388;&#37324;&#37325;&#35797;&#20063;&#26126;&#26174;&#19981;&#20250;&#25104;&#21151;&#30340;&#35831;&#27714;&#65292;&#30452;&#25509;&#21462;&#28040;&#65292;&#19981;&#20877;&#37325;&#35797;&#65307;&#32780;&#23545;&#20110;&#37027;&#20123;&#36890;&#36807;&#37325;&#35797;&#21487;&#33021;&#20250;&#25104;&#21151;&#30340;&#35831;&#27714;&#65292;&#21487;&#20197;&#32771;&#34385;&#37325;&#35797;&#12290;&#20363;&#22914;&#65292;HTTP &#35831;&#27714;&#36935;&#21040;&#20102; <code>404 Not Found</code> &#38169;&#35823;&#30721;&#65292;&#25214;&#19981;&#21040;&#24819;&#35201;&#35775;&#38382;&#30340;&#36164;&#28304;&#65292;&#37027;&#23601;&#19981;&#29992;&#37325;&#35797;&#20102;&#65307;&#32780;&#20687;&#32593;&#32476;&#36229;&#26102;&#36825;&#31181;&#35831;&#27714;&#38169;&#35823;&#65292;&#21017;&#21487;&#20197;&#37325;&#35797;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#26029;&#36335;&#22120;&#27169;&#24335;</strong></p>
<p>&#26029;&#36335;&#22120;&#65288;Circuit Breaker&#65289;&#27169;&#24335;&#26159; Michael Nygard &#22312; <em>Release It!</em><span class="&#27880;&#37322;&#32534;&#21495;">1</span> &#19968;&#20070;&#20013;&#25552;&#20986;&#30340;&#65292;&#32780; Martin Fowler &#30340;&#25991;&#31456; <span class="&#27880;&#37322;&#32534;&#21495;">2</span> &#26356;&#26159;&#35753;&#23427;&#21517;&#22768;&#22823;&#20316;&#12290;&#22914;&#26524;&#35828;&#37325;&#35797;&#27169;&#24335;&#26159;&#20026;&#20102;&#35753;&#31995;&#32479;&#33021;&#22815;&#37325;&#22797;&#25191;&#34892;&#37027;&#20123;&#21487;&#33021;&#25104;&#21151;&#30340;&#25805;&#20316;&#65292;&#37027;&#26029;&#36335;&#22120;&#27169;&#24335;&#21017;&#26159;&#20026;&#20102;&#36991;&#20813;&#31995;&#32479;&#21435;&#25191;&#34892;&#37027;&#20123;&#21487;&#33021;&#22833;&#36133;&#30340;&#25805;&#20316;&#12290;&#20854;&#32972;&#21518;&#30340;&#24605;&#24819;&#22914;&#22270; 15-1 &#25152;&#31034;&#65292;&#22823;&#27010;&#30340;&#24847;&#24605;&#23601;&#26159;&#23558;&#25105;&#20204;&#35201;&#25191;&#34892;&#30340;&#25805;&#20316;&#29992;&#26029;&#36335;&#22120;&#23553;&#35013;&#36215;&#26469;&#65292;&#26029;&#36335;&#22120;&#20250;&#30417;&#25511;&#25253;&#38169;&#24773;&#20917;&#65292;&#22914;&#26524;&#25253;&#38169;&#36798;&#21040;&#38408;&#20540;&#65292;&#26029;&#36335;&#22120;&#22312;&#19968;&#27573;&#26102;&#38388;&#20869;&#23601;&#19981;&#20250;&#20877;&#25191;&#34892;&#35813;&#25805;&#20316;&#65292;&#32780;&#26159;&#36208;&#39044;&#20808;&#35774;&#23450;&#22909;&#30340;&#36923;&#36753;&#65292;&#20363;&#22914;&#30452;&#25509;&#25243;&#20986;&#24322;&#24120;&#65292;&#25110;&#32773;&#26159;&#36820;&#22238;&#19968;&#20010;&#20934;&#22791;&#22909;&#30340;&#32467;&#26524;&#12290;</p>
<p class="p-img"><img alt="{%}" src="file:///[PrimaryStorage]local_pic/XueTouSpring_CongRuMenDaoXiangMuShiZhan/image00797.jpeg"/></p>
<p class="p-img-title"><strong>&#22270; 15-1&#12288;Martin Fowler &#21338;&#23458;&#20013;&#25551;&#36848;&#30340;&#26029;&#36335;&#22120;&#24037;&#20316;&#31034;&#24847;&#22270;</strong></p>
<p>&#36890;&#24120;&#65292;&#26029;&#36335;&#22120;&#20250;&#26377;&#33258;&#24049;&#30340;&#29366;&#24577;&#26426;&#65292;&#23427;&#23601;&#26159;&#22312;&#20197;&#19979;&#36825;&#20960;&#31181;&#29366;&#24577;&#19979;&#24037;&#20316;&#30340;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#20851;&#38381;</strong>&#65292;&#27491;&#24120;&#36827;&#34892;&#25805;&#20316;&#65292;&#36807;&#31243;&#20013;&#35760;&#24405;&#19979;&#19968;&#27573;&#26102;&#38388;&#20869;&#30340;&#25253;&#38169;&#24773;&#20917;&#65292;&#22914;&#26524;&#36798;&#21040;&#38408;&#20540;&#21017;&#23558;&#26029;&#36335;&#22120;&#20999;&#25442;&#33267;&#8220;&#25171;&#24320;&#8221;&#29366;&#24577;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#25171;&#24320;</strong>&#65292;&#19981;&#20877;&#21457;&#36215;&#25805;&#20316;&#65292;&#30452;&#25509;&#25191;&#34892;&#39044;&#32622;&#36923;&#36753;&#65292;&#25243;&#20986;&#24322;&#24120;&#25110;&#32773;&#36820;&#22238;&#20934;&#22791;&#22909;&#30340;&#32467;&#26524;&#65307;&#26029;&#36335;&#22120;&#25171;&#24320;&#19968;&#27573;&#26102;&#38388;&#21518;&#65288;&#36890;&#24120;&#20250;&#26377;&#20010;&#35745;&#26102;&#22120;&#20043;&#31867;&#30340;&#19996;&#35199;&#65289;&#20250;&#36827;&#20837;&#8220;&#21322;&#24320;&#8221;&#29366;&#24577;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><strong>&#21322;&#24320;</strong>&#65292;&#22312;&#25318;&#25130;&#22823;&#37096;&#20998;&#25805;&#20316;&#30340;&#21516;&#26102;&#65292;&#26377;&#23569;&#25968;&#25805;&#20316;&#20250;&#24471;&#21040;&#25191;&#34892;&#65307;&#22914;&#26524;&#36825;&#20123;&#25805;&#20316;&#25191;&#34892;&#25104;&#21151;&#21017;&#20195;&#34920;&#38382;&#39064;&#22823;&#27010;&#29575;&#24050;&#32463;&#35299;&#20915;&#20102;&#65292;&#26029;&#36335;&#22120;&#20250;&#20999;&#25442;&#33267;&#8220;&#20851;&#38381;&#8221;&#29366;&#24577;&#65292;&#21542;&#21017;&#20999;&#25442;&#33267;&#8220;&#25171;&#24320;&#8221;&#29366;&#24577;&#12290;</li>
</ul>
<p>&#22312;&#23454;&#38469;&#20351;&#29992;&#36807;&#31243;&#20013;&#65292;&#26029;&#36335;&#22120;&#27169;&#24335;&#21516;&#26679;&#20063;&#26377;&#19981;&#23569;&#27880;&#24847;&#20107;&#39033;&#65292;&#20363;&#22914;&#65292;&#19978;&#28216;&#35201;&#33021;&#27491;&#30830;&#22788;&#29702;&#26029;&#36335;&#22120;&#25171;&#24320;&#26102;&#30340;&#24322;&#24120;&#25110;&#32773;&#36820;&#22238;&#32467;&#26524;&#65307;&#19982;&#37325;&#35797;&#27169;&#24335;&#19968;&#26679;&#65292;&#38024;&#23545;&#19979;&#28216;&#25243;&#20986;&#30340;&#24322;&#24120;&#65292;&#21487;&#20197;&#21306;&#21035;&#23545;&#24453;&#65292;&#26377;&#20123;&#20005;&#37325;&#30340;&#24322;&#24120;&#24050;&#32463;&#25658;&#24102;&#20102;&#36275;&#22815;&#30340;&#20449;&#24687;&#65292;&#21487;&#20197;&#24555;&#36895;&#25171;&#24320;&#26029;&#36335;&#22120;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#33329;&#22721;&#27169;&#24335;</strong></p>
<p><strong>&#33329;&#22721;</strong>&#65288;Bulkhead&#65289;&#19968;&#35789;&#28304;&#33258;&#36896;&#33337;&#25216;&#26415;&#65292;&#26681;&#25454;&#29992;&#36884;&#20998;&#25104;&#22909;&#20960;&#31181;&#65292;&#25105;&#20204;&#19968;&#33324;&#35828;&#30340;&#37117;&#26159;&#27700;&#23494;&#33329;&#22721;&#12290;&#23427;&#23558;&#33337;&#33329;&#20005;&#23494;&#22320;&#20998;&#25104;&#20102;&#22909;&#20960;&#20010;&#29420;&#31435;&#30340;&#37096;&#20998;&#65292;&#23601;&#31639;&#26377;&#19968;&#20004;&#20010;&#33329;&#30772;&#25439;&#36827;&#27700;&#65292;&#30001;&#20110;&#33329;&#22721;&#30340;&#23384;&#22312;&#65292;&#27700;&#19981;&#20250;&#36827;&#20837;&#20854;&#20182;&#33329;&#65292;&#20197;&#27492;&#26469;&#20445;&#35777;&#33337;&#19981;&#20250;&#27785;&#12290;</p>
<p>&#21516;&#26679;&#30340;&#35774;&#35745;&#24605;&#36335;&#21487;&#20197;&#36816;&#29992;&#21040;&#24494;&#26381;&#21153;&#30340;&#21487;&#29992;&#24615;&#20445;&#38556;&#19978;&#12290;&#35774;&#24819;&#36825;&#26679;&#19968;&#20010;&#22330;&#26223;&#65292;&#25105;&#20204;&#30340;&#31995;&#32479;&#20250;&#21516;&#26102;&#22788;&#29702;&#19994;&#21153; A &#21644;&#19994;&#21153; B&#65292;&#20004;&#32773;&#30340;&#19979;&#28216;&#26381;&#21153;&#38142;&#36335;&#19981;&#21516;&#65292;&#22312; A &#30340;&#38142;&#36335;&#20986;&#29616;&#38382;&#39064;&#26102;&#65292;&#22914;&#26524;&#20004;&#32773;&#20351;&#29992;&#21516;&#19968;&#20010;&#32447;&#31243;&#27744;&#65292;&#25152;&#26377;&#32447;&#31243;&#36164;&#28304;&#26377;&#21487;&#33021;&#20840;&#37117;&#34987;&#25302;&#27515;&#65292;&#23548;&#33268;&#21407;&#26412;&#21487;&#20197;&#19981;&#21463;&#24433;&#21709;&#30340;&#19994;&#21153; B &#20063;&#26080;&#27861;&#22788;&#29702;&#20102;&#12290;&#36825;&#26102;&#23601;&#21487;&#20197;&#32771;&#34385;&#23558;&#20004;&#32773;&#30340;&#32447;&#31243;&#27744;&#20998;&#24320;&#65292;&#20551;&#35774;&#19968;&#20849; 100 &#20010;&#32447;&#31243;&#65292;A &#20998;&#21040; 50 &#20010;&#65292;B &#20998;&#21040; 50 &#20010;&#65292;&#34429;&#28982;&#19994;&#21153; A &#20381;&#28982;&#26377;&#38382;&#39064;&#65292;&#20294;&#33267;&#23569;&#25105;&#20204;&#20445;&#20303;&#20102;&#19994;&#21153; B&#12290;</p>
<p>&#22914;&#26524;&#19968;&#20010;&#31995;&#32479;&#20013;&#20250;&#20381;&#36182;&#22810;&#20010;&#19979;&#28216;&#65292;&#20026;&#23427;&#20204;&#20998;&#21035;&#37197;&#32622;&#32447;&#31243;&#27744;&#25110;&#32773;&#23458;&#25143;&#31471;&#23601;&#33021;&#36215;&#21040;&#33329;&#22721;&#30340;&#20316;&#29992;&#12290;&#23545;&#20110;&#21516;&#19968;&#20010;&#19979;&#28216;&#26381;&#21153;&#65292;&#22914;&#26524;&#23427;&#30001;&#38598;&#32676;&#26500;&#25104;&#65292;&#29978;&#33267;&#21487;&#20197;&#20026;&#38598;&#32676;&#20013;&#30340;&#19981;&#21516;&#23454;&#20363;&#20998;&#21035;&#26500;&#24314;&#23458;&#25143;&#31471;&#12290;&#20294;&#21363;&#20351;&#22914;&#27492;&#65292;&#25105;&#20204;&#30340;&#20195;&#30721;&#36824;&#26159;&#35201;&#22788;&#29702;&#36229;&#26102;&#31561;&#38382;&#39064;&#65292;&#32780;&#19988;&#38656;&#35201;&#33021;&#27491;&#30830;&#22320;&#22788;&#29702;&#19979;&#28216;&#30340;&#21508;&#31181;&#24322;&#24120;&#12290;&#23545;&#20110;&#21521;&#19978;&#25552;&#20379;&#26381;&#21153;&#30340;&#31995;&#32479;&#65292;&#21487;&#20197;&#36890;&#36807;&#37096;&#32626;&#22810;&#22871;&#38548;&#31163;&#30340;&#38598;&#32676;&#26469;&#23454;&#29616;&#33329;&#22721;&#38548;&#31163;&#12290;&#22914;&#26524;&#26159;&#22788;&#29702;&#28040;&#24687;&#30340;&#31995;&#32479;&#65292;&#21017;&#21487;&#20197;&#32771;&#34385;&#19981;&#21516;&#30340;&#38598;&#32676;&#28040;&#36153;&#19981;&#21516;&#30340;&#28040;&#24687;&#38431;&#21015;&#12290;</p>
<p>&#24403;&#28982;&#65292;&#33329;&#22721;&#27169;&#24335;&#20063;&#26159;&#26377;&#25104;&#26412;&#30340;&#65292;&#25105;&#20204;&#38656;&#35201;&#26681;&#25454;&#19994;&#21153;&#19982;&#26550;&#26500;&#21512;&#29702;&#22320;&#35268;&#21010;&#33329;&#22721;&#12290;&#24590;&#20040;&#36827;&#34892;&#38548;&#31163;&#65311;&#26080;&#35770;&#26159;&#23458;&#25143;&#31471;&#12289;&#36830;&#25509;&#27744;&#65292;&#36824;&#26159;&#36827;&#31243;&#12289;&#32447;&#31243;&#12289;&#20449;&#21495;&#37327;&#65292;&#36825;&#20123;&#36164;&#28304;&#23545;&#31995;&#32479;&#26469;&#35828;&#37117;&#26159;&#26114;&#36149;&#30340;&#24320;&#38144;&#65292;&#24212;&#35813;&#23613;&#37327;&#35753;&#23427;&#20204;&#29289;&#26377;&#25152;&#20540;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#38480;&#27969;&#22120;&#27169;&#24335;</strong></p>
<p>&#31995;&#32479;&#30340;&#23481;&#37327;&#19981;&#26159;&#26080;&#38480;&#30340;&#8212;&#8212;&#34429;&#28982;&#23481;&#22120;&#25216;&#26415;&#24050;&#32463;&#21313;&#20998;&#25104;&#29087;&#65292;&#22312; Kubernetes &#20013;&#25353;&#38656;&#24377;&#24615;&#25552;&#20379; Pod &#24456;&#26041;&#20415;&#65292;&#20294;&#24212;&#29992;&#32972;&#21518;&#30340;&#25968;&#25454;&#24211;&#21364;&#27809;&#21150;&#27861;&#20687;&#24212;&#29992;&#37027;&#26679;&#24555;&#36895;&#20280;&#32553;&#65307;&#21448;&#25110;&#32773;&#26159;&#19968;&#20123;&#35831;&#27714;&#38656;&#35201;&#20351;&#29992;&#26114;&#36149;&#30340;&#36164;&#28304;&#65292;&#20294;&#26412;&#36523;&#24182;&#19981;&#33021;&#25552;&#20379;&#22826;&#39640;&#30340;&#24182;&#21457;&#37327;&#12290;&#22312;&#36825;&#20123;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#33021;&#20570;&#30340;&#19981;&#26159;&#26469;&#32773;&#19981;&#25298;&#22320;&#25509;&#21463;&#25152;&#26377;&#30340;&#35831;&#27714;&#65292;&#32780;&#26159;&#23613;&#37327;&#23558;&#35831;&#27714;&#25968;&#37327;&#25511;&#21046;&#22312;&#33021;&#21147;&#33539;&#22260;&#20869;&#65292;&#36825;&#23601;&#26159;<strong>&#38480;&#27969;&#22120;</strong>&#65288;Rate Limiter&#65289;&#27169;&#24335;&#35201;&#20570;&#30340;&#20107;&#65292;&#31616;&#21333;&#26469;&#35828;&#65292;&#38480;&#21046;&#19978;&#28216;&#35831;&#27714;&#30340;&#25968;&#37327;&#65292;&#36991;&#20813;&#26381;&#21153;&#36164;&#28304;&#34987;&#28389;&#29992;&#12290;&#22914;&#26524;&#35201;&#21644;&#26029;&#36335;&#22120;&#20570;&#20010;&#23545;&#27604;&#65292;&#26029;&#36335;&#22120;&#26159;&#22312;&#19979;&#28216;&#26381;&#21153;&#21457;&#29983;&#25925;&#38556;&#26102;&#20445;&#35777;&#26381;&#21153;&#35843;&#29992;&#26041;&#30340;&#23433;&#20840;&#65292;&#32780;&#38480;&#27969;&#22120;&#21017;&#26159;&#35201;&#20445;&#25252;&#26381;&#21153;&#25552;&#20379;&#26041;&#30340;&#23433;&#20840;&#65292;&#36991;&#20813;&#23427;&#34987;&#19978;&#28216;&#27946;&#23792;&#21387;&#22446;&#12290;</p>
<p>&#38480;&#27969;&#20063;&#26377;&#24456;&#22810;&#38376;&#36947;&#65292;&#25105;&#20204;&#21487;&#20197;&#26681;&#25454;&#19981;&#21516;&#30340;&#24773;&#20917;&#22312;&#19981;&#21516;&#30340;&#32500;&#24230;&#19978;&#36827;&#34892;&#25511;&#21046;&#65292;&#20363;&#22914;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22522;&#20110;&#20840;&#23616;&#27969;&#37327;&#36827;&#34892;&#38480;&#27969;&#65292;&#36825;&#26159;&#27604;&#36739;&#31895;&#25918;&#30340;&#27169;&#24335;&#65292;&#20063;&#27604;&#36739;&#23481;&#26131;&#23454;&#29616;&#65292;&#36890;&#36807;&#19968;&#20010;&#20840;&#23616;&#30340;&#35745;&#25968;&#22120;&#23601;&#33021;&#20915;&#23450;&#25318;&#36824;&#26159;&#19981;&#25318;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22522;&#20110;&#29305;&#23450;&#25509;&#21475;&#36827;&#34892;&#38480;&#27969;&#65292;&#25105;&#20204;&#21487;&#20197;&#38024;&#23545;&#19981;&#21516;&#30340;&#25509;&#21475;&#35774;&#32622;&#19981;&#21516;&#30340;&#38408;&#20540;&#65292;&#20998;&#21035;&#35745;&#25968;&#65292;&#19968;&#20010;&#25509;&#21475;&#34987;&#38480;&#27969;&#19981;&#20250;&#24433;&#21709;&#21035;&#30340;&#25509;&#21475;&#65292;&#36825;&#37324;&#36824;&#26377;&#19968;&#20123;&#21464;&#31181;&#65292;&#20363;&#22914;&#22522;&#20110;&#25509;&#21475;&#30340;&#29305;&#23450;&#21442;&#25968;&#36827;&#34892;&#38480;&#27969;&#31561;&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22522;&#20110;&#29305;&#23450;&#35831;&#27714;&#26469;&#28304;&#38480;&#27969;&#65292;&#19968;&#20010;&#31995;&#32479;&#20250;&#25509;&#25910;&#22810;&#20010;&#19978;&#28216;&#31995;&#32479;&#30340;&#35831;&#27714;&#65292;&#20063;&#35768;&#26576;&#20010;&#31995;&#32479;&#30001;&#20110; Bug &#25110;&#32773;&#19994;&#21153;&#37327;&#38497;&#22686;&#21457;&#36215;&#20102;&#22823;&#37327;&#35831;&#27714;&#65292;&#36825;&#26102;&#38480;&#21046;&#23427;&#30340;&#35831;&#27714;&#23601;&#22909;&#65292;&#20854;&#20182;&#19978;&#28216;&#21487;&#20197;&#27491;&#24120;&#35775;&#38382;&#31995;&#32479;&#12290;</li>
</ul>
<p>&#22312;&#38408;&#20540;&#30340;&#35774;&#32622;&#26041;&#38754;&#65292;&#21487;&#20197;&#36873;&#25321;&#21608;&#26399;&#26102;&#38388;&#20869;&#25509;&#25910;&#22810;&#23569;&#35831;&#27714;&#65292;&#22914;&#26524;&#36825;&#20010;&#21608;&#26399;&#26159;&#31186;&#65292;&#37027;&#23601;&#26159;&#36890;&#24120;&#25152;&#35828;&#30340; <strong>TPS</strong>&#65288;Transaction Per Second&#65289;&#25110; QPS&#65288;Query Per Second&#65289;&#65307;&#36824;&#21487;&#20197;&#26159;&#24182;&#21457;&#35831;&#27714;&#25968;&#65292;&#20063;&#23601;&#26159;&#21516;&#19968;&#26102;&#38388;&#21487;&#20197;&#25509;&#25910;&#30340;&#35831;&#27714;&#25968;&#37327;&#65292;&#21363;<strong>&#24182;&#21457;&#25968;</strong>&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">1</span>&#35813;&#20070;&#30340;&#26368;&#26032;&#29256;&#20013;&#25991;&#29256;&#20070;&#21517;&#20026;&#12298;&#21457;&#24067;&#65281;&#35774;&#35745;&#19982;&#37096;&#32626;&#31283;&#23450;&#30340;&#20998;&#24067;&#24335;&#31995;&#32479;&#65288;&#31532; 2 &#29256;&#65289;&#12299;&#65292;&#20110; 2020 &#24180;&#30001;&#20154;&#27665;&#37038;&#30005;&#20986;&#29256;&#31038;&#20986;&#29256;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">2</span>2014 &#24180;&#65292;Martin Fowler &#22312;&#20182;&#30340;&#21338;&#23458;&#19978;&#21457;&#34920;&#20102;&#19968;&#31687;&#21517;&#20026;&#8220;CircuitBreaker&#8221;&#30340;&#25991;&#31456;&#12290;</p><h3 id="nav_point_231">15.1.2&#12288;&#36890;&#36807; AOP &#23454;&#29616;&#31616;&#21333;&#30340;&#23481;&#38169;</h3><p>&#22312;&#20102;&#35299;&#20102;&#20960;&#31181;&#24120;&#35265;&#30340;&#27169;&#24335;&#21518;&#65292;&#25105;&#20204;&#21487;&#20197;&#20808;&#33258;&#24049;&#21160;&#25163;&#65292;&#22312;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#26576;&#20123;&#22330;&#26223;&#19979;&#23454;&#29616;&#20854;&#20013;&#30340;&#19968;&#20123;&#26381;&#21153;&#23481;&#38169;&#30340;&#27169;&#24335;&#65292;&#32780;&#38750;&#30452;&#25509;&#22871;&#29992;&#29616;&#25104;&#30340;&#26694;&#26550;&#12290;&#20063;&#35768;&#25105;&#20204;&#20889;&#30340;&#20195;&#30721;&#20250;&#26377;&#36825;&#26679;&#25110;&#37027;&#26679;&#30340;&#32771;&#34385;&#19981;&#21608;&#65292;&#20294;&#36825;&#23545;&#29702;&#35299;&#36825;&#20123;&#26381;&#21153;&#23481;&#38169;&#30340;&#27169;&#24335;&#24456;&#26377;&#24110;&#21161;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#20043;&#21069;&#30340;&#22902;&#33590;&#24215;&#21482;&#33021;&#19979;&#21333;&#65292;&#20294;&#19979;&#21333;&#21518;&#24182;&#27809;&#26377;&#25903;&#20184;&#65292;&#19981;&#20184;&#38065;&#33258;&#28982;&#20063;&#23601;&#19981;&#33021;&#20986;&#36135;&#65292;&#25152;&#20197;&#24403;&#21153;&#20043;&#24613;&#23601;&#26159;&#35201;&#20026;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#22686;&#21152;&#19968;&#20010;&#20184;&#27454;&#21151;&#33021;&#12290;&#29616;&#22312;&#25910;&#21333;&#36890;&#24120;&#20250;&#29992;&#26234;&#33021; POS &#26426;&#65292;&#32780; POS &#26426;&#20598;&#23572;&#20250;&#22240;&#20026;&#32593;&#32476;&#31561;&#22240;&#32032;&#20184;&#27454;&#19981;&#25104;&#21151;&#65292;&#36825;&#26102;&#21482;&#33021;&#40635;&#28902;&#23458;&#20154;&#20877;&#37325;&#26032;&#20184;&#20960;&#27425;&#65292;&#36830;&#32493;&#22833;&#36133;&#30340;&#35805;&#65292;&#23601;&#20808;&#31561;&#31561;&#20877;&#35828;&#65292;&#19981;&#35201;&#24613;&#20110;&#21453;&#22797;&#25903;&#20184;&#12290;</p>
</blockquote><ol>
<li><p><strong>&#19994;&#21153;&#36923;&#36753;&#35843;&#25972;</strong></p>
<p>&#20808;&#26469;&#29702;&#35299;&#19968;&#19979;&#36825;&#20010;&#38656;&#27714;&#65292;&#36339;&#36807;&#21508;&#31181;&#23545;&#25509;&#31532;&#19977;&#26041;&#25903;&#20184;&#30340;&#29615;&#33410;&#65292;&#25105;&#20204;&#30452;&#25509;&#25226;&#25903;&#20184;&#31616;&#21270;&#25104;&#20462;&#25913;&#35746;&#21333;&#29366;&#24577;&#12290;7.1 &#33410;&#37324;&#23450;&#20041;&#20102; <code>OrderStatus</code> &#26522;&#20030;&#65292;&#37324;&#38754;&#30340;&#20116;&#31181;&#29366;&#24577;&#20998;&#21035;&#26159;&#24050;&#19979;&#21333;&#12289;&#24050;&#25903;&#20184;&#12289;&#21046;&#20316;&#20013;&#12289;&#24050;&#23436;&#25104;&#21644;&#24050;&#21462;&#36135;&#65292;&#36825;&#20116;&#31181;&#29366;&#24577;&#21482;&#33021;&#21333;&#21521;&#21464;&#21270;&#12290;&#20026;&#20102;&#26041;&#20415;&#20570;&#21028;&#26029;&#65292;&#25105;&#20204;&#20026;&#27599;&#20010;&#26522;&#20030;&#20540;&#22686;&#21152;&#19968;&#20010;&#32034;&#24341;&#20540;&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 15-1<span class="&#27880;&#37322;&#32534;&#21495;">3</span> &#25152;&#31034;&#12290;&#21464;&#26356;&#26102;&#21482;&#38656;&#35201;&#21028;&#26029;&#32034;&#24341;&#20540;&#22823;&#23567;&#23601;&#22909;&#20102;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">4</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-1</strong>&#12288;&#20462;&#25913;&#21518;&#30340; <code>OrderStatus</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public enum OrderStatus {
    ORDERED(0), PAID(1), MAKING(2), FINISHED(3), TAKEN(4);

    private int index;

    OrderStatus(int index) {
        this.index = index;
    }

    public int getIndex() {
        return this.index;
    }
}</code></pre>
<p>&#20462;&#25913;&#35746;&#21333;&#23545;&#35937;&#30340;&#29366;&#24577;&#65292;&#22312; <code>REST</code> &#25509;&#21475;&#20013;&#36890;&#24120;&#29992; HTTP &#30340; <code>PUT</code> &#26041;&#27861;&#23454;&#29616;&#65292;&#22240;&#27492;&#22312; <code>OrderController</code> &#20013;&#22686;&#21152;&#19968;&#20010;&#24102;&#26377; <code>@PutMapping</code> &#27880;&#35299;&#30340; <code>modifyOrderStatus()</code> &#26041;&#27861;&#65292;&#20855;&#20307;&#23450;&#20041;&#22914;&#20195;&#30721;&#31034;&#20363; 15-2 &#25152;&#31034;&#12290;&#23427;&#30340;&#20027;&#35201;&#36923;&#36753;&#24182;&#19981;&#22797;&#26434;&#65292;&#20808;&#26816;&#26597;&#25552;&#20132;&#30340; <code>StatusForm</code> &#23545;&#35937;&#20869;&#23481;&#26159;&#21542;&#27491;&#30830;&#65292;&#38543;&#21518;&#33719;&#24471;&#35746;&#21333;&#30340;&#30446;&#26631;&#29366;&#24577;&#65292;&#29992;&#23427;&#26469;&#35843;&#29992; <code>OrderService</code> &#30340; <code>modifyOrderStatus()</code> &#26041;&#27861;&#65288;&#35813;&#26041;&#27861;&#30340;&#36820;&#22238;&#20540;&#23601;&#26159;&#20462;&#25913;&#20102;&#29366;&#24577;&#30340;&#35746;&#21333;&#23545;&#35937;&#65289;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-2</strong>&#12288;&#36127;&#36131;&#20462;&#25913;&#35746;&#21333;&#29366;&#24577;&#30340; <code>modifyOrderStatus()</code> &#26041;&#27861;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @ResponseBody
    @PutMapping(consumes = MediaType.APPLICATION_JSON_VALUE,
                produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity&lt;Order&gt; modifyOrderStatus(@RequestBody @Valid StatusForm form,
                                                   BindingResult result) {
        if (result.hasErrors()) {
            return ResponseEntity.badRequest().body(null);
        }
        log.info("&#35745;&#21010;&#23558;ID={}&#30340;&#35746;&#21333;&#29366;&#24577;&#26356;&#26032;&#20026;{}", form.getId(), form.getStatus());
        OrderStatus status = OrderStatus.valueOf(form.getStatus());
        if (status == null) {
            log.warn("&#29366;&#24577;{}&#19981;&#27491;&#30830;", form.getStatus());
            return ResponseEntity.badRequest().body(null);
        }
        Order order = orderService.modifyOrderStatus(form.getId(), status);
        return order == null ? ResponseEntity.badRequest().body(null) : ResponseEntity.ok(order);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p><code>StatusForm</code> &#23545;&#35937;&#23601;&#27604;&#36739;&#31616;&#21333;&#20102;&#65292;&#23601;&#20256;&#19968;&#20010;&#35746;&#21333;&#21495;&#21644;&#30446;&#26631;&#29366;&#24577;&#12290;&#36890;&#24120;&#34920;&#21333;&#23545;&#35937;&#37324;&#29366;&#24577;&#26522;&#20030;&#37117;&#20250;&#29992;&#23383;&#31526;&#20018;&#25110;&#32773;&#20854;&#20182;&#22522;&#30784;&#31867;&#22411;&#26469;&#34920;&#31034;&#65292;&#21518;&#32493;&#29992;&#20195;&#30721;&#23558;&#23427;&#20877;&#36716;&#25104;&#23545;&#24212;&#30340;&#26522;&#20030;&#20540;&#12290;&#21478;&#22806;&#65292;&#31867;&#30340;&#23450;&#20041;&#19978;&#36824;&#22686;&#21152;&#20102;&#26657;&#39564;&#30456;&#20851;&#30340;&#27880;&#35299;&#65292;&#26041;&#20415;&#36827;&#34892;&#21028;&#26029;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-3 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-3</strong>&#12288;&#34920;&#31034;&#35746;&#21333;&#29366;&#24577;&#20462;&#25913;&#35831;&#27714;&#30340; <code>StatusForm</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Getter
@Setter
@Builder
public class StatusForm {
    @NotNull
    private Long id;
    @NotBlank
    private String status;
}</code></pre>
<p>&#26381;&#21153;&#31471;&#25340;&#22270;&#37324;&#30340;&#26368;&#21518;&#19968;&#22359;&#23601;&#26159; <code>OrderService</code> &#20013;&#20462;&#25913;&#35746;&#21333;&#29366;&#24577;&#30340;&#26041;&#27861;&#12290;&#20195;&#30721;&#31034;&#20363; 15-4 &#20889;&#24471;&#27604;&#36739;&#31616;&#21333;&#65292;&#25110;&#32773;&#35828;&#36807;&#20110;&#31616;&#21333;&#20102;&#65292;&#21482;&#21152;&#36733;&#20102;&#25351;&#23450;&#35746;&#21333;&#21495;&#30340;&#25968;&#25454;&#65292;&#21028;&#26029;&#20102;&#20043;&#21069;&#30340;&#29366;&#24577;&#65292;&#22914;&#26524;&#28385;&#36275;&#20462;&#25913;&#30340;&#26465;&#20214;&#23601;&#20462;&#25913;&#29366;&#24577;&#24182;&#36820;&#22238;&#20462;&#25913;&#21518;&#30340;&#23545;&#35937;&#12290;&#22312;&#23454;&#38469;&#24037;&#20316;&#20013;&#65292;&#25105;&#20204;&#20026;&#20102;&#36991;&#20813;&#35746;&#21333;&#34987;&#24182;&#21457;&#20462;&#25913;&#65292;&#36890;&#24120;&#20250;&#37117;&#20250;&#23545;&#25968;&#25454;&#21152;&#38145;&#65292;&#20363;&#22914;&#29992;&#24754;&#35266;&#38145;&#20808;&#38145;&#20303;&#35746;&#21333;&#65292;&#20877;&#20462;&#25913;&#29366;&#24577; <span class="&#27880;&#37322;&#32534;&#21495;">5</span>&#65307;&#25110;&#32773;&#29992;&#20048;&#35266;&#38145;&#65292;&#24102;&#29366;&#24577;&#26356;&#26032;&#65292;&#22914;&#26524;&#26356;&#26032;&#22833;&#36133;&#23601;&#35828;&#26126;&#35746;&#21333;&#34987;&#20854;&#20182;&#20154;&#20462;&#25913;&#20102;&#12290;&#27492;&#22806;&#65292;&#26356;&#26032;&#25968;&#25454;&#19968;&#23450;&#35201;&#20462;&#25913;&#35760;&#24405;&#30340;&#26356;&#26032;&#26102;&#38388;&#23383;&#27573;&#65292;&#27492;&#22788;&#26159;&#36890;&#36807; <code>Order.updateTime</code> &#23646;&#24615;&#19978;&#30340; <code>@UpdateTimestamp</code> &#27880;&#35299;&#26469;&#23454;&#29616;&#26356;&#26032;&#26102;&#33258;&#21160;&#20462;&#25913;&#26102;&#38388;&#25139;&#30340;&#12290;&#22914;&#26524;&#20320;&#29992;&#30340;&#26159; MyBatis &#31561;&#20854;&#20182; ORM &#26694;&#26550;&#65292;&#25110;&#32773;&#30452;&#25509;&#20351;&#29992;&#20102; JDBC&#65292;&#35760;&#24471;&#35201;&#20570;&#19968;&#23450;&#30340;&#20462;&#25913;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-4</strong>&#12288;&#20462;&#25913;&#35746;&#21333;&#29366;&#24577;&#30340; <code>modifyOrderStatus()</code> &#26041;&#27861;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Transactional
@Slf4j
public class OrderService {
    public Order modifyOrderStatus(Long id, OrderStatus status) {
           Optional&lt;Order&gt; order = orderRepository.findById(id);
        if (!order.isPresent()) {
            log.warn("&#35746;&#21333;{}&#19981;&#23384;&#22312;", id);
            return null;
        }
        OrderStatus old = order.get().getStatus();
        if (status.getIndex() != old.getIndex() + 1) {
            log.warn("&#35746;&#21333;{}&#26080;&#27861;&#20174;&#29366;&#24577;{}&#25913;&#20026;{}", id, old, status);
            return null;
        }
        order.get().setStatus(status);
        return orderRepository.save(order.get());
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#23436;&#25104;&#26381;&#21153;&#31471;&#30340;&#35843;&#25972;&#21518;&#65292;&#25509;&#19979;&#26469;&#23601;&#26159;&#35843;&#25972;&#23545;&#24212;&#30340;&#23458;&#25143;&#31471;&#65292;&#20808;&#26159;&#23454;&#29616;&#23558;&#35746;&#21333;&#20462;&#25913;&#20026;&#24050;&#25903;&#20184;&#29366;&#24577;&#30340;&#25805;&#20316;&#65292;&#20877;&#26469;&#28155;&#21152;&#23481;&#38169;&#21151;&#33021;&#65288;&#20027;&#35201;&#26159;&#37325;&#35797;&#21644;&#26029;&#36335;&#65289;&#12290;&#27492;&#22788;&#65292;&#20197;&#20043;&#21069;&#20351;&#29992; OpenFeign &#30340;&#20363;&#23376;&#20316;&#20026;&#22522;&#30784;&#36827;&#34892;&#20462;&#25913;&#65292;&#22312; <code>OrderService</code> &#20013;&#22686;&#21152; <code>modifyOrderStatus()</code>&#65292;&#22914;&#20195;&#30721;&#31034;&#20363; 15-5 &#25152;&#31034;&#12290;&#20854;&#20013;&#29992;&#21040;&#30340; <code>StatusForm</code> &#19982;&#20195;&#30721;&#31034;&#20363; 15-3 &#22522;&#26412;&#19968;&#33268;&#65292;&#21482;&#26159;&#19981;&#38656;&#35201;&#22312;&#23646;&#24615;&#19978;&#28155;&#21152;&#26657;&#39564;&#30340;&#27880;&#35299;&#65292;&#20063;&#23601;&#26159;&#19981;&#38656;&#35201; <code>@NotNull</code> &#21644; <code>@NotBlank</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-5</strong>&#12288;&#22686;&#21152;&#20102;&#20462;&#25913;&#35746;&#21333;&#29366;&#24577;&#26041;&#27861;&#30340; Feign &#23458;&#25143;&#31471;&#25509;&#21475;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@FeignClient(contextId = "orderService", name = "binarytea", path = "/order")
public interface OrderService {
    @PutMapping(consumes = MediaType.APPLICATION_JSON_VALUE,
                produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity&lt;Order&gt; modifyOrderStatus(@RequestBody StatusForm form);
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#38543;&#21518;&#65292;&#22312;&#22788;&#29702;&#35746;&#21333;&#30340; <code>OrderRunner</code> &#20013;&#22686;&#21152;&#25903;&#20184;&#30340;&#36923;&#36753;&#65292;&#20854;&#23454;&#23601;&#26159;&#25340;&#35013; <code>StatusForm</code>&#65292;&#25226;&#23427;&#20256;&#32473; <code>modifyOrderStatus()</code>&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-6 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-6</strong>&#12288;&#22686;&#21152;&#20102;&#25903;&#20184;&#36923;&#36753;&#30340; <code>OrderRunner</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(5)
@Setter
@Slf4j
public class OrderRunner implements ApplicationRunner {
    @Autowired
    private OrderService orderService;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        // &#30465;&#30053;&#20043;&#21069;&#21019;&#24314;&#35746;&#21333;&#30340;&#20195;&#30721;
        // response&#30340;&#31867;&#22411;&#26159;ResponseEntity&lt;learning.spring.customer.model.Order&gt;
        log.info("&#24320;&#22987;&#25903;&#20184;&#35746;&#21333;&#65306;{}", response.getBody().getId());
        StatusForm sf = StatusForm.builder()
            .id(response.getBody().getId())
            .status("PAID").build();
        response = orderService.modifyOrderStatus(sf);
        log.info("HTTP Status: {}, Headers: {}", response.getStatusCode(), response.getHeaders());
        log.info("Body: {}", response.getBody());
    }
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#24320;&#21457;&#23481;&#38169;&#21151;&#33021;</strong></p>
<p>&#21069;&#38754;&#26159;&#26368;&#22522;&#26412;&#30340;&#20808;&#19979;&#21333;&#21518;&#25903;&#20184;&#30340;&#19994;&#21153;&#36923;&#36753;&#20195;&#30721;&#65292;&#29616;&#22312;&#35201;&#24320;&#22987;&#21160;&#25163;&#23454;&#29616;&#19968;&#20123;&#27491;&#24120;&#19994;&#21153;&#36923;&#36753;&#20043;&#22806;&#30340;&#19996;&#35199;&#20102;&#8212;&#8212;&#25105;&#20204;&#25171;&#31639;&#22312;&#23458;&#25143;&#31471;&#22686;&#21152;&#31616;&#21333;&#30340;&#37325;&#35797;&#19982;&#29076;&#26029;&#21151;&#33021;&#65292;&#20197;&#27492;&#26469;&#24212;&#23545;&#24322;&#24120;&#24773;&#20917;&#12290;&#20026;&#20102;&#33021;&#22815;&#23545;&#19994;&#21153;&#20195;&#30721;&#26080;&#20405;&#20837;&#65292;&#24182;&#19988;&#20855;&#26377;&#36890;&#29992;&#24615;&#65292;&#25105;&#20204;&#23558;&#29992; Spring AOP &#30340;&#20999;&#38754;&#26469;&#23454;&#29616;&#25152;&#38656;&#30340;&#21151;&#33021;&#12290;&#30001;&#20110;&#38598;&#25104;&#26381;&#21153;&#31471;&#30340; OpenFeign &#25509;&#21475;&#37117;&#25918;&#22312;&#20102; <code>learning.spring.customer.integration</code> &#21253;&#19979;&#38754;&#65292;&#30452;&#25509;&#25318;&#25130;&#20854;&#20013;&#30340;&#26041;&#27861;&#25191;&#34892;&#36807;&#31243;&#23601;&#21487;&#20197;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#36825;&#37324;&#38656;&#35201;&#24378;&#35843;&#19968;&#19979;&#65292;&#31616;&#21333;&#36215;&#35265;&#65292;&#27492;&#22788;&#30340;&#20004;&#20010; AOP &#20999;&#38754;&#21482;&#26159;&#29992;&#26469;&#28436;&#31034;&#37325;&#35797;&#21644;&#29076;&#26029;&#24605;&#36335;&#30340;&#65292;&#20855;&#20307;&#22312;&#29983;&#20135;&#20013;&#20351;&#29992;&#30340;&#36923;&#36753;&#20250;&#26356;&#21152;&#22797;&#26434;&#65292;&#38656;&#35201;&#32771;&#34385;&#22823;&#37327;&#30340;&#24322;&#24120;&#22330;&#26223;&#65292;&#20570;&#24456;&#22810;&#38024;&#23545;&#24615;&#30340;&#20248;&#21270;&#12290;&#22240;&#27492;&#65292;&#21315;&#19975;&#19981;&#35201;&#31616;&#21333;&#22320;&#23558;&#23427;&#20204;&#25644;&#21435;&#29983;&#20135;&#65292;&#32780;&#24212;&#35813;&#20351;&#29992;&#25104;&#29087;&#30340;&#26694;&#26550;&#12290;</p>
</blockquote>
<p>&#20808;&#26469;&#30475;&#30475;&#37325;&#35797;&#20999;&#38754; <code>RetryAspect</code>&#65292;&#35774;&#23450;&#19968;&#20010;&#26368;&#22823;&#37325;&#35797;&#38408;&#20540;&#21644;&#38388;&#38548;&#26102;&#38388;&#65292;&#20363;&#22914;&#20195;&#30721;&#31034;&#20363; 15-7 &#20013;&#35774;&#32622;&#30340;&#23601;&#26159;&#37325;&#35797; 3 &#27425;&#65292;&#27599;&#27425;&#38388;&#38548; 100 &#27627;&#31186;&#12290;&#23558;&#20855;&#20307;&#30340;&#26041;&#27861;&#35843;&#29992;&#25918;&#22312;&#19968;&#20010;&#24490;&#29615;&#20307;&#20869;&#65292;&#22914;&#26524;&#25104;&#21151;&#25191;&#34892;&#21017;&#30452;&#25509;&#36820;&#22238;&#65307;&#25243;&#24322;&#24120;&#30340;&#35805;&#21017;&#35760;&#24405;&#24322;&#24120;&#65292;&#22312;&#37325;&#35797;&#27425;&#25968;&#29992;&#23436;&#21518;&#25243;&#20986;&#26368;&#21518;&#35760;&#24405;&#30340;&#24322;&#24120;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-7</strong>&#12288;&#31616;&#21333;&#30340;&#37325;&#35797;&#20999;&#38754;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Aspect
@Slf4j
@Order(0)
public class RetryAspect {
    private static final int THRESHOLD = 3;
    private static final int DURATION = 100;

    @Around("execution(* learning.spring.customer.integration..*(..))")
    public Object doWithRetry(ProceedingJoinPoint pjp) throws Throwable {
        String signature = pjp.getSignature().toLongString();
        log.info("&#24102;&#37325;&#35797;&#26426;&#21046;&#35843;&#29992;{}&#26041;&#27861;", signature);
        Object ret = null;
        Exception lastEx = null;
        for (int i = 1; i &lt;= THRESHOLD; i++) {
            try {
                ret = pjp.proceed();
                log.info("&#22312;&#31532;{}&#27425;&#23436;&#25104;&#20102;{}&#35843;&#29992;", i, signature);
                return ret;
            } catch (Exception e) {
                log.warn("&#25191;&#34892;&#22833;&#36133;", e);
                lastEx = e;
                try {
                    TimeUnit.MILLISECONDS.sleep(DURATION);
                } catch (InterruptedException ie) {
                }
            }
        }
        log.error("{}&#26041;&#27861;&#26368;&#32456;&#25191;&#34892;&#22833;&#36133;&#65292;&#25243;&#20986;&#24322;&#24120;{}", signature, lastEx);
        throw lastEx;
    }
}</code></pre>
<p>&#20877;&#26469;&#30475;&#30475;&#26029;&#36335;&#22120; <code>CircuitBreakerAspect</code>&#12290;&#23427;&#30340;&#36923;&#36753;&#20250;&#22797;&#26434;&#19968;&#20123;&#65306;&#25105;&#20204;&#35201;&#35760;&#24405;&#24403;&#21069;&#26041;&#27861;&#30340;&#36830;&#32493;&#22833;&#36133;&#27425;&#25968;&#65292;&#19968;&#26086;&#23427;&#36229;&#36807;&#38408;&#20540;&#65292;&#23601;&#30452;&#25509;&#36820;&#22238; <code>503 Service Unavailable</code> &#25253;&#25991;&#65292;&#19981;&#21457;&#36215;&#35843;&#29992;&#65307;&#29076;&#26029;&#26399;&#38388;&#20877;&#35760;&#24405;&#19968;&#19979;&#29076;&#26029;&#30340;&#27425;&#25968;&#65292;&#38548;&#20960;&#27425;&#20570;&#20010;&#25506;&#27979;&#65292;&#22914;&#26524;&#35843;&#36890;&#20102;&#65292;&#37325;&#32622;&#25152;&#26377;&#35745;&#25968;&#22120;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-8 &#25152;&#31034;&#12290;&#20043;&#25152;&#20197;&#36873;&#25321;&#36830;&#32493;&#22833;&#36133;&#27425;&#25968;&#20316;&#20026;&#26631;&#20934;&#65292;&#26159;&#22240;&#20026;&#23427;&#30340;&#23454;&#29616;&#26368;&#31616;&#21333;&#65292;&#20294;&#26102;&#22909;&#26102;&#22351;&#30340;&#24773;&#20917;&#23427;&#23601;&#26377;&#21487;&#33021;&#26080;&#27861;&#24212;&#23545;&#65292;&#25152;&#20197;&#20063;&#21487;&#20197;&#32771;&#34385;&#29992;&#19968;&#27573;&#26102;&#38388;&#20869;&#30340;&#22833;&#36133;&#27425;&#25968;&#20316;&#20026;&#25171;&#24320;&#26029;&#36335;&#22120;&#30340;&#26631;&#20934;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-8</strong>&#12288;&#26029;&#36335;&#22120;&#20999;&#38754;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Aspect
@Slf4j
@Order(1)
public class CircuitBreakerAspect {
    private static final Integer THRESHOLD = 3;
    private Map&lt;String, AtomicInteger&gt; errorCounter = new ConcurrentHashMap&lt;&gt;();
    private Map&lt;String, AtomicInteger&gt; probeCounter = new ConcurrentHashMap&lt;&gt;();

    @Around("execution(* learning.spring.customer.integration..*(..))")
    public Object doWithCircuitBreaker(ProceedingJoinPoint pjp) throws Throwable {
        String signature = pjp.getSignature().toLongString();
        log.info("&#24102;&#26029;&#36335;&#20445;&#25252;&#25191;&#34892;{}&#26041;&#27861;", signature);
        Object retVal;

        try {
            if (!errorCounter.containsKey(signature)) {
                resetCounter(signature);
            }
            if (errorCounter.get(signature).get() &gt;= THRESHOLD &amp;&amp;
                probeCounter.get(signature).get() &lt; THRESHOLD) {
                log.warn("&#26029;&#36335;&#22120;&#25171;&#24320;&#65292;&#31532;{}&#27425;&#30452;&#25509;&#36820;&#22238;503",probeCounter.get(signature).incrementAndGet());
                return ResponseEntity.status(HttpStatus.SERVICE_UNAVAILABLE).build();
            }
            retVal = pjp.proceed();
            resetCounter(signature);
        } catch (Throwable t) {
            log.warn("&#38169;&#35823;&#35745;&#25968;{}&#27425;&#65292;&#25243;&#20986;{}&#24322;&#24120;", errorCounter.get(signature).incrementAndGet(),
                t.getMessage());
            probeCounter.get(signature).set(0);
            throw t;
        }
        return retVal;
    }

    private void resetCounter(String signature) {
        errorCounter.put(signature, new AtomicInteger(0));
        probeCounter.put(signature, new AtomicInteger(0));
    }
}</code></pre>
<p>&#20197;&#19978;&#23601;&#26159;&#20004;&#20010;&#20999;&#38754;&#12290;&#20026;&#20102;&#31934;&#30830;&#22320;&#25511;&#21046;&#20999;&#38754;&#30340;&#34892;&#20026;&#65292;&#25105;&#20204;&#22312;&#31867;&#19978;&#22686;&#21152;&#20102; <code>@Order</code> &#27880;&#35299;&#26469;&#25351;&#23450;&#23427;&#20204;&#30340;&#39034;&#24207;&#65292;<code>@Order</code> &#30340;&#20540;<strong>&#36234;&#23567;</strong>&#65292;&#25191;&#34892;&#26102;&#30340;&#20248;&#20808;&#32423;&#23601;<strong>&#36234;&#39640;</strong>&#65292;&#20063;&#23601;&#26159;&#20808;&#25191;&#34892;&#12290;&#22312;&#36825;&#20010;&#20363;&#23376;&#37324;&#23601;&#26159;&#20808;&#36827;&#20837; <code>RetryAspect</code> &#30340;&#37325;&#35797;&#36923;&#36753;&#65292;&#20250;&#25191;&#34892; 3 &#27425;&#35843;&#29992;&#65292;&#27599;&#27425;&#35843;&#29992;&#21448;&#26159;&#34987; <code>CircuitBreakerAspect</code> &#22686;&#24378;&#36807;&#30340;&#12290;</p>
<p>&#26368;&#21518;&#65292;&#23558;&#25105;&#20204;&#30340;&#20004;&#20010; AOP &#20999;&#38754;&#37197;&#32622;&#25104; Bean&#65292;&#20063;&#23601;&#26159;&#22312; <code>CustomerApplication</code> &#37324;&#22686;&#21152;&#23545;&#24212;&#30340; <code>@Bean</code> &#26041;&#27861;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-9 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-9</strong>&#12288;&#21253;&#21547;&#23481;&#38169;&#20999;&#38754;&#37197;&#32622;&#30340; <code>CustomerApplication</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@Slf4j
@EnableFeignClients
public class CustomerApplication {
    @Bean
    public RetryAspect retryAspect() {
        return new RetryAspect();
    }

    @Bean
    public CircuitBreakerAspect circuitBreakerAspect() {
        return new CircuitBreakerAspect();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#27979;&#35797;&#23481;&#38169;&#21151;&#33021;</strong></p>
<p>&#29616;&#22312;&#36816;&#34892;&#23458;&#25143;&#31471;&#65292;&#29702;&#35770;&#19978;&#26469;&#35828;&#26159;&#21253;&#21547;&#19968;&#23450;&#30340;&#23481;&#38169;&#33021;&#21147;&#30340;&#65292;&#19981;&#36807;&#36824;&#26159;&#35201;&#35777;&#26126;&#19968;&#19979;&#12290;&#31895;&#26292;&#19968;&#28857;&#30340;&#20570;&#27861;&#26159;&#30452;&#25509;&#22312;&#36816;&#34892; <code>OrderRunner</code> &#30340;&#36807;&#31243;&#20013;&#21152;&#19978;&#19968;&#20123;&#26102;&#38388;&#38388;&#38548;&#65292;&#25163;&#21160;&#20572;&#27490;&#26381;&#21153;&#31471;&#24212;&#29992;&#65292;&#30475;&#30475;&#25928;&#26524;&#12290;&#20294;&#36825;&#26679;&#26174;&#28982;&#19981;&#22815;&#20248;&#38597;&#65292;&#22914;&#26524;&#33021;&#29992;&#33258;&#21160;&#21270;&#27979;&#35797;&#26469;&#39564;&#35777;&#25105;&#20204;&#30340;&#25318;&#25130;&#22120;&#25928;&#26524;&#65292;&#37027;&#23601;&#20877;&#22909;&#19981;&#36807;&#20102;&#12290;</p>
<p>&#20026;&#20102;&#23613;&#21487;&#33021;&#22320;&#23558;&#20851;&#27880;&#28857;&#38598;&#20013;&#22312;&#25105;&#20204;&#30340; AOP &#25318;&#25130;&#22120;&#19978;&#65292;&#25105;&#20204;&#35201;&#25490;&#38500;&#21508;&#31181;&#20854;&#20182;&#20381;&#36182;&#39033;&#21644;&#19981;&#38656;&#35201;&#30340; Bean&#65292;&#20363;&#22914;&#23601;&#19981;&#35201;&#35753; OpenFeign &#30495;&#30340;&#21019;&#24314;&#19968;&#20010; Bean &#20102;&#65292;&#21487;&#20197;&#29992; Mockito &#26469;&#27169;&#25311;&#25509;&#21475;&#23454;&#29616;&#65292;&#25226;&#27169;&#25311;&#30340;&#23545;&#35937;&#21464;&#25104; Bean&#65292;&#35753; <code>RetryAspect</code> &#26469;&#25318;&#25130;&#23427;&#12290;&#20195;&#30721;&#31034;&#20363; 15-10 &#26159;&#38024;&#23545; <code>RetryAspect</code> &#30340;&#19968;&#20010;&#21333;&#20803;&#27979;&#35797;&#65292;&#19981;&#29992; <code>SpringBootTest</code> &#26469;&#21551;&#21160;&#24182;&#21152;&#36733;&#25972;&#20010;&#24212;&#29992;&#65292;&#25105;&#20204;&#22238;&#24402;&#26368;&#21407;&#22987;&#30340; Spring &#31243;&#24207;&#21333;&#20803;&#27979;&#35797;&#12290;<code>RetryTestConfig</code> &#20316;&#20026;&#20869;&#37096;&#27979;&#35797;&#37197;&#32622;&#31867;&#65292;&#19978;&#38754;&#21152;&#20102; <code>@TestConfiguration</code>&#65292;&#24320;&#21551;&#20102; AspectJ &#33258;&#21160;&#20195;&#29702;&#25903;&#25345;&#65292;&#37197;&#32622;&#31867;&#37324;&#22768;&#26126;&#20102;&#20004;&#20010; Bean&#65292;<code>orderService</code> &#23601;&#26159;&#29992; <code>Mockito.mock()</code> &#21019;&#24314;&#30340; Mock &#23545;&#35937;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-10</strong>&#12288;&#21253;&#21547;&#20102;&#21333;&#20803;&#27979;&#35797;&#37197;&#32622;&#30340; <code>RetryAspectTest</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringJUnitConfig(RetryAspectTest.RetryTestConfig.class)
class RetryAspectTest {
    @TestConfiguration
    @EnableAspectJAutoProxy
    static class RetryTestConfig {
        @Bean
        public RetryAspect retryAspect() {
            return new RetryAspect();
        }

        @Bean
        public OrderService orderService() {
            return mock(OrderService.class);
        }
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#26377;&#20102;&#21487;&#20197;&#36816;&#34892;&#30340;&#26368;&#23567; Spring &#29615;&#22659;&#21518;&#65292;&#24320;&#22987;&#32534;&#20889;&#27979;&#35797;&#29992;&#20363;&#65292;&#21487;&#20197;&#35774;&#35745;&#20004;&#20010;&#31616;&#21333;&#30340;&#22330;&#26223;&#12290;</p>
<p>(1) &#34987;&#35843;&#29992;&#30340;&#26041;&#27861;&#27491;&#24120;&#36820;&#22238;&#65292;&#27809;&#26377;&#21457;&#29983;&#37325;&#35797;&#65292;&#30452;&#25509;&#25343;&#21040;&#32467;&#26524;&#65292;Mock &#23545;&#35937;&#30340;&#26041;&#27861;&#21482;&#35843;&#29992;&#20102;&#19968;&#27425;&#12290;&#23545;&#24212;&#20102;&#20195;&#30721;&#31034;&#20363; 15-11 &#20013;&#30340; <code>testSuccessInvoke()</code> &#26041;&#27861;&#12290;</p>
<p>(2) &#34987;&#35843;&#29992;&#30340;&#26041;&#27861;&#25243;&#20986;&#24322;&#24120;&#65292;&#21457;&#29983;&#20102;&#37325;&#35797;&#65292;&#37325;&#35797;&#26368;&#32456;&#25104;&#21151;&#36820;&#22238;&#20102;&#65292;Mock &#23545;&#35937;&#30340;&#26041;&#27861;&#34987;&#35843;&#29992;&#20102;&#22909;&#20960;&#27425;&#12290;&#23545;&#24212;&#20102;&#20195;&#30721;&#31034;&#20363; 15-11 &#20013;&#30340; <code>testDoWithRetry()</code> &#26041;&#27861;&#12290;</p>
<p>&#20195;&#30721;&#31034;&#20363; 15-11 &#20013;&#29992;&#30340; <code>BDDMockito</code> &#20013;&#30340;&#24456;&#22810;&#38745;&#24577;&#26041;&#27861;&#65292;&#21487;&#20197;&#29992; BDD<span class="&#27880;&#37322;&#32534;&#21495;">6</span> &#30340;&#24418;&#24335;&#25551;&#36848;&#25105;&#20204;&#30340;&#27979;&#35797;&#29992;&#20363;&#12290;&#20026;&#20102;&#26041;&#20415;&#25551;&#36848;&#65292;&#25105;&#20204;&#30452;&#25509;&#25226;&#25152;&#26377;&#26041;&#27861;&#37117; <code>import static</code> &#20102;&#36827;&#26469;&#12290;&#22312;&#23454;&#38469;&#24320;&#21457;&#20013;&#65292;&#22914;&#26377;&#24517;&#35201;&#21487;&#20197;&#25353;&#29031;&#32534;&#30721;&#35268;&#33539;&#23548;&#20837;&#29992;&#21040;&#30340;&#26041;&#27861;&#12290;&#20197; <code>testSuccessInvoke()</code> &#20026;&#20363;&#65292;BDD &#30340;&#25551;&#36848;&#26159;&#32473;&#23450;&#65288;<code>given()</code>&#65289;&#35843;&#29992; <code>mockService.listOrders()</code>&#65292;&#23558;&#36820;&#22238;&#65288;<code>willReturn()</code>&#65289;<code>Collections.emptyList()</code>&#65307;&#23454;&#38469;&#35843;&#29992;&#20102; <code>listOrders()</code> &#21518;&#65292;&#37027;&#20040;&#65288;<code>then()</code>&#65289;<code>mockService</code> &#30340; <code>listOrders()</code> &#24212;&#35813;&#65288;<code>should()</code>&#65289;&#21482;&#34987;&#35843;&#29992;&#20102;&#19968;&#27425;&#65288;<code>once()</code>&#65289;&#65307;&#20877;&#32467;&#21512;&#19968;&#20123;&#21035;&#30340;&#31616;&#21333;&#26029;&#35328;&#65292;&#36825;&#23601;&#26159;&#19968;&#20010;&#27979;&#35797;&#29992;&#20363;&#20102;&#12290;<code>testDoWithRetry()</code> &#30340;&#36923;&#36753;&#20063;&#26159;&#31867;&#20284;&#30340;&#65292;<code>CircuitBreakerAspect</code> &#30340;&#27979;&#35797;&#20063;&#21487;&#20197;&#29992;&#36825;&#26679;&#30340;&#26041;&#27861;&#65292;&#36825;&#37324;&#23601;&#19981;&#20877;&#36184;&#36848;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-11</strong>&#12288;&#38024;&#23545;&#37325;&#35797;&#20999;&#38754;&#30340;&#27979;&#35797;&#29992;&#20363;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>import static org.mockito.BDDMockito.*;

@SpringJUnitConfig(RetryAspectTest.RetryTestConfig.class)
class RetryAspectTest {
    // &#30465;&#30053;Spring&#20869;&#37096;&#37197;&#32622;&#31867;&#65292;&#35265;&#20195;&#30721;&#31034;&#20363;15-10
    @Autowired
    private OrderService orderService;
    private OrderService mockService;

    @BeforeEach
    public void setUp() {
        mockService = AopTestUtils.getUltimateTargetObject(orderService);
        reset(mockService);
    }

    @Test
    void testSuccessInvoke() {
        given(mockService.listOrders()).willReturn(Collections.emptyList());
        List&lt;Order&gt; orders = orderService.listOrders();
        then(mockService).should(only()).listOrders();
        assertTrue(orders.isEmpty());
    }

    @Test
    void testDoWithRetry() {
        given(mockService.listOrders())
        .willThrow(new RuntimeException())
        .willThrow(new RuntimeException())
        .willReturn(Collections.emptyList());
        List&lt;Order&gt; orders = orderService.listOrders();
        then(mockService).should(times(3)).listOrders();
        assertTrue(orders.isEmpty());
    }
}</code></pre>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">3</span>&#36825;&#20010;&#31034;&#20363;&#22312; ch15/binarytea-aop &#39033;&#30446;&#20013;&#65292;&#23545;&#24212;&#30340;&#23458;&#25143;&#31471;&#21017;&#26159; ch15/customer-aop&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">4</span>&#36825;&#37324;&#20877;&#27425;&#24378;&#35843;&#19968;&#19979;&#65292;&#20026;&#20102;&#31616;&#21270;&#25105;&#20204;&#30340;&#31034;&#20363;&#65292;&#36825;&#37324;&#19981;&#21253;&#21547;&#36864;&#27454;&#12289;&#21462;&#28040;&#31561;&#29366;&#24577;&#65292;&#35746;&#21333;&#31995;&#32479;&#29366;&#24577;&#26426;&#23454;&#38469;&#26159;&#38750;&#24120;&#22797;&#26434;&#30340;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">5</span>&#23545;&#20110;&#37325;&#35201;&#20869;&#23481;&#30340;&#26356;&#26032;&#65292;&#24314;&#35758;&#36981;&#24490;&#8220;&#19968;&#38145;&#65292;&#20108;&#21028;&#65292;&#19977;&#26356;&#26032;&#8221;&#30340;&#39034;&#24207;&#8212;&#8212;&#20808;&#38145;&#20303;&#35760;&#24405;&#65292;&#21028;&#26029;&#24403;&#21069;&#25968;&#25454;&#26159;&#21542;&#31526;&#21512;&#39044;&#26399;&#65292;&#20877;&#20570;&#26356;&#26032;&#65292;&#26356;&#26032;&#21160;&#20316;&#25191;&#34892;&#21518;&#36824;&#35201;&#26816;&#26597;&#26356;&#26032;&#26465;&#25968;&#26159;&#21542;&#27491;&#30830;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">6</span>BDD &#21363;&#34892;&#20026;&#39537;&#21160;&#24320;&#21457;&#65288;Behavior Driven Development&#65289;&#65292;&#26159;&#25935;&#25463;&#36719;&#20214;&#24320;&#21457;&#20013;&#30340;&#19968;&#31181;&#25216;&#26415;&#65292;&#29992;&#29305;&#23450;&#30340; DSL &#20197;&#25509;&#36817;&#32467;&#26500;&#21270;&#33258;&#28982;&#35821;&#35328;&#30340;&#26041;&#24335;&#26469;&#32534;&#20889;&#21487;&#25191;&#34892;&#30340;&#27979;&#35797;&#29992;&#20363;&#12290;</p><h2 id="nav_point_232">15.2&#12288;&#20351;&#29992; Resilience4j &#23454;&#29616;&#23481;&#38169;</h2><p>&#22312;&#29702;&#35299;&#20102;&#22522;&#26412;&#30340;&#23481;&#38169;&#29702;&#24565;&#21644;&#24120;&#35265;&#27169;&#24335;&#21518;&#65292;&#35813;&#36827;&#20837;&#23454;&#36341;&#29615;&#33410;&#20102;&#12290;&#32771;&#34385;&#21040;&#22312;&#23454;&#25112;&#20013;&#20250;&#20986;&#29616;&#21508;&#31181;&#20986;&#20046;&#24847;&#26009;&#30340;&#24773;&#20917;&#65292;&#38500;&#38750;&#33258;&#24049;&#26159;&#20010;&#20037;&#32463;&#32771;&#39564;&#30340;&#32769;&#25163;&#65292;&#25110;&#32773;&#22823;&#31070;&#32423;&#20154;&#29289;&#65292;&#21542;&#21017;&#36824;&#26159;&#32769;&#32769;&#23454;&#23454;&#20351;&#29992;&#37027;&#20123;&#24050;&#32463;&#34987;&#23454;&#36341;&#39564;&#35777;&#36807;&#30340;&#26694;&#26550;&#21543;&#65292;&#36991;&#20813;&#22312;&#21035;&#20154;&#24050;&#32463;&#36300;&#21040;&#36807;&#26080;&#25968;&#27425;&#30340;&#22320;&#26041;&#37325;&#22797;&#36393;&#22353;&#12290;</p><p>&#25918;&#21040;&#20197;&#21069;&#65292;&#35828;&#36215;&#19982;&#26381;&#21153;&#23481;&#38169;&#30456;&#20851;&#30340;&#35805;&#39064;&#65292;&#23601;&#19981;&#24471;&#19981;&#25552; Netflix &#24320;&#28304;&#30340; Hystrix&#65292;&#23454;&#38469;&#19978;&#65292;&#23427;&#23601;&#26159;&#24403;&#26102;&#20107;&#23454;&#19978;&#30340;&#34892;&#19994;&#26631;&#20934;&#12290;&#21487;&#24796;&#22312; 2018 &#24180; Netflix &#23459;&#24067;&#23558;&#35813;&#39033;&#30446;&#36716;&#20837;&#32500;&#25252;&#29366;&#24577;&#65292;&#19981;&#20877;&#32487;&#32493;&#25237;&#20837;&#24320;&#21457;&#65292;&#23427;&#23601;&#24930;&#24930;&#20174;&#23453;&#24231;&#19978;&#36864;&#20102;&#19979;&#26469;&#12290;&#22909;&#22312;&#26377;&#20960;&#20301;&#21518;&#36215;&#20043;&#31168;&#25179;&#36215;&#20102;&#22823;&#26071;&#65292;&#35753;&#22823;&#23478;&#26377;&#20102;&#20854;&#20182;&#30340;&#36873;&#25321;&#65292;&#23427;&#20204;&#23601;&#26159;&#26412;&#33410;&#35201;&#20171;&#32461;&#30340; Resilience4j&#65292;&#20197;&#21450;&#21518;&#32493;&#31456;&#33410;&#20013;&#20250;&#25552;&#21040;&#30340;&#38463;&#37324;&#24320;&#28304;&#30340; Sentinel&#12290;</p><p>&#25353;&#29031;&#23448;&#26041;&#33258;&#24049;&#30340;&#20171;&#32461;&#65292;Resilience4j &#26159;&#21463; Hystrix &#30340;&#21551;&#21457;&#32780;&#24320;&#21457;&#30340;&#36731;&#37327;&#32423;&#23481;&#38169;&#24211;&#65292;&#19987;&#38376;&#38024;&#23545; Java 8 &#21644;&#20989;&#25968;&#24335;&#32534;&#31243;&#35774;&#35745;&#30340;&#12290;&#23427;&#27809;&#26377;&#22826;&#22810;&#20381;&#36182;&#65292;&#32780;&#19988;&#31616;&#21333;&#26131;&#29992;&#12290;Resilience4j &#25552;&#20379;&#20102;&#26029;&#36335;&#22120;&#12289;&#38480;&#27969;&#12289;&#37325;&#35797;&#12289;&#33329;&#22721;&#31561;&#24120;&#35265;&#23481;&#38169;&#21151;&#33021;&#23454;&#29616;&#65307;&#36890;&#36807;&#23427;&#30340;&#39640;&#38454;&#20989;&#25968;&#65288;&#21363;&#23427;&#25552;&#20379;&#30340;&#35013;&#39280;&#22120;&#65289;&#36824;&#21487;&#20197;&#23545;&#20989;&#25968;&#25509;&#21475;&#12289;Lambda &#34920;&#36798;&#24335;&#21644;&#26041;&#27861;&#36827;&#34892;&#22686;&#24378;&#65307;&#32780;&#19988; Resilience4j &#30340;&#27169;&#22359;&#21270;&#31243;&#24230;&#24456;&#39640;&#65292;&#25105;&#20204;&#21487;&#20197;&#25353;&#38656;&#24341;&#20837;&#20854;&#20013;&#30340;&#26680;&#24515;&#23481;&#38169;&#33021;&#21147;&#12290;&#31867;&#20284; Resilience4j &#23545; Spring Boot &#21644; Micronaut<span class="&#27880;&#37322;&#32534;&#21495;">7</span> &#30340;&#25903;&#25345;&#21151;&#33021;&#20063;&#34987;&#25918;&#21040;&#20102;&#19981;&#21516;&#30340;&#27169;&#22359;&#20013;&#65292;&#26681;&#25454;&#39033;&#30446;&#20351;&#29992;&#30340;&#26694;&#26550;&#26469;&#20351;&#29992;&#21363;&#21487;&#12290;&#34920; 15-1 &#32599;&#21015;&#20102;&#19968;&#20123; Resilience4j &#30340;&#27169;&#22359;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">7</span>Micronaut &#26159;&#29616;&#20195;&#19968;&#31449;&#24335; Java &#24494;&#26381;&#21153;&#26694;&#26550;&#20013;&#30340;&#21518;&#36215;&#20043;&#31168;&#12290;</p><p><strong>&#34920; 15-1&#12288;Resilience4j &#30340;&#27169;&#22359;&#28165;&#21333;</strong></p><table border="1" width="90%">
<thead>
<tr>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#21151;&#33021;</p></th>
<th><p class="&#34920;&#22836;&#21333;&#20803;&#26684;">&#27169;&#22359;</p></th>
</tr>
</thead>
<tbody>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#26029;&#36335;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-circuitbreaker</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#38480;&#27969;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-ratelimiter</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#33329;&#22721;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-bulkhead</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#37325;&#35797;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-retry</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#32531;&#23384;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-cache</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">&#36229;&#26102;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-timelimiter</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Feign &#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-feign</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Spring Boot 2 &#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-spring-boot2</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Spring Reactor &#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-reactor</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Micrometer &#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-micrometer</p></td>
</tr>
<tr>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">Prometheus &#25903;&#25345;</p></td>
<td><p class="&#34920;&#26684;&#21333;&#20803;&#26684;">resilience4j-prometheus</p></td>
</tr>
</tbody>
</table><h3 id="nav_point_233">15.2.1&#12288;&#20351;&#29992; Resilience4j &#23454;&#29616;&#38480;&#27969;</h3><p>&#22312;&#24320;&#22987;&#20171;&#32461; Resilience4j &#20043;&#21069;&#65292;&#35753;&#25105;&#20204;&#20808;&#26469;&#23436;&#21892;&#19968;&#19979;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#30340;&#20363;&#23376;&#65292;&#26032;&#22686;&#19968;&#20010;&#35843;&#33590;&#24072; TeaMaker &#30340;&#27169;&#22359;&#65292;&#20197;&#20415;&#28436;&#31034;&#21518;&#32493;&#30340;&#22810;&#20010;&#21151;&#33021;&#12290;</p><blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#36890;&#24120;&#65292;&#22902;&#33590;&#24215;&#30340;&#25910;&#38134;&#21644;&#21046;&#20316;&#37117;&#26159;&#21069;&#21518;&#20998;&#24320;&#30340;&#65292;&#29992;&#25143;&#36890;&#36807;&#23458;&#25143;&#31471;&#19979;&#21333;&#24182;&#20184;&#27454;&#65292;&#25110;&#32773;&#30001;&#26381;&#21153;&#21592;&#22312; Web &#30028;&#38754;&#19979;&#21333;&#25910;&#38134;&#21518;&#65292;&#35843;&#33590;&#24072;&#20250;&#26681;&#25454;&#35746;&#21333;&#36827;&#34892;&#21046;&#20316;&#12290;&#28857;&#21333;&#25910;&#38134;&#21487;&#20197;&#24456;&#24555;&#65292;&#20294;&#20570;&#19968;&#26479;&#39278;&#26009;&#24448;&#24448;&#24456;&#24930;&#65292;&#29616;&#30952;&#25163;&#20914;&#21654;&#21857;&#12289;&#20912;&#28404;&#33590;&#12289;&#40092;&#27048;&#26524;&#27713;&#20043;&#31867;&#30340;&#37117;&#38656;&#35201;&#26102;&#38388;&#65292;&#25152;&#20197;&#35843;&#33590;&#24072;&#24448;&#24448;&#20250;&#25104;&#20026;&#22902;&#33590;&#24215;&#30340;&#29942;&#39048;&#8212;&#36825;&#20854;&#23454;&#26159;&#19968;&#20010;&#28508;&#22312;&#30340;&#38480;&#27969;&#38656;&#27714;&#65292;&#35843;&#33590;&#24072;&#24537;&#19981;&#36807;&#26469;&#26102;&#23601;&#19981;&#20877;&#25509;&#26032;&#35746;&#21333;&#20102;&#12290;</p>
</blockquote><ol>
<li><p><strong>&#26032;&#22686;&#35843;&#33590;&#24072;&#27169;&#22359;</strong></p>
<p>&#36825;&#37324;&#26174;&#28982;&#23601;&#26159;&#25552;&#31034;&#25105;&#20204;&#35201;&#32473; TeaMaker &#22686;&#21152;&#38480;&#27969;&#21151;&#33021;&#65292;&#19981;&#36807;&#25105;&#20204;&#36824;&#26159;&#35201;&#20808;&#25226;&#36825;&#20010;&#27169;&#22359;&#31616;&#21333;&#22320;&#32534;&#20889;&#20986;&#26469;&#12290;&#21487;&#20197;&#36890;&#36807; Spring Initializr &#21021;&#22987;&#21270; TeaMaker &#24037;&#31243; <span class="&#27880;&#37322;&#32534;&#21495;">8</span>&#65292;&#36873;&#20013; Web&#12289;Lombok&#12289;Actuator &#21644; Apache Zookeeper Discovery &#20381;&#36182;&#65292;&#21069;&#38754;&#19977;&#20010;&#29992;&#26469;&#23454;&#29616;&#26412;&#36523;&#30340;&#19994;&#21153;&#21151;&#33021;&#65292;&#31532;&#22235;&#20010;&#26159;&#20026;&#20102;&#35753; BinaryTea &#33021;&#22815;&#25214;&#21040; TeaMaker&#65292;&#22914;&#26524;&#24819;&#25226;&#37197;&#32622;&#37117;&#25918;&#36827;&#37197;&#32622;&#20013;&#24515;&#65292;&#36824;&#21487;&#20197;&#20877;&#22686;&#21152;&#30456;&#20851;&#30340;&#20381;&#36182;&#12290;</p>
<p>&#20195;&#30721;&#31034;&#20363; 15-12 &#26159; TeaMaker &#23545;&#22806;&#26292;&#38706;&#30340; REST &#26381;&#21153;&#12290;&#22240;&#20026;&#26159;&#28436;&#31034;&#65292;&#25152;&#20197;&#19968;&#20999;&#20174;&#31616;&#65292;&#30452;&#25509;&#25552;&#20379;&#19968;&#20010;&#35746;&#21333;&#21495;&#65292;&#21482;&#35201;&#21333;&#21495;&#26159;&#20010;&#27491;&#25972;&#25968;&#23601;&#31639;&#26377;&#25928;&#35746;&#21333;&#21495;&#65292;&#24320;&#22987;&#36827;&#34892;&#35746;&#21333;&#21046;&#20316;&#65292;&#21046;&#20316;&#23436;&#27605;&#21363;&#36820;&#22238; <code>200 OK</code>&#12290;&#36820;&#22238;&#30340; JSON &#25253;&#25991;&#20013;&#21253;&#21547;&#20102;&#19977;&#20010;&#23646;&#24615;&#65292;&#20998;&#21035;&#26159;&#25104;&#21151;&#21046;&#20316;&#19982;&#21542;&#12289;&#35746;&#21333;&#32534;&#21495;&#19982;&#21046;&#20316;&#27492;&#21333;&#30340;&#35843;&#33590;&#24072;&#32534;&#21495;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-12</strong>&#12288;TeaMaker &#23545;&#22806;&#25552;&#20379;&#30340;&#26381;&#21153;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@RestController
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @Autowired
    private OrderService orderService;

    @PostMapping("/{id}")
    public ResponseEntity&lt;ProcessResult&gt; process(@PathVariable Long id) {
        if (id == null || id &lt;= 0) {
            return ResponseEntity.badRequest().build();
        }
        ProcessResult result = orderService.make(id);
        log.info("&#25104;&#21151;&#23436;&#25104;&#35746;&#21333;{}&#30340;&#21046;&#20316;", id);
        return ResponseEntity.ok(result);
    }
}

@Getter
@Setter
@Builder
public class ProcessResult {
    private boolean finish;
    private long orderId;
    private long teaMakerId;
}</code></pre>
<p>&#25105;&#20204;&#23558;&#20855;&#20307;&#30340;&#21046;&#20316;&#36807;&#31243;&#23553;&#35013;&#22312;&#20102; <code>OrderService.make()</code> &#26041;&#27861;&#37324;&#65292;&#23427;&#30340;&#36923;&#36753;&#22914;&#20195;&#30721;&#31034;&#20363; 15-13 &#25152;&#31034;&#12290;&#29992;&#19968;&#27573; <code>sleep()</code> &#26469;&#20195;&#34920;&#21046;&#20316;&#32791;&#26102;&#65292;&#38543;&#21518;&#26500;&#36896;&#32467;&#26524;&#23545;&#35937;&#65292;<code>tea-maker.id</code> &#21644; <code>tea-maker.time-per-order</code> &#37117;&#26159; <code>application.properties</code> &#20013;&#30340;&#37197;&#32622;&#20540;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-13</strong>&#12288;&#20855;&#20307;&#21046;&#20316;&#35746;&#21333;&#30340; <code>OrderService</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
public class OrderService {
    @Value("${tea-maker.id:-1}")
    private long teaMakerId;
    @Value("${tea-maker.time-per-order:500ms}")
    private Duration timePerOrder;

    public ProcessResult make(Long id) {
        try {
            TimeUnit.MILLISECONDS.sleep(timePerOrder.toMillis());
        } catch (InterruptedException e) {
        }
        return ProcessResult.builder()
               .finish(true).orderId(id)
               .teaMakerId(teaMakerId)
               .build();
    }
}</code></pre>
<p>&#20363;&#22914;&#65292;&#25105;&#20204;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#25552;&#20379;&#19968;&#20123;&#37197;&#32622;&#65292;&#20877;&#32467;&#21512; Zookeeper &#22320;&#22336;&#31561;&#20854;&#20182;&#20869;&#23481;&#65292;&#35753;&#31243;&#24207;&#20808;&#36816;&#34892;&#36215;&#26469;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.application.name=tea-maker
server.port=8082
tea-maker.id=1
tea-maker.time-per-order=1s</code></pre>
<p>&#19968;&#23450;&#35201;&#24378;&#35843;&#30340;&#26159;&#65292;&#30446;&#21069;&#20320;&#30475;&#21040;&#30340;&#26041;&#24335;&#24182;&#19981;&#26159;&#23454;&#29616; TeaMaker &#30340;&#29702;&#24819;&#26041;&#24335;&#65292;&#29978;&#33267;&#21487;&#20197;&#35828;&#65292;&#36825;&#26159;&#19968;&#20010;&#31967;&#31957;&#30340;&#35774;&#35745;&#12290;&#25226;&#19968;&#20010;&#39640;&#32791;&#26102;&#30340;&#25805;&#20316;&#23884;&#20837;&#35746;&#21333;&#25903;&#20184;&#21518;&#30340;&#20027;&#27969;&#31243;&#65292;&#29992;&#21516;&#27493; HTTP &#35843;&#29992;&#30340;&#26041;&#24335;&#26469;&#35302;&#21457;&#23427;&#65292;&#24819;&#24819;&#37117;&#26159;&#20010;&#21487;&#24597;&#30340;&#25805;&#20316;&#12290;&#31867;&#20284;&#36825;&#26679;&#30340;&#25805;&#20316;&#24212;&#35813;&#20174;&#20027;&#27969;&#31243;&#37324;&#21093;&#31163;&#65292;&#24182;&#23558;&#20854;&#24322;&#27493;&#21270;&#65292;&#22312;&#21518;&#32493;&#30340;&#31532; 16 &#31456;&#37324;&#65292;&#25105;&#20204;&#20250;&#36890;&#36807;&#28040;&#24687;&#30340;&#26041;&#24335;&#23545;&#23427;&#36827;&#34892;&#20248;&#21270;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#22686;&#21152;&#38480;&#27969;&#21151;&#33021;</strong></p>
<p>&#25509;&#19979;&#26469;&#65292;&#23601;&#35813;&#36827;&#20837;&#36825;&#33410;&#30340;&#37325;&#28857;&#20102;&#8212;&#8212;&#24341;&#20837; Resilience4j&#65292;&#23454;&#29616;&#38480;&#27969;&#21151;&#33021;&#12290;&#22312; pom.xml &#20013;&#28155;&#21152;&#22914;&#19979;&#20381;&#36182;&#65292;&#23427;&#20250;&#33258;&#21160;&#24102;&#20837; Resilience4j &#30340;&#20247;&#22810;&#27169;&#22359;&#65292;&#20363;&#22914; resilience4j-core&#12289;resilience4j-ratelimiter&#12289;resilience4j- circuitbreaker&#12289;resilience4j-bulkhead &#31561;&#12290;&#24403;&#28982;&#65292;resilience4j-spring-boot2 &#20063;&#20250;&#26377;&#22823;&#37327;&#36866;&#29992;&#20110; Spring Boot &#30340;&#33258;&#21160;&#37197;&#32622;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;io.github.resilience4j&lt;/groupId&gt;
    &lt;artifactId&gt;resilience4j-spring-boot2&lt;/artifactId&gt;
    &lt;version&gt;1.7.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
<p>&#30001;&#20110;&#36825;&#26159;&#25105;&#20204;&#31532;&#19968;&#27425;&#25509;&#35302; Resilience4j&#65292;&#25152;&#20197;&#20808;&#29992;&#26368;&#21407;&#22987;&#30340;&#20195;&#30721;&#26469;&#23454;&#29616;&#19968;&#19979;&#38480;&#27969;&#21151;&#33021;&#65292;&#22823;&#33268;&#30340;&#27493;&#39588;&#22914;&#19979;&#12290;</p>
<p>(1) &#26681;&#25454;&#33258;&#24049;&#30340;&#38656;&#35201;&#37197;&#32622; <code>RateLimiterConfig</code>&#65292;&#29992; <code>RateLimiterConfig.ofDefaults()</code> &#21487;&#20197;&#21019;&#24314;&#40664;&#35748;&#37197;&#32622;&#65292;<code>RateLimiterConfig.custom()</code> &#21487;&#20197;&#29992;&#26469;&#21019;&#24314;&#33258;&#23450;&#20041;&#37197;&#32622;&#12290;</p>
<p>(2) &#29992;&#31532; (1) &#27493;&#30340;&#37197;&#32622;&#26469;&#21019;&#24314; <code>RateLimiterRegistry</code>&#65292;&#29992; <code>RateLimiterRegistry.ofDefaults()</code> &#21487;&#20197;&#21019;&#24314;&#20351;&#29992;&#40664;&#35748;&#37197;&#32622;&#30340; <code>RateLimiterRegistry</code>&#65292;&#29992; <code>RateLimiterRegistry.of()</code> &#26469;&#20256;&#20837;&#37197;&#32622;&#12290;</p>
<p>(3) &#29992;&#31532; (2) &#27493;&#30340; <code>RateLimiterRegistry</code> &#26469;&#21019;&#24314; <code>RateLimiter</code>&#65292;&#35843;&#29992; <code>RateLimiterRegistry</code> &#30340; <code>rateLimiter()</code> &#26041;&#27861;&#65292;&#26377;&#19981;&#21516;&#21442;&#25968;&#30340;&#26041;&#27861;&#21487;&#20379;&#36873;&#25321;&#12290;</p>
<p>(4) &#29992; <code>RateLimiter</code> &#26469;&#35013;&#39280;&#25105;&#20204;&#38656;&#35201;&#38480;&#27969;&#30340;&#20195;&#30721;&#65292;Resilience4j &#30340; <code>RateLimiter</code> &#25903;&#25345;&#30340;&#38480;&#27969;&#23545;&#35937;&#65292;&#21253;&#25324; <code>Callable</code>&#12289;<code>Runnable</code>&#12289;<code>CheckedRunnable</code>&#12289;<code>Supplier</code>&#12289;<code>CheckedSupplier</code>&#12289;<code>Consumer</code>&#12289;<code>CheckedConsumer</code> &#21644; <code>CompletionStage</code>&#12290;</p>
<p>(5) &#35843;&#29992;&#20462;&#39280;&#21518;&#30340;&#20195;&#30721;&#65292;&#32780;&#38750;&#21407;&#22987;&#20195;&#30721;&#12290;</p>
<p>resilience4j-spring-boot2 &#20013;&#30340; <code>AbstractRateLimiterConfigurationOnMissingBean</code> &#37197;&#32622;&#31867;&#37324;&#24050;&#32463;&#37197;&#32622;&#22909;&#20102; <code>RateLimiterRegistry</code>&#65292;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#22312;&#20195;&#30721;&#20013;&#27880;&#20837;&#23427;&#65292;&#21019;&#24314; <code>RateLimiter</code>&#12290;&#37027;&#20040; <code>OrderService.make()</code> &#26041;&#27861;&#23601;&#35201;&#35843;&#25972;&#25104;&#20195;&#30721;&#31034;&#20363; 15-14 &#37027;&#26679;&#65292;&#29992; <code>rateLimiter.executeSupplier()</code> &#25226;&#21407;&#26469;&#30340;&#36923;&#36753;&#23553;&#35013;&#36215;&#26469;&#65292;&#22914;&#26524;&#30896;&#21040;&#38480;&#27969;&#23601;&#20250;&#25243;&#20986; <code>RequestNotPermitted</code> &#24322;&#24120;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-14</strong>&#12288;&#22686;&#21152;&#20102;&#38480;&#27969;&#20195;&#30721;&#30340; <code>OrderService.make()</code></p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
public class OrderService {
    @Autowired
    private RateLimiterRegistry rateLimiterRegistry;

    public ProcessResult make(Long id) {
        RateLimiter rateLimiter = rateLimiterRegistry.rateLimiter("make-tea");
        return rateLimiter.executeSupplier(() -&gt; {
            try {
                TimeUnit.MILLISECONDS.sleep(timePerOrder.toMillis());
            } catch (InterruptedException e) {
            }
            return ProcessResult.builder()
                   .finish(true).orderId(id)
                   .teaMakerId(teaMakerId)
                   .build();
        });
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#23545;&#20110;&#25243;&#20986;&#30340;&#38480;&#27969;&#24322;&#24120;&#65292;&#19978;&#23618;&#30340; <code>OrderController</code> &#38656;&#35201;&#36827;&#34892;&#23545;&#24212;&#30340;&#22788;&#29702;&#65292;&#19981;&#33021;&#35753;&#24322;&#24120;&#30452;&#25509;&#36820;&#22238;&#19978;&#28216;&#12290;&#21487;&#20197;&#38024;&#23545;&#36825;&#20010;&#24322;&#24120;&#36820;&#22238;&#29305;&#23450;&#30340;&#20869;&#23481;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 15-15 &#37027;&#26679;&#65292;&#32534;&#20889;&#19968;&#20010;&#24322;&#24120;&#22788;&#29702;&#22120;&#65292;&#36820;&#22238;&#29305;&#23450;&#30340; <code>503 Service Unavailable</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-15</strong>&#12288;&#20026; <code>OrderController</code> &#22686;&#21152;&#22788;&#29702; <code>RequestNotPermitted</code> &#30340;&#24322;&#24120;&#22788;&#29702;&#22120;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@RestController
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @ExceptionHandler(RequestNotPermitted.class)
    public ResponseEntity&lt;ProcessResult&gt; handleRequestNotPermitted(HttpServletRequest request) {
        log.warn("&#35831;&#27714;{}&#35302;&#21457;&#38480;&#27969;", request.getRequestURL());
        ProcessResult result = ProcessResult.builder().finish(false).build();
        return ResponseEntity.status(HttpStatus.SERVICE_UNAVAILABLE).body(result);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#38480;&#27969;&#30340;&#21508;&#31181;&#37197;&#32622;&#37117;&#22312; <code>RateLimiterConfigurationProperties</code> &#37324;&#65292;&#25105;&#20204;&#20351;&#29992;&#20102; Spring Boot&#65292;&#25152;&#20197;&#21487;&#20197;&#36890;&#36807; resilience4j-spring-boot2 &#30340; <code>RateLimiterProperties</code> &#26469;&#36827;&#34892;&#37197;&#32622;&#12290;&#25152;&#26377;&#30340;&#37197;&#32622;&#39033;&#37117;&#20197; <code>resilience4j.ratelimiter</code> &#20026;&#21069;&#32512;&#65292;&#29992; <code>resilience4j.ratelimiter.instances.XXX</code> &#26469;&#37197;&#32622; <code>XXX</code> &#38480;&#27969;&#22120;&#30340;&#20855;&#20307;&#21442;&#25968;&#12290;&#23545;&#20110;&#27809;&#26377;&#21333;&#29420;&#37197;&#32622;&#30340;&#38480;&#27969;&#22120;&#65292;&#21017;&#20250;&#20351;&#29992; <code>resilience4j.ratelimiter.configs.default</code> &#20013;&#30340;&#37197;&#32622;&#12290;&#20027;&#35201;&#30340;&#21442;&#25968;&#22914;&#34920; 15-2 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 15-2&#12288;&#38480;&#27969;&#30456;&#20851;&#30340;&#37096;&#20998;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>limit-for-period</code></td><td><code>50</code></td><td>&#25351;&#23450;&#21047;&#26032;&#26102;&#38388;&#27573;&#20869;&#20801;&#35768;&#25191;&#34892;&#30340;&#27425;&#25968;</td></tr><tr><td><code>limit-refresh-period</code></td><td><code>500ns</code></td><td>&#21047;&#26032;&#26102;&#38388;&#27573;&#65292;&#36807;&#20102;&#36825;&#20010;&#26102;&#38388;&#21518;&#38480;&#27969;&#30340;&#35745;&#25968;&#22120;&#20250;&#36824;&#21407;</td></tr><tr><td><code>timeout-duration</code></td><td><code>5s</code></td><td>&#31561;&#24453;&#38480;&#27969;&#22120;&#25918;&#34892;&#30340;&#36229;&#26102;&#26102;&#38388;</td></tr><tr><td><code>register-health-indicator</code></td><td><code>false</code></td><td>&#26159;&#21542;&#35201;&#25226;&#36825;&#20010;&#38480;&#27969;&#22120;&#27880;&#20876;&#21040; Actuator &#30340;&#20581;&#24247;&#25351;&#26631;&#37324;</td></tr></table>
<p>&#30001;&#20110;&#36825;&#20010;&#37197;&#32622;&#29992; YAML &#30340;&#21487;&#35835;&#24615;&#20250;&#26356;&#39640;&#19968;&#20123;&#65292;&#25152;&#20197;&#20363;&#23376;&#20013;&#25105;&#20204;&#23558; <code>application.properties</code> &#25442;&#20026; <code>application.yml</code> &#25991;&#20214;&#65292;&#20363;&#22914;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.application.name: tea-maker
server.port: 8082
tea-maker:
  id: 1
  time-per-order: 1s

resilience4j:
  ratelimiter:
    instances:
      make-tea:
        limit-for-period: 1
        limit-refresh-period: 10s
        timeout-duration: 2s
        register-health-indicator: true</code></pre>
<p>&#22312;&#36816;&#34892;&#31243;&#24207;&#21518;&#65292;&#25105;&#20204;&#21487;&#20197;&#25171;&#24320;&#32456;&#31471;&#30028;&#38754;&#65292;&#29992;&#19979;&#38754;&#30340; curl &#21629;&#20196;&#22312;&#30701;&#26102;&#38388;&#20869;&#22810;&#21457;&#36215;&#20960;&#27425;&#35843;&#29992;&#65292;&#22914;&#26524;&#36820;&#22238;&#30340; HTTP &#21709;&#24212;&#30721;&#26159; <code>200 OK</code>&#65292;&#35828;&#26126;&#27491;&#24120;&#35843;&#29992;&#65292;&#27809;&#34987;&#38480;&#27969;&#65307;&#22914;&#26524;&#36820;&#22238;&#30340; HTTP &#21709;&#24212;&#30721;&#26159; <code>503 Service Unavailable</code>&#65292;&#21017;&#35828;&#26126;&#34987;&#38480;&#27969;&#20102;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; curl -v -d "" http://localhost:8082/order/1</code></pre>
<p>resilience4j-spring-boot2 &#33021;&#20570;&#30340;&#21487;&#19981;&#20165;&#20165;&#26159;&#20026;&#25105;&#20204;&#33258;&#21160;&#37197;&#32622;&#19968;&#20123; <code>Registry</code> &#31867;&#65292;&#23427;&#36824;&#21253;&#25324;&#20102;&#24456;&#22810;&#26377;&#29992;&#30340;&#21151;&#33021;&#65292;&#20363;&#22914;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#20854;&#25152;&#20381;&#36182;&#30340; resilience4j-spring &#20013;&#36824;&#26377;&#19968;&#20123; Spring AOP &#20999;&#38754;&#65292;&#20363;&#22914;&#19987;&#38376;&#25318;&#25130;&#24102; <code>@RateLimiter</code> &#27880;&#35299;&#26041;&#27861;&#30340; <code>RateLimiterAspect</code>&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36866;&#37197; Actuator &#30340;&#21508;&#31181; <code>Endpoint</code> &#31471;&#28857;&#65292;&#20363;&#22914;&#26174;&#31034;&#38480;&#27969;&#22120;&#20449;&#24687;&#30340; <code>RateLimiterEndpoint</code>&#65307;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312;&#20581;&#24247;&#26816;&#26597;&#26029;&#28857;&#20013;&#23884;&#20837;&#23481;&#38169;&#20449;&#24687;&#30340;&#21508;&#31181; <code>HealthIndicator</code>&#65292;&#20363;&#22914; <code>RateLimitersHealthIndicator</code>&#65292;&#21487;&#20197;&#36890;&#36807; <code>management.health.ratelimiters.enabled</code> &#24320;&#21551;&#23427;&#12290;</li>
</ul>
<p>&#20026;&#20102;&#20351;&#29992; <code>RateLimiterAspect</code> &#20999;&#38754;&#65292;&#25105;&#20204;&#38656;&#35201;&#24341;&#20837; Spring AOP &#30340;&#30456;&#20851;&#20381;&#36182;&#65292;&#23588;&#20854;&#26159; AspectJ&#12290;&#22312; pom.xml &#20013;&#28155;&#21152;&#22914;&#19979;&#36215;&#27493;&#20381;&#36182;&#65288;&#19979;&#25991;&#25552;&#21040;&#30340;&#20854;&#20182; Resilience4j &#27880;&#35299;&#21644;&#20999;&#38754;&#20063;&#21516;&#26679;&#38656;&#35201;&#36825;&#20010;&#20381;&#36182;&#65289;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
<p>&#19978;&#38754;&#30340;&#20195;&#30721;&#31034;&#20363; 15-14 &#21487;&#20197;&#31245;&#20316;&#35843;&#25972;&#65292;&#19981;&#29992;&#27880;&#20837; <code>RateLimiterRegistry</code> &#21019;&#24314; <code>RateLimiter</code>&#65292;&#30452;&#25509;&#21152;&#20010;&#27880;&#35299;&#23601;&#22909;&#20102;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-16 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-16</strong>&#12288;&#20351;&#29992; <code>@RateLimiter</code> &#23454;&#29616;&#38480;&#27969;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
public class OrderService {
    @RateLimiter(name = "make-tea")
    public ProcessResult make(Long id) {
        // &#20869;&#23481;&#22914;&#20195;&#30721;&#31034;&#20363;15-13&#30340;make()&#26041;&#27861;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#20026;&#20102;&#33021;&#22815;&#36890;&#36807; Actuator &#26469;&#26597;&#30475;&#38480;&#27969;&#30456;&#20851;&#30340;&#20449;&#24687;&#65292;&#38656;&#35201;&#22312; <code>application.yml</code> &#20013;&#28155;&#21152;&#22914;&#19979;&#37197;&#32622;&#65292;<code>endpoints.web.exposure.include</code> &#21487;&#20197;&#20889;&#20855;&#20307;&#35201;&#25918;&#24320;&#30340;&#31471;&#28857;&#65292;&#27492;&#22788;&#21482;&#26159;&#28436;&#31034;&#65292;&#22240;&#27492;&#29992;&#20102; <code>*</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>management:
  health.ratelimiters.enabled: true
  endpoints.web.exposure.include: "*"
  endpoint.health.show-details: always</code></pre>
<p>&#20877;&#27425;&#36816;&#34892;&#31243;&#24207;&#65292;&#21457;&#36215;&#20960;&#27425;&#35843;&#29992;&#65292;&#38543;&#21518;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;&#27983;&#35272;&#22120;&#35775;&#38382;&#20581;&#24247;&#26816;&#26597;&#31471;&#28857;&#65292;&#20063;&#23601;&#26159; http://localhost:8082/actuator/health&#12290;&#33021;&#30475;&#21040;&#27604;&#36739;&#35814;&#32454;&#30340;&#20449;&#24687;&#65292;&#38480;&#27969;&#30456;&#20851;&#30340;&#20449;&#24687;&#22312; <code>rateLimiters</code> &#37096;&#20998;&#37324;&#65292;&#20854;&#20013;&#23601;&#21253;&#21547;&#20102;&#25105;&#20204;&#27880;&#20876;&#36827;&#21435;&#30340; <code>make-tea</code>&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>  {
    "status": "UP",
    "components": {
      "rateLimiters": {
        "status": "UP",
        "details": {
          "make-tea": {
            "status": "UP",
            "details": {
              "availablePermissions": 1,
              "numberOfWaitingThreads": 0
            }
          }
        }
      }
      // &#30465;&#30053;&#20854;&#20182;&#20869;&#23481;
    }
  }</code></pre>
<p>&#32780;&#22312; <code>http://localhost:8082/actuator/metrics</code> &#20013;&#36824;&#21253;&#21547;&#20102;&#23481;&#38169;&#20449;&#24687;&#30456;&#20851;&#30340;&#24230;&#37327;&#25351;&#26631;&#65292;&#20363;&#22914;&#19982;&#38480;&#27969;&#30456;&#20851;&#30340; <code>resilience4j.ratelimiter.available.permissions</code> &#21644; <code>resilience4j.ratelimiter.waiting_threads</code>&#65292;&#21487;&#20197;&#35775;&#38382; <code>http://localhost:8082/actuator/metrics/resilience4j.ratelimiter.waiting_threads</code> &#26597;&#30475;&#20855;&#20307;&#30340;&#20869;&#23481;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">8</span>&#36825;&#20010;&#31034;&#20363;&#22312; ch15/teamaker-resilience4j &#39033;&#30446;&#20013;&#12290;</p><h3 id="nav_point_234">15.2.2&#12288;&#20351;&#29992; Resilience4j &#23454;&#29616;&#26029;&#36335;</h3><p>&#22312;&#30693;&#36947;&#20102;&#38480;&#27969;&#30340;&#23454;&#29616;&#26041;&#27861;&#21518;&#65292;&#20877;&#26469;&#30475;&#26029;&#36335;&#23601;&#20250;&#23481;&#26131;&#24456;&#22810;&#12290;Resilience4j &#30340;&#26029;&#36335;&#22120;&#26159;&#22312; resilience4j- circuitbreaker &#27169;&#22359;&#37324;&#30340;&#65292;&#19981;&#36807;&#25105;&#20204;&#24341;&#20837;&#30340; resilience4-spring-boot2 &#24050;&#32463;&#25226;&#21508;&#31181;&#38656;&#35201;&#29992;&#21040;&#30340; Resilience4j &#27169;&#22359;&#37117;&#24102;&#19978;&#20102;&#65292;&#22240;&#27492;&#23601;&#19981;&#38656;&#35201;&#20877;&#25163;&#21160;&#24341;&#20837;&#20381;&#36182;&#20102;&#12290;</p><p>Resilience4j &#30340;&#26029;&#36335;&#22120;&#22312;&#36935;&#21040;&#35843;&#29992;&#22833;&#36133;&#21644;&#24930;&#35843;&#29992;&#26102;&#37117;&#20250;&#26356;&#26032;&#20869;&#37096;&#30340;&#32479;&#35745;&#20540;&#65292;&#24403;&#22833;&#36133;&#25110;&#32791;&#26102;&#36807;&#24930;&#30340;&#27604;&#20363;&#36229;&#36807;&#38408;&#20540;&#21518;&#65292;&#26029;&#36335;&#22120;&#23601;&#20250;&#24320;&#21551;&#65292;&#21518;&#32493;&#30340;&#35831;&#27714;&#20250;&#25243;&#20986; <code>CallNotPermittedException</code> &#24322;&#24120;&#12290;&#26029;&#36335;&#22120;&#22788;&#20110;&#24320;&#21551;&#29366;&#24577;&#19968;&#27573;&#26102;&#38388;&#21518;&#65292;&#20250;&#36716;&#20837;&#21322;&#24320;&#29366;&#24577;&#65292;&#25918;&#19968;&#37096;&#20998;&#35831;&#27714;&#20570;&#23454;&#38469;&#35843;&#29992;&#65292;&#21028;&#26029;&#19979;&#28216;&#26159;&#21542;&#24050;&#32463;&#24674;&#22797;&#65292;&#22914;&#26524;&#24674;&#22797;&#23601;&#20851;&#38381;&#12290;Resilience4j &#30340;&#26029;&#36335;&#22120;&#20351;&#29992;&#28369;&#21160;&#31383;&#21475;&#26469;&#23384;&#20648;&#24182;&#32858;&#21512;&#35843;&#29992;&#32467;&#26524;&#65292;&#26377;&#20004;&#31181;&#23454;&#29616;&#21487;&#20379;&#36873;&#25321;&#65292;&#19968;&#31181;&#26159;&#22522;&#20110;<strong>&#35745;&#25968;</strong>&#30340;&#28369;&#21160;&#31383;&#21475;&#65292;&#32479;&#35745;&#30340;&#26159; <em>N</em> &#27425;&#35843;&#29992;&#30340;&#24773;&#20917;&#65307;&#21478;&#19968;&#31181;&#26159;&#22522;&#20110;<strong>&#26102;&#38388;</strong>&#30340;&#28369;&#21160;&#31383;&#21475;&#65292;&#32479;&#35745;&#30340;&#26159; <em>N</em> &#31186;&#37324;&#30340;&#35843;&#29992;&#24773;&#20917;&#65292;&#40664;&#35748;&#29992;&#30340;&#26159;&#21069;&#32773;&#12290;</p><ol>
<li><p><strong>&#26029;&#36335;&#22120;&#37197;&#32622;</strong></p>
<p><code>CircuitBreakerConfig</code> &#26159;&#26029;&#36335;&#22120;&#30340;&#20855;&#20307;&#37197;&#32622;&#31867;&#65292;Spring Boot &#37324;&#29992;&#21040;&#30340;&#21017;&#26159; <code>CircuitBreakerProperties</code>&#12290;&#26029;&#36335;&#22120;&#30456;&#20851;&#30340;&#37197;&#32622;&#39033;&#37117;&#20197; <code>resilience4j.circuitbreaker</code> &#20026;&#21069;&#32512;&#65292;&#25105;&#20204;&#21487;&#20197;&#29992; <code>resilience4j.circuitbreaker.instances.XXX</code> &#26469;&#37197;&#32622; <code>XXX</code> &#26029;&#36335;&#22120;&#30340;&#20855;&#20307;&#21442;&#25968;&#12290;&#23545;&#20110;&#27809;&#26377;&#21333;&#29420;&#37197;&#32622;&#30340;&#26029;&#36335;&#22120;&#65292;&#21017;&#20250;&#20351;&#29992; <code>resilience4j.circuitbreaker.configs.default</code> &#20013;&#30340;&#37197;&#32622;&#12290;&#34920; 15-3 &#21015;&#20030;&#20102;&#19968;&#20123;&#24120;&#29992;&#30340;&#37197;&#32622;&#39033;&#12290;</p>
<p><strong>&#34920; 15-3&#12288;&#26029;&#36335;&#22120;&#30456;&#20851;&#30340;&#37096;&#20998;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><td>&#37197;&#32622;&#39033;</td><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>failure-rate-threshold</code></td><td><code>50</code></td><td>&#22833;&#36133;&#29575;&#38408;&#20540;&#65292;&#22823;&#20110;&#31561;&#20110;&#35813;&#38408;&#20540;&#30340;&#24773;&#20917;&#19979;&#26029;&#36335;&#22120;&#36827;&#20837;&#24320;&#21551;&#29366;&#24577;</td></tr><tr><td><code>slow-call-rate-threshold</code></td><td><code>100</code></td><td>&#24930;&#35831;&#27714;&#27604;&#20363;&#38408;&#20540;&#65292;&#22823;&#20110;&#31561;&#20110;&#35813;&#38408;&#20540;&#30340;&#24773;&#20917;&#19979;&#26029;&#36335;&#22120;&#36827;&#20837;&#24320;&#21551;&#29366;&#24577;</td></tr><tr><td><code>slow-call-duration-threshold</code></td><td><code>60000ms</code></td><td>&#24930;&#35831;&#27714;&#32791;&#26102;&#38408;&#20540;&#65292;&#36229;&#36807;&#35813;&#38408;&#20540;&#30340;&#35831;&#27714;&#20250;&#34987;&#35270;&#20026;&#24930;&#35831;&#27714;</td></tr><tr><td><code>sliding-window-type</code></td><td><code>COUNT_BASED</code></td><td>&#28369;&#21160;&#31383;&#21475;&#31867;&#22411;&#65292;&#22522;&#20110;&#35745;&#25968;&#65288;<code>COUNT_BASED</code>&#65289;&#30340;&#31383;&#21475;&#36824;&#26159;&#22522;&#20110;&#26102;&#38388;&#65288;<code>TIME_BASED</code>&#65289;&#30340;&#31383;&#21475;</td></tr><tr><td><code>sliding-window-size</code></td><td><code>100</code></td><td>&#28369;&#21160;&#31383;&#21475;&#30340;&#22823;&#23567;&#65292;&#22914;&#26524;&#26159;&#22522;&#20110;&#35745;&#25968;&#30340;&#31383;&#21475;&#65292;&#35201;&#35760;&#24405;&#30340;&#26159;&#26368;&#21518; <i>N</i> &#20010;&#35831;&#27714;&#65307;&#22914;&#26524;&#26159;&#22522;&#20110;&#26102;&#38388;&#30340;&#31383;&#21475;&#65292;&#21017;&#35201;&#35760;&#24405;&#30340;&#26159;&#26368;&#21518; <i>N</i> &#31186;&#20869;&#30340;&#35831;&#27714;</td></tr><tr><td><code>minimum-number-of-calls</code></td><td><code>100</code></td><td>&#27599;&#20010;&#31383;&#21475;&#20869;&#30340;&#26368;&#23569;&#35843;&#29992;&#27425;&#25968;&#65292;&#23569;&#20110;&#35813;&#27425;&#25968;&#19981;&#20250;&#35745;&#31639;&#22833;&#36133;&#29575;&#21644;&#24930;&#35831;&#27714;&#27604;&#20363;</td></tr><tr><td><code>max-wait-duration-in-half-open-state</code></td><td><code>0ms</code></td><td>&#22312;&#21322;&#24320;&#29366;&#24577;&#19979;&#26368;&#22810;&#31561;&#24453;&#22810;&#23569;&#26102;&#38388;&#20999;&#25442;&#22238;&#25171;&#24320;&#29366;&#24577;&#65292;<code>0</code> &#24847;&#21619;&#30528;&#22312;&#25152;&#26377;&#25918;&#34892;&#30340;&#35831;&#27714;&#32467;&#26463;&#21069;&#37117;&#20250;&#32500;&#25345;&#21322;&#24320;&#29366;&#24577;</td></tr><tr><td><code>wait-duration-in-open-state</code></td><td><code>60000ms</code></td><td>&#25171;&#24320;&#29366;&#24577;&#19979;&#65292;&#25345;&#32493;&#22810;&#38271;&#26102;&#38388;&#20999;&#25442;&#21040;&#21322;&#24320;&#29366;&#24577;</td></tr><tr><td><code>permitted-number-of-calls-in-half-open-state</code></td><td><code>10</code></td><td>&#21322;&#24320;&#29366;&#24577;&#19979;&#20801;&#35768;&#25918;&#36807;&#22810;&#23569;&#20010;&#35831;&#27714;&#21435;&#19979;&#28216;</td></tr><tr><td><code>record-exceptions</code></td><td>&#31354;</td><td>&#35201;&#34987;&#35760;&#24405;&#20026;&#22833;&#36133;&#65292;&#22686;&#21152;&#22833;&#36133;&#29575;&#30340;&#24322;&#24120;&#21015;&#34920;&#65307;&#22914;&#26524;&#22312;&#36825;&#37324;&#37197;&#32622;&#20102;&#24322;&#24120;&#65292;&#37027;&#20854;&#20182;&#30340;&#24322;&#24120;&#65288;&#38500;&#20102; <code>ignore-exceptions</code> &#37324;&#37197;&#32622;&#30340;&#65289;&#37117;&#20250;&#34987;&#35270;&#20026;&#25104;&#21151;</td></tr><tr><td><code>ignore-exceptions</code></td><td>&#31354;</td><td>&#35201;&#34987;&#24573;&#30053;&#30340;&#24322;&#24120;&#65292;&#20854;&#20013;&#37197;&#32622;&#30340;&#24322;&#24120;&#26082;&#19981;&#20250;&#34987;&#35270;&#20026;&#22833;&#36133;&#65292;&#20063;&#19981;&#20250;&#34987;&#35270;&#20026;&#25104;&#21151;</td></tr><tr><td><code>register-healtd-indicator</code></td><td><code>false</code></td><td>&#26159;&#21542;&#35201;&#25226;&#36825;&#20010;&#26029;&#36335;&#22120;&#27880;&#20876;&#21040; Actuator &#30340;&#20581;&#24247;&#25351;&#26631;&#37324;</td></tr></table>
<p>&#19982;&#38480;&#27969;&#19968;&#26679;&#65292;Resilience4j &#30340;&#26029;&#36335;&#22120;&#20063;&#21487;&#20197;&#20351;&#29992;&#32534;&#31243;&#21644;&#27880;&#35299;&#20004;&#31181;&#26041;&#24335;&#12290;&#26029;&#36335;&#22120;&#30340;&#37197;&#32622;&#25918;&#22312; <code>CircuitBreakerConfig</code> &#20013;&#65292;&#21487;&#20197;&#29992; <code>CircuitBreakerConfig.custom()</code> &#26469;&#21019;&#24314;&#33258;&#23450;&#20041;&#37197;&#32622;&#65292;&#38543;&#21518;&#23558;&#37197;&#32622;&#20256;&#32473; <code>CircuitBreakerRegistry</code>&#65292;&#36890;&#36807;&#23427;&#26469;&#21019;&#24314;&#20855;&#20307;&#30340; <code>CircuitBreaker</code>&#12290;&#22823;&#27010;&#20250;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>// &#20351;&#29992;&#40664;&#35748;&#37197;&#32622;&#21019;&#24314;CircuitBreakerRegistry
CircuitBreakerRegistry registry = CircuitBreakerRegistry.ofDefaults();
CircuitBreaker circuitBreaker = registry.circuitBreaker("tea-maker");
circuitBreaker.executeSupplier(() -&gt; {...});</code></pre>
<p>&#19981;&#36807;&#65292;&#22312;&#36890;&#24120;&#24773;&#20917;&#19979;&#65292;&#36824;&#26159;&#20351;&#29992; <code>@CircuitBreaker</code> &#27880;&#35299;&#26356;&#26041;&#20415;&#19968;&#20123;&#65292;&#32780;&#19988; resilience4j-spring-boot2 &#36824;&#26367;&#25105;&#20204;&#33258;&#21160;&#37197;&#32622;&#20102; <code>CircuitBreakerRegistry</code> &#31561;&#20869;&#23481;&#65292;&#21482;&#38656;&#36890;&#36807; Properties &#25110;&#32773; YAML &#25552;&#20379;&#37197;&#32622;&#21363;&#21487;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#26029;&#36335;&#20445;&#25252;&#31034;&#20363;</strong></p>
<p>&#22312;&#20102;&#35299;&#20102; Resilience4j &#26029;&#36335;&#22120;&#30340;&#22522;&#26412;&#24773;&#20917;&#21518;&#65292;&#35753;&#25105;&#20204;&#36890;&#36807;&#19968;&#20010;&#20363;&#23376;&#26469;&#21152;&#28145;&#19968;&#19979;&#23545;&#23427;&#30340;&#35748;&#35782;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#39038;&#23458;&#22312;&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#25903;&#20184;&#23436;&#35746;&#21333;&#21518;&#65292;&#20250;&#22312;&#25910;&#38134;&#21488;&#26049;&#36793;&#31561;&#30528;&#65292;&#30001;&#20110;&#25105;&#20204;&#27809;&#26377;&#21483;&#21495;&#31995;&#32479;&#65292;&#25152;&#20197;&#30446;&#21069;&#39038;&#23458;&#23601;&#21482;&#33021;&#38548;&#27573;&#26102;&#38388;&#26469;&#38382;&#19968;&#22768;&#65306;&#8220;&#25105;&#30340;&#39278;&#26009;&#20570;&#22909;&#20102;&#21527;&#65311;&#8221;&#22914;&#26524;&#19968;&#30452;&#27809;&#20570;&#22909;&#65292;&#38382;&#22810;&#20102;&#39038;&#23458;&#20063;&#28902;&#65292;&#24037;&#20316;&#20154;&#21592;&#36824;&#24471;&#19981;&#20572;&#22320;&#22238;&#31572;&#65292;&#21448;&#25110;&#32773;&#22312;&#20154;&#22810;&#26102;&#26681;&#26412;&#26469;&#19981;&#21450;&#22238;&#31572;&#65292;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#24076;&#26395;&#39038;&#23458;&#38382;&#20102;&#20960;&#27425;&#37117;&#27809;&#20570;&#22909;&#25110;&#32773;&#27809;&#28040;&#24687;&#26102;&#38548;&#27573;&#26102;&#38388;&#20877;&#38382;&#12290;</p>
</blockquote>
<p>&#25105;&#20204;&#21487;&#20197;&#29702;&#35299;&#24182;&#32763;&#35793;&#19968;&#19979;&#36825;&#20010;&#38656;&#27714;&#65292;&#20854;&#20013;&#21253;&#21547;&#20102;&#20004;&#20010;&#23376;&#38656;&#27714;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">Customer &#31995;&#32479;&#22312;&#20184;&#27454;&#21518;&#23601;&#35201;&#19981;&#26029;&#21521; BinaryTea &#21457;&#36215;&#26597;&#35810;&#35831;&#27714;&#65292;&#36890;&#36807;&#35746;&#21333; ID &#26597;&#35810;&#35746;&#21333;&#29366;&#24577;&#65292;&#22914;&#26524;&#29366;&#24577;&#27809;&#21040; <code>FINISHED</code> &#23601;&#36807;&#19968;&#27573;&#26102;&#38388;&#20877;&#26597;&#65292;&#30452;&#21040;&#29366;&#24577;&#20026; <code>FINISHED</code> &#20026;&#27490;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#22914;&#26524;&#36935;&#21040;&#26597;&#35810;&#22833;&#36133;&#25253;&#38169;&#65292;&#25110;&#32773;&#26159;&#22810;&#27425;&#36820;&#22238;&#30340;&#35746;&#21333;&#29366;&#24577;&#26410;&#21040; <code>FINISHED</code>&#65292;&#21487;&#20197;&#24320;&#21551;&#26029;&#36335;&#65292;&#19968;&#27573;&#26102;&#38388;&#37324;&#19981;&#20877;&#21457;&#36215;&#26597;&#35810;&#12290;</li>
</ul>
<p>&#20026;&#20102;&#23454;&#29616;&#31532;&#19968;&#20010;&#38656;&#27714;&#65292;&#35201;&#20462;&#25913;&#19968;&#19979; BinaryTea &#24037;&#31243;&#65292;&#25552;&#20379;&#19968;&#20010;&#26597;&#35810;&#21333;&#31508;&#35746;&#21333;&#30340;&#25509;&#21475;&#65292;&#20998;&#21035;&#35201;&#20462;&#25913; <code>OrderController</code> &#21644; <code>OrderService</code> &#36825;&#20004;&#20010;&#31867;&#12290;&#20808;&#22312; <code>OrderService</code> &#37324;&#22686;&#21152;&#26597;&#35810;&#21333;&#31508;&#35746;&#21333;&#30340;&#26041;&#27861;&#65292;&#30452;&#25509;&#36890;&#36807; <code>OrderRepository</code> &#23601;&#33021;&#23436;&#25104;&#26597;&#35810;&#65292;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-17 &#25152;&#31034;&#12290;<span class="&#27880;&#37322;&#32534;&#21495;">9</span></p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-17</strong>&#12288;&#22686;&#21152;&#20102;&#26597;&#35810;&#21333;&#31508;&#35746;&#21333;&#26041;&#27861;&#30340; <code>OrderService</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Service
@Transactional
@Slf4j
public class OrderService {
    public Optional&lt;Order&gt; queryOrder(Long id) {
        return orderRepository.findById(id);
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#38543;&#21518;&#22312; <code>OrderController</code> &#37324;&#22686;&#21152;&#19968;&#20010;&#22788;&#29702; <code>/order/{id} GET</code> &#35831;&#27714;&#30340;&#26041;&#27861;&#65292;&#26681;&#25454;&#20256;&#20837;&#30340;&#35746;&#21333;&#21495;&#26597;&#35810;&#35746;&#21333;&#65292;&#22914;&#26524;&#25214;&#19981;&#21040;&#23545;&#24212;&#35746;&#21333;&#23601;&#30452;&#25509;&#36820;&#22238; <code>404 Not Found</code>&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-18 &#25152;&#31034;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-18</strong>&#12288;&#22788;&#29702; <code>/order/{id}</code> &#35831;&#27714;&#30340; <code>OrderController</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Controller
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @ResponseBody
    @GetMapping("/{id}")
    public ResponseEntity&lt;Order&gt; queryOneOrder(@PathVariable("id") Long id) {
        Optional&lt;Order&gt; result = orderService.queryOrder(id);
        if (result.isPresent()) {
            return ResponseEntity.ok(result.get());
        } else {
            return ResponseEntity.notFound().build();
        }
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#31243;&#24207;&#36816;&#34892;&#21518;&#65292;&#21487;&#20197;&#36890;&#36807; curl &#21629;&#20196;&#24102;&#19978;&#36523;&#20221;&#20449;&#24687;&#35775;&#38382;&#19968;&#19979; <code>/order/1</code>&#65292;&#30475;&#30475;&#33021;&#21542;&#21462;&#22238;&#32534;&#21495;&#20026; <code>1</code> &#30340;&#35746;&#21333;&#20869;&#23481;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; curl -v -u LiLei:binarytea http://localhost:8080/order/1</code></pre>
<p>&#22312; Customer &#24037;&#31243;&#37324;&#65292;&#21516;&#26679;&#35201;&#22312; <code>OpenFeign</code> &#25509;&#21475;&#37324;&#21152;&#19978;&#36825;&#20010; URL &#30340;&#23450;&#20041;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 15-19 &#37027;&#26679;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-19</strong>&#12288;&#22686;&#21152;&#20102; <code>/order/{id}</code> &#30340; <code>OrderService</code> &#25509;&#21475;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@FeignClient(contextId = "orderService", name = "binarytea", path = "/order")
public interface OrderService {
    @GetMapping(path = "/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity&lt;Order&gt; queryOneOrder(@PathVariable("id") Long id);
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#30001;&#20110; <code>OrderService</code> &#26159;&#20010; <code>OpenFeign</code> &#25509;&#21475;&#65292;&#20855;&#20307;&#30340;&#23454;&#29616;&#26159;&#22312;&#36816;&#34892;&#26102;&#29983;&#25104;&#30340;&#65292;&#19981;&#26041;&#20415;&#28155;&#21152;&#19978;&#38754;&#31532;&#20108;&#20010;&#23376;&#38656;&#27714;&#30340;&#36923;&#36753;&#65292;&#25152;&#20197;&#25105;&#20204;&#23558;&#26597;&#35810;&#24182;&#21028;&#26029;&#32467;&#26524;&#30340;&#36923;&#36753;&#20889;&#21040;&#20102; <code>BinaryTeaClient</code> &#37324;&#12290;&#36890;&#36807; <code>OrderService</code> &#26597;&#35810;&#35746;&#21333;&#65292;&#22914;&#26524;&#35746;&#21333;&#19981;&#23384;&#22312;&#23601;&#25243;&#20986;&#24322;&#24120;&#65292;&#23384;&#22312;&#30340;&#35805;&#21028;&#26029;&#35746;&#21333;&#30340;&#29366;&#24577;&#65292;&#22914;&#26524;&#20026; <code>FINISHED</code> &#21017;&#36820;&#22238; <code>true</code>&#65292;&#21542;&#21017;&#25243;&#20986;&#24322;&#24120;&#12290;&#35760;&#24471;&#22312; <code>CustomerApplication</code> &#37324;&#23450;&#20041; <code>BinaryTeaClient</code> &#30340; Bean &#23454;&#20363;&#65292;&#21516;&#26102;&#21435;&#25481;&#20043;&#21069;&#33258;&#24049;&#25163;&#21160;&#32534;&#20889;&#30340; AOP &#23481;&#38169;&#20999;&#38754;&#12290;</p>
<p>&#20195;&#30721;&#31034;&#20363; 15-20 &#20013;&#38656;&#35201;&#37325;&#28857;&#35828;&#26126;&#19968;&#19979; <code>@CircuitBreaker</code> &#27880;&#35299;&#30340;&#29992;&#27861;&#65292;<code>name</code> &#25351;&#23450;&#20102;&#26029;&#36335;&#22120;&#30340;&#21517;&#31216;&#65292;<code>fallbackMethod</code> &#25351;&#23450;&#20102;&#26029;&#36335;&#22120;&#24320;&#21551;&#21518;&#38477;&#32423;&#35843;&#29992;&#30340;&#26041;&#27861;&#65292;&#35813;&#26041;&#27861;&#24517;&#39035;&#22312;&#21516;&#19968;&#20010;&#31867;&#37324;&#65292;&#26041;&#27861;&#30340;&#31614;&#21517;&#19982;&#21407;&#26041;&#27861;&#30456;&#21516;&#65292;&#20294;&#38656;&#35201;&#22312;&#21442;&#25968;&#26368;&#21518;&#22686;&#21152;&#19968;&#20010;&#24322;&#24120;&#21442;&#25968;&#65292;&#29992;&#26469;&#26631;&#26126;&#22788;&#29702;&#30340;&#24322;&#24120;&#65292;&#22914;&#26524;&#26377;&#22810;&#20010; <code>orderIsNotFinished()</code> &#26041;&#27861;&#65292;&#37027;&#20040;&#21518;&#38754;&#21487;&#20197;&#36319;&#19981;&#21516;&#31867;&#22411;&#30340;&#24322;&#24120;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-20</strong>&#12288;&#29992;&#26469;&#21028;&#26029;&#35746;&#21333;&#26159;&#21542;&#23436;&#25104;&#30340; <code>BinaryTeaClient</code> &#31867;&#19982; <code>OrderNotFinishedException</code> &#24322;&#24120;&#23450;&#20041;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class BinaryTeaClient {
    @Autowired
    private OrderService orderService;

    @CircuitBreaker(name = "order-checker", fallbackMethod = "orderIsNotFinished")
    public boolean isOrderFinished(Long id) {
        ResponseEntity&lt;Order&gt; entity = orderService.queryOneOrder(id);
        if (HttpStatus.NOT_FOUND == entity.getStatusCode()) {
            throw new IllegalArgumentException("&#27809;&#25214;&#21040;&#35746;&#21333;");
        }
        Order order = entity.getBody();
        if ("FINISHED".equalsIgnoreCase(order.getStatus())) {
            return true;
        }
        log.info("&#35746;&#21333;{}&#36824;&#27809;&#22909;", id);
        throw new OrderNotFinishedException();
    }

    public boolean orderIsNotFinished(Long id, Exception e) {
        return false;
    }
}

public class OrderNotFinishedException extends RuntimeException {
}</code></pre>
<p>&#25509;&#30528;&#65292;&#26469;&#37325;&#26500;&#19968;&#19979; <code>OrderRunner</code> &#31867;&#65292;&#20026;&#20102;&#35753; <code>run()</code> &#26041;&#27861;&#19981;&#33267;&#20110;&#22826;&#36807;&#20887;&#38271;&#65292;&#25105;&#20204;&#38656;&#35201;&#23558;&#20854;&#20013;&#30340;&#36923;&#36753;&#25286;&#20998;&#19968;&#19979;&#65292;&#23558;&#21019;&#24314;&#35746;&#21333;&#12289;&#25903;&#20184;&#35746;&#21333;&#12289;&#26597;&#35810;&#35746;&#21333;&#26159;&#21542;&#23436;&#25104;&#20197;&#21450;&#21462;&#35746;&#21333;&#25918;&#21040;&#19977;&#20010;&#19981;&#21516;&#30340;&#26041;&#27861;&#37324;&#12290;&#25903;&#20184;&#19982;&#21462;&#35746;&#21333;&#37117;&#26159;&#20462;&#25913;&#35746;&#21333;&#29366;&#24577;&#65292;&#22240;&#27492;&#20849;&#29992;&#20102; <code>modifyOrderState()</code> &#26041;&#27861;&#12290;&#20855;&#20307;&#22914;&#20195;&#30721;&#31034;&#20363; 15-21 &#25152;&#31034;&#12290;&#22312; <code>waitUntilFinished()</code> &#26041;&#27861;&#20013;&#38024;&#23545;&#20960;&#31181;&#19981;&#21516;&#30340;&#24322;&#24120;&#20998;&#21035;&#36827;&#34892;&#20102;&#22788;&#29702;&#65292;&#27599;&#27425;&#26597;&#35810;&#21518;&#31561;&#24453; 1 &#31186;&#20877;&#21457;&#36215;&#19979;&#27425;&#30340;&#26597;&#35810;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-21</strong>&#12288;&#22686;&#21152;&#20102;&#31561;&#24453;&#35746;&#21333;&#23436;&#25104;&#36923;&#36753;&#30340; <code>OrderRunner</code> &#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Order(5)
@Setter
@Slf4j
public class OrderRunner implements ApplicationRunner {
    @Autowired
    private OrderService orderService;
    @Autowired
    private BinaryTeaClient client;

    @Override
    public void run(ApplicationArguments args) throws Exception {
        List&lt;learning.spring.customer.model.Order&gt; orders = orderService.listOrders();
        log.info("&#35843;&#29992;&#21069;&#30340;&#35746;&#21333;&#25968;&#37327;: {}", orders.size());
        Long id = createOrder();
        modifyOrderState(id, "PAID");
        waitUntilFinished(id);
        modifyOrderState(id, "TAKEN");
    }

    private void waitUntilFinished(Long id) {
        boolean flag = false;
        while (!flag) {
            try {
                flag = client.isOrderFinished(id);
                log.info("&#35746;&#21333;{}&#23436;&#25104;&#20102;&#27809;{}", id, flag);
                if (!flag) {
                    TimeUnit.SECONDS.sleep(1);
                }
            } catch (IllegalArgumentException e) {
                log.warn("&#27809;&#25214;&#21040;&#35746;&#21333;{}", id);
                break;
            } catch (OrderNotFinishedException e) {
                log.info("&#35746;&#21333;{}&#36824;&#27809;&#20934;&#22791;&#22909;", id);
            } catch (Exception e) {
                log.error("&#21834;&#21568;&#26377;&#38382;&#39064;", e);
            }
        }
        log.info("&#35746;&#21333;{}&#24050;&#32463;&#22909;&#20102;", id);
    }

    private Long createOrder() {...}
    private void modifyOrderState(Long id, String state) {...}
}</code></pre>
<p>&#26368;&#21518;&#65292;&#36824;&#38656;&#35201;&#20026; <code>order-checker</code> &#36825;&#20010;&#26029;&#36335;&#22120;&#37197;&#32622;&#21508;&#31181;&#21442;&#25968;&#12290;&#36825;&#27425;&#25105;&#20204;&#25442;&#29992; Properties &#30340;&#26041;&#24335;&#26469;&#36827;&#34892;&#37197;&#32622;&#65292;&#22312; <code>application.properties</code> &#37324;&#28155;&#21152;&#20195;&#30721;&#31034;&#20363; 15-22 &#37324;&#30340;&#20869;&#23481;&#12290;&#20855;&#20307;&#30340;&#21547;&#20041;&#26159;&#36825;&#26679;&#30340;&#65292;&#20351;&#29992;&#40664;&#35748;&#30340;&#22522;&#20110;&#35745;&#25968;&#30340;&#28369;&#21160;&#31383;&#21475;&#65292;&#31383;&#21475;&#22823;&#23567;&#35774;&#32622;&#20026; 30 &#27425;&#35843;&#29992;&#65292;&#26368;&#23569;&#35201;&#26377; 5 &#27425;&#35843;&#29992;&#25165;&#24320;&#22987;&#32479;&#35745;&#65292;&#26029;&#36335;&#22120;&#25171;&#24320;&#21518;&#31561; 10 &#31186;&#38047;&#36827;&#20837;&#21322;&#24320;&#29366;&#24577;&#65292;&#25918;&#34892; 2 &#20010;&#35831;&#27714;&#21435;&#26816;&#26597;&#35746;&#21333;&#26159;&#21542;&#24050;&#23436;&#25104;&#12290;&#30001;&#20110;&#25105;&#20204;&#30340;&#20195;&#30721;&#37324;&#38024;&#23545;&#35746;&#21333;&#19981;&#23384;&#22312;&#30340;&#29366;&#24577;&#20570;&#20102;&#29305;&#27530;&#22788;&#29702;&#65292;&#25152;&#20197;&#24573;&#30053; <code>java.lang.IllegalArgumentException</code> &#36825;&#31181;&#24322;&#24120;&#31867;&#22411;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-22</strong>&#12288;<code>application.properties</code> &#20013;&#28155;&#21152; <code>order-checker</code> &#30456;&#20851;&#30340;&#26029;&#36335;&#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>resilience4j.circuitbreaker.instances.order-checker.sliding-window-size=30
resilience4j.circuitbreaker.instances.order-checker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.order-checker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.order-checker.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.order-checker.ignore-exceptions=java.lang.IllegalArgumentException
resilience4j.circuitbreaker.instances.order-checker.register-health-indicator=true</code></pre>
<p>Customer &#36816;&#34892;&#21518;&#65292;&#25105;&#20204;&#21487;&#20197;&#26681;&#25454;&#26085;&#24535;&#20013;&#8220;&#35746;&#21333; <code>{}</code> &#36824;&#27809;&#22909;&#8221;&#21644;&#8220;&#35746;&#21333; <code>{}</code> &#36824;&#27809;&#20934;&#22791;&#22909;&#8221;&#30340;&#20986;&#29616;&#27425;&#25968;&#19982;&#38388;&#38548;&#26469;&#21028;&#26029;&#26029;&#36335;&#22120;&#30340;&#29366;&#24577;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">9</span>&#36825;&#37096;&#20998;&#25552;&#21040;&#30340;&#20363;&#23376;&#37117;&#22312; ch15/binarytea-resilience4j &#21644; ch15/customer-resilience4j &#39033;&#30446;&#37324;&#12290;</p><h3 id="nav_point_235">15.2.3&#12288;&#20351;&#29992; Resilience4j &#23454;&#29616;&#38548;&#31163;</h3><p>Resilience4j &#20013;&#19982;&#33329;&#22721;&#27169;&#24335;&#30456;&#20851;&#30340;&#20869;&#23481;&#26159;&#25918;&#22312; resilience4j-bulkhead &#27169;&#22359;&#37324;&#30340;&#65292;&#20854;&#20013;&#38024;&#23545;&#33329;&#22721;&#27169;&#24335;&#25552;&#20379;&#20102;&#20004;&#31181;&#23454;&#29616;&#65292;&#31532;&#19968;&#31181;&#26159;<strong>&#22522;&#20110;&#20449;&#21495;&#37327;</strong>&#30340; <code>SemaphoreBulkhead</code>&#65292;&#21478;&#19968;&#31181;&#26159;<strong>&#22522;&#20110;&#26377;&#30028;&#38431;&#21015;&#21644;&#22266;&#23450;&#22823;&#23567;&#32447;&#31243;&#27744;</strong>&#30340; <code>FixedThreadPoolBulkhead</code>&#65292;&#40664;&#35748;&#20351;&#29992;&#21069;&#32773;&#12290;</p><ol>
<li><p><strong>&#33329;&#22721;&#27169;&#24335;&#37197;&#32622;</strong></p>
<p>&#19982;&#20043;&#21069;&#20171;&#32461;&#30340;&#38480;&#27969;&#21644;&#26029;&#36335;&#19968;&#26679;&#65292;&#36890;&#36807;&#33329;&#22721;&#27169;&#24335;&#23454;&#29616;&#38548;&#31163;&#20063;&#26377;&#32534;&#31243;&#21644;&#27880;&#35299;&#20004;&#31181;&#26041;&#24335;&#12290;&#32534;&#31243;&#27169;&#24335;&#37197;&#32622;&#25918;&#22312; <code>BulkheadConfig</code> &#20013;&#65292;&#36890;&#36807; <code>BulkheadRegistry</code> &#25110;&#32773; <code>ThreadPoolBulkheadRegistry</code> &#26469;&#21019;&#24314; <code>Bulkhead</code> &#23545;&#35937;&#65292;&#19982;&#20043;&#21069;&#20171;&#32461;&#30340;&#21478;&#20004;&#31181;&#23481;&#38169;&#26041;&#24335;&#20960;&#20046;&#26159;&#19968;&#26679;&#30340;&#12290;&#27880;&#35299;&#26041;&#24335;&#20351;&#29992;&#30340;&#26159; <code>@Bulkhead</code> &#27880;&#35299;&#65292;&#20854;&#20013; <code>name</code> &#23646;&#24615;&#29992;&#26469;&#25351;&#23450;&#21517;&#31216;&#65292;<code>type</code> &#23646;&#24615;&#29992;&#26469;&#25351;&#23450;&#23454;&#29616;&#31867;&#22411;&#12290;</p>
<p>resilience4j-spring-boot2 &#20026;&#25105;&#20204;&#23436;&#25104;&#20102;&#30456;&#20851; Bean &#30340;&#33258;&#21160;&#37197;&#32622;&#65292;&#22522;&#26412;&#19978;&#25105;&#20204;&#21482;&#38656;&#35201;&#36827;&#34892;&#19968;&#23567;&#37096;&#20998;&#37197;&#32622;&#23601;&#22909;&#20102;&#12290;&#30001;&#20110; Resilience4j &#37324;&#33329;&#22721;&#27169;&#24335;&#30340;&#20004;&#31181;&#37197;&#32622;&#24046;&#24322;&#36739;&#22823;&#65292;&#25152;&#20197;&#23545;&#24212;&#30340;&#37197;&#32622;&#20063;&#34987;&#25286;&#25104;&#20102;&#20004;&#20010;&#37197;&#32622;&#31867;&#12290;&#22522;&#20110;&#20449;&#21495;&#37327;&#30340;&#40664;&#35748;&#23454;&#29616;&#37197;&#32622;&#25918;&#22312; <code>BulkheadProperties</code> &#37324;&#65292;&#23646;&#24615;&#30340;&#21069;&#32512;&#26159; <code>resilience4j.bulkhead</code>&#65292;&#34920; 15-4 &#32599;&#21015;&#20102;&#20854;&#20013;&#30340; 2 &#20010;&#24120;&#29992;&#30340;&#37197;&#32622;&#39033;&#12290;</p>
<p><strong>&#34920; 15-4&#12288;<code>resilience4j.bulkhead</code> &#19979;&#30340;&#24120;&#29992;&#37197;&#32622;&#39033;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>max-concurrent-calls</code></td><td><code>25</code></td><td>&#20801;&#35768;&#30340;&#26368;&#22823;&#24182;&#34892;&#25191;&#34892;&#37327;</td></tr><tr><td><code>max-wait-duration</code></td><td><code>0</code></td><td>&#22312;&#33719;&#24471;&#25191;&#34892;&#26435;&#38480;&#21069;&#32447;&#31243;&#26368;&#22810;&#38459;&#22622;&#22810;&#20037;</td></tr></table>
<p><code>FixedThreadPoolBulkhead</code> &#30340;&#37197;&#32622;&#21069;&#32512;&#26159; <code>resilience4j.thread-pool-bulkhead</code>&#65292;&#23545;&#24212;&#30340;&#37197;&#32622;&#31867;&#26159; <code>ThreadPoolBulkheadProperties</code>&#65292;&#34920; 15-5 &#32599;&#21015;&#20102;&#20854;&#20013;&#30340; 4 &#20010;&#24120;&#29992;&#37197;&#32622;&#39033;&#12290;</p>
<p><strong>&#34920; 15-5&#12288;<code>resilience4j.thread-pool-bulkhead</code> &#19979;&#30340;&#24120;&#29992;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#37197;&#32622;&#39033;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>max-thread-pool-size</code></td><td><code>Runtime.getRuntime().availableProcessors()</code></td><td>&#32447;&#31243;&#27744;&#30340;&#26368;&#22823;&#32447;&#31243;&#25968;</td></tr><tr><td><code>core-thread-pool-size</code></td><td><code>Runtime.getRuntime().availableProcessors() - 1</code></td><td>&#32447;&#31243;&#27744;&#30340;&#26680;&#24515;&#32447;&#31243;&#25968;</td></tr><tr><td><code>queue-capacity</code></td><td><code>100</code></td><td>&#26377;&#30028;&#38431;&#21015;&#30340;&#22823;&#23567;</td></tr><tr><td><code>keep-alive-duration</code></td><td><code>20ms</code></td><td>&#24403;&#32447;&#31243;&#25968;&#22823;&#20110;&#26680;&#24515;&#32447;&#31243;&#25968;&#26102;&#65292;&#38144;&#27585;&#32447;&#31243;&#21069;&#30340;&#26368;&#22823;&#31561;&#24453;&#26102;&#38388;</td></tr></table>
<p>&#160;</p>
</li>
<li><p><strong>&#33329;&#22721;&#27169;&#24335;&#31034;&#20363;</strong></p>
<p>&#21516;&#26679;&#30340;&#65292;&#22312;&#20102;&#35299;&#20102;&#22522;&#26412;&#30340;&#37197;&#32622;&#21518;&#65292;&#25105;&#20204;&#26469;&#30475;&#20010;&#23454;&#38469;&#30340;&#20363;&#23376;&#65292;&#21152;&#28145;&#19979;&#21360;&#35937;&#12290;</p>
<blockquote>
<p><strong>&#38656;&#27714;&#25551;&#36848;</strong>&#12288;&#26377;&#26102;&#24215;&#37324;&#30340;&#35746;&#21333;&#26469;&#24471;&#22826;&#22810;&#65292;&#35843;&#33590;&#24072;&#26681;&#26412;&#26469;&#19981;&#21450;&#21046;&#20570;&#65292;&#25152;&#20197;&#21709;&#24212;&#20250;&#38750;&#24120;&#24930;&#12290;&#21069;&#21488;&#26102;&#19981;&#26102;&#21435;&#35810;&#38382;&#35843;&#33590;&#24072;&#26159;&#21542;&#24050;&#32463;&#21046;&#20316;&#23436;&#25104;&#65292;&#20182;&#36824;&#35201;&#33457;&#26102;&#38388;&#26597;&#30475;&#35746;&#21333;&#20877;&#31572;&#22797;&#65292;&#30001;&#20110;&#35746;&#21333;&#20998;&#37197;&#32473;&#20102;&#19981;&#21516;&#30340;&#35843;&#33590;&#24072;&#65292;&#35810;&#38382;&#19968;&#21333;&#27809;&#26377;&#22238;&#22797;&#65292;&#19981;&#20195;&#34920;&#21478;&#19968;&#21333;&#20063;&#27809;&#26377;&#12290;&#25152;&#20197;&#21487;&#20197;&#32771;&#34385;&#38024;&#23545;&#19981;&#21516;&#30340;&#35843;&#33590;&#24072;&#20570;&#20010;&#38548;&#31163;&#65292;&#20998;&#24320;&#35810;&#38382;&#12290;</p>
</blockquote>
<p>&#20998;&#26512;&#19979;&#36825;&#20010;&#38656;&#27714;&#65292;&#25105;&#20204;&#38656;&#35201;&#22312; BinaryTea &#37324;&#22686;&#21152;&#19968;&#20010;&#36890;&#30693;&#30340;&#21151;&#33021;&#65292;&#36890;&#30693;&#35843;&#33590;&#24072;&#21046;&#20316;&#35746;&#21333;&#12290;&#27491;&#24120;&#24773;&#20917;&#19979;&#24212;&#35813;&#23545;&#19981;&#21516;&#30340;&#35843;&#33590;&#24072;&#35774;&#32622;&#19981;&#21516;&#30340;&#33329;&#22721;&#20570;&#38548;&#31163;&#65292;&#19968;&#20010;&#27809;&#22238;&#22797;&#19981;&#24433;&#21709;&#21478;&#19968;&#20010;&#65292;&#36825;&#37324;&#20026;&#20102;&#28436;&#31034;&#26041;&#20415;&#65292;&#23601;&#26681;&#25454;&#35746;&#21333;&#21495;&#21462;&#27169;&#26469;&#20570;&#38548;&#31163;&#12290;</p>
<p>&#26082;&#28982;&#26159;&#35201;&#36890;&#30693; TeaMaker&#65292;&#37027;&#33258;&#28982;&#26159;&#35201;&#22312; BinaryTea &#20013;&#22686;&#21152;&#19968;&#20010;&#35843;&#29992;&#30340;&#23458;&#25143;&#31471;&#65292;&#26412;&#31456;&#20013;&#25105;&#20204;&#20351;&#29992; <code>RestTemplate</code> &#26469;&#21457;&#36215; HTTP &#35843;&#29992;&#65292;&#22312;&#21518;&#38754;&#30340;&#31532; 16 &#31456;&#20171;&#32461;&#21040;&#28040;&#24687;&#38431;&#21015;&#21518;&#65292;&#25105;&#20204;&#20250;&#36716;&#21521;&#20351;&#29992;&#28040;&#24687;&#30340;&#26041;&#24335;&#12290;&#20195;&#30721;&#31034;&#20363; 15-23 &#26159;&#19968;&#20010; TeaMaker &#30340;&#23458;&#25143;&#31471;&#65292;&#36890;&#36807; <code>RestTemplate</code> &#23545; <code>/order/{id}</code> &#21457;&#36215; <code>POST</code> &#35831;&#27714;&#12290;&#36825;&#37324;&#30340; <code>makeTea()</code> &#26041;&#27861;&#19978;&#22686;&#21152;&#20102; <code>@Bulkhead</code> &#27880;&#35299;&#65292;&#35828;&#26126;&#36825;&#20010;&#26041;&#27861;&#20250;&#22312;&#19968;&#20010;&#38548;&#31163;&#30340;&#33329;&#22721;&#20869;&#25191;&#34892;&#12290;&#36825;&#20010;&#27880;&#35299;&#38500;&#20102;&#20351;&#29992; <code>name</code> &#23646;&#24615;&#25351;&#23450;&#21517;&#31216;&#22806;&#65292;&#36824;&#21487;&#20197;&#36890;&#36807; <code>type</code> &#25351;&#23450;&#31867;&#22411;&#65292;&#40664;&#35748;&#26159; <code>SEMAPHORE</code>&#65292;&#21363;&#22522;&#20110;&#20449;&#21495;&#37327;&#30340;&#65292;&#20063;&#21487;&#20197;&#36873;&#25321; <code>THREADPOOL</code>&#65292;&#27492;&#22806;&#36824;&#26377;&#38477;&#32423;&#29992;&#30340; <code>fallbackMethod</code> &#23646;&#24615;&#12290;&#22312;&#35774;&#32622;&#33329;&#22721;&#30340;&#21517;&#31216;&#26102;&#65292;&#36825;&#37324;&#20351;&#29992;&#20102; SpEL &#34920;&#36798;&#24335;&#65292;<code>#root.args[0]</code> &#26159;&#20256;&#20837;&#30340;&#31532;&#19968;&#20010;&#21442;&#25968;&#65292;&#38500;&#20197; 2 &#21462;&#27169;&#21518;&#65292;&#22522;&#25968;&#26159; <code>1</code>&#65292;&#20598;&#25968;&#26159; <code>0</code>&#65292;&#25152;&#20197;&#24471;&#21040;&#30340;&#21517;&#23383;&#20998;&#21035;&#26159; <code>0-tea-maker</code> &#21644; <code>1-tea-maker</code>&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-23</strong>&#12288;&#29992;&#26469;&#21457;&#36215;&#36890;&#30693; TeaMaker &#21046;&#20316;&#35746;&#21333;&#30340;&#23458;&#25143;&#31471;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
public class TeaMakerClient {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${tea-maker.url}")
    private String teaMakerUrl;

    @Bulkhead(name = "#root.args[0] % 2 + '-tea-maker'")
    public TeaMakerResult makeTea(Long id) {
        ResponseEntity&lt;TeaMakerResult&gt; entity = restTemplate
            .postForEntity(teaMakerUrl + "/order/{id}", null,
            TeaMakerResult.class, id);
        log.info("&#35831;&#27714;TeaMaker&#65292;&#21709;&#24212;&#30721;&#65306;{}", entity.getStatusCode());
        if (entity.getStatusCode() == HttpStatus.BAD_REQUEST) {
            return null;
        }
        return entity.getBody();
    }
}

@Getter
@Setter
public class TeaMakerResult {
    private boolean finish;
    private long orderId;
    private long teaMakerId;
}</code></pre>
<p>&#26377;&#20102;&#20855;&#20307;&#30340;&#23458;&#25143;&#31471;&#20043;&#21518;&#65292;&#25509;&#19979;&#26469;&#23601;&#26159;&#32534;&#20889;&#35302;&#21457;&#36890;&#30693;&#30340;&#20195;&#30721;&#12290;&#22312;&#20184;&#27454;&#30340;&#32447;&#31243;&#37324;&#25191;&#34892;&#36890;&#30693;&#34429;&#28982;&#30475;&#36215;&#26469;&#26041;&#20415;&#65292;&#20294;&#20250;&#35201;&#27714;&#20184;&#27454;&#30340;&#25509;&#21475;&#22686;&#21152;&#36828;&#31243;&#35843;&#29992;&#65292;&#36825;&#26082;&#20250;&#23548;&#33268;&#21709;&#24212;&#26102;&#38388;&#21464;&#24930;&#21448;&#20250;&#24102;&#26469;&#39069;&#22806;&#30340;&#22833;&#36133;&#39118;&#38505;&#65292;&#25152;&#20197;&#36825;&#37324;&#32771;&#34385;&#22312;&#21478;&#19968;&#20010;&#32447;&#31243;&#37324;&#36827;&#34892;&#36890;&#30693;&#12290;&#20195;&#30721;&#31034;&#20363; 15-24 &#35774;&#35745;&#20102;&#19968;&#20010;&#23450;&#26102;&#20219;&#21153;&#65292;&#22312; <code>notifyTeaMaker()</code> &#19978;&#22686;&#21152;&#20102; 2.4.2 &#33410;&#20013;&#20171;&#32461;&#36807;&#30340; <code>@Scheduled</code> &#27880;&#35299;&#65292;&#20004;&#27425;&#25191;&#34892;&#38388;&#38548; <code>2000</code> &#27627;&#31186;&#12290;&#23450;&#26102;&#20219;&#21153;&#30340;&#20855;&#20307;&#20869;&#23481;&#26159;&#20174;&#25968;&#25454;&#24211;&#37324;&#25214;&#21040;&#29366;&#24577;&#26159; <code>PAID</code> &#30340;&#35746;&#21333;&#65292;&#38543;&#21518;&#36941;&#21382;&#36825;&#20123;&#35746;&#21333;&#21457;&#36215;&#36890;&#30693;&#65292;&#22312;&#33719;&#24471;&#25191;&#34892;&#30340;&#32467;&#26524;&#21518;&#23558;&#20854;&#20013;&#30340;&#35843;&#33590;&#24072;&#20449;&#24687;&#20445;&#23384;&#21040;&#35746;&#21333;&#37324;&#65292;&#24182;&#23558;&#35746;&#21333;&#29366;&#24577;&#20462;&#25913;&#20026; <code>FINISHED</code>&#12290;</p>
<blockquote>
<p><strong>&#35831;&#27880;&#24847;</strong>&#12288;&#36825;&#37324;&#21482;&#26159;&#20986;&#20110;&#28436;&#31034;&#30340;&#30446;&#30340;&#65292;&#24182;&#27809;&#26377;&#28155;&#21152;&#24517;&#35201;&#30340;&#38450;&#24182;&#21457;&#36923;&#36753;&#12290;&#22914;&#26524;&#21516;&#26102;&#26377;&#20960;&#20010; <code>notifyTeaMaker()</code> &#22312;&#36816;&#34892;&#65292;&#21487;&#33021;&#20986;&#29616;&#22810;&#27425;&#36890;&#30693;&#30340;&#24773;&#20917;&#12290;&#38024;&#23545;&#36825;&#31181;&#24773;&#20917;&#26377;&#24456;&#22810;&#19981;&#21516;&#30340;&#35299;&#20915;&#26041;&#26696;&#65292;&#24120;&#35265;&#30340;&#26159;&#21152;&#38145;&#25110;&#32773;&#19979;&#28216;&#20570;&#24130;&#31561;&#12290;</p>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-24</strong>&#12288;&#35302;&#21457;&#36890;&#30693;&#29992;&#30340;&#23450;&#26102;&#20219;&#21153;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
public class TeaMakerNotifier {
    @Autowired
    private OrderRepository orderRepository;
    @Autowired
    private TeaMakerRepository teaMakerRepository;
    @Autowired
    private TeaMakerClient teaMakerClient;

    @Scheduled(fixedDelay=2000)
    public void notifyTeaMaker() {
        // &#27809;&#32771;&#34385;&#24182;&#21457;&#25191;&#34892;&#30340;&#38382;&#39064;
        List&lt;Order&gt; orders = orderRepository.findByStatusOrderById(OrderStatus.PAID);
        for (Order o : orders) {
            try {
                notifyOneOrder(o);
            } catch(Exception e) {
                log.error("&#36890;&#30693;&#22788;&#29702;&#35746;&#21333;&#22833;&#36133;", e);
            }
        }
    }

    private void notifyOneOrder(Order o) {
        TeaMakerResult result = teaMakerClient.makeTea(o.getId());
        if (result == null || !result.isFinish()) {
            return;
        }
        teaMakerRepository.findById(result.getTeaMakerId()).ifPresent(o::setMaker);
        o.setStatus(OrderStatus.FINISHED);
        orderRepository.save(o);
    }
}</code></pre>
<p>&#20026;&#20102;&#35753;&#19978;&#38754;&#20004;&#27573;&#20195;&#30721;&#33021;&#39034;&#21033;&#36816;&#34892;&#36215;&#26469;&#65292;&#38656;&#35201;&#24320;&#21551;&#23450;&#26102;&#20219;&#21153;&#25903;&#25345;&#65292;&#24182;&#22312; Spring &#19978;&#19979;&#25991;&#20013;&#28155;&#21152;&#19968;&#20010; <code>RestTemplate</code> Bean&#12290;&#25152;&#20197;&#25105;&#20204;&#35201;&#31616;&#21333;&#22320;&#20462;&#25913;&#19968;&#19979; <code>BinaryTeaApplication</code> &#31867;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 15-25 &#37027;&#26679;&#65292;&#22686;&#21152; <code>@EnableScheduling</code> &#27880;&#35299;&#65292;&#24182;&#22686;&#21152;&#19968;&#20010;&#24102;&#26377; <code>@LoadBalanced</code> &#27880;&#35299;&#30340; <code>restTemplate()</code> Bean &#22768;&#26126;&#26041;&#27861;&#65292;&#21578;&#35785; Spring &#36825;&#20010; <code>RestTempalte</code> &#25903;&#25345;&#22522;&#20110;&#26381;&#21153;&#21457;&#29616;&#30340;&#36127;&#36733;&#22343;&#34913;&#12290;&#24403;&#28982;&#25105;&#20204;&#23436;&#20840;&#21487;&#20197;&#20687; Customer &#24037;&#31243;&#37324;&#37027;&#26679;&#36890;&#36807; <code>RestTemplateBuilder</code> &#26469;&#23450;&#21046;&#33258;&#24049;&#30340; <code>RestTemplate</code>&#65292;&#36825;&#23601;&#20132;&#32473;&#22823;&#23478;&#33258;&#24049;&#21160;&#25163;&#20102;&#12290;&#20877;&#35828;&#21518;&#38754;&#30340;&#36890;&#30693;&#20250;&#25913;&#20026;&#22522;&#20110;&#28040;&#24687;&#26041;&#24335;&#30340;&#65292;&#36825;&#37324;&#23601;&#31616;&#21333;&#19968;&#20123;&#21543;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-25</strong>&#12288;&#20462;&#25913;&#21518;&#30340; <code>BinaryTeaApplication</code> &#31867;&#20195;&#30721;&#29255;&#27573;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
@EnableScheduling
public class BinaryTeaApplication implements WebMvcConfigurer {
    @Bean
    @LoadBalanced
    public RestTemplate restTemplate() {
        return new RestTemplate();
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#26368;&#21518;&#65292;&#19981;&#35201;&#24536;&#35760;&#20462;&#25913; <code>application.properties</code>&#65292;&#22686;&#21152;&#38656;&#35201;&#30340; <code>tea-maker.url</code> &#23646;&#24615;&#65292;&#37197;&#32622; TeaMaker &#30340;&#22320;&#22336;&#12290;&#22914;&#26524;&#24819;&#23545; <code>tea-maker</code> &#36825;&#20010; Bulkhead &#30340;&#37197;&#32622;&#20570;&#20123;&#35843;&#25972;&#65292;&#20063;&#21487;&#20197;&#21152;&#36827;&#21435;&#65292;&#23601;&#20687;&#20195;&#30721;&#31034;&#20363; 15-26 &#37027;&#26679;&#65288;&#22312; 15.2.4 &#33410;&#20013;&#20250;&#35299;&#37322;&#20854;&#20013;&#30340; <code>configs</code> &#30340;&#29992;&#27861;&#65289;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-26</strong>&#12288;BinaryTea &#30340; <code>application.properties</code> &#38656;&#35201;&#22686;&#21152;&#30340;&#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>tea-maker.url=http://tea-maker
resilience4j.bulkhead.configs.tea-maker.max-concurrent-calls=2
resilience4j.bulkhead.configs.tea-maker.max-wait-duration=500ms
resilience4j.bulkhead.instances.0-tea-maker.base-config=tea-maker
resilience4j.bulkhead.instances.1-tea-maker.base-config=tea-maker</code></pre>
<p>&#33267;&#27492;&#65292;BinaryTea &#30340;&#20462;&#25913;&#23601;&#32467;&#26463;&#20102;&#12290;&#22240;&#20026; 15.2.1 &#37324;&#32534;&#20889;&#30340; TeaMaker &#39033;&#30446;&#36824;&#19981;&#25903;&#25345;&#26381;&#21153;&#27880;&#20876;&#19982;&#21457;&#29616;&#65292;&#25152;&#20197;&#36825;&#37324;&#20026;&#20102;&#35753; BinaryTea &#33021;&#25214;&#21040;&#23427;&#65292;&#25105;&#20204;&#38656;&#35201;&#22312; TeaMaker &#30340; pom.xml &#37324;&#22686;&#21152; <code>spring-cloud-starter-zookeeper-discovery</code> &#20381;&#36182;&#65292;&#24182;&#22312; <code>application.yml</code> &#20013;&#22686;&#21152; Zookeeper &#22320;&#22336;&#37197;&#32622;&#65292;&#23601;&#20687;&#19979;&#38754;&#36825;&#26679;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.cloud.zookeeper.connect-string: "localhost:2181"</code></pre>
<p>&#29616;&#22312;&#65292;&#25353;&#29031; TeaMaker&#12289;BinaryTea&#12289;Customer &#30340;&#39034;&#24207;&#21551;&#21160;&#24037;&#31243;&#65292;&#21487;&#20197;&#30475;&#21040; Customer &#26368;&#32456;&#25104;&#21151;&#25171;&#20986;&#20102;&#35746;&#21333;&#24050;&#32463;&#20934;&#22791;&#22909;&#20102;&#30340;&#26085;&#24535;&#65292;&#21516;&#26102;&#22810;&#36305;&#20960;&#20010; Customer &#36827;&#31243;&#23601;&#33021;&#30475;&#21040; BinaryTea &#37324;&#33329;&#22721;&#38548;&#31163;&#30340;&#25928;&#26524;&#12290;&#22914;&#26524;&#24076;&#26395;&#25928;&#26524;&#26126;&#26174;&#20123;&#65292;&#21487;&#20197;&#35843;&#25972; TeaMaker &#20013; <code>tea-maker.time-per-order</code> &#30340;&#26102;&#38388;&#65292;&#27599;&#21333;&#22788;&#29702;&#26102;&#38388;&#25289;&#38271;&#19968;&#20123;&#65292;&#20363;&#22914;&#35774;&#32622;&#20026; <code>10s</code>&#65292;&#37027;&#21516;&#26102;&#36816;&#34892; 3 &#20010; Customer &#24456;&#23481;&#26131;&#23601;&#33021;&#30475;&#21040;&#8220;&#36890;&#30693;&#22788;&#29702;&#35746;&#21333;&#22833;&#36133;&#8221;&#30340;&#26085;&#24535;&#12290;</p>
</li>
</ol><h3 id="nav_point_236">15.2.4&#12288;resilience4j-spring-boot2 &#30340;&#29305;&#21035;&#35828;&#26126;</h3><p>15.2 &#33410;&#25105;&#20204;&#20171;&#32461;&#20102; Resilience4j &#25552;&#20379;&#30340;&#19968;&#20123;&#19981;&#21516;&#30340;&#23481;&#38169;&#21151;&#33021;&#65292;&#23427;&#21487;&#20197;&#30452;&#25509;&#20351;&#29992;&#65292;&#20294;&#22240;&#20026;&#25105;&#20204;&#26159;&#22312; Spring Boot &#30340;&#39033;&#30446;&#37324;&#65292;&#25152;&#20197;&#24456;&#33258;&#28982;&#22320;&#23601;&#20250;&#30452;&#25509;&#21435;&#29992;&#23427;&#25552;&#20379;&#30340; Spring Boot &#25903;&#25345;&#12290;&#34429;&#28982;&#25991;&#20013;&#21482;&#20171;&#32461;&#20102;&#38480;&#27969;&#12289;&#26029;&#36335;&#21644;&#33329;&#22721;&#30340;&#29992;&#27861;&#65292;&#20294;&#20351;&#29992; resilience4j-spring-boot2 &#30340;&#35805;&#65292;&#22823;&#37096;&#20998;&#30340;&#23481;&#38169;&#21151;&#33021;&#30340;&#20351;&#29992;&#26041;&#27861;&#22823;&#21516;&#23567;&#24322;&#12290;&#25509;&#19979;&#26469;&#25105;&#20204;&#23601;&#20960;&#20010;&#36890;&#29992;&#30340;&#28857;&#20570;&#20010;&#35828;&#26126;&#12290;</p><ol>
<li><p><strong>&#27880;&#35299;&#20013;&#30340; <code>fallbackMethod</code></strong></p>
<p>&#22312;&#20171;&#32461; <code>@CircuitBreaker</code> &#26102;&#65292;&#25105;&#20204;&#28436;&#31034;&#20102;&#35813;&#27880;&#35299;&#20013;&#30340; <code>fallbackMethod</code> &#30340;&#29992;&#27861;&#12290;&#20854;&#23454;&#65292;&#19981;&#27490;&#36825;&#20010;&#27880;&#35299;&#65292;resilience4j-annotations &#21253;&#37324;&#30340; <code>@Bulkhead</code>&#12289;<code>@RateLimiter</code>&#12289;<code>@Retry</code> &#21644; <code>@TimeLimiter</code> &#27880;&#35299;&#37117;&#26377; <code>fallbackMethod</code> &#36825;&#20010;&#23646;&#24615;&#12290;Resilience4j &#30340;&#21508;&#20010; <code>Aspect</code> &#22312;&#21457;&#29616;&#37197;&#32622;&#20102; <code>fallbackMethod</code> &#36825;&#20010;&#23646;&#24615;&#21518;&#65292;&#20250;&#25226;&#24102;&#26377;&#27880;&#35299;&#30340;&#25972;&#20010;&#26041;&#27861;&#30340;&#25191;&#34892;&#36807;&#31243;&#29992; <code>FallbackDecorator</code> &#21253;&#35013;&#36215;&#26469;&#65292;&#22312;&#25243;&#24322;&#24120;&#26102;&#20250;&#35843;&#29992;&#23646;&#24615;&#37324;&#25351;&#23450;&#30340;&#26041;&#27861;&#12290;&#20197;&#40664;&#35748;&#23454;&#29616; <code>DefaultFallbackDecorator</code> &#20026;&#20363;&#65292;&#23427;&#20250;&#25429;&#33719; <code>Throwable</code> &#31867;&#22411;&#30340;&#25152;&#26377;&#24322;&#24120;&#65292;&#25152;&#20197;&#26080;&#35770;&#26159;&#23481;&#38169;&#23545;&#24212;&#30340;&#24322;&#24120;&#65292;&#36824;&#26159;&#19994;&#21153;&#24322;&#24120;&#65292;&#25110;&#32773;&#20854;&#20182;&#20160;&#20040;&#24322;&#24120;&#65292;&#37117;&#20250;&#36716;&#21040;&#38477;&#32423;&#30340;&#26041;&#27861;&#19978;&#12290;</p>
<p>&#20851;&#20110;&#38477;&#32423;&#30340;&#30446;&#26631;&#26041;&#27861;&#65292;&#38500;&#20102;&#30452;&#25509;&#32473;&#23450;&#26041;&#27861;&#21517;&#65292;&#20063;&#21487;&#20197;&#20351;&#29992; SpEL &#35745;&#31639;&#20986;&#26041;&#27861;&#21517;&#12290;<code>name</code> &#21644; <code>fallbackMethod</code> &#37117;&#21487;&#20197;&#20351;&#29992; SpEL&#65292;&#25105;&#20204;&#22312; 8.3.1 &#33410;&#20013;&#20171;&#32461;&#36807;&#19968;&#20123;&#34920;&#36798;&#24335;&#65292;&#36825;&#37324;&#20877;&#31616;&#21333;&#22238;&#39038;&#19979;&#12290;&#24819;&#35201;&#21462;&#24471;&#24403;&#21069;&#30340;&#26041;&#27861;&#21517;&#65292;&#21487;&#20197;&#20351;&#29992; <code>#root.methodName</code>&#65307;&#24819;&#35201;&#33719;&#21462;&#31532; 1 &#20010;&#21442;&#25968;&#30340;&#20540;&#65292;&#21487;&#20197;&#29992; <code>#root.args[0]</code>&#65292;&#20063;&#21487;&#20197;&#32553;&#20889;&#25104; <code>#p0</code> &#25110; <code>#a0</code>&#65292;&#20998;&#21035;&#26159;&#21333;&#35789; parameter &#21644; argument &#30340;&#39318;&#23383;&#27597;&#65292;&#23427;&#20204;&#37117;&#26159;&#21442;&#25968;&#30340;&#24847;&#24605;&#12290;&#26377;&#20102; SpEL &#30340;&#21152;&#25345;&#65292;&#21487;&#20197;&#23454;&#29616;&#26681;&#25454;&#21442;&#25968;&#20869;&#23481;&#36873;&#25321;&#19981;&#21516;&#30340;&#23481;&#38169;&#23454;&#20363;&#30340;&#21151;&#33021;&#65292;&#20363;&#22914;&#22312;&#20351;&#29992;&#33329;&#22721;&#27169;&#24335;&#26102;&#65292;&#20063;&#21487;&#20197;&#26681;&#25454;&#21442;&#25968;&#26469;&#36873;&#25321;&#19981;&#21516;&#30340; <code>Bulkhead</code>&#65292;&#20182;&#20204;&#21508;&#26377;&#21508;&#30340;&#20449;&#21495;&#37327;&#25511;&#21046;&#24182;&#21457;&#35745;&#25968;&#12290;&#22312;&#36825;&#31181;&#22330;&#26223;&#19979;&#30340; SpEL &#34920;&#36798;&#24335;&#20013; <code>#</code> &#24517;&#39035;&#25918;&#22312;&#21069;&#38754;&#65292;&#19981;&#28982;&#20250;&#34987;&#35299;&#37322;&#25104;&#26222;&#36890;&#23383;&#31526;&#20018;&#12290;</p>
<p>&#160;</p>
</li>
<li><p><strong>&#21508;&#20010;&#23454;&#20363;&#30340;&#20844;&#20849;&#37197;&#32622;</strong></p>
<p>&#22312;&#20043;&#21069;&#30340;&#20363;&#23376;&#20013;&#65292;&#25105;&#20204;&#37117;&#26159;&#38024;&#23545;&#23454;&#20363;&#20570;&#30340;&#37197;&#32622;&#65292;&#20363;&#22914; <code>resilience4j.ratelimiter.instances.make-tea</code> &#21644; <code>resilience4j.circuitbreaker.instances.order-checker</code>&#12290;&#21487;&#20197;&#21457;&#29616;&#37197;&#32622;&#39033;&#30340;&#26684;&#24335;&#22823;&#27010;&#26159;&#36825;&#26679;&#30340; <code>resilience4j.XXX.instances.YYY.ZZZ</code>&#65292;&#20854;&#20013; <code>XXX</code> &#26159;&#23545;&#24212;&#30340;&#23481;&#38169;&#32452;&#20214;&#65292;&#20363;&#22914; <code>ratelimiter</code>&#12289;<code>circuitbreaker</code>&#65307;<code>YYY</code> &#26159;&#23454;&#20363;&#21517;&#31216;&#65292;&#20363;&#22914; <code>order-checker</code>&#65307;<code>ZZZ</code> &#26159;&#20855;&#20307;&#30340;&#37197;&#32622;&#39033;&#65292;&#20363;&#22914; <code>max-concurrent-calls</code>&#12290;</p>
<p>&#25105;&#20204;&#30340;&#20363;&#23376;&#27604;&#36739;&#31616;&#21333;&#65292;&#25152;&#20197;&#37197;&#32622;&#39033;&#19981;&#22810;&#65292;&#19968;&#20010;&#20010;&#37197;&#32622;&#20063;&#23601;&#32610;&#20102;&#12290;&#20294;&#22312;&#23454;&#38469;&#30340;&#39033;&#30446;&#37324;&#65292;&#20250;&#26377;&#24456;&#22810;&#23454;&#20363;&#65292;&#32780;&#19988;&#36824;&#22312;&#19981;&#26029;&#22686;&#21152;&#65292;&#27599;&#20010;&#37117;&#20154;&#24037;&#37197;&#32622;&#26174;&#28982;&#26159;&#19981;&#34892;&#30340;&#12290;&#21487;&#20197;&#36890;&#36807; <code>resilience4j.XXX.configs.default</code> &#25552;&#20379; <code>XXX</code> &#32452;&#20214;&#30340;&#40664;&#35748;&#37197;&#32622;&#65292;&#20294;&#20961;&#27809;&#26377;&#21333;&#29420;&#37197;&#32622;&#30340;&#23454;&#20363;&#37117;&#20250;&#20351;&#29992;&#35813;&#40664;&#35748;&#37197;&#32622;&#12290;</p>
<p>&#38500;&#20102;&#40664;&#35748;&#37197;&#32622;&#65292;&#22810;&#20010;&#23454;&#20363;&#38388;&#20063;&#21487;&#20197;&#20849;&#20139;&#37197;&#32622;&#65292;&#36890;&#36807; <code>resilience4j.XXX.instance.YYY.base-config</code> &#26469;&#25351;&#23450; <code>YYY</code> &#23454;&#20363;&#35201;&#32487;&#25215;&#30340;&#22522;&#30784;&#37197;&#32622;&#21517;&#65292;&#20551;&#35774;&#25105;&#20204;&#26377;&#22914;&#19979;&#35774;&#32622;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>resilience4j.circuitbreaker.instances.order-checker.base-config=foo</code></pre>
<p>&#37027;&#20040; <code>CircuitBreakerConfigurationProperties</code> &#22312;&#21019;&#24314;&#23545;&#24212;&#37197;&#32622;&#26102;&#23601;&#20250;&#21435;&#26597;&#25214; <code>resilience4j.circuitbreaker.configs.foo</code> &#19979;&#38754;&#30340;&#37197;&#32622;&#65292;&#36825;&#20010;&#37197;&#32622;&#21487;&#33021;&#26159;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>resilience4j.circuitbreaker.configs.foo.sliding-window-size=100
resilience4j.circuitbreaker.configs.foo.minimum-number-of-calls=10</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#21508;&#20010;&#27880;&#35299;&#30340;&#39034;&#24207;</strong></p>
<p>Resilience4j &#20026;&#25105;&#20204;&#25552;&#20379;&#20102; 5 &#20010;&#19981;&#21516;&#30340;&#27880;&#35299;&#65292;&#23545;&#24212;&#20102; 5 &#20010;&#20999;&#38754;&#65292;&#20855;&#20307;&#22914;&#34920; 15-6 &#25152;&#31034;&#65292;&#27599;&#20010;&#20999;&#38754;&#37117;&#26159;&#23454;&#29616;&#20102; <code>Ordered</code> &#25509;&#21475;&#30340;&#65292;&#25152;&#20197;&#21487;&#20197;&#25351;&#23450;&#39034;&#24207;&#12290;<code>BulkheadAspect</code> &#30340;&#20248;&#20808;&#32423;&#26159; <code>Ordered.LOWEST_ PRECEDENCE</code>&#65292;&#20174; 0.16.0 &#29256;&#26412;&#24320;&#22987;&#65292;&#36825;&#20010;&#20540;&#23601;&#34987;&#8220;&#22266;&#23450;&#27515;&#8221;&#20102;&#65292;&#25152;&#20197;&#36825;&#20063;&#26159; 5 &#20010;&#20999;&#38754;&#20013;&#21807;&#19968;&#19968;&#20010;&#19981;&#33021;&#20462;&#25913;&#39034;&#24207;&#30340;&#12290;&#34920;&#26684;&#20013;&#33258;&#19979;&#24448;&#19978;&#65292;&#20854;&#20182;&#20960;&#20010;&#20999;&#38754;&#30340; <code>order</code> &#20998;&#21035;&#26159; <code>Ordered.LOWEST_PRECEDENCE-1</code> &#19968;&#30452;&#21040; <code>Ordered.LOWEST_PRECEDENCE-4</code>&#65292;&#20854;&#20013;&#30340;&#25968;&#20540;&#36234;&#23567;&#36234;&#20808;&#25191;&#34892;&#65292;&#22823;&#27010;&#30340;&#31034;&#24847;&#22914;&#19979;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>Retry ( CircuitBreaker ( RateLimiter ( TimeLimiter ( Bulkhead ( &#20855;&#20307;&#26041;&#27861; ) ) ) ) )</code></pre>
<p><strong>&#34920; 15-6&#12288;Resilience4j &#25552;&#20379;&#30340;&#27880;&#35299;&#19982;&#23545;&#24212;&#20999;&#38754;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#27880;&#35299;</th><th>&#20999;&#38754;</th><th>&#39034;&#24207;&#37197;&#32622;&#23646;&#24615;</th><th>&#40664;&#35748;&#20248;&#20808;&#32423;</th></tr><tr><td><code>@Retry</code></td><td><code>RetryAspect</code></td><td><code>resilience4j.retry.retry-aspect-order</code></td><td>1</td></tr><tr><td><code>@CircuitBreaker</code></td><td><code>CircuitBreakerAspect</code></td><td><code>resilience4j.circuitbreaker.circuit-breaker-aspect-order</code></td><td>2</td></tr><tr><td><code>@RateLimiter</code></td><td><code>RateLimiterAspect</code></td><td><code>resilience4j.ratelimiter.rate-limiter-aspect-order</code></td><td>3</td></tr><tr><td><code>@TimeLimiter</code></td><td><code>TimeLimiterAspect</code></td><td><code>resilience4j.timelimiter.time-limiter-aspect-order</code></td><td>4</td></tr><tr><td><code>@Bulkhead</code></td><td><code>BulkheadAspect</code></td><td><code>resilience4j.bulkhead.bulkhead-aspect-order</code>&#65288;&#19981;&#21487;&#25913;&#65289;</td><td>5</td></tr></table>
</li>
</ol><h2 id="nav_point_237">15.3&#12288;&#20351;&#29992; Spring Cloud CircuitBreaker &#23454;&#29616;&#23481;&#38169;</h2><p>&#25353;&#29031; Spring Framework &#30340;&#35774;&#35745;&#29702;&#24565;&#65292;&#22914;&#26524;&#19968;&#20010;&#24120;&#29992;&#30340;&#19996;&#35199;&#26377;&#22810;&#31181;&#27969;&#34892;&#30340;&#23454;&#29616;&#65292;&#37027;&#22823;&#27010;&#29575;&#23601;&#33021;&#20174;&#36825;&#20960;&#31181;&#23454;&#29616;&#37324;&#25277;&#35937;&#20986;&#19968;&#23618;&#36890;&#29992;&#25509;&#21475;&#65292;&#35753;&#24320;&#21457;&#32773;&#36890;&#36807;&#36825;&#23618;&#25277;&#35937;&#32534;&#20889;&#20195;&#30721;&#65292;&#26694;&#26550;&#26469;&#36127;&#36131;&#22788;&#29702;&#24213;&#23618;&#30340;&#36825;&#20123;&#24046;&#24322;&#65292;&#20363;&#22914;&#20070;&#20013;&#20171;&#32461;&#36807;&#30340;&#23545;&#35937;&#20851;&#31995;&#26144;&#23556;&#23601;&#26159;&#19968;&#20010;&#24456;&#22909;&#30340;&#20363;&#23376;&#12290;&#38024;&#23545;&#26381;&#21153;&#23481;&#38169;&#65292;&#30446;&#21069;&#20063;&#26377;&#22909;&#20960;&#27454;&#30693;&#21517;&#30340;&#24320;&#28304;&#26694;&#26550;&#65292;&#26089;&#26399;&#30340; Netflix Hystrix&#65292;&#25509;&#26834; Hystrix &#30340; Resilience4j&#65292;&#22269;&#20869;&#38463;&#37324;&#24052;&#24052;&#24320;&#28304;&#30340; Sentinel&#65292;&#36824;&#26377; Spring &#33258;&#23478;&#30340; Spring Retry&#12290;&#36825;&#20123;&#26694;&#26550;&#25552;&#20379;&#30340;&#33021;&#21147;&#22823;&#21516;&#23567;&#24322;&#65292;&#32780;&#22312;&#23454;&#36341;&#20013;&#22823;&#23478;&#30340;&#29992;&#36884;&#21448;&#26159;&#31867;&#20284;&#30340;&#65292;&#25152;&#20197;&#33258;&#28982;&#21487;&#20197;&#36827;&#34892;&#25277;&#35937;&#23553;&#35013;&#65292;&#36825;&#23601;&#26377;&#20102;&#26412;&#33410;&#35201;&#20171;&#32461;&#30340; Spring Cloud CircuitBreaker&#12290;</p><p>&#20174; Spring Cloud CircuitBreaker &#30340;&#21517;&#23383;&#23601;&#33021;&#30475;&#20986;&#65292;&#36825;&#20010;&#26694;&#26550;&#20027;&#35201;&#32858;&#28966;&#20110;&#26381;&#21153;&#23481;&#38169;&#30340;&#26029;&#36335;&#22120;&#20043;&#19978;&#12290;&#20294;&#22312;&#20855;&#20307;&#30340;&#23454;&#29616;&#23618;&#38754;&#65292;&#23427;&#36824;&#26159;&#20250;&#20805;&#20998;&#21457;&#25381;&#24213;&#23618;&#30340;&#26694;&#26550;&#33021;&#21147;&#65292;&#32452;&#21512;&#20351;&#29992;&#36229;&#26102;&#12289;&#33329;&#22721;&#21644;&#26029;&#36335;&#21151;&#33021;&#12290;&#25972;&#20010;&#26694;&#26550;&#30340;&#26680;&#24515;&#26159;&#20301;&#20110; spring-cloud-commons &#21253;&#20013;&#30340; <code>CircuitBreaker</code> &#25509;&#21475;&#65292;<code>CircuitBreakerFactory</code> &#26159;&#29992;&#26469;&#21019;&#24314; <code>CircuitBreaker</code> &#30340;&#65292;&#26029;&#36335;&#22120;&#25152;&#38656;&#30340;&#21508;&#31181;&#37197;&#32622;&#21017;&#36890;&#36807; <code>ConfigBuilder</code> &#26469;&#26500;&#36896;&#12290;</p><p>&#30693;&#36947;&#20102;&#36825;&#20123;&#21518;&#65292;&#25105;&#20204;&#23601;&#33021;&#29992;&#23427;&#26469;&#32534;&#20889;&#20195;&#30721;&#20102;&#65292;&#22312;&#19994;&#21153;&#31867;&#20013;&#27880;&#20837; <code>CircuitBreakerFactory</code>&#65292;&#36890;&#36807;&#23427;&#21019;&#24314; <code>CircuitBreaker</code> &#23553;&#35013;&#38656;&#35201;&#23454;&#29616;&#26029;&#36335;&#20445;&#25252;&#30340;&#19994;&#21153;&#20195;&#30721;&#21363;&#21487;&#12290;</p><h3 id="nav_point_238">15.3.1&#12288;&#36890;&#36807; Spring Cloud CircuitBreaker &#20351;&#29992; Resilience4j</h3><p>&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#20462;&#25913;&#19968;&#19979;&#21069;&#25991;&#20013;&#30452;&#25509;&#20351;&#29992; Resilience4j &#30340;&#20363;&#23376;&#65292;&#36890;&#36807; Spring Cloud CircuitBreaker &#26469;&#23454;&#29616;&#26029;&#36335;&#21151;&#33021;&#65292;&#20854;&#24213;&#23618;&#36824;&#26159; Resilience4j&#65292;&#30475;&#30475;&#32534;&#30721;&#26102;&#20855;&#20307;&#20250;&#26377;&#21738;&#20123;&#21464;&#21270;&#12290;</p><p>&#22312;&#20381;&#36182;&#26041;&#38754;&#65292;&#25105;&#20204;&#19981;&#29992;&#20877;&#33258;&#24049;&#20381;&#36182; resilience4j-spring-boot2 &#20102;&#65292;&#25913;&#20026;&#20351;&#29992; spring-cloud-starter-circuitbreaker-resilience4j&#65292;&#23427;&#20250;&#24102;&#20837;&#25152;&#38656;&#30340;&#21508;&#20010;&#32452;&#20214;&#65292;&#20294;&#20854;&#20013;&#19981;&#21253;&#21547; <code>resilience4j-bulkhead</code>&#65292;&#25105;&#20204;&#21487;&#20197;&#25353;&#38656;&#33258;&#34892;&#28155;&#21152;&#35813;&#20381;&#36182;&#12290;&#21478;&#22806;&#65292;&#19979;&#38754;&#36825;&#20010;&#20381;&#36182;&#26159;&#20174; 2020.0.3 &#29256;&#26412;&#24320;&#22987;&#21152;&#20837; spring-cloud-dependencies &#20013;&#30340;&#65292;&#22914;&#26524;&#20351;&#29992;&#20043;&#21069;&#30340;&#32769;&#29256;&#26412;&#65292;&#38656;&#35201;&#33258;&#24049;&#28155;&#21152;&#29256;&#26412;&#65292;&#27604;&#22914; 2.1.1&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
    &lt;artifactId&gt;spring-cloud-starter-circuitbreaker-resilience4j&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p><code>CircuitBreaker</code> &#25509;&#21475;&#23450;&#20041;&#20102;&#20004;&#20010; <code>run()</code> &#26041;&#27861;&#65292;&#19968;&#20010;&#30452;&#25509;&#36890;&#36807; <code>Supplier&lt;T&gt;</code> &#20256;&#20837;&#35201;&#23553;&#35013;&#30340;&#19994;&#21153;&#36923;&#36753;&#65292;&#21478;&#19968;&#20010;&#21017;&#39069;&#22806;&#25552;&#20379;&#20102;&#19968;&#20010;&#38477;&#32423;&#26041;&#27861;&#65292;&#23601;&#31867;&#20284; <code>@CircuitBreaker</code> &#27880;&#35299;&#37324;&#30340; <code>fallbackMethod</code> &#23646;&#24615;&#65292;&#20855;&#20307;&#30340;&#25509;&#21475;&#23450;&#20041;&#22914;&#19979;&#25152;&#31034; <span class="&#27880;&#37322;&#32534;&#21495;">10</span>&#65306;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">10</span>&#22312;&#23454;&#38469;&#30340;&#25509;&#21475;&#23450;&#20041;&#20013;&#65292;<code>run(Supplier&lt;T&gt; toRun)</code> &#26041;&#27861;&#25552;&#20379;&#20102;&#40664;&#35748;&#23454;&#29616;&#65292;&#27492;&#22788;&#21482;&#31616;&#21333;&#22320;&#32473;&#20986;&#20102;&#26041;&#27861;&#30340;&#23450;&#20041;&#12290;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public interface CircuitBreaker {
    &lt;T&gt; T run(Supplier&lt;T&gt; toRun);
    &lt;T&gt; T run(Supplier&lt;T&gt; toRun, Function&lt;Throwable, T&gt; fallback);
}</code></pre><p>&#25509;&#19979;&#26469;&#65292;&#25105;&#20204;&#29992; <code>CircuitBreaker</code> &#25913;&#20889; Customer &#24037;&#31243;&#37324;&#30340; <code>BinaryTeaClient</code> &#31867;&#65292;&#38656;&#35201;&#27880;&#24847;&#20462;&#25913; <code>import</code> &#30340;&#20869;&#23481;&#65292;&#27605;&#31455;&#27880;&#35299;&#21644;&#36825;&#37324;&#29992;&#21040;&#30340;&#25509;&#21475;&#21516;&#21517;&#12290;&#20195;&#30721;&#31034;&#20363; 15-27<span class="&#27880;&#37322;&#32534;&#21495;">11</span> &#26159;&#20462;&#25913;&#21518;&#30340; <code>BinaryTeaClient</code> &#31867;&#65292;&#20027;&#35201;&#20570;&#20102;&#22914;&#19979;&#25913;&#21160;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">11</span>&#35813;&#31034;&#20363;&#22312; ch15/customer-scc &#39033;&#30446;&#20013;&#12290;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807;&#26500;&#36896;&#26041;&#27861;&#27880;&#20837; <code>CircuitBreakerFactory</code>&#65292;&#29992;&#23427;&#21019;&#24314;&#20102;&#21518;&#38754;&#35201;&#29992;&#30340;&#21517;&#20026; <code>order-checker</code> &#30340; <code>CircuitBreaker</code> &#23454;&#20363;&#12290;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#23558;&#21407;&#20808;&#30340; <code>isOrderFinished()</code> &#26041;&#27861;&#20869;&#23481;&#21464;&#20026; <code>CircuitBreaker.run()</code> &#30340;&#31532;&#19968;&#20010;&#21442;&#25968;&#65292;&#29992; Lambda &#34920;&#36798;&#24335;&#23601;&#21487;&#20197;&#20102;&#12290;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#30001;&#20110;&#25105;&#20204;&#30340;&#38477;&#32423;&#36923;&#36753;&#23601;&#26159;&#30452;&#25509;&#36820;&#22238; <code>false</code>&#65292;&#25152;&#20197;&#19981;&#20877;&#38656;&#35201;&#39069;&#22806;&#30340;&#26041;&#27861;&#23450;&#20041;&#65292;&#30452;&#25509;&#29992; <code>t -&gt; false</code> &#20316;&#20026; <code>run()</code> &#30340;&#31532;&#20108;&#20010;&#21442;&#25968;&#21363;&#21487;&#12290;</li>
</ul><p>&#30001;&#20110; <code>BinaryTeaClient</code> &#22686;&#21152;&#20102;&#26500;&#36896;&#26041;&#27861;&#65292;&#22240;&#32780;&#25105;&#20204;&#38656;&#35201;&#35843;&#25972; <code>CustomerApplication</code> &#37324;&#22768;&#26126;&#23545;&#24212; Bean &#30340;&#26041;&#27861;&#65292;&#36825;&#37324;&#23601;&#19981;&#20877;&#36184;&#36848;&#20102;&#12290;</p><blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-27</strong>&#12288;&#20351;&#29992; Spring Cloud CircuitBreaker &#25913;&#20889;&#21518;&#30340; <code>BinaryTeaClient</code> &#31867;</p>
</blockquote><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Slf4j
public class BinaryTeaClient {
    @Autowired
    private OrderService orderService;
    private CircuitBreaker orderCheckerCircuitBreaker;

    public BinaryTeaClient(CircuitBreakerFactory circuitBreakerFactory)    {
        orderCheckerCircuitBreaker = circuitBreakerFactory.create("order-checker");
    }

    public boolean isOrderFinished(Long id) {
        return orderCheckerCircuitBreaker.run(() -&gt; {
            ResponseEntity&lt;Order&gt; entity = orderService.queryOneOrder(id);
            if (HttpStatus.NOT_FOUND == entity.getStatusCode()) {
                throw new IllegalArgumentException("&#27809;&#25214;&#21040;&#35746;&#21333;");
            }
            Order order = entity.getBody();
            if ("FINISHED".equalsIgnoreCase(order.getStatus())) {
                return true;
            }
            log.info("&#35746;&#21333;{}&#36824;&#27809;&#22909;", id);
            throw new OrderNotFinishedException();
        }, t -&gt; false);
    }
}</code></pre><p>&#19978;&#38754;&#30340;&#20195;&#30721;&#23601;&#24050;&#32463;&#23454;&#29616;&#20102;&#26029;&#36335;&#20445;&#25252;&#65292;&#22914;&#26524;&#38656;&#35201;&#23545;&#21442;&#25968;&#36827;&#34892;&#35843;&#25972;&#65292;&#26681;&#25454; 15.2 &#33410;&#37324;&#20171;&#32461;&#30340;&#35774;&#32622; Resilience4j &#23646;&#24615;&#30340;&#26041;&#27861;&#22312; <code>application.properties</code> &#37324;&#37197;&#32622;&#23601;&#21487;&#20197;&#20102;&#12290;&#31350;&#20854;&#21407;&#22240;&#65292;Spring Cloud CircuitBreaker &#30340;&#33258;&#21160;&#37197;&#32622;&#31867;&#22312;&#21019;&#24314; <code>Resilience4JCircuitBreakerFactory</code> &#26102;&#24182;&#26410;&#33258;&#24049;&#26500;&#36896;&#30456;&#20851;&#30340; <code>Registry</code>&#65292;&#32780;&#26159;&#27880;&#20837;&#20102; Spring &#19978;&#19979;&#25991;&#20013;&#30340; <code>CircuitBreakerRegistry</code> &#21644; <code>TimeLimiterRegistry</code>&#65292;&#20004;&#32773;&#37117;&#26159;&#30001; resilience4j-spring-boot2 &#33258;&#21160;&#21019;&#24314;&#30340;&#12290;&#22240;&#27492;&#65292;15.2 &#33410;&#20013;&#20171;&#32461;&#30340;&#20869;&#23481;&#22312;&#36825;&#37324;&#37117;&#26159;&#36866;&#29992;&#30340;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Configuration(proxyBeanMethods = false)
@ConditionalOnProperty(name = { "spring.cloud.circuitbreaker.resilience4j.enabled",
    "spring.cloud.circuitbreaker.resilience4j.blocking.enabled" }, matchIfMissing = true)
public class Resilience4JAutoConfiguration {
    @Autowired(required = false)
    private List&lt;Customizer&lt;Resilience4JCircuitBreakerFactory&gt;&gt; customizers = new ArrayList&lt;&gt;();

    @Bean
    @ConditionalOnMissingBean(CircuitBreakerFactory.class)
    public Resilience4JCircuitBreakerFactory resilience4jCircuitBreakerFactory(
        CircuitBreakerRegistry circuitBreakerRegistry, TimeLimiterRegistry timeLimiterRegistry,
        @Autowired(required = false) Resilience4jBulkheadProvider
        bulkheadProvider) {...}
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre><p>&#19978;&#38754;&#26159; <code>Resilience4JAutoConfiguration</code> &#33258;&#21160;&#37197;&#32622;&#31867;&#30340;&#19968;&#20010;&#29255;&#27573;&#65292;&#38500;&#20102; <code>resilience4jCircuitBreakerFactory</code> Bean &#30340;&#23450;&#20041;&#65292;&#25105;&#20204;&#36824;&#30475;&#21040;&#20102;&#21487;&#20197;&#36890;&#36807; <code>spring.cloud.circuitbreaker.resilience4j.enabled</code> &#21644; <code>spring.cloud.circuitbreaker.resilience4j.blocking.enabled</code> &#36825;&#20004;&#20010;&#23646;&#24615;&#26469;&#25511;&#21046;&#26159;&#21542;&#24320;&#21551; Spring Cloud CircuitBreaker &#30340;&#33258;&#21160;&#37197;&#32622;&#12290;&#22914;&#26524;&#26159; Reactive &#26041;&#24335;&#30340;&#65292;&#21487;&#20197;&#29992; <code>spring.cloud.circuitbreaker.resilience4j.reactive.enabled</code> &#23646;&#24615;&#12290;</p><p>&#22823;&#37096;&#20998;&#24773;&#20917;&#19979;&#65292;&#29992;&#37197;&#32622;&#25991;&#20214;&#23601;&#24050;&#32463;&#33021;&#28385;&#36275;&#26085;&#24120;&#38656;&#35201;&#20102;&#65292;&#20294; Spring Cloud CircuitBreaker &#30340;&#33258;&#21160;&#37197;&#32622;&#36824;&#26159;&#32473;&#25105;&#20204;&#30041;&#19979;&#20102;&#35843;&#25972;&#30340;&#20313;&#22320;&#12290;<code>Resilience4JAutoConfiguration</code> &#37324;&#26377;&#19968;&#20010; <code>Customizer&lt;Resilience4JCircuitBreakerFactory&gt;</code> &#30340;&#21015;&#34920;&#65292;&#25105;&#20204;&#21487;&#20197;&#25552;&#20379;&#33258;&#24049;&#30340; <code>Customizer&lt;Resilience4JCircuitBreakerFactory&gt;</code> &#23545; <code>Resilience4JCircuitBreakerFactory</code> &#36827;&#34892;&#24494;&#35843;&#12290;</p><p>&#22914;&#26524;&#26159;&#35843;&#25972;&#40664;&#35748;&#37197;&#32622;&#65292;&#21487;&#20197;&#20687;&#19979;&#38754;&#36825;&#26679;&#30452;&#25509;&#22312; <code>Customizer</code> &#37324;&#35843;&#29992; <code>Resilience4JCircuitBreakerFactory</code> &#30340; <code>configureDefault()</code> &#26041;&#27861;&#12290;&#20854;&#20013;&#25152;&#38656;&#30340; <code>Resilience4JCircuitBreakerConfiguration</code>&#65292;&#21017;&#30001; <code>Resilience4JConfigBuilder</code> &#26469;&#36827;&#34892;&#26500;&#24314;&#65292;&#30446;&#21069;&#20165;&#25903;&#25345;&#22312;&#36825;&#37324;&#20256;&#20837; <code>CircuitBreakerConfig</code> &#21644; <code>TimeLimiterConfig</code>&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public Customizer&lt;Resilience4JCircuitBreakerFactory&gt; defaultCustomizer() {
    return f -&gt; f.configureDefault(id -&gt; new Resilience4JConfigBuilder(id)
        .circuitBreakerConfig(CircuitBreakerConfig.ofDefaults())
        .timeLimiterConfig(TimeLimiterConfig.ofDefaults())
        .build());
}</code></pre><p>&#22914;&#26524;&#35201;&#35843;&#25972;&#30340;&#26159;&#29305;&#23450;&#23454;&#20363;&#30340;&#37197;&#32622;&#65292;&#21017;&#26159;&#20351;&#29992; <code>Resilience4JCircuitBreakerFactory</code> &#30340; <code>configure()</code> &#26041;&#27861;&#65292;&#23427;&#21487;&#20197;&#19968;&#27425;&#35774;&#32622;&#22810;&#20010;&#25317;&#26377;&#30456;&#21516;&#37197;&#32622;&#30340;&#23454;&#20363;&#12290;&#23601;&#27604;&#22914;&#19979;&#38754;&#36825;&#26679;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public Customizer&lt;Resilience4JCircuitBreakerFactory&gt; orderCheckerCustomizer() {
    return f -&gt; f.configure(b -&gt; b.circuitBreakerConfig(CircuitBreakerConfig.ofDefaults())
        .timeLimiterConfig(TimeLimiterConfig.ofDefaults())
        .build(), "order-checker");
}</code></pre><p>&#23545;&#20110;&#20351;&#29992;&#20102;&#33329;&#22721;&#27169;&#24335;&#30340;&#24773;&#20917;&#65292;&#36824;&#21487;&#20197;&#25552;&#20379;&#33258;&#24049;&#30340; <code>Customizer&lt;Resilience4jBulkheadProvider&gt;</code> Bean &#23454;&#20363;&#65292;&#20889;&#27861;&#19982;&#19978;&#38754;&#31867;&#20284;&#65292;&#20363;&#22914;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Bean
public Customizer&lt;Resilience4jBulkheadProvider&gt; defaultBulkheadCustomizer() {
    return p -&gt; p.configureDefault(id -&gt; new Resilience4jBulkheadConfigurationBuilder()
        .bulkheadConfig(BulkheadConfig.ofDefaults())
        .threadPoolBulkheadConfig(ThreadPoolBulkheadConfig.ofDefaults())
        .build());
}</code></pre><h3 id="nav_point_239">15.3.2&#12288;&#36890;&#36807; Spring Cloud CircuitBreaker &#20351;&#29992; Sentinel</h3><p>&#38463;&#37324;&#24052;&#24052;&#24320;&#28304;&#30340; Sentinel &#26159;&#22312;&#22269;&#20869;&#24320;&#21457;&#32773;&#31038;&#21306;&#20013;&#36739;&#20026;&#27969;&#34892;&#30340;&#23481;&#38169;&#32452;&#20214;&#65292;&#20174;&#27969;&#37327;&#25511;&#21046;&#12289;&#29076;&#26029;&#38477;&#32423;&#12289;&#36127;&#36733;&#20445;&#25252;&#31561;&#22810;&#20010;&#32500;&#24230;&#20026;&#26381;&#21153;&#30340;&#31283;&#23450;&#24615;&#20445;&#39550;&#25252;&#33322;&#12290;&#22823;&#23478;&#23545;&#38463;&#37324;&#24052;&#24052;&#24320;&#28304;&#30340;&#21508;&#31181;&#35774;&#26045;&#37117;&#27604;&#36739;&#25918;&#24515;&#65292;&#20854;&#20449;&#24515;&#20415;&#26159;&#28304;&#33258;&#38463;&#37324;&#22810;&#24180;&#21452;&#21313;&#19968;&#27963;&#21160;&#36229;&#39640;&#27969;&#37327;&#19979;&#31215;&#32047;&#30340;&#22823;&#37327;&#32463;&#39564;&#65292;Sentinel &#30340;&#34920;&#29616;&#21516;&#26679;&#20986;&#31867;&#25300;&#33795;&#12290;Sentinel &#20027;&#35201;&#26377;&#20197;&#19979;&#29305;&#28857;&#12290;</p><ul>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312;&#26680;&#24515;&#26041;&#38754;&#65292;&#25972;&#20010; Sentinel &#30340;&#26680;&#24515;&#24211;&#26159;&#36731;&#37327;&#32423;&#30340;&#65292;&#27809;&#26377;&#22826;&#22810;&#30340;&#20381;&#36182;&#12290;&#19982;&#27492;&#21516;&#26102;&#65292;&#23427;&#36824;&#25552;&#20379;&#20102;&#19968;&#22871;&#23436;&#21892;&#30340; SPI &#25193;&#23637;&#26426;&#21046;&#65292;&#24320;&#21457;&#32773;&#21487;&#20197;&#36890;&#36807; SPI &#25509;&#21475;&#23454;&#29616;&#23450;&#21046;&#36923;&#36753;&#12290;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312;&#21151;&#33021;&#26041;&#38754;&#65292;Sentinel &#25317;&#26377;&#20016;&#23500;&#30340;&#27969;&#37327;&#25511;&#21046;&#22330;&#26223;&#65292;&#20363;&#22914;&#31186;&#26432;&#12289;&#21066;&#23792;&#22635;&#35895;&#21644;&#24555;&#36895;&#25925;&#38556;&#29076;&#26029;&#31561;&#65292;&#24320;&#21457;&#32773;&#26082;&#21487;&#20197;&#26681;&#25454;&#29305;&#23450;&#30340;&#25351;&#26631;&#36827;&#34892;&#27969;&#37327;&#25511;&#21046;&#65292;&#20063;&#21487;&#20197;&#38024;&#23545;&#28909;&#28857;&#31561;&#20854;&#20182;&#32500;&#24230;&#36827;&#34892;&#25511;&#21046;&#12290;</li>
<li class="&#31532;1&#32423;&#26080;&#24207;&#21015;&#34920;">&#22312;&#20351;&#29992;&#26041;&#38754;&#65292;Sentinel &#30340;&#25509;&#20837;&#38750;&#24120;&#26041;&#20415;&#65292;&#25903;&#25345;&#22823;&#37327;&#30340;&#24320;&#28304;&#26694;&#26550;&#21644;&#24211;&#65292;&#20363;&#22914; Spring Cloud&#12289;Quarkus&#12289;gRPC&#12289;Dubbo &#21644;&#20256;&#32479; Servlet&#12290;Sentinel &#36824;&#40664;&#35748;&#25552;&#20379;&#20102;&#19968;&#22871;&#25511;&#21046;&#21488;&#65292;&#24320;&#21457;&#32773;&#21487;&#20197;&#36890;&#36807;&#25511;&#21046;&#21488;&#23454;&#26102;&#26597;&#30475;&#25509;&#20837;&#24212;&#29992;&#30340;&#21333;&#26426;&#21644;&#38598;&#32676;&#36816;&#34892;&#24773;&#20917;&#65292;&#24182;&#23545;&#35268;&#21017;&#36827;&#34892;&#31649;&#29702;&#12290;</li>
</ul><p>&#35201;&#20351;&#29992; Spring Cloud Alibaba Sentinel &#30456;&#20851;&#30340;&#25903;&#25345;&#65292;&#38656;&#35201;&#22312; pom.xml &#20013;&#24341;&#20837;&#30456;&#20851;&#30340;&#20381;&#36182;&#65292;&#20808;&#26159;&#22312; <code>&lt;dependencyManagement/&gt;</code> &#20013;&#23548;&#20837; <code>spring-cloud-alibaba-dependencies</code> &#30340;&#20381;&#36182;&#65292;&#29256;&#26412;&#21487;&#20197;&#26159; 2021.0.1.0&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependencyManagement&gt;
    &lt;dependencies&gt;
        &lt;!-- &#30465;&#30053;spring-cloud-dependencies&#20381;&#36182; --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;
            &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;/artifactId&gt;
            &lt;version&gt;${spring-cloud-alibaba.version}&lt;/version&gt;
            &lt;type&gt;pom&lt;/type&gt;
            &lt;scope&gt;import&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;</code></pre><p>&#25509;&#19979;&#26469;&#65292;&#22312; <code>&lt;dependencies/&gt;</code> &#20013;&#28155;&#21152; <code>spring-cloud-starter-alibaba-sentinel</code> &#20381;&#36182;&#65292;&#23427;&#20250;&#20256;&#36882;&#24341;&#29992; <code>spring-cloud-circuitbreaker-sentinel</code> &#31561;&#30456;&#20851;&#20381;&#36182;&#65306;</p><pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;
    &lt;artifactId&gt;spring-cloud-starter-alibaba-sentinel&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p>&#25509;&#19979;&#26469;&#65292;&#20808;&#35753;&#25105;&#20204;&#19968;&#36215;&#30475;&#30475;&#30452;&#25509;&#20351;&#29992; Sentinel &#26159;&#20160;&#20040;&#26679;&#30340;&#65292;&#36890;&#36807; Spring Cloud Alibaba &#20351;&#29992;&#21448;&#26159;&#20160;&#20040;&#26679;&#30340;&#65292;&#26368;&#21518;&#20877;&#29992; Spring Cloud CircuitBreaker&#12290;</p><ol>
<li><p><strong>&#23450;&#20041;&#36164;&#28304;</strong></p>
<p>Sentinel &#26412;&#36523;&#30340;&#21151;&#33021;&#38750;&#24120;&#24378;&#22823;&#65292;&#23436;&#20840;&#21487;&#20197;&#29420;&#31435;&#36816;&#29992;&#22312;&#21508;&#31181;&#31995;&#32479;&#21644;&#22330;&#26223;&#20013;&#12290;&#22312; Sentinel &#20013;&#65292;&#35201;&#20445;&#25252;&#30340;&#19996;&#35199;&#34987;&#31216;&#20026;&#8220;<strong>&#36164;&#28304;</strong>&#8221;&#65292;&#23427;&#21487;&#20197;&#26159;&#19968;&#20010;&#26381;&#21153;&#25509;&#21475;&#65292;&#20063;&#21487;&#20197;&#26159;&#19968;&#27573;&#20855;&#20307;&#30340;&#20195;&#30721;&#12290;&#23450;&#20041;&#23436;&#36164;&#28304;&#21518;&#65292;&#23601;&#21487;&#20197;&#38024;&#23545;&#36164;&#28304;&#37197;&#32622;&#23545;&#24212;&#30340;&#35268;&#21017;&#20102;&#12290;&#23450;&#20041;&#36164;&#28304;&#30340;&#26041;&#24335;&#26377;&#20197;&#19979;&#20960;&#31181;&#12290;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>SphU</code> &#21487;&#20197;&#29992;&#25243;&#20986;&#24322;&#24120;&#30340;&#26041;&#24335;&#26469;&#23450;&#20041;&#36164;&#28304;&#65292;&#36164;&#28304;&#19981;&#21487;&#29992;&#65288;&#27604;&#22914;&#34987;&#38480;&#27969;&#25110;&#38477;&#32423;&#65289;&#26102;&#20250;&#25243;&#20986; <code>BlockException</code>&#12290;<code>SphU.entry()</code> &#26041;&#27861;&#21487;&#20197;&#20256;&#20837;&#36164;&#28304;&#21517;&#65292;&#36820;&#22238;&#19968;&#20010; <code>Entry</code> &#23454;&#20363;&#65292;&#35843;&#29992;&#20854;&#20013;&#30340; <code>exit()</code> &#26469;&#32467;&#26463;&#36164;&#28304;&#12290;<code>SphU</code> &#25903;&#25345; <code>try-with-resources</code>&#65292;&#27492;&#26102;&#19981;&#38656;&#35201;&#25163;&#21160;&#35843;&#29992; <code>exit()</code>&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;"><code>SphO</code> &#21487;&#20197;&#29992;&#36820;&#22238;&#24067;&#23572;&#20540;&#30340;&#26041;&#24335;&#26469;&#23450;&#20041;&#36164;&#28304;&#65292;<code>SphO.entry()</code> &#20256;&#20837;&#36164;&#28304;&#21517;&#65292;&#22312;&#36164;&#28304;&#21487;&#29992;&#26102;&#36820;&#22238; <code>true</code>&#65292;&#21542;&#21017;&#36820;&#22238; <code>false</code>&#12290;<code>SphO.entry()</code> &#19982; <code>SphO.exit()</code> &#38656;&#35201;&#25104;&#23545;&#20986;&#29616;&#65292;&#20256;&#20837;&#30340;&#36164;&#28304;&#21517;&#35201;&#20004;&#20004;&#21305;&#37197;&#65292;&#19981;&#28982;&#20250;&#25243;&#20986;&#24322;&#24120;&#12290;</li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#36890;&#36807; <code>@SentinelResource</code> &#27880;&#35299;&#26469;&#23450;&#20041;&#36164;&#28304;&#65292;&#21516;&#26102;&#35774;&#32622;&#36164;&#28304;&#19981;&#21487;&#29992;&#26102;&#30340;&#22788;&#29702;&#36923;&#36753;&#65292;&#20063;&#23601;&#26159;&#38480;&#27969;&#25110;&#38477;&#32423;&#21518;&#35201;&#25191;&#34892;&#30340;&#26041;&#27861;&#12290;</li>
</ul>
<p>&#34920; 15-7 &#32599;&#21015;&#20102; <code>SphU</code> &#21644; <code>SphO</code> &#30340; <code>entry()</code> &#26041;&#27861;&#24120;&#29992;&#30340;&#19968;&#20123;&#20844;&#20849;&#21442;&#25968;&#65292;&#26368;&#31616;&#21333;&#30340;&#29992;&#27861;&#23601;&#26159;&#21482;&#20256;&#19968;&#20010;&#36164;&#28304;&#21517;&#12290;</p>
<p><strong>&#34920; 15-7&#12288;<code>entry()</code> &#26041;&#27861;&#30340;&#24120;&#29992;&#21442;&#25968;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>name</code></td><td></td><td>&#36164;&#28304;&#21517;</td></tr><tr><td><code>entryType</code></td><td><code>EntryType.OUT</code></td><td>&#36164;&#28304;&#35843;&#29992;&#30340;&#27969;&#37327;&#31867;&#22411;&#65292;<code>EntryType.IN</code> &#26159;&#20837;&#21475;&#27969;&#37327;&#65292;<code>EntryType.OUT</code> &#26159;&#20986;&#21475;&#27969;&#37327;&#65292;&#27880;&#24847;&#31995;&#32479;&#35268;&#21017;&#21482;&#23545;&#20837;&#21475;&#27969;&#37327;&#29983;&#25928;</td></tr><tr><td><code>count</code></td><td><code>1</code></td><td>&#26412;&#27425;&#36164;&#28304;&#35843;&#29992;&#35831;&#27714;&#30340;&#20196;&#29260;&#25968;&#30446;</td></tr><tr><td><code>args</code></td><td></td><td>&#20256;&#20837;&#28909;&#28857;&#21442;&#25968;&#38480;&#27969;&#30340;&#21442;&#25968;</td></tr></table>
<p>&#20195;&#30721;&#31034;&#20363; 15-28<span class="&#27880;&#37322;&#32534;&#21495;">12</span> &#23601;&#26159;&#31616;&#21333;&#20462;&#25913;&#20102;&#19968;&#19979; BinaryTea &#24037;&#31243;&#30340; <code>TeaMakerClient</code> &#31867;&#65292;&#36890;&#36807; <code>SphU.entry()</code> &#26469;&#23553;&#35013;&#35746;&#21333;&#29366;&#24577;&#26597;&#35810;&#25509;&#21475;&#65292;<code>BlockException</code> &#26159; Sentinel &#25243;&#20986;&#30340;&#24322;&#24120;&#65292;&#25105;&#20204;&#21487;&#20197;&#23545;&#23427;&#20570;&#20123;&#38024;&#23545;&#24615;&#30340;&#22788;&#29702;&#12290;&#30001;&#20110;&#20351;&#29992;&#20102; <code>try-with-resources</code> &#30340;&#26041;&#24335;&#65292;&#25152;&#20197;&#26080;&#39035;&#35843;&#29992; <code>entry</code> &#30340; <code>exit()</code> &#26041;&#27861;&#12290;&#21478;&#22806;&#65292;&#30001;&#20110;&#26159;&#32534;&#31243;&#23454;&#29616;&#30340;&#65292;&#22240;&#32780;&#22312;&#36164;&#28304;&#21517;&#19978;&#21487;&#25805;&#20316;&#24615;&#24456;&#22823;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-28</strong>&#12288;&#36890;&#36807; Sentinel &#30340;&#32534;&#30721;&#26041;&#24335;&#26469;&#23450;&#20041;&#36164;&#28304;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
public class TeaMakerClient {
    public TeaMakerResult makeTea(Long id) {
        try (Entry entry = SphU.entry("tea-maker-" + (id % 2))) {
            ResponseEntity&lt;TeaMakerResult&gt; entity =
                restTemplate.postForEntity(teaMakerUrl + "/order/{id}", null, TeaMakerResult.class, id);
            log.info("&#35831;&#27714;TeaMaker&#65292;&#21709;&#24212;&#30721;&#65306;{}", entity.getStatusCode());
            if (entity.getStatusCode() == HttpStatus.BAD_REQUEST) {
                return null;
            }
            return entity.getBody();
        } catch (BlockException e) {
            log.warn("&#35746;&#21333;{}&#36890;&#30693;TeaMaker&#26102;&#34987;Sentinel&#38477;&#32423;&#20102;", id);
        } catch (Exception e) {
            log.warn("&#35746;&#21333;{}&#36890;&#30693;TeaMaker&#26102;&#21457;&#29983;&#24322;&#24120;", e);
        }
        return null;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#22522;&#20110;&#27880;&#35299;&#26469;&#23450;&#20041; Sentinel &#30340;&#36164;&#28304;&#20284;&#20046;&#26356;&#31526;&#21512; Spring &#30340;&#39118;&#26684;&#65292;&#25152;&#20197;&#25509;&#19979;&#26469;&#65292;&#35753;&#25105;&#20204;&#30475;&#30475;&#22312; Spring &#39033;&#30446;&#37324;&#22914;&#20309;&#20351;&#29992; <code>@SentinelResource</code> &#27880;&#35299;&#12290;&#19968;&#33324;&#65292;&#25105;&#20204;&#20250;&#25226;&#36825;&#20010;&#27880;&#35299;&#21152;&#22312;&#20855;&#20307;&#30340;&#26381;&#21153;&#23454;&#29616;&#26041;&#27861;&#19978;&#65292;&#34920; 15-8 &#32599;&#21015;&#20102;&#23427;&#30340;&#19968;&#20123;&#21442;&#25968;&#12290;&#35201;&#20351;&#29992; <code>@SentinelResource</code> &#27880;&#35299;&#65292;&#38656;&#35201;&#22312; pom.xml &#20013;&#24341;&#20837; <code>sentinel-annotation-aspectj</code> &#20381;&#36182;&#65292;&#38543;&#21518;&#37197;&#32622;&#19968;&#20010; <code>SentinelResourceAspect</code> &#31867;&#22411;&#30340; Bean&#65307;&#22914;&#26524;&#20351;&#29992;&#20102; Spring Cloud Alibaba&#65292;&#20063;&#23601;&#26159;&#24050;&#32463;&#24341;&#20837;&#20102; spring-cloud-starter-alibaba-sentinel&#65292;&#21017;&#20250;&#33258;&#24102;&#30456;&#24212;&#30340;&#20381;&#36182;&#21644;&#37197;&#32622;&#65292;&#26080;&#39035;&#39069;&#22806;&#30340;&#25805;&#20316;&#23601;&#33021;&#30452;&#25509;&#20351;&#29992;&#12290;</p>
<p><strong>&#34920; 15-8&#12288;<code>@SentinelResource</code> &#27880;&#35299;&#30340;&#24120;&#29992;&#21442;&#25968;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>value</code></td><td></td><td>&#36164;&#28304;&#21517;</td></tr><tr><td><code>entryType</code></td><td><code>EntryType.OUT</code></td><td>&#36164;&#28304;&#35843;&#29992;&#30340;&#27969;&#37327;&#31867;&#22411;&#65292;&#26159;&#20837;&#21475;&#27969;&#37327;&#65288;<code>EntryType.IN</code>&#65289;&#36824;&#26159;&#20986;&#21475;&#27969;&#37327;&#65288;<code>EntryType.OUT</code>&#65289;&#65292;&#27880;&#24847;&#31995;&#32479;&#35268;&#21017;&#21482;&#23545;&#20837;&#21475;&#27969;&#37327;&#29983;&#25928;</td></tr><tr><td><code>blockHandler</code></td><td></td><td>&#22788;&#29702; <code>BlockException</code> &#30340;&#26041;&#27861;&#65292;&#36820;&#22238;&#31867;&#22411;&#20860;&#23481;&#21407;&#20989;&#25968;&#65292;&#21442;&#25968;&#19982;&#21407;&#20989;&#25968;&#19968;&#33268;&#65292;&#21518;&#38754;&#21487;&#20197;&#22810;&#19968;&#20010; <code>BlockException</code></td></tr><tr><td><code>blockHandlerClass</code></td><td></td><td>&#36890;&#24120; <code>blockHandler</code> &#37117;&#22312;&#24403;&#21069;&#31867;&#37324;&#65292;&#20294;&#22914;&#26524;&#24076;&#26395;&#22810;&#20010;&#31867;&#20849;&#20139;&#21516;&#19968;&#20010; <code>blockHandler</code>&#65292;&#21487;&#20197;&#25226;&#23427;&#25277;&#21040;&#19968;&#20010;&#31867;&#37324;&#65292;&#21516;&#26102;&#23558;&#26041;&#27861;&#25913;&#20026; <code>static</code> &#30340;</td></tr><tr><td><code>fallback</code></td><td></td><td>&#22788;&#29702; <code>BlockException</code> &#20197;&#22806;&#24322;&#24120;&#30340;&#26041;&#27861;&#65292;&#22823;&#33268;&#36923;&#36753;&#19982; <code>blockHandler</code> &#30456;&#21516;</td></tr><tr><td><code>fallbackClass</code></td><td></td><td>&#19982; <code>blockHandlerClass</code> &#30340;&#36923;&#36753;&#31867;&#20284;&#65292;&#21482;&#26159;&#38024;&#23545;&#30340;&#26159; <code>fallback</code></td></tr><tr><td><code>defaultFallback</code></td><td></td><td>&#40664;&#35748;&#30340;&#24322;&#24120;&#22788;&#29702;&#26041;&#27861;&#65292;&#35813;&#26041;&#27861;&#19981;&#25509;&#21463;&#20219;&#20309;&#21442;&#25968;</td></tr><tr><td><code>exceptionsToTrace</code></td><td><code>{Throwable.class}</code></td><td>&#35201;&#35760;&#24405;&#30340;&#24322;&#24120;&#31867;&#28165;&#21333;</td></tr><tr><td><code>exceptionsToIgnore</code></td><td><code>{}</code></td><td>&#35201;&#24573;&#30053;&#30340;&#24322;&#24120;&#31867;&#28165;&#21333;</td></tr></table>
<p>&#20195;&#30721;&#31034;&#20363; 15-29 &#28436;&#31034;&#20102;&#22914;&#20309;&#20351;&#29992;&#27880;&#35299;&#26469;&#23450;&#20041;&#36164;&#28304;&#65292;<code>TeaMakerClient</code> &#37324;&#23450;&#20041;&#20102;&#21517;&#20026; <code>tea-maker</code> &#30340;&#36164;&#28304;&#65292;&#24182;&#37197;&#32622;&#20102;&#19968;&#20010;&#34987;&#38477;&#32423;&#21518;&#30340;&#26041;&#27861;&#65292;&#30452;&#25509;&#36820;&#22238;&#19968;&#20010; <code>TeaMakerResult</code>&#65307;<code>OrderController</code> &#37324;&#23450;&#20041;&#20102;&#21517;&#20026; <code>query-order</code> &#30340;&#36164;&#28304;&#12290;&#27492;&#22788;&#30340;&#27880;&#35299;<strong>&#19981;&#25903;&#25345;</strong> SpEL &#34920;&#36798;&#24335;&#65292;&#25152;&#20197;&#21482;&#33021;&#29992;&#22266;&#23450;&#30340;&#23383;&#31526;&#20018;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-29</strong>&#12288;&#36890;&#36807; <code>@SentinelResource</code> &#27880;&#35299;&#26469;&#23450;&#20041;&#36164;&#28304;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
public class TeaMakerClient {
    @SentinelResource(value = "tea-maker", blockHandler = "notFinished")
    public TeaMakerResult makeTea(Long id) {
        // &#19982;&#21407;&#20808;&#30340;&#26041;&#27861;&#20869;&#23481;&#30456;&#21516;
    }

    public TeaMakerResult notFinished(Long id, BlockException e) {
        log.warn("Blocked by Sentinel - {}", e.getMessage());
        TeaMakerResult result = new TeaMakerResult();
        result.setFinish(false);
        result.setOrderId(id);
        return result;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}

@Controller
@RequestMapping("/order")
@Slf4j
public class OrderController {
    @ResponseBody
    @GetMapping("/{id}")
    @SentinelResource("query-order")
    public ResponseEntity&lt;Order&gt; queryOneOrder(@PathVariable("id") Long id) {
        // &#19982;&#21407;&#20808;&#30340;&#26041;&#27861;&#20869;&#23481;&#30456;&#21516;
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#23450;&#20041;&#35268;&#21017;</strong></p>
<p>&#23450;&#20041;&#22909;&#20102;&#36164;&#28304;&#20043;&#21518;&#65292;&#23601;&#21487;&#20197;&#32487;&#32493;&#23450;&#20041;&#35268;&#21017;&#20102;&#12290;&#22312;&#20869;&#23384;&#20013;&#20462;&#25913; Sentinel &#30340;&#35268;&#21017;&#21518;&#33021;&#31435;&#21363;&#29983;&#25928;&#65292;&#19988;&#19968;&#20010;&#36164;&#28304;&#21487;&#20197;&#26377;&#22810;&#20010;&#19981;&#21516;&#30340;&#35268;&#21017;&#12290;Sentinel &#20013;&#19968;&#20849;&#26377; 5 &#31181;&#31867;&#22411;&#30340;&#35268;&#21017;&#12290;</p>
<p><strong>a. &#27969;&#37327;&#25511;&#21046;&#35268;&#21017;</strong></p>
<p>&#27969;&#37327;&#25511;&#21046;&#35268;&#21017;&#20250;&#22522;&#20110; QPS &#25110;&#24182;&#21457;&#25968;&#36827;&#34892;&#25511;&#21046;&#65292;&#36991;&#20813;&#31995;&#32479;&#34987;&#30636;&#26102;&#30340;&#27969;&#37327;&#21387;&#22446;&#12290;&#23545;&#24212;&#35268;&#21017;&#31867;&#26159; <code>FlowRule</code>&#65292;&#36890;&#36807;&#32534;&#30721;&#26041;&#24335;&#23450;&#20041;&#26102;&#29992; <code>FlowRuleManager.loadRules()</code> &#26469;&#21152;&#36733;&#35268;&#21017;&#12290;&#34920; 15-9 &#21015;&#20986;&#20102;&#27969;&#37327;&#25511;&#21046;&#35268;&#21017;&#30340;&#37325;&#35201;&#23646;&#24615; <span class="&#27880;&#37322;&#32534;&#21495;">13</span>&#12290;</p>
<p><strong>&#34920; 15-9&#12288;&#27969;&#37327;&#25511;&#21046;&#35268;&#21017;&#30340;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>resource</code></td><td></td><td>&#36164;&#28304;&#21517;</td></tr><tr><td><code>count</code></td><td></td><td>&#38480;&#27969;&#38408;&#20540;</td></tr><tr><td><code>grade</code></td><td><code>FLOW\_GRADE\_QPS</code></td><td>&#38480;&#27969;&#27169;&#24335;&#65292;&#24182;&#21457;&#25968;&#65288;<code>FLOW\_GRADE\_THREAD=0</code>&#65289;&#21644; QPS&#65288;<code>FLOW\_GRADE\_QPS=1</code>&#65289;</td></tr><tr><td><code>limitApp</code></td><td><code>LIMIT\_APP\_DEFAULT</code></td><td>&#27969;&#37327;&#25511;&#21046;&#38024;&#23545;&#30340;&#26469;&#28304;&#24212;&#29992;&#65292;<code>LIMIT\_APP\_DEFAULT=default</code> &#34920;&#31034;&#19981;&#21306;&#20998;&#26469;&#28304;&#65292;&#29992; <code>,</code> &#20998;&#38548;</td></tr><tr><td><code>strategy</code></td><td><code>STRATEGY\_DIRECT</code></td><td>&#35843;&#29992;&#20851;&#31995;&#38480;&#27969;&#31574;&#30053;&#12290;&#21253;&#25324;&#30452;&#25509;&#65288;<code>STRATEGY\_DIRECT=0</code>&#65289;&#65292;&#23545;&#36164;&#28304;&#26412;&#36523;&#38480;&#27969;&#65307;&#20851;&#32852;&#65288;<code>STRATEGY\_RELATE=1</code>&#65289;&#65292;&#36164;&#28304;&#38388;&#26377;&#20851;&#32852;&#26102;&#65292;&#36991;&#20813;&#30456;&#20114;&#20105;&#22842;&#36164;&#28304;&#65307;&#38142;&#36335;&#65288;<code>STRATEGY\_CHAIN=2</code>&#65289;&#65292;&#26681;&#25454;&#35843;&#29992;&#38142;&#36335;&#38480;&#27969;</td></tr><tr><td><code>controlBehavior</code></td><td><code>CONTROL\_BEHAVIOR\_DEFAULT</code></td><td>&#27969;&#37327;&#25511;&#21046;&#25928;&#26524;&#65292;&#21253;&#25324;&#30452;&#25509;&#25298;&#32477;&#65288;<code>CONTROL\_BEHAVIOR\_DEFAULT</code>&#65289;&#12289;&#39044;&#28909;&#65288;<code>CONTROL\_BEHAVIOR\_WARM\_UP</code>&#65289;&#12289;&#21248;&#36895;&#25490;&#38431;&#65288;<code>CONTROL\_BEHAVIOR\_ RATE\_LIMITER</code>&#65289;</td></tr><tr><td><code>clusterMode</code></td><td><code>false</code></td><td>&#26159;&#21542;&#38598;&#32676;&#38480;&#27969;</td></tr></table>
<p><strong>b. &#29076;&#26029;&#38477;&#32423;&#35268;&#21017;</strong></p>
<p>&#29076;&#26029;&#38477;&#32423;&#35268;&#21017;&#20250;&#22522;&#20110;&#24930;&#35843;&#29992;&#27604;&#20363;&#65288;<code>SLOW_REQUEST_RATIO</code>&#65289;&#12289;&#24322;&#24120;&#27604;&#20363;&#65288;<code>ERROR_RATIO</code>&#65289;&#21644;&#24322;&#24120;&#25968;&#65288;<code>ERROR_COUNT</code>&#65289;&#26469;&#36827;&#34892;&#29076;&#26029;&#38477;&#32423;&#12290;&#23545;&#24212;&#35268;&#21017;&#31867;&#26159; <code>DegradeRule</code>&#65292;&#36890;&#36807;&#32534;&#30721;&#26041;&#24335;&#23450;&#20041;&#26102;&#29992; <code>DegradeRuleManager.loadRules()</code> &#26469;&#21152;&#36733;&#35268;&#21017;&#12290;&#34920; 15-10 &#21015;&#20986;&#20102;&#29076;&#26029;&#38477;&#32423;&#35268;&#21017;&#30340;&#23646;&#24615;&#12290;</p>
<p><strong>&#34920; 15-10&#12288;&#29076;&#26029;&#38477;&#32423;&#35268;&#21017;&#30340;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>resource</code></td><td></td><td>&#36164;&#28304;&#21517;</td></tr><tr><td><code>grade</code></td><td><code>DEGRADE_GRADE_RT</code></td><td>&#29076;&#26029;&#31574;&#30053;&#65292;&#25903;&#25345;&#24930;&#35843;&#29992;&#27604;&#20363;&#65288;<code>DEGRADE_GRADE_RT=0</code>&#65289;&#12289;&#24322;&#24120;&#27604;&#20363;&#65288;<code>DEGRADE_GRADE_EXCEPTION_RATIO=1</code>&#65289;&#21644;&#24322;&#24120;&#25968;&#65288;<code>DEGRADE_GRADE_EXCEPTION_COUNT=2</code>&#65289;</td></tr><tr><td><code>count</code></td><td></td><td>&#24930;&#35843;&#29992;&#27604;&#20363;&#27169;&#24335;&#19979;&#20026;&#24930;&#35843;&#29992;&#30340;&#20020;&#30028;&#21709;&#24212;&#26102;&#38388;&#65307;&#24322;&#24120;&#27604;&#20363;&#21644;&#24322;&#24120;&#25968;&#27169;&#24335;&#19979;&#20026;&#23545;&#24212;&#30340;&#38408;&#20540;</td></tr><tr><td><code>timeWindow</code></td><td></td><td>&#29076;&#26029;&#26102;&#38388;&#65292;&#21333;&#20301;&#20026;&#31186;&#65292;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#21518;&#20250;&#36827;&#20837;&#21322;&#24320;&#27169;&#24335;</td></tr><tr><td><code>minRequestAmount</code></td><td><code>5</code></td><td>&#35302;&#21457;&#29076;&#26029;&#30340;&#26368;&#23567;&#35831;&#27714;&#25968;&#65292;&#19981;&#21040;&#36825;&#20010;&#25968;&#37327;&#26102;&#29076;&#26029;&#19981;&#20250;&#29983;&#25928;</td></tr><tr><td><code>statIntervalMs</code></td><td><code>1000</code></td><td>&#32479;&#35745;&#26102;&#38271;&#65292;&#21333;&#20301;&#20026;&#27627;&#31186;</td></tr><tr><td><code>slowRatioThreshold</code></td><td><code>1.0d</code></td><td>&#24930;&#35843;&#29992;&#27604;&#20363;&#38408;&#20540;</td></tr></table>
<p><strong>c. &#31995;&#32479;&#20445;&#25252;&#35268;&#21017;</strong></p>
<p>&#31995;&#32479;&#20445;&#25252;&#35268;&#21017;&#20250;&#22522;&#20110;&#31995;&#32479;&#30340; CPU &#20351;&#29992;&#29575;&#12289;Load&#12289;&#24179;&#22343;&#21709;&#24212;&#26102;&#38388;&#12289;QPS&#12289;&#24182;&#21457;&#25968;&#36827;&#34892;&#33258;&#36866;&#24212;&#30340;&#27969;&#37327;&#25511;&#21046;&#12290;&#31995;&#32479;&#35268;&#21017;&#21482;&#23545;&#20837;&#21475;&#27969;&#37327;&#26377;&#25928;&#12290;&#23545;&#24212;&#35268;&#21017;&#31867;&#26159; <code>SystemRule</code>&#65292;&#36890;&#36807;&#32534;&#30721;&#26041;&#24335;&#23450;&#20041;&#26102;&#29992; <code>SystemRuleManager.loadRules()</code> &#26469;&#21152;&#36733;&#35268;&#21017;&#12290;&#34920; 15-11 &#21015;&#20986;&#20102;&#31995;&#32479;&#20445;&#25252;&#35268;&#21017;&#30340;&#23646;&#24615;&#65292;&#40664;&#35748;&#20540; <code>-1</code> &#34920;&#31034;&#19981;&#29983;&#25928;&#12290;</p>
<p><strong>&#34920; 15-11&#12288;&#31995;&#32479;&#20445;&#25252;&#35268;&#21017;&#30340;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>highestSystemLoad</code></td><td><code>-1</code></td><td>&#26368;&#39640; Load &#20540;</td></tr><tr><td><code>highestCpuUsage</code></td><td><code>-1</code></td><td>&#26368;&#39640; CPU &#20351;&#29992;&#29575;&#65292;&#21462;&#20540;&#33539;&#22260;&#22312; 0.0 &#21040; 1.0 &#20043;&#38388;&#65292;&#19988;&#20026;&#38381;&#21306;&#38388;&#65292;&#21363; [0.0,1.0]</td></tr><tr><td><code>qps</code></td><td><code>-1</code></td><td>&#26368;&#39640; QPS</td></tr><tr><td><code>avgRt</code></td><td><code>-1</code></td><td>&#20837;&#21475;&#27969;&#37327;&#30340;&#24179;&#22343;&#21709;&#24212;&#26102;&#38388;</td></tr><tr><td><code>maxThread</code></td><td><code>-1</code></td><td>&#20837;&#21475;&#27969;&#37327;&#30340;&#26368;&#22823;&#24182;&#21457;&#25968;</td></tr></table>
<p><strong>d. &#26469;&#28304;&#35775;&#38382;&#25511;&#21046;&#35268;&#21017;</strong></p>
<p>&#26469;&#28304;&#35775;&#38382;&#25511;&#21046;&#35268;&#21017;&#65292;&#20063;&#21487;&#20197;&#21483;&#40657;&#30333;&#21517;&#21333;&#35268;&#21017;&#65292;&#26681;&#25454;&#35843;&#29992;&#35831;&#27714;&#26469;&#28304;&#65288;origin&#65289;&#21028;&#26029;&#26159;&#21542;&#38656;&#35201;&#38480;&#21046;&#36164;&#28304;&#30340;&#35775;&#38382;&#12290;&#23545;&#24212;&#35268;&#21017;&#31867;&#26159; <code>AuthorityRule</code>&#65292;&#36890;&#36807;&#32534;&#30721;&#26041;&#24335;&#23450;&#20041;&#26102;&#29992; <code>AuthorityRuleManager.loadRules()</code> &#26469;&#21152;&#36733;&#35268;&#21017;&#12290;&#34920; 15-12 &#21015;&#20986;&#20102;&#26469;&#28304;&#35775;&#38382;&#25511;&#21046;&#35268;&#21017;&#30340;&#23646;&#24615;&#12290;</p>
<p><strong>&#34920; 15-12&#12288;&#26469;&#28304;&#35775;&#38382;&#25511;&#21046;&#35268;&#21017;&#30340;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>resource</code></td><td></td><td>&#36164;&#28304;&#21517;</td></tr><tr><td><code>limitApp</code></td><td></td><td>&#40657;&#21517;&#21333;&#25110;&#30333;&#21517;&#21333;&#65292;&#29992; <code>,</code> &#20998;&#38548;</td></tr><tr><td><code>strategy</code></td><td><code>AUTHORITY_WHITE</code></td><td>&#25511;&#21046;&#31574;&#30053;&#65292;&#30333;&#21517;&#21333;&#65288;<code>AUTHORITY_WHITE=0</code>&#65289;&#21644;&#40657;&#21517;&#21333;&#65288;<code>AUTHORITY_BLACK=1</code>&#65289;</td></tr></table>
<p><strong>e. &#28909;&#28857;&#21442;&#25968;&#35268;&#21017;</strong></p>
<p>&#28909;&#28857;&#21442;&#25968;&#35268;&#21017;&#20250;&#38024;&#23545;&#32463;&#24120;&#35201;&#35775;&#38382;&#30340;&#28909;&#28857;&#25968;&#25454;&#36827;&#34892;&#20445;&#25252;&#65292;Sentinel &#22522;&#20110; LRU &#31574;&#30053;&#32479;&#35745;&#20256;&#20837;&#30340;&#21442;&#25968;&#21518;&#65292;&#26681;&#25454;&#37197;&#32622;&#30340;&#38408;&#20540;&#19982;&#27169;&#24335;&#65292;&#32467;&#21512;&#20196;&#29260;&#26742;&#31639;&#27861;&#26469;&#36827;&#34892;&#21442;&#25968;&#32423;&#21035;&#30340;&#27969;&#37327;&#25511;&#21046;&#12290;&#36825;&#26159;&#26159;&#19968;&#31181;&#29305;&#27530;&#30340;&#27969;&#37327;&#25511;&#21046;&#35268;&#21017;&#65292;&#23427;&#20165;&#23545;&#21253;&#21547;&#28909;&#28857;&#36229;&#21442;&#25968;&#30340;&#36164;&#28304;&#35843;&#29992;&#26377;&#25928;&#12290;&#23545;&#24212;&#35268;&#21017;&#31867;&#26159; <code>ParamFlowRule</code>&#65292;&#36890;&#36807;&#32534;&#30721;&#26041;&#24335;&#23450;&#20041;&#26102;&#29992; <code>ParamFlowRuleManager.loadRules()</code> &#26469;&#21152;&#36733;&#35268;&#21017;&#65292;&#28909;&#28857;&#21442;&#25968;&#35268;&#21017;&#23545;&#24212;&#30340;&#31867;&#37117;&#21333;&#29420;&#25918;&#22312; <code>sentinel-parameter-flow-control</code> &#20381;&#36182;&#37324;&#12290;&#22914;&#26524;&#27809;&#26377;&#36825;&#20010;&#20381;&#36182;&#30340;&#35805;&#65292;&#21017;&#38656;&#35201;&#25105;&#20204;&#33258;&#24049;&#28155;&#21152;&#19968;&#19979;&#12290;&#34920; 15-13 &#21015;&#20986;&#20102;&#28909;&#28857;&#21442;&#25968;&#35268;&#21017;&#30340;&#23646;&#24615;&#12290;</p>
<p><strong>&#34920; 15-13&#12288;&#28909;&#28857;&#21442;&#25968;&#35268;&#21017;&#30340;&#23646;&#24615;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>resource</code></td><td></td><td>&#36164;&#28304;&#21517;</td></tr><tr><td><code>count</code></td><td></td><td>&#38480;&#27969;&#38408;&#20540;</td></tr><tr><td><code>grade</code></td><td><code>FLOW_GRADE_QPS</code></td><td>&#38480;&#27969;&#27169;&#24335;&#65292;&#24182;&#21457;&#25968;&#65288;<code>FLOW_GRADE_THREAD=0</code>&#65289;&#21644; QPS&#65288;<code>FLOW_GRADE_QPS=1</code>&#65289;</td></tr><tr><td><code>durationInSec</code></td><td><code>1</code></td><td>&#32479;&#35745;&#31383;&#21475;&#26102;&#38388;&#38271;&#24230;&#65292;&#21333;&#20301;&#20026;&#31186;</td></tr><tr><td><code>controlBehavior</code></td><td><code>CONTROL_BEHAVIOR_DEFAULT</code></td><td>&#27969;&#37327;&#25511;&#21046;&#25928;&#26524;&#65292;&#21253;&#25324;&#30452;&#25509;&#25298;&#32477;&#65288;<code>CONTROL_BEHAVIOR_DEFAULT</code>&#65289;&#12289;&#39044;&#28909;&#65288;<code>CONTROL_BEHAVIOR_WARM_UP</code>&#65289;&#12289;&#21248;&#36895;&#25490;&#38431;&#65288;<code>CONTROL_BEHAVIOR_RATE_LIMITER</code>&#65289;</td></tr><tr><td><code>maxQueueingTimeMs</code></td><td><code>0</code></td><td>&#26368;&#22823;&#25490;&#38431;&#31561;&#24453;&#26102;&#38271;&#65292;&#20165;&#22312;&#27969;&#37327;&#25511;&#21046;&#25928;&#26524;&#20026;&#21248;&#36895;&#25490;&#38431;&#27169;&#24335;&#26102;&#29983;&#25928;</td></tr><tr><td><code>paramIdx</code></td><td></td><td>&#28909;&#28857;&#21442;&#25968;&#30340;&#32034;&#24341;&#65292;&#23545;&#24212; <code>SphU.entry(xxx, args)</code> &#20013;&#30340;&#21442;&#25968;&#32034;&#24341;&#20301;&#32622;</td></tr><tr><td><code>paramFlowItemList</code></td><td></td><td>&#21442;&#25968;&#20363;&#22806;&#39033;&#65292;&#21487;&#20197;&#38024;&#23545;&#25351;&#23450;&#30340;&#21442;&#25968;&#20540;&#21333;&#29420;&#35774;&#32622;&#38480;&#27969;&#38408;&#20540;&#65292;&#19981;&#21463; <code>count</code> &#30340;&#38480;&#21046;&#65292;&#20165;&#25903;&#25345;&#22522;&#26412;&#31867;&#22411;&#21644;&#23383;&#31526;&#20018;&#31867;&#22411;</td></tr><tr><td><code>clusterMode</code></td><td><code>false</code></td><td>&#26159;&#21542;&#20026;&#38598;&#32676;&#38480;&#27969;&#27169;&#24335;</td></tr></table>
<p>&#26082;&#28982;&#25105;&#20204;&#26377;&#36825;&#20040;&#22810;&#31181;&#19981;&#21516;&#31867;&#22411;&#30340;&#35268;&#21017;&#65292;&#37027;&#22312;&#35302;&#21457;&#35268;&#21017;&#21518;&#37117;&#25243;&#20986; <code>BlockException</code> &#20063;&#19981;&#22909;&#21028;&#26029;&#65292;Sentinel &#36148;&#24515;&#22320;&#20026;&#19981;&#21516;&#30340;&#35268;&#21017;&#23450;&#20041;&#20102;&#19981;&#21516;&#30340; <code>BlockException</code> &#23376;&#31867;&#65306;</p>
<ul>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#27969;&#37327;&#25511;&#21046;&#24322;&#24120;&#65292;&#25243;&#20986; <code>FlowException</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#29076;&#26029;&#38477;&#32423;&#24322;&#24120;&#65292;&#25243;&#20986; <code>DegradeException</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#31995;&#32479;&#20445;&#25252;&#24322;&#24120;&#65292;&#25243;&#20986; <code>SystemBlockException</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#35775;&#38382;&#25511;&#21046;&#24322;&#24120;&#65292;&#25243;&#20986; <code>AuthorityException</code></li>
<li class="&#31532;2&#32423;&#26080;&#24207;&#21015;&#34920;">&#28909;&#28857;&#21442;&#25968;&#38480;&#27969;&#24322;&#24120;&#65292;&#25243;&#20986; <code>ParamFlowException</code></li>
</ul>
<p>&#25343;&#21040;&#19968;&#20010;&#24322;&#24120;&#21518;&#65292;&#21487;&#20197;&#36890;&#36807; <code>BlockException.isBlockException(Throwable t)</code> &#26041;&#27861;&#26469;&#21028;&#26029;&#23427;&#26159;&#19981;&#26159; Sentinel &#35302;&#21457;&#30340;&#24322;&#24120;&#12290;</p>
<p>&#36890;&#36807;&#32534;&#30721;&#30340;&#26041;&#24335;&#26469;&#23450;&#20041;&#35268;&#21017;&#19968;&#33324;&#22312;&#27979;&#35797;&#26102;&#20351;&#29992;&#65292;&#22312;&#29983;&#20135;&#19978;&#36824;&#26159;&#19981;&#22826;&#26041;&#20415;&#12290;&#22312;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#24456;&#21487;&#33021;&#20250;&#38656;&#35201;&#26681;&#25454;&#36816;&#34892;&#30340;&#24773;&#20917;&#21160;&#24577;&#35843;&#25972;&#35268;&#21017;&#65292;Sentinel &#25552;&#20379;&#20102; <code>ReadableDataSource</code> &#21644; <code>WritableDataSource</code> &#25509;&#21475;&#65292;&#20197;&#20415;&#36890;&#36807;&#21160;&#24577;&#35268;&#21017;&#28304;&#26469;&#31649;&#29702;&#35268;&#21017;&#12290;&#26681;&#25454;&#25968;&#25454;&#28304;&#30340;&#19981;&#21516;&#65292;Sentinel &#21487;&#36890;&#36807;&#25289;&#27169;&#24335;&#25110;&#32773;&#25512;&#27169;&#24335;&#26469;&#33719;&#21462;&#35268;&#21017;&#12290;&#25152;&#35859;&#25289;&#27169;&#24335;&#26159;&#23458;&#25143;&#31471;&#23450;&#26102;&#20027;&#21160;&#21521;&#35268;&#21017;&#28304;&#26597;&#35810;&#35268;&#21017;&#65292;&#35268;&#21017;&#28304;&#32487;&#25215; <code>AutoRefreshDataSource</code> &#25277;&#35937;&#31867;&#21363;&#21487;&#65307;&#32780;&#25512;&#27169;&#24335;&#21017;&#26159;&#23458;&#25143;&#31471;&#27880;&#20876;&#30417;&#21548;&#65292;&#22312;&#35268;&#21017;&#21457;&#29983;&#21464;&#21270;&#26102;&#30001;&#35268;&#21017;&#28304;&#25512;&#36865;&#21464;&#26356;&#36890;&#30693;&#65292;&#35268;&#21017;&#28304;&#32487;&#25215; <code>AbstractDataSource</code> &#25277;&#35937;&#31867;&#12290;&#34920; 15-14 &#32599;&#21015;&#20102;&#19968;&#20123; Sentinel &#25903;&#25345;&#30340;&#35268;&#21017;&#28304; <span class="&#27880;&#37322;&#32534;&#21495;">14</span>&#65292;&#34920;&#20013;&#30340;&#20381;&#36182;&#26159; ArtifactId&#65292;GroupId &#37117;&#26159; <code>com.alibaba.csp</code>&#12290;</p>
<p><strong>&#34920; 15-14&#12288;Sentinel &#25903;&#25345;&#30340;&#19968;&#20123;&#35268;&#21017;&#28304;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#35268;&#21017;&#28304;</th><th>&#23545;&#24212;&#30340;&#23454;&#29616;&#31867;</th><th>&#27169;&#24335;</th><th>&#20381;&#36182;</th></tr><tr><td>&#25991;&#20214;&#35268;&#21017;&#28304;</td><td><code>FileRefreshableDataSource</code>&#12289;<code>FileInJarReadableDataSource</code></td><td>&#25289;&#27169;&#24335;</td><td>sentinel-datasource-extension</td></tr><tr><td>Consul</td><td><code>ConsulDataSource</code></td><td>&#25289;&#27169;&#24335;</td><td>sentinel-datasource-consul</td></tr><tr><td>Eureka</td><td><code>EurekaDataSource</code></td><td>&#25289;&#27169;&#24335;</td><td>sentinel-datasource-eureka</td></tr><tr><td>ZooKeeper</td><td><code>ZookeeperDataSource</code></td><td>&#25512;&#27169;&#24335;</td><td>sentinel-datasource-zookeeper</td></tr><tr><td>Redis</td><td><code>RedisDataSource</code></td><td>&#25512;&#27169;&#24335;</td><td>sentinel-datasource-redis</td></tr><tr><td>Nacos</td><td><code>NacosDataSource</code></td><td>&#25512;&#27169;&#24335;</td><td>sentinel-datasource-nacos</td></tr><tr><td>Apollo</td><td><code>ApolloDataSource</code></td><td>&#25512;&#27169;&#24335;</td><td>sentinel-datasource-apollo</td></tr></table>
<p>&#21487;&#20197;&#36890;&#36807;&#32534;&#31243;&#26041;&#24335;&#21152;&#36733; <code>ReadableDataSource</code> &#37324;&#30340;&#35268;&#21017;&#65292;&#19981;&#21516;&#30340;&#23454;&#29616;&#31867;&#38656;&#35201;&#20256;&#20837;&#30340;&#21442;&#25968;&#19981;&#21516;&#65292;<code>ZookeeperDataSource</code> &#22823;&#27010;&#30340;&#24418;&#24335;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>ReadableDataSource&lt;String, List&lt;FlowRule&gt;&gt; flowRuleDataSource =
    new ZookeeperDataSource&lt;&gt;(remoteAddress, path,
        source -&gt; JSON.parseObject(source, new TypeReference&lt;List&lt;FlowRule&gt;&gt;() {}));
FlowRuleManager.register2Property(flowRuleDataSource.getProperty());</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>Spring Cloud Alibaba &#25552;&#20379;&#30340;&#37197;&#32622;&#25903;&#25345;</strong></p>
<p>&#22312; Spring Cloud Alibaba &#30340;&#21152;&#25345;&#20043;&#19979;&#65292;&#25105;&#20204;&#21487;&#20197;&#29992;&#8220;&#26356; Spring&#8221;&#30340;&#26041;&#24335;&#26469;&#21152;&#36733;&#35268;&#21017;&#65292;&#31616;&#21333;&#26469;&#35828;&#23601;&#26159;&#29992; <code>application.properties</code> &#26469;&#25351;&#23450;&#35268;&#21017;&#28304;&#65292;&#21097;&#19979;&#30340;&#20132;&#32473;&#26694;&#26550;&#26469;&#20570;&#23601;&#22909;&#12290;&#23545;&#24212;&#30340;&#21508;&#31181;&#37197;&#32622;&#31867;&#37117;&#22312; <code>spring-cloud-alibaba-sentinel-datasource</code> &#20381;&#36182;&#20043;&#20013;&#65292;&#25105;&#20204;&#20808;&#26469;&#30475;&#30475;&#20855;&#20307;&#35813;&#22914;&#20309;&#20351;&#29992;&#12290;&#20195;&#30721;&#31034;&#20363; 15-30 &#26159;&#38024;&#23545; BinaryTea &#30340;&#35268;&#21017;&#28304;&#37197;&#32622;&#65292;&#36825;&#37324;&#25105;&#20204;&#20351;&#29992; JSON &#25991;&#20214;&#26469;&#23384;&#25918;&#35268;&#21017;&#65292;&#20998;&#21035;&#26159;&#19968;&#20010;&#29076;&#26029;&#38477;&#32423;&#35268;&#21017;&#28304;&#21644;&#19968;&#20010;&#27969;&#37327;&#25511;&#21046;&#35268;&#21017;&#28304;&#12290;&#20026;&#20102;&#26041;&#20415;&#20462;&#25913;&#65292;&#27809;&#26377;&#23558;&#23427;&#20204;&#25918;&#22312; CLASSPATH &#37324;&#65292;&#32780;&#26159;&#25918;&#22312;&#19968;&#20010;&#22806;&#37096;&#36335;&#24452;&#19979;&#65292;&#22823;&#23478;&#21487;&#20197;&#26681;&#25454;&#33258;&#24049;&#30340;&#36335;&#24452;&#20570;&#35843;&#25972;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-30</strong>&#12288;BinaryTea &#24037;&#31243;&#20013;&#37197;&#32622;&#30340;&#20004;&#20010; Sentinel &#21160;&#24577;&#35268;&#21017;&#28304;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>spring.cloud.sentinel.datasource.ds1.file.file=./rules/degrade-rules.json
spring.cloud.sentinel.datasource.ds1.file.data-type=json
spring.cloud.sentinel.datasource.ds1.file.rule-type=degrade

spring.cloud.sentinel.datasource.ds2.file.file=./rules/flow-rules.json
spring.cloud.sentinel.datasource.ds2.file.rule-type=flow</code></pre>
<p><code>spring.cloud.sentinel.*</code> &#30340;&#37197;&#32622;&#37117;&#22312; <code>spring-cloud-starter-alibaba-sentinel</code> &#20013;&#30340; <code>SentinelProperties</code> &#37324;&#65292;&#20854;&#20013;&#30340; <code>datasource</code> &#26159; <code>TreeMap</code> &#31867;&#22411;&#30340;&#65292;&#29992;&#26469;&#23384;&#25918;&#21160;&#24577;&#35268;&#21017;&#28304;&#12290;&#25152;&#20197;&#19978;&#38754;&#20363;&#23376;&#37324; <code>spring.cloud.sentinel.datasource</code> &#20013;&#30340; <code>ds1</code> &#21644; <code>ds2</code> &#37117;&#26159; <code>TreeMap</code> &#20013;&#30340;&#38190;&#21517;&#65292;&#23545;&#24212;&#30340;&#20540;&#31867;&#22411;&#26159; <code>DataSourcePropertiesConfiguration</code>&#65292;&#23427;&#30340;&#32467;&#26500;&#22823;&#33268;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>public class DataSourcePropertiesConfiguration {
    private FileDataSourceProperties file;
    private NacosDataSourceProperties nacos;
    private ZookeeperDataSourceProperties zk;
    private ApolloDataSourceProperties apollo;
    private RedisDataSourceProperties redis;
    private ConsulDataSourceProperties consul;
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#20174;&#36825;&#20010;&#23450;&#20041;&#37324;&#23601;&#33021;&#29468;&#21040;&#65292;Spring Cloud Alibaba &#25552;&#20379;&#30340;&#37197;&#32622;&#30446;&#21069;&#25903;&#25345;&#25991;&#20214;&#12289;Nacos&#12289;ZooKeeper&#12289;Apollo&#12289;Redis &#21644; Consul&#65292;&#30452;&#25509;&#23558;&#37197;&#32622;&#25918;&#21040;&#23545;&#24212;&#30340;&#23646;&#24615;&#37324;&#23601;&#34892;&#20102;&#65292;&#36825;&#20123;&#23646;&#24615;&#31867;&#37117;&#32487;&#25215;&#33258; <code>AbstractDataSourceProperties</code>&#65292;&#20854;&#20013;&#26159;&#19968;&#20123;&#20844;&#20849;&#37197;&#32622;&#65292;&#22914;&#34920; 15-15 &#25152;&#31034;&#12290;</p>
<p><strong>&#34920; 15-15&#12288;&#19968;&#20123;&#20844;&#20849;&#30340; Sentinel &#35268;&#21017;&#28304;&#37197;&#32622;</strong></p>
<table border="1" class="table table-bordered table-striped table-condensed" width="90%"><tr><th>&#21442;&#25968;&#21517;</th><th>&#40664;&#35748;&#20540;</th><th>&#35828;&#26126;</th></tr><tr><td><code>data-type</code></td><td><code>json</code></td><td>&#20855;&#20307;&#23384;&#25918;&#35268;&#21017;&#30340;&#31867;&#22411;&#65292;&#40664;&#35748;&#26159; JSON &#31867;&#22411;&#65292;&#20063;&#25903;&#25345; XML&#65292;&#20294;&#38656;&#35201;&#28155;&#21152; <code>jackson-dataformat-xml</code> &#20381;&#36182;&#65292;&#19981;&#21516;&#31867;&#22411;&#20250;&#23545;&#24212;&#19981;&#21516;&#30340; <code>Converter</code> &#31867;&#65292;&#20063;&#21487;&#20197;&#20889; <code>custom</code> &#33258;&#23450;&#20041;&#31867;&#22411;</td></tr><tr><td><code>rule-type</code></td><td></td><td>&#35268;&#21017;&#31867;&#22411;&#65292;&#20855;&#20307;&#20869;&#23481;&#23450;&#20041;&#22312; <code>RuleType</code> &#26522;&#20030;&#20013;&#65292;&#20363;&#22914; <code>flow</code> &#34920;&#31034;&#27969;&#37327;&#25511;&#21046;&#35268;&#21017;&#65292;<code>degrade</code> &#34920;&#31034;&#29076;&#26029;&#38477;&#32423;&#35268;&#21017;&#65292;<code>system</code> &#34920;&#31034;&#31995;&#32479;&#35268;&#21017;&#65292;&#20854;&#20182;&#30340;&#36824;&#26377; <code>param-flow</code>&#12289;<code>authority</code>&#12289;<code>gw-flow</code> &#21644; <code>gw-api-group</code></td></tr><tr><td><code>converter-class</code></td><td></td><td>&#22914;&#26524;&#26159; JSON &#25110;&#32773; XML &#31867;&#22411;&#65292;&#26080;&#39035;&#37197;&#32622;&#35813;&#20540;&#65292;&#22914;&#26524;&#26159; <code>custom</code> &#31867;&#22411;&#21017;&#38656;&#35201;&#22312;&#36825;&#37324;&#37197;&#32622;&#20855;&#20307;&#30340; <code>Converter</code> &#30340;&#20840;&#38480;&#23450;&#31867;&#21517;</td></tr></table>
<p>degrade-rules.json &#21644; flow-rules.json &#36825;&#20004;&#20010;&#25991;&#20214;&#30340;&#20869;&#23481;&#22914;&#20195;&#30721;&#31034;&#20363; 15-31 &#25152;&#31034;&#65292;&#20854;&#23454;&#23601;&#26159;&#26368;&#31616;&#21333;&#30340;&#32431; JSON &#25991;&#20214;&#65292;&#27599;&#20010;&#25991;&#20214;&#37117;&#26159; <code>[]</code>&#65288;&#20063;&#23601;&#26159; JSON &#30340;&#25968;&#32452;&#65289;&#12290;&#25991;&#20214;&#20013;&#21487;&#20197;&#25918;&#22810;&#26465;&#35268;&#21017;&#65292;&#26681;&#25454;&#35268;&#21017;&#31867;&#22411;&#30340;&#19981;&#21516;&#65292;JSON &#23545;&#35937;&#30340;&#23646;&#24615;&#20063;&#26377;&#25152;&#19981;&#21516;&#65292;&#20855;&#20307;&#21487;&#20197;&#30475;&#21069;&#25991;&#23545;&#24212;&#30340;&#34920;&#26684;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-31</strong>&#12288;&#20004;&#20010; Sentinel &#35268;&#21017;&#25991;&#20214;&#30340;&#20869;&#23481;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>// degrade-rules.json
[
    {
        "resource": "tea-maker",
        "grade": 2,
        "count": 3,
        "timeWindow": 60,
        "minRequestAmount": 3,
        "statIntervalMs": 60000
    }
]
// flow-rules.json
[
    {
        "resource": "query-order",
        "grade": 0,
        "count": 1
    }
]</code></pre>
<p>&#22240;&#20026; Spring Cloud Alibaba Sentinel &#20026;&#25105;&#20204;&#33258;&#21160;&#27880;&#20876;&#20102; <code>SentinelEndpoint</code> &#31471;&#28857;&#65292;&#25152;&#20197;&#21482;&#35201;&#25105;&#20204;&#24341;&#20837;&#20102; Actuator &#20381;&#36182;&#65292;&#24182;&#22312; <code>management.endpoints.web.exposure.include</code> &#20013;&#21152;&#20837; <code>sentinel</code>&#65292;&#23601;&#21487;&#20197;&#22312;&#31243;&#24207;&#36816;&#34892;&#21518;&#35775;&#38382; <code>/actuator/sentinel</code> &#31471;&#28857;&#26469;&#26597;&#30475; Sentinel &#30340;&#20855;&#20307;&#35268;&#21017;&#24773;&#20917; <span class="&#27880;&#37322;&#32534;&#21495;">15</span>&#65292;&#20363;&#22914; BinaryTea &#24037;&#31243;&#23601;&#21487;&#20197;&#35775;&#38382; <code>http://localhost:8080/actuator/sentinel</code>&#65292;&#36755;&#20986;&#30340; JSON &#22823;&#27010;&#23601;&#26159;&#19979;&#38754;&#36825;&#26679;&#30340;&#65306;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>{
    "appName": "binarytea",
    "datasource": {
        "ds1": {
            "apollo": null,
            "consul": null,
            "file": {...},
            "nacos": null,
            "redis": null,
            "zk": null
        },
        "ds2": {...}
    },
    "rules": {
        "authorityRule": [],
        "degradeRules": [
            {...}
        ],
        "flowRules": [
            {...}
        ],
        "paramFlowRule": [],
        "systemRules": []
    },
    // &#30465;&#30053;&#37096;&#20998;&#20869;&#23481;
}</code></pre>
<p>&#22240;&#20026; flow-rules.json &#20013;&#37197;&#32622;&#20102; <code>query-order</code> &#30340;&#24182;&#21457;&#32447;&#31243;&#25968;&#21482;&#33021;&#26159; <code>1</code>&#65292;&#25152;&#20197;&#25105;&#20204;&#21487;&#20197;&#22312; <code>OrderController.queryOneOrder()</code> &#26041;&#27861;&#20013;&#21152;&#20837;&#19968;&#27573; <code>Thread.sleep(30000)</code>&#65292;&#28982;&#21518;&#24320;&#20004;&#20010;&#32456;&#31471;&#65292;&#29992;&#19979;&#38754;&#30340; curl &#21629;&#20196;&#21516;&#26102;&#35775;&#38382;&#35746;&#21333;&#65292;&#19968;&#20010;&#26368;&#32456;&#20250;&#36820;&#22238;&#20869;&#23481;&#65292;&#32780;&#21478;&#19968;&#20010;&#21017;&#36820;&#22238; <code>500 Internal Server Error</code> &#38169;&#35823;&#65292;&#21407;&#22240;&#26159;&#31995;&#32479;&#34987;&#38480;&#27969;&#20102;&#65292;&#25243;&#20986;&#20102; <code>FlowException</code>&#12290;</p>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>&#9656; curl -v -u LiLei:binarytea http://localhost:8080/order/1</code></pre>
<p>&#160;</p>
</li>
<li><p><strong>&#20351;&#29992; Spring Cloud CircuitBreaker</strong></p>
<p>&#20043;&#21069;&#24341;&#20837;&#30340; <code>spring-cloud-starter-alibaba-sentinel</code> &#24050;&#32463;&#24110;&#25105;&#20204;&#25226; <code>spring-cloud-circuitbreaker-sentinel</code> &#20381;&#36182;&#19968;&#24182;&#24102;&#36827;&#26469;&#20102;&#65292;&#25152;&#20197;&#25105;&#20204;&#21487;&#20197;&#30452;&#25509;&#36890;&#36807; Spring Cloud CircuitBreaker &#30340;&#25277;&#35937;&#23618;&#26469;&#20351;&#29992; Sentinel&#65292;&#20855;&#20307;&#30340;&#29992;&#27861;&#19982; 15.3.1 &#33410;&#20013;&#20171;&#32461;&#30340; Resilience4j &#25903;&#25345;&#31867;&#20284;&#12290;&#20294;&#26159;&#26377;&#19968;&#28857;&#38656;&#35201;&#35828;&#26126;&#30340;&#26159;&#65292;&#30446;&#21069;&#36890;&#36807; Spring Cloud CircuitBreaker Sentinel &#21482;&#33021;&#37197;&#32622;&#29076;&#26029;&#38477;&#32423;&#35268;&#21017;&#8212;&#8212;&#36890;&#36807; <code>SentinelConfigBuilder</code> &#23601;&#33021;&#30475;&#21040;&#65292;&#37324;&#38754;&#26242;&#26102;&#21482;&#33021;&#37197;&#32622; <code>DegradeRule</code>&#12290;</p>
<p>&#22312;&#21069;&#38754;&#30340; BinaryTea &#20013;&#65292;<code>TeaMakerClient</code> &#37324;&#37197;&#32622;&#20102;&#19968;&#20010;&#38656;&#35201;&#29076;&#26029;&#38477;&#32423;&#30340;&#36164;&#28304; <code>tea-maker</code>&#65292;&#20195;&#30721;&#31034;&#20363; 15-32<span class="&#27880;&#37322;&#32534;&#21495;">16</span> &#29992; <code>CircuitBreaker</code> &#30340;&#26041;&#24335;&#35843;&#25972;&#20102;&#19968;&#19979; <code>makeTea()</code> &#30340;&#23454;&#29616;&#12290;&#36890;&#36807;&#26500;&#36896;&#26041;&#27861;&#20256;&#20837;&#30340; <code>CircuitBreakerFactory</code> &#20808;&#26500;&#36896;&#20102; <code>tea-maker</code> &#35201;&#29992;&#30340; <code>CircuitBreaker</code> &#23454;&#20363;&#65292;&#25918;&#22312;&#25104;&#21592;&#21464;&#37327;&#37324;&#65292;&#28982;&#21518;&#22312; <code>makeTea()</code> &#20013;&#25226;&#21407;&#26469;&#30340;&#26041;&#27861;&#20869;&#23481;&#23553;&#35013;&#22312; <code>circuitBreaker.run()</code> &#37324;&#65292;&#22312;&#36935;&#21040;&#24322;&#24120;&#21518;&#20250;&#38477;&#32423;&#35843;&#29992; <code>notFinished()</code> &#26041;&#27861;&#12290;&#36825;&#20010;&#26041;&#27861;&#30340;&#21442;&#25968;&#31245;&#24494;&#20570;&#20102;&#20123;&#35843;&#25972;&#65292;&#25509;&#21463; <code>Throwable</code> &#31867;&#22411;&#30340;&#24322;&#24120;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-32</strong>&#12288;&#20351;&#29992;&#20102; <code>CircuitBreaker</code> &#30340; <code>TeaMakerClient</code> &#31867;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@Component
@Slf4j
public class TeaMakerClient {
    @Autowired
    private RestTemplate restTemplate;
    @Value("${tea-maker.url}")
    private String teaMakerUrl;
    private CircuitBreaker circuitBreaker;

    public TeaMakerClient(CircuitBreakerFactory factory) {
        circuitBreaker = factory.create("tea-maker");
    }

    public TeaMakerResult makeTea(Long id) {
        return circuitBreaker.run(() -&gt; {
            // &#19982;&#21407;&#20808;&#30340;&#26041;&#27861;&#20869;&#23481;&#19968;&#26679;
        }, t -&gt; notFinished(id, t));
    }

    public TeaMakerResult notFinished(Long id, Throwable t) {
        log.warn("Fallback by Sentinel - {}", t.getMessage());
        TeaMakerResult result = new TeaMakerResult();
        result.setFinish(false);
        result.setOrderId(id);
        return result;
    }
}</code></pre>
<p><code>SentinelCircuitBreakerAutoConfiguration</code> &#31867;&#20026;&#25105;&#20204;&#33258;&#21160;&#37197;&#32622;&#20102; <code>SentinelCircuitBreakerFactory</code> Bean&#65292;&#20026;&#20102;&#22686;&#21152; <code>tea-maker</code> &#30340;&#20855;&#20307;&#35268;&#21017;&#65292;&#25105;&#20204;&#38656;&#35201;&#23450;&#20041;&#19968;&#20010; <code>Customizer&lt;SentinelCircuitBreakerFactory&gt;</code> &#31867;&#22411;&#30340; Bean &#20570;&#20123;&#20010;&#24615;&#21270;&#23450;&#21046;&#65292;&#20195;&#30721;&#31034;&#20363; 15-33 &#23601;&#26159;&#23545;&#24212;&#30340;&#37197;&#32622;&#12290;<code>application.properties</code> &#37324;&#19982;&#38477;&#32423;&#29076;&#26029;&#26377;&#20851;&#30340; <code>spring.cloud.sentinel.datasource.ds1</code> &#37197;&#32622;&#23601;&#21487;&#20197;&#30452;&#25509;&#21024;&#38500;&#20102;&#12290;</p>
<blockquote>
<p><strong>&#20195;&#30721;&#31034;&#20363; 15-33</strong>&#12288;<code>tea-maker</code> &#23545;&#24212;&#30340;&#35268;&#21017;&#37197;&#32622;</p>
</blockquote>
<pre class="&#20195;&#30721;&#26080;&#34892;&#21495;"><code>@SpringBootApplication
@EnableCaching
@EnableScheduling
public class BinaryTeaApplication implements WebMvcConfigurer {
    @Bean
    public Customizer&lt;SentinelCircuitBreakerFactory&gt; teaMakerCustomizer() {
        DegradeRule rule = new DegradeRule();
        rule.setResource("tea-maker");
        rule.setGrade(RuleConstant.DEGRADE_GRADE_EXCEPTION_COUNT);
        rule.setCount(3);
        rule.setTimeWindow(60);
        rule.setMinRequestAmount(3);
        rule.setStatIntervalMs(60000);

        return f -&gt; f.configure(b -&gt; b.resourceName("tea-maker")
            .rules(Collections.singletonList(rule))
            .entryType(EntryType.OUT), "tea-maker");
    }
    // &#30465;&#30053;&#20854;&#20182;&#20195;&#30721;
}</code></pre>
<p>&#24635;&#20307;&#19978;&#35828;&#26469;&#65292;&#30446;&#21069;&#20026;&#27490; Spring Cloud CircuitBreaker &#23545; Sentinel &#30340;&#25903;&#25345;&#36824;&#26159;&#19981;&#23613;&#22914;&#20154;&#24847;&#65292;&#36824;&#26080;&#27861;&#21457;&#25381;&#20986; Sentinel &#30340;&#22823;&#37096;&#20998;&#21151;&#33021;&#65292;&#25152;&#20197;&#36824;&#26159;&#20808;&#36890;&#36807; Spring Cloud Alibaba &#26469;&#20351;&#29992; Sentinel &#23601;&#22909;&#12290;&#30456;&#20449;&#22312;&#21518;&#32493;&#30340;&#29256;&#26412;&#20013;&#65292;&#36825;&#26041;&#38754;&#30340;&#25903;&#25345;&#19968;&#23450;&#20250;&#24471;&#21040;&#21152;&#24378;&#12290;</p>
</li>
</ol><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">12</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch15/binarytea-sentinel &#39033;&#30446;&#20013;&#65292;&#19979;&#25991;&#23450;&#20041;&#35268;&#21017;&#37096;&#20998;&#30340;&#20363;&#23376;&#20063;&#26159;&#36825;&#20010;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">13</span>&#20854;&#20013;&#30340;&#24120;&#37327;&#37117;&#23450;&#20041;&#22312; <code>RuleConstant</code> &#37324;&#65292;&#19979;&#25991;&#30340;&#24120;&#37327;&#20063;&#26159;&#19968;&#26679;&#30340;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">14</span>&#36824;&#26377;&#20854;&#20182;&#25903;&#25345;&#30340;&#35268;&#21017;&#28304;&#65292;&#21487;&#20197;&#21040; Sentinel &#23448;&#32593;&#26597;&#30475;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">15</span>Sentinel &#30340;&#25511;&#21046;&#21488;&#20063;&#26159;&#20010;&#38750;&#24120;&#22909;&#29992;&#30340;&#24037;&#20855;&#65292;&#33021;&#22815;&#23454;&#26102;&#26597;&#30475;&#21333;&#26426;&#25110;&#38598;&#32676;&#37324;&#37197;&#32622;&#30340;&#35268;&#21017;&#65292;&#24863;&#20852;&#36259;&#30340;&#21487;&#20197;&#33258;&#24049;&#26681;&#25454;&#23448;&#26041;&#25991;&#26723;&#35797;&#35797;&#65292;&#26412;&#20070;&#23601;&#19981;&#20877;&#28436;&#31034;&#20102;&#12290;</p><p class="&#27880;&#37322;&#20869;&#23481;"><span class="&#27880;&#37322;&#32534;&#21495;&#19979;">16</span>&#36825;&#20010;&#20363;&#23376;&#22312; ch15/binarytea-scc-sentinel &#39033;&#30446;&#20013;&#12290;</p><h2 id="nav_point_240">15.4&#12288;&#23567;&#32467;</h2><p>&#26412;&#31456;&#25105;&#20204;&#23398;&#20064;&#20102;&#20960;&#31181;&#24120;&#35265;&#30340;&#26381;&#21153;&#23481;&#38169;&#27169;&#24335;&#65292;&#20998;&#21035;&#26159;&#37325;&#35797;&#27169;&#24335;&#12289;&#26029;&#36335;&#22120;&#27169;&#24335;&#12289;&#33329;&#22721;&#27169;&#24335;&#21644;&#38480;&#27969;&#22120;&#27169;&#24335;&#65292;&#36824;&#36890;&#36807; Spring AOP &#30340;&#26041;&#24335;&#22823;&#33268;&#28436;&#31034;&#20102;&#20854;&#20013;&#20004;&#31181;&#27169;&#24335;&#30340;&#23454;&#29616;&#26041;&#24335;&#12290;&#24403;&#28982;&#65292;&#22312;&#29616;&#23454;&#30340;&#29983;&#20135;&#29615;&#22659;&#20013;&#65292;&#22914;&#26524;&#27809;&#26377;&#29305;&#27530;&#24773;&#20917;&#30340;&#35805;&#65292;&#36824;&#26159;&#24314;&#35758;&#20351;&#29992;&#25104;&#29087;&#30340;&#26694;&#26550;&#26469;&#25552;&#20379;&#26381;&#21153;&#23481;&#38169;&#33021;&#21147;&#65292;&#32780;&#38750;&#33258;&#24049;&#21160;&#25163;&#23454;&#29616;&#12290;&#26412;&#31456;&#20171;&#32461;&#30340; Resilience4j &#21644; Sentinel &#37117;&#26159;&#19981;&#38169;&#30340;&#36873;&#25321;&#65292;&#20004;&#32773;&#22312;&#21151;&#33021;&#12289;&#27169;&#22359;&#21270;&#12289;&#26131;&#29992;&#24615;&#31561;&#26041;&#38754;&#37117;&#26377;&#19981;&#20439;&#30340;&#34920;&#29616;&#65292;&#23545; Spring Boot&#12289;Spring Cloud &#39033;&#30446;&#30340;&#25903;&#25345;&#20063;&#24456;&#21040;&#20301;&#12290;&#31456;&#33410;&#26368;&#21518;&#65292;&#25105;&#20204;&#36824;&#20171;&#32461;&#20102; Spring Cloud CircuitBreaker &#39033;&#30446;&#65292;&#23427;&#22312;&#20960;&#27454;&#20027;&#27969;&#30340;&#26381;&#21153;&#23481;&#38169;&#26694;&#26550;&#20043;&#19978;&#24314;&#31435;&#20102;&#19968;&#23618;&#25277;&#35937;&#65292;&#36890;&#36807;&#23427;&#26469;&#23631;&#34109;&#24213;&#23618;&#23454;&#29616;&#30340;&#24046;&#24322;&#65292;&#36825;&#31181;&#20570;&#27861;&#22312; Spring &#23478;&#26063;&#20013;&#24182;&#19981;&#23569;&#35265;&#12290;</p><p>&#19979;&#19968;&#31456;&#20063;&#26159;&#26412;&#20070;&#30340;&#26368;&#21518;&#19968;&#31456;&#65292;&#25105;&#20204;&#20250;&#32842;&#32842;&#26381;&#21153;&#38598;&#25104;&#30456;&#20851;&#30340;&#20869;&#23481;&#65292;&#20363;&#22914;&#65292;&#22914;&#20309;&#20351;&#29992; REST &#26381;&#21153;&#20197;&#22806;&#30340;&#36890;&#20449;&#26041;&#24335;&#65292;&#22914;&#20309;&#25645;&#24314;&#24494;&#26381;&#21153;&#32593;&#20851;&#65292;&#20197;&#21450;&#22914;&#20309;&#23454;&#29616;&#26381;&#21153;&#38142;&#36335;&#36861;&#36394;&#12290;</p><blockquote>
<p style="text-align: center"><strong>&#20108;&#36827;&#21046;&#22902;&#33590;&#24215;&#39033;&#30446;&#24320;&#21457;&#23567;&#32467;</strong></p>
<p>&#26412;&#31456;&#20013;&#65292;&#25105;&#20204;&#20026;&#25972;&#20010;&#20363;&#23376;&#22686;&#21152;&#20102;&#35843;&#33590;&#24072;&#30340;&#27169;&#22359;&#65292;&#36127;&#36131;&#35746;&#21333;&#30340;&#21046;&#20316;&#12290;&#26377;&#20102;&#36825;&#20010;&#35282;&#33394;&#65292;&#23601;&#21487;&#20197;&#25226;&#24050;&#25903;&#20184;&#30340;&#35746;&#21333;&#25512;&#36827;&#21040;&#32456;&#24577;&#20102;&#12290;&#32780;&#39038;&#23458;&#27169;&#22359;&#20063;&#36890;&#36807;&#36718;&#35810;&#35746;&#21333;&#29366;&#24577;&#65292;&#33719;&#24471;&#20102;&#35746;&#21333;&#30340;&#36827;&#24230;&#24773;&#20917;&#65292;&#22914;&#26524;&#23436;&#25104;&#20102;&#23601;&#21462;&#39184;&#12290;&#21040;&#30446;&#21069;&#20026;&#27490;&#65292;&#25105;&#20204;&#30340;&#35746;&#21333;&#27969;&#36716;&#36807;&#31243;&#26159;&#36825;&#26679;&#30340;&#65306;</p>
<p>(1) Customer &#27169;&#22359;&#19979;&#21333;&#65292;&#21019;&#24314;&#19968;&#31508;&#26032;&#35746;&#21333;&#65307;</p>
<p>(2) Customer &#27169;&#22359;&#36827;&#34892;&#25903;&#20184;&#65307;</p>
<p>(3) BinaryTea &#22312;&#35746;&#21333;&#25903;&#20184;&#21518;&#65292;&#36890;&#36807;&#23450;&#26102;&#20219;&#21153;&#20197; HTTP &#30340;&#26041;&#24335;&#36890;&#30693; TeaMaker&#65307;</p>
<p>(4) TeaMaker &#21046;&#20316;&#35746;&#21333;&#65292;&#23436;&#25104;&#35746;&#21333;&#21046;&#20316;&#21518;&#20197; HTTP &#30340;&#26041;&#24335;&#36890;&#30693; BinaryTea&#65307;</p>
<p>(5) Customer &#19981;&#26029;&#36718;&#35810; BinaryTea&#65292;&#26597;&#35810;&#35746;&#21333;&#30340;&#29366;&#24577;&#65292;&#35746;&#21333;&#26410;&#23436;&#25104;&#21017;&#31561;&#24453;&#65307;</p>
<p>(6) Customer &#22312;&#36718;&#35810;&#24471;&#21040;&#35746;&#21333;&#23436;&#25104;&#30340;&#29366;&#24577;&#21518;&#65292;&#23436;&#25104;&#21462;&#39184;&#21160;&#20316;&#12290;</p>
</blockquote><br style="page-break-after:always"/><div style="page-break-after:always"></div>